#include "elona.hpp"
#include "variables.hpp"

#include "main.hpp"

namespace elona
{
int main()
{
    exedir = dirinfo(1) + u8"\\"s;
    devfile = "";
    randomize();
    randseed = rnd(2000);
    randomize(randseed);
    exrand_randomize(randseed);
    title(u8"Elona ver 1.22"s);
    label_0192();
    return 0;
}
void netload(const std::string& prm_194)
{
    int res_at_m0 = 0;
    std::string estr_at_m0;
    netrequest(prm_194);
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            netexec(res_at_m0);
            if (res_at_m0)
            {
                break;
            }
            await(50);
        }
    }
    if (res_at_m0 > 0)
    {
        return;
    }
    neterror(estr_at_m0);
    dialog(u8"エラー:"s + estr_at_m0);
    return;
}
void label_0002()
{
    return;
}
int zentohan(const std::string& prm_209, std::string& prm_210, int prm_211)
{
    stat = LCMapStringA(
        GetUserDefaultLCID(), 4194304, prm_209, -1, prm_210, prm_211);
    return stat;
}
void tmset()
{
    timeBeginPeriod(1);
    return;
}
std::string lang(const std::string& prm_246, const std::string& prm_247)
{
    if (jp)
    {
        return prm_246;
    }
    else
    {
        return prm_247;
    }
}
std::string cnvrank(int prm_248)
{
    if (jp)
    {
        return ""s + prm_248;
    }
    if (prm_248 % 10 == 1)
    {
        if (prm_248 != 11)
        {
            return ""s + prm_248 + u8"st"s;
        }
    }
    if (prm_248 % 10 == 2)
    {
        if (prm_248 != 12)
        {
            return ""s + prm_248 + u8"nd"s;
        }
    }
    if (prm_248 % 10 == 3)
    {
        if (prm_248 != 13)
        {
            return ""s + prm_248 + u8"rd"s;
        }
    }
    return ""s + prm_248 + u8"th"s;
}
std::string cnvtalk(const std::string& prm_249)
{
    return u8"\""s + prm_249 + u8"\" "s;
}
std::string cnvarticle(const std::string& prm_250)
{
    if (jp)
    {
        return prm_250;
    }
    return u8"["s + prm_250 + u8"]"s;
}
std::string cnvitemname(int prm_251)
{
    if (jp)
    {
        return ioriginalnameref(prm_251);
    }
    if (ioriginalnameref2(prm_251) == ""s)
    {
        return ioriginalnameref(prm_251);
    }
    return ioriginalnameref2(prm_251) + u8" of "s + ioriginalnameref(prm_251);
}
std::string cnven(const std::string& prm_252)
{
    std::string s_at_m1;
    int p_at_m1 = 0;
    if (jp)
    {
        return prm_252;
    }
    s_at_m1 = prm_252;
    p_at_m1 = peek(s_at_m1, 0);
    if (p_at_m1 == 42)
    {
        p_at_m1 = peek(s_at_m1, 1);
        if (p_at_m1 >= 97)
        {
            if (p_at_m1 <= 122)
            {
                poke(s_at_m1, 1, p_at_m1 - 32);
            }
        }
    }
    else
    {
        if (p_at_m1 >= 97)
        {
            if (p_at_m1 <= 122)
            {
                poke(s_at_m1, 0, p_at_m1 - 32);
            }
        }
    }
    return s_at_m1;
}
int cbit(int prm_253, int prm_254)
{
    HMMBITCHECK(cdata(450 + prm_253 / 32, prm_254), prm_253 % 32);
    stat = stat;
    return stat;
}
void cbitmod(int prm_255, int prm_256, int prm_257)
{
    if (prm_257 == 0)
    {
        HMMBITOFF(cdata(450 + prm_255 / 32, prm_256), prm_255 % 32);
        return;
    }
    HMMBITON(cdata(450 + prm_255 / 32, prm_256), prm_255 % 32);
    return;
}
int refclass(int prm_261, int prm_262)
{
    dbmode = 16;
    dbidn = cdatan(3, prm_261);
    dbspec = prm_262;
    label_2298();
    stat = stat;
    return stat;
}
int refrace(const std::string& prm_263, int prm_264)
{
    dbmode = 16;
    dbidn = prm_263;
    dbspec = prm_264;
    label_2297();
    stat = stat;
    return stat;
}
std::string ranktitle(int prm_265)
{
    int p_at_m6 = 0;
    p_at_m6 = gdata((prm_265 + 120)) / 100;
    if (p_at_m6 == 1)
    {
        return rankn(0, prm_265);
    }
    if (p_at_m6 <= 5)
    {
        return rankn(1, prm_265);
    }
    if (p_at_m6 <= 10)
    {
        return rankn(2, prm_265);
    }
    if (p_at_m6 <= 80)
    {
        return rankn(p_at_m6 / 15 + 3, prm_265);
    }
    return rankn(9, prm_265);
}
void label_0026()
{
    SDIM4(rankn, 30, 11, 9);
    if (jp)
    {
        rankn(0, 0) = u8"アリーナのチャンピオン"s;
        rankn(1, 0) = u8"アリーナの超エリート闘士"s;
        rankn(2, 0) = u8"アリーナのスター闘士"s;
        rankn(3, 0) = u8"アリーナのエリート闘士"s;
        rankn(4, 0) = u8"アリーナの熟練闘士"s;
        rankn(5, 0) = u8"アリーナの中堅闘士"s;
        rankn(6, 0) = u8"アリーナの期待の星"s;
        rankn(7, 0) = u8"アリーナのダークホース"s;
        rankn(8, 0) = u8"アリーナの下級闘士"s;
        rankn(9, 0) = u8"アリーナの無名の闘士"s;
        rankn(10, 0) = u8"アリーナ"s;
        rankn(0, 1) = u8"全てのペットの王"s;
        rankn(1, 1) = u8"超エリートペット使い"s;
        rankn(2, 1) = u8"ペットの王子"s;
        rankn(3, 1) = u8"ペットの憧れの的"s;
        rankn(4, 1) = u8"ペット使いのエリート"s;
        rankn(5, 1) = u8"名の知れたペット使い"s;
        rankn(6, 1) = u8"ペットの母"s;
        rankn(7, 1) = u8"なかなかのペット使い"s;
        rankn(8, 1) = u8"駆け出しのペット使い"s;
        rankn(9, 1) = u8"無名のペット使い"s;
        rankn(10, 1) = u8"ペットアリーナ"s;
        rankn(0, 2) = u8"ネフィアを統べる者"s;
        rankn(1, 2) = u8"迷宮の覇者"s;
        rankn(2, 2) = u8"ダンジョンの主"s;
        rankn(3, 2) = u8"高名な探検者"s;
        rankn(4, 2) = u8"子供達の憧れの的"s;
        rankn(5, 2) = u8"ダンジョン案内人"s;
        rankn(6, 2) = u8"名の知れた遺跡荒らし"s;
        rankn(7, 2) = u8"探検者"s;
        rankn(8, 2) = u8"ちんけな遺跡荒らし"s;
        rankn(9, 2) = u8"観光客"s;
        rankn(10, 2) = u8"クローラー"s;
        rankn(0, 3) = u8"ティリス最大の博物館"s;
        rankn(1, 3) = u8"超有名な博物館"s;
        rankn(2, 3) = u8"大人気の博物館"s;
        rankn(3, 3) = u8"有名な博物館"s;
        rankn(4, 3) = u8"来客の絶えない博物館"s;
        rankn(5, 3) = u8"ちょっと人気のある博物館"s;
        rankn(6, 3) = u8"名の知れた博物館"s;
        rankn(7, 3) = u8"まあまあの博物館"s;
        rankn(8, 3) = u8"来客の少ない博物館"s;
        rankn(9, 3) = u8"無名の博物館"s;
        rankn(10, 3) = u8"博物館"s;
        rankn(0, 4) = u8"ティリスの楽園"s;
        rankn(1, 4) = u8"超セレブな家"s;
        rankn(2, 4) = u8"ティリス有数の家"s;
        rankn(3, 4) = u8"とても住みたくなる家"s;
        rankn(4, 4) = u8"主婦の憧れの家"s;
        rankn(5, 4) = u8"ちょっと人目をひく家"s;
        rankn(6, 4) = u8"まあまあの家"s;
        rankn(7, 4) = u8"少しみすぼらしい家"s;
        rankn(8, 4) = u8"貧困にあえぐ家"s;
        rankn(9, 4) = u8"乞食の家"s;
        rankn(10, 4) = u8"ホーム"s;
        rankn(0, 5) = u8"ティリス最大の店"s;
        rankn(1, 5) = u8"王様が来る店"s;
        rankn(2, 5) = u8"大繁盛している店"s;
        rankn(3, 5) = u8"セレブが来る店"s;
        rankn(4, 5) = u8"来客の絶えない店"s;
        rankn(5, 5) = u8"マダムの来る店"s;
        rankn(6, 5) = u8"リピーターのいる店"s;
        rankn(7, 5) = u8"人が増えてきた売店"s;
        rankn(8, 5) = u8"ほとんど売れない売店"s;
        rankn(9, 5) = u8"無名の売店"s;
        rankn(10, 5) = u8"店"s;
        rankn(0, 6) = u8"ボス"s;
        rankn(1, 6) = u8"王様のアドバイザー"s;
        rankn(2, 6) = u8"エリートコンサルター"s;
        rankn(3, 6) = u8"ご意見番"s;
        rankn(4, 6) = u8"有権者の鑑"s;
        rankn(5, 6) = u8"マダム好みの有権者"s;
        rankn(6, 6) = u8"名の知れた有権者"s;
        rankn(7, 6) = u8"普通の有権者"s;
        rankn(8, 6) = u8"無関心な有権者"s;
        rankn(9, 6) = u8"ぎりぎり有権者"s;
        rankn(10, 6) = u8"コミュニティ"s;
        rankn(0, 8) = u8"グランドマスター"s;
        rankn(1, 8) = u8"マスター"s;
        rankn(2, 8) = u8"ギルドの重役"s;
        rankn(3, 8) = u8"ギルドの重役候補"s;
        rankn(4, 8) = u8"アダプト"s;
        rankn(5, 8) = u8"エキスパート"s;
        rankn(6, 8) = u8"ジャーニーマン"s;
        rankn(7, 8) = u8"ギルドの正式メンバー"s;
        rankn(8, 8) = u8"ギルドのメンバー候補"s;
        rankn(9, 8) = u8"見習い"s;
        rankn(10, 8) = u8"ギルド"s;
    }
    else
    {
        rankn(0, 0) = u8"Arena champion"s;
        rankn(1, 0) = u8"Super elite gladiator"s;
        rankn(2, 0) = u8"Star gladiator"s;
        rankn(3, 0) = u8"Elite gladiator"s;
        rankn(4, 0) = u8"Veteran gladiator"s;
        rankn(5, 0) = u8"Popular gladiator"s;
        rankn(6, 0) = u8"New hope"s;
        rankn(7, 0) = u8"Darkhorse"s;
        rankn(8, 0) = u8"Low class fighter"s;
        rankn(9, 0) = u8"Unknown fighter"s;
        rankn(10, 0) = u8"Arena"s;
        rankn(0, 1) = u8"King of tamer"s;
        rankn(1, 1) = u8"Super elite tamer"s;
        rankn(2, 1) = u8"Prince of animals"s;
        rankn(3, 1) = u8"Chief of animals"s;
        rankn(4, 1) = u8"Elite tamer"s;
        rankn(5, 1) = u8"Notorious tamer"s;
        rankn(6, 1) = u8"New hope"s;
        rankn(7, 1) = u8"Average tamer"s;
        rankn(8, 1) = u8"Petty tamer"s;
        rankn(9, 1) = u8"Unknown tamer"s;
        rankn(10, 1) = u8"Pet Arena"s;
        rankn(0, 2) = u8"King of Nefia"s;
        rankn(1, 2) = u8"Champion of labyrinth"s;
        rankn(2, 2) = u8"Dungeon master"s;
        rankn(3, 2) = u8"Famous adventurer"s;
        rankn(4, 2) = u8"Children's star"s;
        rankn(5, 2) = u8"Guide of Nefia"s;
        rankn(6, 2) = u8"Notorious tomb robber"s;
        rankn(7, 2) = u8"Tomb robber"s;
        rankn(8, 2) = u8"Famous tourist"s;
        rankn(9, 2) = u8"Tourist"s;
        rankn(10, 2) = u8"Crawler"s;
        rankn(0, 3) = u8"Tyris' greatest museum"s;
        rankn(1, 3) = u8"Royal museum"s;
        rankn(2, 3) = u8"Great museum"s;
        rankn(3, 3) = u8"Top museum"s;
        rankn(4, 3) = u8"Great museum"s;
        rankn(5, 3) = u8"Good museum"s;
        rankn(6, 3) = u8"Average museum"s;
        rankn(7, 3) = u8"Small museum"s;
        rankn(8, 3) = u8"Unknown museum"s;
        rankn(9, 3) = u8"Unknown Ruin"s;
        rankn(10, 3) = u8"Museum"s;
        rankn(0, 4) = u8"Heaven of Tyris"s;
        rankn(1, 4) = u8"Royal mansion"s;
        rankn(2, 4) = u8"Celebrity mansion"s;
        rankn(3, 4) = u8"Dream mansion"s;
        rankn(4, 4) = u8"Cozy mansion"s;
        rankn(5, 4) = u8"Attractive house"s;
        rankn(6, 4) = u8"Average house"s;
        rankn(7, 4) = u8"Poor house"s;
        rankn(8, 4) = u8"Peasant's shack"s;
        rankn(9, 4) = u8"Beggar's shack"s;
        rankn(10, 4) = u8"Home"s;
        rankn(0, 5) = u8"Tyris' greatest mall"s;
        rankn(1, 5) = u8"Royal mall"s;
        rankn(2, 5) = u8"Prosperous mall"s;
        rankn(3, 5) = u8"Celebrity shop"s;
        rankn(4, 5) = u8"Prosperous shop"s;
        rankn(5, 5) = u8"Popular shop"s;
        rankn(6, 5) = u8"Average shop"s;
        rankn(7, 5) = u8"Small shop"s;
        rankn(8, 5) = u8"Souvenir shop "s;
        rankn(9, 5) = u8"Unknown shop"s;
        rankn(10, 5) = u8"Shop"s;
        rankn(0, 6) = u8"Boss"s;
        rankn(1, 6) = u8"King's advisor"s;
        rankn(2, 6) = u8"Elite consultant"s;
        rankn(3, 6) = u8"Famous consultant"s;
        rankn(4, 6) = u8"Model voter"s;
        rankn(5, 6) = u8"Nice voter"s;
        rankn(6, 6) = u8"Infamous voter"s;
        rankn(7, 6) = u8"Average voter"s;
        rankn(8, 6) = u8"Indifferent voter"s;
        rankn(9, 6) = u8"Almost voter"s;
        rankn(10, 6) = u8"Community"s;
        rankn(0, 8) = u8"Grand master"s;
        rankn(1, 8) = u8"Master"s;
        rankn(2, 8) = u8"Adept"s;
        rankn(3, 8) = u8"Expert"s;
        rankn(4, 8) = u8"Journeyman"s;
        rankn(5, 8) = u8"Senior"s;
        rankn(6, 8) = u8"Apprentice"s;
        rankn(7, 8) = u8"Official member"s;
        rankn(8, 8) = u8"Candidate"s;
        rankn(9, 8) = u8"Thug"s;
        rankn(10, 8) = u8"Guild"s;
    }
    DIM2(ranknorma, 9);
    ranknorma(0) = 20;
    ranknorma(1) = 60;
    ranknorma(2) = 45;
    ranknorma(6) = 30;
    return;
}
std::string guildname()
{
    std::string s_at_m7;
    s_at_m7 = lang(u8"なし"s, u8"None"s);
    if (gdata(263) != 0)
    {
        s_at_m7 = lang(u8"魔術士ギルド"s, u8"Mages Guild"s);
    }
    if (gdata(264) != 0)
    {
        s_at_m7 = lang(u8"戦士ギルド"s, u8"Fighters Guild"s);
    }
    if (gdata(265) != 0)
    {
        s_at_m7 = lang(u8"盗賊ギルド"s, u8"Thieves Guild"s);
    }
    return s_at_m7;
}
void label_0029()
{
    SDIM3(popostname, 20, 7);
    popostname(1) = lang(u8"市長"s, u8"mayor"s);
    popostname(2) = lang(u8"村長"s, u8"chief"s);
    popostname(3) = lang(u8"司祭"s, u8"priest"s);
    popostname(4) = lang(u8"守衛長"s, u8"guard master"s);
    popostname(5) = lang(u8"徴税官"s, u8"tax master"s);
    popostname(6) = lang(u8"建設主任"s, u8"head architect"s);
    DIM4(pochart, 10, 10, 10);
    pochart(0, 0, 0) = 2;
    pochart(0, 1, 0) = 3;
    pochart(1, 1, 0) = 4;
    pochart(0, 2, 0) = 5;
    pochart(1, 2, 0) = 6;
    DIM3(podata, 300, 20);
    return;
}
void label_0030()
{
    DIM4(bddata, 40, 20, 10);
    DIM3(bdref, 10, 7);
    SDIM3(bdrefn, 20, 7);
    bdref(0, 1) = 0;
    bdref(1, 1) = 1500;
    bdref(0, 2) = 1;
    bdref(1, 2) = 2500;
    bdref(0, 3) = 2;
    bdref(1, 3) = 2500;
    bdref(0, 4) = 3;
    bdref(1, 4) = 2500;
    bdref(0, 5) = 4;
    bdref(1, 5) = 2500;
    bdref(0, 6) = 5;
    bdref(1, 6) = 2500;
    bdrefn(1) = lang(u8"炭鉱"s, u8"Mine"s);
    bdrefn(2) = lang(u8"畑"s, u8"Crop"s);
    bdrefn(3) = lang(u8"アトリエ"s, u8"Art Atelier"s);
    bdrefn(4) = lang(u8"寺院"s, u8"Temple"s);
    bdrefn(5) = lang(u8"盗賊の隠れ家"s, u8"Smuggler's Hideout"s);
    bdrefn(6) = lang(u8"灯台"s, u8"Light House"s);
    return;
}
void label_0031()
{
    DIM3(bdataref, 7, 29);
    SDIM3(buffname, 20, 29);
    SDIM4(bufftxt, 30, 2, 29);
    SDIM2(buffdesc, 200);
    bdataref(0, 1) = 1;
    bdataref(1, 1) = 1;
    bdataref(2, 1) = 0;
    buffname(1) = lang(u8"聖なる盾"s, u8"Holy Shield"s);
    bufftxt(0, 1) = lang(u8"は光り輝いた。"s, u8"begin"s);
    bufftxt(1, 1) = u8" to shine."s;
    bdataref(0, 2) = 2;
    bdataref(1, 2) = 1;
    bdataref(2, 2) = 0;
    buffname(2) = lang(u8"沈黙の霧"s, u8"Mist of Silence"s);
    bufftxt(0, 2) = lang(u8"はぼやけた霧に覆われた。"s, u8"get"s);
    bufftxt(1, 2) = u8" surrounded by hazy mist."s;
    bdataref(0, 3) = 1;
    bdataref(1, 3) = 1;
    bdataref(2, 3) = 0;
    buffname(3) = lang(u8"リジェネレーション"s, u8"Regeneration"s);
    bufftxt(0, 3) = lang(u8"の代謝が活性化した。"s, u8"start"s);
    bufftxt(1, 3) = u8" to regenerate."s;
    bdataref(0, 4) = 1;
    bdataref(1, 4) = 1;
    bdataref(2, 4) = 0;
    buffname(4) = lang(u8"元素保護"s, u8"Elemental Shield"s);
    bufftxt(0, 4) = lang(u8"は元素への耐性を得た。"s, u8"obtain"s);
    bufftxt(1, 4) = u8" resistance to element."s;
    bdataref(0, 5) = 1;
    bdataref(1, 5) = 1;
    bdataref(2, 5) = 0;
    buffname(5) = lang(u8"加速"s, u8"Speed"s);
    bufftxt(0, 5) = lang(u8"は機敏になった。"s, u8"speed"s);
    bufftxt(1, 5) = u8" up."s;
    bdataref(0, 6) = 2;
    bdataref(1, 6) = 1;
    bdataref(2, 6) = 0;
    buffname(6) = lang(u8"鈍足"s, u8"Slow"s);
    bufftxt(0, 6) = lang(u8"は鈍重になった。"s, u8"slow"s);
    bufftxt(1, 6) = u8" down."s;
    bdataref(0, 7) = 1;
    bdataref(1, 7) = 1;
    bdataref(2, 7) = 0;
    buffname(7) = lang(u8"英雄"s, u8"Hero"s);
    bufftxt(0, 7) = lang(u8"の士気が向上した。"s, u8"feel"s);
    bufftxt(1, 7) = u8" heroic."s;
    bdataref(0, 8) = 2;
    bdataref(1, 8) = 1;
    bdataref(2, 8) = 0;
    buffname(8) = lang(u8"脆弱の霧"s, u8"Mist of Frailness"s);
    bufftxt(0, 8) = lang(u8"は脆くなった。"s, u8"feel"s);
    bufftxt(1, 8) = u8" weak."s;
    bdataref(0, 9) = 2;
    bdataref(1, 9) = 1;
    bdataref(2, 9) = 0;
    buffname(9) = lang(u8"元素の傷跡"s, u8"Element Scar"s);
    bufftxt(0, 9) = lang(u8"は元素への耐性を失った。"s, u8"lose"s);
    bufftxt(1, 9) = u8" resistance to element."s;
    bdataref(0, 10) = 1;
    bdataref(1, 10) = 1;
    bdataref(2, 10) = 0;
    buffname(10) = lang(u8"ホーリーヴェイル"s, u8"Holy Veil"s);
    bufftxt(0, 10) = lang(u8"は聖なる衣に保護された。"s, u8"receive"s);
    bufftxt(1, 10) = u8" holy protection."s;
    bdataref(0, 11) = 2;
    bdataref(1, 11) = 1;
    bdataref(2, 11) = 0;
    buffname(11) = lang(u8"ナイトメア"s, u8"Nightmare"s);
    bufftxt(0, 11) = lang(u8"は悪夢に襲われた。"s, u8"start"s);
    bufftxt(1, 11) = u8" to suffer."s;
    bdataref(0, 12) = 1;
    bdataref(1, 12) = 1;
    bdataref(2, 12) = 0;
    buffname(12) = lang(u8"知者の加護"s, u8"Divine Wisdom"s);
    bufftxt(0, 12) = lang(u8"の思考は冴え渡った。"s, u8"start"s);
    bufftxt(1, 12) = u8" to think clearly."s;
    bdataref(0, 13) = 2;
    bdataref(1, 13) = 1;
    bdataref(2, 13) = 0;
    buffname(13) = lang(u8"天罰"s, u8"Punishment"s);
    bufftxt(0, 13) = lang(u8"は雷に打たれた！"s, u8"incur"s);
    bufftxt(1, 13) = u8" the wrath of God."s;
    bdataref(0, 14) = 1;
    bdataref(1, 14) = 1;
    bdataref(2, 14) = 0;
    buffname(14) = lang(u8"ルルウィの憑依"s, u8"Lulwy's Trick"s);
    bufftxt(0, 14) = lang(u8"にルルウィが乗り移った。"s, u8"repeat"s);
    bufftxt(1, 14) = u8"the name of Lulwy."s;
    bdataref(0, 15) = 1;
    bdataref(1, 15) = 1;
    bdataref(2, 15) = 0;
    buffname(15) = lang(u8"インコグニート"s, u8"Incognito"s);
    bufftxt(0, 15) = lang(u8"は別人になりすました。"s, u8"start"s);
    bufftxt(1, 15) = u8" to disguise."s;
    bdataref(0, 16) = 2;
    bdataref(1, 16) = 1;
    bdataref(2, 16) = 0;
    buffname(16) = lang(u8"死の宣告"s, u8"Death Word"s);
    bufftxt(0, 16) = lang(u8"は死の宣告を受けた！"s, u8"receive"s);
    bufftxt(1, 16) = u8" death verdict."s;
    bdataref(0, 17) = 1;
    bdataref(1, 17) = 1;
    bdataref(2, 17) = 0;
    buffname(17) = lang(u8"ブースト"s, u8"Boost"s);
    bufftxt(0, 17) = lang(u8"はブーストした！"s, u8"gain"s);
    bufftxt(1, 17) = u8" massive power."s;
    bdataref(0, 18) = 1;
    bdataref(1, 18) = 1;
    bdataref(2, 18) = 0;
    buffname(18) = lang(u8"契約"s, u8"Contingency"s);
    bufftxt(0, 18) = lang(u8"は死神と契約した。"s, u8"set"s);
    bufftxt(1, 18) = u8" up contracts with the Reaper."s;
    bdataref(0, 19) = 1;
    bdataref(1, 19) = 1;
    bdataref(2, 19) = 0;
    buffname(19) = lang(u8"幸運"s, u8"Luck"s);
    bufftxt(0, 19) = lang(u8"に幸運な日が訪れた！"s, u8"feel"s);
    bufftxt(1, 19) = u8" very lucky today!"s;
    bdataref(0, 20) = 3;
    bdataref(1, 20) = 1;
    bdataref(2, 20) = 0;
    buffname(20) = lang(u8"筋力の成長"s, u8"Grow Strength"s);
    bufftxt(0, 20) = "";
    bufftxt(1, 20) = u8" magical effect."s;
    bdataref(0, 21) = 3;
    bdataref(1, 21) = 1;
    bdataref(2, 21) = 0;
    buffname(21) = lang(u8"耐久の成長"s, u8"Grow Endurance"s);
    bufftxt(0, 21) = "";
    bufftxt(1, 21) = u8" magical effect."s;
    bdataref(0, 22) = 3;
    bdataref(1, 22) = 1;
    bdataref(2, 22) = 0;
    buffname(22) = lang(u8"器用の成長"s, u8"Grow Dexterity"s);
    bufftxt(0, 22) = "";
    bufftxt(1, 22) = u8" magical effect."s;
    bdataref(0, 23) = 3;
    bdataref(1, 23) = 1;
    bdataref(2, 23) = 0;
    buffname(23) = lang(u8"感覚の成長"s, u8"Grow Perception"s);
    bufftxt(0, 23) = "";
    bufftxt(1, 23) = u8" magical effect."s;
    bdataref(0, 24) = 3;
    bdataref(1, 24) = 1;
    bdataref(2, 24) = 0;
    buffname(24) = lang(u8"学習の成長"s, u8"Grow Learning"s);
    bufftxt(0, 24) = "";
    bufftxt(1, 24) = u8" magical effect."s;
    bdataref(0, 25) = 3;
    bdataref(1, 25) = 1;
    bdataref(2, 25) = 0;
    buffname(25) = lang(u8"意思の成長"s, u8"Grow Will"s);
    bufftxt(0, 25) = "";
    bufftxt(1, 25) = u8" magical effect."s;
    bdataref(0, 26) = 3;
    bdataref(1, 26) = 1;
    bdataref(2, 26) = 0;
    buffname(26) = lang(u8"魔力の成長"s, u8"Grow Magic"s);
    bufftxt(0, 26) = "";
    bufftxt(1, 26) = u8" magical effect."s;
    bdataref(0, 27) = 3;
    bdataref(1, 27) = 1;
    bdataref(2, 27) = 0;
    buffname(27) = lang(u8"魅力の成長"s, u8"Grow Charisma"s);
    bufftxt(0, 27) = "";
    bufftxt(1, 27) = u8" magical effect."s;
    bdataref(0, 28) = 3;
    bdataref(1, 28) = 1;
    bdataref(2, 28) = 0;
    buffname(28) = lang(u8"速度の成長"s, u8"Grow Speed"s);
    bufftxt(0, 28) = "";
    bufftxt(1, 28) = u8" magical effect."s;
    return;
}
void calcbuff(int prm_266, int prm_267, int prm_268)
{
    elona_vector1<int> p_at_m8;
    if (prm_267 >= 20 && prm_267 <= 28)
    {
        dur = 10 + prm_268 / 10;
        p_at_m8 = prm_268;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    skillname(prm_267 - 20 + 10) + u8"の成長率を"s + p_at_m8
                        + u8"%上昇"s,
                    u8"Increases the growth rate "s
                        + skillname((prm_267 - 20 + 10)) + u8" by "s + p_at_m8
                        + ""s);
                return;
            }
        }
        cdata(270 + (prm_267 - 20 + 10) - 10, prm_266) = p_at_m8;
        return;
    }
    if (prm_267 == 1)
    {
        dur = 10 + prm_268 / 10;
        p_at_m8 = 25 + prm_268 / 15;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"PVを"s + p_at_m8 + u8"上昇/耐恐怖"s,
                    u8"Increases PV by "s + p_at_m8 + u8"/RES+ fear"s);
                return;
            }
        }
        cdata(70, prm_266) += p_at_m8;
        cdata(255, prm_266) = 0;
        return;
    }
    if (prm_267 == 2)
    {
        dur = 5 + prm_268 / 40;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"魔法の使用を禁止"s, u8"Inhibits casting"s);
                return;
            }
        }
        return;
    }
    if (prm_267 == 3)
    {
        dur = 12 + prm_268 / 20;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"自然回復強化"s, u8"Enhances regeneration"s);
                return;
            }
        }
        sdata(154, prm_266) += 40;
        return;
    }
    if (prm_267 == 4)
    {
        dur = 4 + prm_268 / 6;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"炎冷気電撃耐性の獲得"s, u8"RES+ fire,cold,lightning"s);
                return;
            }
        }
        sdata(50, prm_266) += 100;
        sdata(51, prm_266) += 100;
        sdata(52, prm_266) += 100;
        return;
    }
    if (prm_267 == 5)
    {
        p_at_m8 = 50 + sqrt(prm_268 / 5);
        dur = 8 + prm_268 / 30;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の加速"s,
                    u8"Increases speed by "s + p_at_m8);
                return;
            }
        }
        sdata(18, prm_266) += p_at_m8;
        return;
    }
    if (prm_267 == 6)
    {
        p_at_m8 = 20 + prm_268 / 20;
        if (p_at_m8 > 50)
        {
            p_at_m8 = 50;
        }
        dur = 8 + prm_268 / 30;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の鈍足"s,
                    u8"Decreases speed by "s + p_at_m8);
                return;
            }
        }
        sdata(18, prm_266) -= p_at_m8;
        return;
    }
    if (prm_267 == 7)
    {
        dur = 10 + prm_268 / 4;
        p_at_m8 = 5 + prm_268 / 30;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"筋力・器用を"s + p_at_m8 + u8"上昇/耐恐怖/耐混乱"s,
                    u8"Increases STR,DEX by "s + p_at_m8
                        + u8"/RES+ fear,confusion"s);
                return;
            }
        }
        sdata(10, prm_266) += p_at_m8;
        sdata(12, prm_266) += p_at_m8;
        cdata(255, prm_266) = 0;
        cdata(254, prm_266) = 0;
        return;
    }
    if (prm_267 == 8)
    {
        p_at_m8(0) = 30 + prm_268 / 10;
        p_at_m8(1) = 5 + prm_268 / 15;
        dur = 6 + prm_268 / 10;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"DVとPVを半減"s, u8"Halves DV and PV"s);
                return;
            }
        }
        cdata(71, prm_266) = cdata(71, prm_266) / 2;
        cdata(70, prm_266) = cdata(70, prm_266) / 2;
        return;
    }
    if (prm_267 == 9)
    {
        dur = 4 + prm_268 / 15;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"炎冷気電撃耐性の減少"s, u8"RES- fire,cold,lightning"s);
                return;
            }
        }
        sdata(50, prm_266) =
            limit(sdata(50, prm_266) + -100, sdata(50, prm_266) > 0, 9999);
        sdata(51, prm_266) =
            limit(sdata(51, prm_266) + -100, sdata(51, prm_266) > 0, 9999);
        sdata(52, prm_266) =
            limit(sdata(52, prm_266) + -100, sdata(52, prm_266) > 0, 9999);
        return;
    }
    if (prm_267 == 10)
    {
        p_at_m8 = 50 + prm_268 / 3 * 2;
        dur = 15 + prm_268 / 5;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"ﾊﾟﾜｰ"s + p_at_m8 + u8"の呪い(hex)への抵抗"s,
                    u8"grants hex protection(power:"s + p_at_m8 + u8")"s);
                return;
            }
        }
        return;
    }
    if (prm_267 == 11)
    {
        dur = 4 + prm_268 / 15;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"神経幻影耐性の減少"s, u8"RES- mind,nerve"s);
                return;
            }
        }
        sdata(58, prm_266) =
            limit(sdata(58, prm_266) + -100, sdata(58, prm_266) > 0, 9999);
        sdata(54, prm_266) =
            limit(sdata(54, prm_266) + -100, sdata(54, prm_266) > 0, 9999);
        return;
    }
    if (prm_267 == 12)
    {
        dur = 10 + prm_268 / 4;
        p_at_m8(0) = 6 + prm_268 / 40;
        p_at_m8(1) = 3 + prm_268 / 100;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"習得・魔力を"s + p_at_m8 + u8"上昇/読書を"s + p_at_m8(1)
                        + u8"上昇"s,
                    u8"Increases LER,MAG by "s + p_at_m8
                        + u8", literacy skill by "s + p_at_m8(1));
                return;
            }
        }
        sdata(14, prm_266) += p_at_m8;
        sdata(16, prm_266) += p_at_m8;
        sdata(150, prm_266) += p_at_m8(1);
        return;
    }
    if (prm_267 == 13)
    {
        p_at_m8 = 20;
        dur = prm_268;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の鈍足/PVを20%減少"s,
                    u8"Decreases speed by "s + p_at_m8 + u8", PV by 20%"s);
                return;
            }
        }
        sdata(18, prm_266) -= p_at_m8;
        if (cdata(70, prm_266) > 1)
        {
            cdata(70, prm_266) -= cdata(70, prm_266) / 5;
        }
        return;
    }
    if (prm_267 == 14)
    {
        p_at_m8 = 155 + prm_268 / 5;
        dur = 7;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の加速"s,
                    u8"Increases speed by "s + p_at_m8);
                return;
            }
        }
        sdata(18, prm_266) += p_at_m8;
        return;
    }
    if (prm_267 == 15)
    {
        dur = 4 + prm_268 / 40;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"変装"s, u8"Grants new identify"s);
                return;
            }
        }
        cbitmod(16, prm_266, 1);
        return;
    }
    if (prm_267 == 16)
    {
        dur = 20;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    u8"呪いが完了したときに確実なる死"s,
                    u8"Guaranteed death when the hex ends"s);
                return;
            }
        }
        cbitmod(973, prm_266, 1);
        return;
    }
    if (prm_267 == 17)
    {
        p_at_m8 = 120;
        dur = 5;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の加速と能力のアップ"s,
                    u8"Increases speed by "s + p_at_m8
                        + u8"/Boosts physical attributes"s);
                return;
            }
        }
        sdata(18, prm_266) += p_at_m8;
        sdata(10, prm_266) = sdata(10, prm_266) * 150 / 100 + 10;
        sdata(12, prm_266) = sdata(12, prm_266) * 150 / 100 + 10;
        sdata(154, prm_266) += 50;
        cdata(70, prm_266) = cdata(70, prm_266) * 150 / 100 + 25;
        cdata(71, prm_266) = cdata(71, prm_266) * 150 / 100 + 25;
        cdata(72, prm_266) = cdata(72, prm_266) * 150 / 100 + 50;
        return;
    }
    if (prm_267 == 18)
    {
        dur = 66;
        p_at_m8 = limit(25 + prm_268 / 17, 25, 80);
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(u8"致命傷を負ったとき"s + p_at_m8 +
                        u8"%の確率でダメージ分回復。"s,
                    ""s + p_at_m8 +
                        u8"% chances taking a lethal damage heals you instead"s);
                return;
            }
        }
        cbitmod(980, prm_266, 1);
        return;
    }
    if (prm_267 == 19)
    {
        p_at_m8 = prm_268;
        dur = 777;
        if (prm_266 < 0)
        {
            if (prm_266 == -1)
            {
                return;
            }
            else
            {
                buffdesc = lang(
                    ""s + p_at_m8 + u8"の幸運の上昇"s,
                    u8"Increase luck by "s + p_at_m8 + u8"."s);
                return;
            }
        }
        sdata(19, prm_266) += p_at_m8;
        return;
    }
    return;
}
int calcskill(int prm_269, int prm_270, int prm_271)
{
    int rs_at_m9 = 0;
    rs_at_m9 = sdata(sdataref(0, prm_269), prm_270);
    ele = 0;
    elep = 0;
    if (prm_269 == 412)
    {
        dice1 = 0;
        dice2 = 1;
        bonus = rs_at_m9 * prm_271 * 5 / 100;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 461)
    {
        dice1 = 0;
        dice2 = 1;
        bonus = limit((rs_at_m9 * 5 + prm_271) / 20 + 40, 40, 100);
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 411)
    {
        dice1 = 0;
        dice2 = 1;
        bonus = rs_at_m9 * prm_271 * 10 / 100;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 400)
    {
        dice1 = 1 + rs_at_m9 / 30;
        dice2 = prm_271 / 40 + 5 + 1;
        bonus = prm_271 / 30;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 401)
    {
        dice1 = 2 + rs_at_m9 / 26;
        dice2 = prm_271 / 25 + 5 + 1;
        bonus = prm_271 / 15;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 405)
    {
        dice1 = 2 + rs_at_m9 / 22;
        dice2 = prm_271 / 18 + 5 + 1;
        bonus = prm_271 / 10;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 402)
    {
        dice1 = 3 + rs_at_m9 / 15;
        dice2 = prm_271 / 12 + 5 + 1;
        bonus = prm_271 / 6;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 403)
    {
        dice1 = 5 + rs_at_m9 / 10;
        dice2 = prm_271 / 7 + 5 + 1;
        bonus = prm_271 / 2;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 406)
    {
        dice1 = 0;
        dice2 = 1;
        bonus = rs_at_m9 * 5 + prm_271 * 2;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 407)
    {
        dice1 = 0;
        dice2 = 1;
        bonus = rs_at_m9 * 5 + prm_271 * 3 / 2;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 623)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = cdata(62, prm_270) / 70 + 1 + 1;
        bonus = 0;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 624)
    {
        dice1 = 1 + rs_at_m9 / 20;
        dice2 = cdata(62, prm_270) / 140 + 1 + 1;
        bonus = 0;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 414)
    {
        dice1 = prm_271 / 125 + 2 + rs_at_m9 / 50;
        dice2 = prm_271 / 60 + 9 + 1;
        bonus = 0;
        ele = 60;
        elep = 100 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 459)
    {
        dice1 = prm_271 / 100 + 3 + rs_at_m9 / 25;
        dice2 = prm_271 / 40 + 12 + 1;
        bonus = 0;
        ele = 60;
        elep = 100 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 418)
    {
        dice1 = prm_271 / 80 + 1 + rs_at_m9 / 18;
        dice2 = prm_271 / 25 + 8 + 1;
        bonus = 0;
        ele = 53;
        elep = 200 + prm_271 / 3;
        stat = 1;
        return stat;
    }
    if (prm_269 == 415)
    {
        dice1 = prm_271 / 70 + 1 + rs_at_m9 / 18;
        dice2 = prm_271 / 25 + 8 + 1;
        bonus = 0;
        ele = 56;
        elep = 200 + prm_271 / 3;
        stat = 1;
        return stat;
    }
    if (prm_269 == 417)
    {
        dice1 = prm_271 / 70 + 1 + rs_at_m9 / 18;
        dice2 = prm_271 / 25 + 8 + 1;
        bonus = 0;
        ele = 59;
        elep = 200 + prm_271 / 3;
        stat = 1;
        return stat;
    }
    if (prm_269 == 416)
    {
        dice1 = prm_271 / 70 + 1 + rs_at_m9 / 18;
        dice2 = prm_271 / 25 + 8 + 1;
        bonus = 0;
        ele = 58;
        elep = 200 + prm_271 / 3;
        stat = 1;
        return stat;
    }
    if (prm_269 == 419)
    {
        dice1 = prm_271 / 50 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 26 + 4 + 1;
        bonus = 0;
        ele = 51;
        elep = 180 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 420)
    {
        dice1 = prm_271 / 50 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 26 + 4 + 1;
        bonus = 0;
        ele = 50;
        elep = 180 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 421)
    {
        dice1 = prm_271 / 50 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 26 + 4 + 1;
        bonus = 0;
        ele = 52;
        elep = 180 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 422)
    {
        dice1 = prm_271 / 50 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 25 + 4 + 1;
        bonus = 0;
        ele = 53;
        elep = 180 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 423)
    {
        dice1 = prm_271 / 50 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 25 + 4 + 1;
        bonus = 0;
        ele = 54;
        elep = 180 + prm_271 / 4;
        stat = 1;
        return stat;
    }
    if (prm_269 == 431)
    {
        dice1 = prm_271 / 100 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 15 + 2 + 1;
        bonus = 0;
        ele = 51;
        elep = 150 + prm_271 / 5;
        stat = 1;
        return stat;
    }
    if (prm_269 == 432)
    {
        dice1 = prm_271 / 100 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 15 + 2 + 1;
        bonus = 0;
        ele = 50;
        elep = 150 + prm_271 / 5;
        stat = 1;
        return stat;
    }
    if (prm_269 == 433)
    {
        dice1 = prm_271 / 80 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 12 + 2 + 1;
        bonus = 0;
        ele = 59;
        elep = 150 + prm_271 / 5;
        stat = 1;
        return stat;
    }
    if (prm_269 == 434)
    {
        dice1 = prm_271 / 80 + 1 + rs_at_m9 / 20;
        dice2 = prm_271 / 12 + 2 + 1;
        bonus = 0;
        ele = 57;
        elep = 150 + prm_271 / 5;
        stat = 1;
        return stat;
    }
    if (prm_269 == 460)
    {
        dice1 = prm_271 / 100 + 1 + rs_at_m9 / 25;
        dice2 = prm_271 / 18 + 2 + 1;
        bonus = 0;
        ele = 60;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 404)
    {
        dice1 = rs_at_m9 / 20 + 3;
        dice2 = prm_271 / 15 + 5 + 1;
        bonus = prm_271 / 10;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 644)
    {
        dice1 = 1 + rs_at_m9 / 25;
        dice2 = 15 + rs_at_m9 / 5 + 1;
        bonus = ele == 0;
        elep = 0;
        stat = 1;
        return stat;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 601)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 7;
        bonus = rs_at_m9 / 4;
        ele = 56;
        elep = 200;
        stat = 1;
        return stat;
    }
    if (prm_269 == 612)
    {
        dice1 = 1 + rs_at_m9 / 20;
        dice2 = 7;
        bonus = rs_at_m9 / 15;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 602)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 50;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 603)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 51;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 604)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 52;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 605)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 53;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 606)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 59;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 608)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 56;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 610)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 55;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 607)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 57;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 609)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 58;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 611)
    {
        dice1 = 1 + rs_at_m9 / 15;
        dice2 = 8;
        bonus = rs_at_m9 / 8;
        ele = 54;
        elep = 100;
        stat = 1;
        return stat;
    }
    if (prm_269 == 613)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 4;
        bonus = ep == 0;
        stat = 1;
        return stat;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 614)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 4;
        bonus = ep == 0;
        stat = 1;
        return stat;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 617)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 4;
        bonus = 0;
        ele = 0;
        elep = 100 + rs_at_m9 * 2;
        stat = 1;
        return stat;
    }
    if (prm_269 == 618)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 4;
        bonus = 0;
        ele = 0;
        elep = 100 + rs_at_m9 * 3;
        stat = 1;
        return stat;
    }
    if (prm_269 == 615)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 5;
        bonus = 0;
        ele = 55;
        elep = rs_at_m9 * 4 + 20;
        stat = 1;
        return stat;
    }
    if (prm_269 == 616)
    {
        dice1 = 1 + rs_at_m9 / 10;
        dice2 = 5;
        bonus = 0;
        ele = 58;
        elep = rs_at_m9 * 4 + 20;
        stat = 1;
        return stat;
    }
    if (prm_269 == 636)
    {
        dice1 = 1 + rs_at_m9 / 20;
        dice2 = 11;
        bonus = elep == 0;
        stat = 1;
        return stat;
        ele = 0;
        elep = 0;
        stat = 1;
        return stat;
    }
    if (prm_269 == 655)
    {
        dice1 = prm_271 / 80 + 1;
        dice2 = prm_271 / 8 + 2 + 1;
        bonus = 0;
        ele = 57;
        elep = 150 + prm_271 / 2;
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int sorg(int prm_272, int prm_273)
{
    stat = sdata((prm_272 + 600), prm_273) / 1000000;
    return stat;
}
int randskill()
{
    stat = rnd(40) + 150;
    return stat;
}
int randattb()
{
    stat = rnd(8) + 10;
    return stat;
}
void label_0041()
{
    DIM2(traitref, 10);
    SDIM3(traitrefn, 80, 9);
    SDIM3(traitrefn2, 20, 6);
    return;
}
void label_0043()
{
    if (cdatan(2, 0) == u8"dwarf"s)
    {
        trait(152) = 2;
        trait(155) = 1;
    }
    if (cdatan(2, 0) == u8"elea"s)
    {
        trait(168) = 1;
        trait(156) = 1;
    }
    if (cdatan(2, 0) == u8"eulderna"s)
    {
        trait(153) = 1;
    }
    if (cdatan(2, 0) == u8"lich"s)
    {
        trait(151) = 1;
        trait(155) = 2;
        trait(152) = 1;
    }
    if (cdatan(2, 0) == u8"golem"s)
    {
        trait(157) = 1;
        trait(152) = 2;
    }
    if (cdatan(2, 0) == u8"yerles"s)
    {
        trait(154) = 1;
    }
    if (cdatan(2, 0) == u8"juere"s)
    {
        trait(158) = 1;
        trait(159) = 1;
    }
    if (cdatan(2, 0) == u8"goblin"s)
    {
        trait(155) = 1;
        trait(159) = 1;
    }
    if (cdatan(2, 0) == u8"mutant"s)
    {
        trait(0) = 1;
    }
    if (cdatan(2, 0) == u8"fairy"s)
    {
        trait(160) = 1;
        trait(161) = 1;
    }
    return;
}
int ibit(int prm_274, int prm_275)
{
    HMMBITCHECK(inv(35 + prm_274 / 32, prm_275), prm_274 % 32);
    stat = stat;
    return stat;
}
void ibitmod(int prm_276, int prm_277, int prm_278)
{
    if (prm_278 == 0)
    {
        HMMBITOFF(inv(35 + prm_276 / 32, prm_277), prm_276 % 32);
        return;
    }
    HMMBITON(inv(35 + prm_276 / 32, prm_277), prm_276 % 32);
    return;
}
int refitem(int prm_279, int prm_280)
{
    dbmode = 16;
    dbid = prm_279;
    dbspec = prm_280;
    label_0481();
    stat = stat;
    return stat;
}
int iequiploc(int prm_281)
{
    int p_at_m13 = 0;
    p_at_m13 = refitem(inv(3, prm_281), 5);
    if (p_at_m13 == 12000)
    {
        stat = 1;
        return stat;
    }
    if (p_at_m13 == 34000)
    {
        stat = 2;
        return stat;
    }
    if (p_at_m13 == 20000)
    {
        stat = 3;
        return stat;
    }
    if (p_at_m13 == 16000)
    {
        stat = 4;
        return stat;
    }
    if (p_at_m13 == 10000)
    {
        stat = 5;
        return stat;
    }
    if (p_at_m13 == 14000)
    {
        stat = 5;
        return stat;
    }
    if (p_at_m13 == 32000)
    {
        stat = 6;
        return stat;
    }
    if (p_at_m13 == 22000)
    {
        stat = 7;
        return stat;
    }
    if (p_at_m13 == 18000)
    {
        stat = 9;
        return stat;
    }
    if (p_at_m13 == 24000)
    {
        stat = 10;
        return stat;
    }
    if (p_at_m13 == 25000)
    {
        stat = 11;
        return stat;
    }
    if (p_at_m13 == 19000)
    {
        stat = 8;
        return stat;
    }
    stat = 0;
    return stat;
}
void setunid(int prm_282, int prm_283)
{
    cdata(157, prm_282) = prm_283;
    cdata(7, prm_282) = 825 + prm_283;
    cdata(7, prm_282) += 0;
    return;
}
int getunid(int prm_284)
{
    f_at_m14 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (usernpcmax); cnt < cnt_end; ++cnt)
        {
            if (cdatan(5, prm_284) == userdatan(0, cnt))
            {
                setunid(prm_284, cnt);
                f_at_m14 = 1;
                break;
            }
        }
    }
    if (f_at_m14 == 0)
    {
        cdata(7, prm_284) = 1;
        cdata(157, prm_284) = usernpcmax;
        cdatan(0, prm_284) = lang(u8"残りカス"s, u8"a garbage"s);
    }
    stat = f_at_m14;
    return stat;
}
int findunid(const std::string& prm_285)
{
    f_at_m14 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (usernpcmax); cnt < cnt_end; ++cnt)
        {
            if (prm_285 == userdatan(0, cnt))
            {
                f_at_m14 = 1 + cnt;
                break;
            }
        }
    }
    stat = f_at_m14;
    return stat;
}
int synccheck(int prm_286, int prm_287)
{
    if (prm_287 == -1)
    {
        stat = cdata(6, prm_286) == msync || prm_286 == gdata(183);
        return stat;
    }
    if (mapsync(prm_286, prm_287) == msync)
    {
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int evid()
{
    if (evnum <= 0)
    {
        stat = -1;
        return stat;
    }
    stat = evlist(evnum - 1);
    return stat;
}
int evfind(int prm_288)
{
    int f_at_m17 = 0;
    f_at_m17 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (evnum); cnt < cnt_end; ++cnt)
        {
            if (evlist(cnt) == prm_288)
            {
                f_at_m17 = 1;
            }
        }
    }
    stat = f_at_m17;
    return stat;
}
void evadd(int prm_289, int prm_290, int prm_291)
{
    if (evproc)
    {
        evlist(evnum) = evlist(evnum - 1);
        evdata1(evnum) = evdata1(evnum - 1);
        evdata2(evnum) = evdata2(evnum - 1);
        evlist(evnum - 1) = prm_289;
        evdata1(evnum - 1) = prm_290;
        evdata2(evnum - 1) = prm_291;
    }
    else
    {
        evlist(evnum) = prm_289;
        evdata1(evnum) = prm_290;
        evdata2(evnum) = prm_291;
    }
    ++evnum;
    return;
}
void sndload(const std::string& prm_292, int prm_293)
{
    if (prm_293 < 7)
    {
        if (cfg_sound == 1)
        {
            DSLOADFNAME(prm_292, prm_293);
        }
        else
        {
            mmload(prm_292, prm_293);
        }
    }
    soundfile(prm_293) = prm_292;
    return;
}
void snd(int prm_296, int prm_297, int prm_298)
{
    int sound_at_m18 = 0;
    int f_at_m18 = 0;
    if (cfg_sound == 0)
    {
        return;
    }
    sound_at_m18 = prm_296;
    if (sound_at_m18 > 7)
    {
        if (prm_297)
        {
            sound_at_m18 = 13;
            if (prm_296 == 78)
            {
                sound_at_m18 = 14;
            }
            if (prm_296 == 79)
            {
                sound_at_m18 = 15;
            }
            if (prm_296 == 80)
            {
                sound_at_m18 = 16;
            }
        }
        else
        {
            sound_at_m18 = 7;
            f_at_m18 = 0;
            if (prm_298)
            {
                {
                    int cnt = 7;
                    for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                    {
                        CHECKPLAY(cnt);
                        if (stat)
                        {
                            if (soundlist(cnt - 7) == sound_at_m18)
                            {
                                sound_at_m18 = cnt;
                                f_at_m18 = 1;
                                break;
                            }
                        }
                    }
                }
            }
            if (f_at_m18 == 0)
            {
                {
                    int cnt = 7;
                    for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                    {
                        CHECKPLAY(cnt);
                        if (stat == 0)
                        {
                            sound_at_m18 = cnt;
                            soundlist(cnt - 7) = sound_at_m18;
                        }
                    }
                }
            }
        }
        if (cfg_sound == 1)
        {
            DSLOADFNAME(soundfile(prm_296), sound_at_m18);
        }
        else
        {
            mmload(soundfile(prm_296), sound_at_m18);
        }
    }
    if (cfg_sound == 1)
    {
        DSPLAY(sound_at_m18, prm_297);
    }
    else
    {
        mmplay(sound_at_m18);
    }
    return;
}
void label_0066()
{
    DIM2(soundlist, 6);
    if (cfg_sound == 1)
    {
        DSGETMASTERVOLUME();
        cfg_svolume = stat;
    }
    folder = exedir + u8"sound\\"s;
    sndload(folder + u8"exitmap1.wav"s, 49);
    sndload(folder + u8"book1.wav"s, 59);
    sndload(folder + u8"write1.wav"s, 44);
    sndload(folder + u8"pop1.wav"s, 1);
    sndload(folder + u8"kill1.wav"s, 8);
    sndload(folder + u8"kill2.wav"s, 9);
    sndload(folder + u8"trap1.wav"s, 70);
    sndload(folder + u8"more1.wav"s, 10);
    sndload(folder + u8"getgold1.wav"s, 11);
    sndload(folder + u8"paygold1.wav"s, 12);
    sndload(folder + u8"equip1.wav"s, 13);
    sndload(folder + u8"get1.wav"s, 14);
    sndload(folder + u8"get2.wav"s, 15);
    sndload(folder + u8"drop1.wav"s, 16);
    sndload(folder + u8"drink1.wav"s, 17);
    sndload(folder + u8"eat1.wav"s, 18);
    sndload(folder + u8"spend1.wav"s, 19);
    sndload(folder + u8"ding1.wav"s, 60);
    sndload(folder + u8"ding3.wav"s, 61);
    sndload(folder + u8"dead1.wav"s, 50);
    sndload(folder + u8"ok1.wav"s, 20);
    sndload(folder + u8"dig1.wav"s, 52);
    sndload(folder + u8"bash1.wav"s, 73);
    sndload(folder + u8"complete1.wav"s, 51);
    sndload(folder + u8"alert1.wav"s, 21);
    sndload(folder + u8"locked1.wav"s, 22);
    sndload(folder + u8"chest1.wav"s, 23);
    sndload(folder + u8"ding2.wav"s, 24);
    sndload(folder + u8"cook1.wav"s, 25);
    sndload(folder + u8"pop2.wav"s, 26);
    sndload(folder + u8"fail1.wav"s, 27);
    sndload(folder + u8"build1.wav"s, 58);
    sndload(folder + u8"bow1.wav"s, 29);
    sndload(folder + u8"atk1.wav"s, 2);
    sndload(folder + u8"atk2.wav"s, 3);
    sndload(folder + u8"gun1.wav"s, 30);
    sndload(folder + u8"throw1.wav"s, 31);
    sndload(folder + u8"heart1.wav"s, 32);
    sndload(folder + u8"heal1.wav"s, 33);
    sndload(folder + u8"teleport1.wav"s, 72);
    sndload(folder + u8"ball1.wav"s, 34);
    sndload(folder + u8"breath1.wav"s, 35);
    sndload(folder + u8"bolt1.wav"s, 37);
    sndload(folder + u8"arrow1.wav"s, 36);
    sndload(folder + u8"curse1.wav"s, 38);
    sndload(folder + u8"pop3.wav"s, 39);
    sndload(folder + u8"chime.wav"s, 53);
    sndload(folder + u8"laser1.wav"s, 42);
    sndload(folder + u8"web.wav"s, 68);
    sndload(folder + u8"cheer.wav"s, 69);
    sndload(folder + u8"door1.wav"s, 48);
    sndload(folder + u8"crush1.wav"s, 45);
    sndload(folder + u8"crush2.wav"s, 47);
    sndload(folder + u8"fire1.wav"s, 6);
    sndload(folder + u8"snow.wav"s, 86);
    sndload(folder + u8"fish_cast.wav"s, 87);
    sndload(folder + u8"fish_get.wav"s, 88);
    sndload(folder + u8"fish_fight.wav"s, 89);
    sndload(folder + u8"ammo.wav"s, 90);
    sndload(folder + u8"throw2.wav"s, 91);
    sndload(folder + u8"foot1a.wav"s, 81);
    sndload(folder + u8"foot2a.wav"s, 83);
    sndload(folder + u8"foot1b.wav"s, 82);
    sndload(folder + u8"foot2b.wav"s, 84);
    sndload(folder + u8"foot2c.wav"s, 85);
    sndload(folder + u8"click1.wav"s, 40);
    sndload(folder + u8"get3.wav"s, 41);
    sndload(folder + u8"card1.wav"s, 71);
    sndload(folder + u8"water.wav"s, 57);
    sndload(folder + u8"water2.wav"s, 46);
    sndload(folder + u8"dig2.wav"s, 54);
    sndload(folder + u8"bush1.wav"s, 55);
    sndload(folder + u8"gasha.wav"s, 56);
    sndload(folder + u8"cursor1.wav"s, 5);
    sndload(folder + u8"pop4.wav"s, 62);
    sndload(folder + u8"punish1.wav"s, 63);
    sndload(folder + u8"pray1.wav"s, 64);
    sndload(folder + u8"offer1.wav"s, 65);
    sndload(folder + u8"fizzle.wav"s, 66);
    sndload(folder + u8"door2.wav"s, 67);
    sndload(folder + u8"foot.wav"s, 43);
    sndload(folder + u8"miss.wav"s, 4);
    sndload(folder + u8"night.wav"s, 74);
    sndload(folder + u8"bg_rain.wav"s, 75);
    sndload(folder + u8"bg_thunder.wav"s, 76);
    sndload(folder + u8"bg_wind.wav"s, 77);
    sndload(folder + u8"bg_sea.wav"s, 78);
    sndload(folder + u8"bg_town.wav"s, 79);
    sndload(folder + u8"bg_fire.wav"s, 80);
    sndload(folder + u8"scroll.wav"s, 92);
    sndload(folder + u8"log.wav"s, 93);
    sndload(folder + u8"chara.wav"s, 94);
    sndload(folder + u8"wear.wav"s, 95);
    sndload(folder + u8"feat.wav"s, 96);
    sndload(folder + u8"port.wav"s, 97);
    sndload(folder + u8"unpop1.wav"s, 98);
    sndload(folder + u8"chat.wav"s, 99);
    sndload(folder + u8"inv.wav"s, 100);
    sndload(folder + u8"skill.wav"s, 101);
    sndload(folder + u8"spell.wav"s, 102);
    sndload(folder + u8"dice.wav"s, 103);
    sndload(folder + u8"vomit.wav"s, 104);
    sndload(folder + u8"atksword.wav"s, 105);
    sndload(folder + u8"atk_ice.wav"s, 106);
    sndload(folder + u8"atk_elec.wav"s, 107);
    sndload(folder + u8"atk_fire.wav"s, 108);
    sndload(folder + u8"atk_hell.wav"s, 109);
    sndload(folder + u8"atk_poison.wav"s, 110);
    sndload(folder + u8"atk_nerve.wav"s, 111);
    sndload(folder + u8"atk_sound.wav"s, 112);
    sndload(folder + u8"atk_mind.wav"s, 113);
    sndload(folder + u8"atk_chaos.wav"s, 114);
    sndload(folder + u8"atk_dark.wav"s, 115);
    sndload(folder + u8"curse2.wav"s, 116);
    sndload(folder + u8"curse3.wav"s, 117);
    sndload(folder + u8"enc.wav"s, 118);
    sndload(folder + u8"enc2.wav"s, 119);
    sndload(folder + u8"pray2.wav"s, 120);
    sndload(folder + u8"offer2.wav"s, 121);
    return;
}
void label_0067()
{
    s = exedir + u8"user\\music\\musiclist.txt"s;
    exist(s);
    if (strsize == -1)
    {
        return;
    }
    notesel(buff);
    noteload(s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (s == ""s)
            {
                continue;
            }
            musicfile(cnt + 50) = strmid(s, 0, instr(s, 0, u8"\t"s));
        }
    }
    return;
}
void label_0068()
{
    env = 0;
    if (gdata(17) == 3)
    {
        env = 75;
    }
    if (gdata(17) == 4)
    {
        env = 76;
    }
    if (gdata(17) == 1)
    {
        env = 77;
    }
    if (env != envwprev)
    {
        envwprev = env;
        if (cfg_sound == 1)
        {
            if (env == 0)
            {
                DSSTOP(13);
                DSRELEASE(13);
            }
            else
            {
                snd(env, 1);
            }
        }
    }
    if (mdata(14) == 2)
    {
        DSSETVOLUME(13, cfg_svolume * 8 / 10);
    }
    else
    {
        if (gdata(22) == 1 || gdata(20) == 30)
        {
            DSSETVOLUME(13, cfg_svolume * 2 / 10);
        }
        else
        {
            DSSETVOLUME(13, 0);
        }
    }
    if (gdata(20) == 11)
    {
        snd(78, 1);
    }
    else
    {
        DSSTOP(14);
        DSRELEASE(14);
    }
    if (mdata(6) == 3)
    {
        snd(79, 1);
    }
    else
    {
        DSSTOP(15);
        DSRELEASE(15);
    }
    if (mdata(20) == 1)
    {
        snd(80, 1);
    }
    else
    {
        DSSTOP(16);
        DSRELEASE(16);
    }
    if (envonly == 1)
    {
        envonly = 0;
        return;
    }
    if (cfg_music == 0)
    {
        return;
    }
    if (music == 0)
    {
        if (adata(0, gdata(20)) == 4)
        {
            music = musicprev;
        }
        if (adata(0, gdata(20)) == 3)
        {
            music = 51;
        }
        if (adata(0, gdata(20)) == 5)
        {
            music = 67;
        }
        if (mdata(13) != 0)
        {
            music = mdata(13);
        }
        if (adata(0, gdata(20)) >= 20)
        {
            music = 55 + gdata(13) % 6;
        }
        if (adata(16, gdata(20)) == 8 || adata(16, gdata(20)) == 42)
        {
            if (gdata(22) == adata(10, gdata(20)))
            {
                if (adata(20, gdata(20)) != -1)
                {
                    music = 62;
                }
            }
        }
        if (gdata(20) == 13)
        {
            if (gdata(70) == 1001)
            {
                music = 76;
            }
            if (gdata(70) == 1006)
            {
                music = 75;
            }
            if (gdata(70) == 1009)
            {
                music = 77;
            }
            if (gdata(70) == 1008)
            {
                music = 62;
            }
            if (gdata(70) == 1010)
            {
                music = 73;
            }
        }
        if (gdata(20) == 6)
        {
            music = 73;
        }
        if (gdata(20) == 25)
        {
            music = 75;
        }
        if (gdata(20) == 11)
        {
            music = 52;
        }
        if (gdata(20) == 36)
        {
            music = 52;
        }
        if (gdata(20) == 12)
        {
            music = 75;
        }
        if (gdata(20) == 14)
        {
            music = 53;
        }
        if (gdata(20) == 15)
        {
            music = 54;
        }
        if (gdata(20) == 21)
        {
            music = 83;
        }
        if (gdata(20) == 33)
        {
            music = 85;
        }
    }
    if (music == 0 || adata(0, gdata(20)) == 1)
    {
        music = 86 + gdata(12) % 3;
    }
    if (musicloop == 1)
    {
        musicloop = 0;
    }
    else
    {
        musicloop = 65535;
    }
    if (musicprev != music || music == 91)
    {
        musicprev = music;
        mmstop();
        if (cfg_music == 1)
        {
            DMSTOP();
            DMLOADFNAME(exedir + u8"sound\\gm_on.mid"s, 0);
            DMPLAY(1, 0);
        }
        if (music != -1)
        {
            musicfolder = exedir + u8"user\\music\\"s;
            exist(musicfolder + musicfile(music));
            if (strsize == -1)
            {
                musicfolder = exedir + u8"sound\\"s;
                exist(musicfolder + musicfile(music));
                if (strsize == -1)
                {
                    return;
                }
            }
            if (instr(musicfile(music), 0, u8".mp3"s) != -1)
            {
                mp3 = 1;
            }
            else
            {
                mp3 = 0;
            }
        }
        if (music != -1)
        {
            if (cfg_music == 2 || mp3 == 1)
            {
                mmload(musicfolder + musicfile(music), 0, musicloop == 65535);
                mmplay(0);
            }
            else
            {
                DMLOADFNAME(musicfolder + musicfile(music), 0);
                DMPLAY(musicloop, 0);
            }
        }
    }
    music = 0;
    musicloop = 0;
    return;
}
void key_check(int prm_299)
{
    int p_at_m19 = 0;
    int a_at_m19 = 0;
    int f_at_m19 = 0;
    int j_at_m19 = 0;
    int prevjoy_at_m19 = 0;
    int b_at_m19 = 0;
    std::string keyactive_at_m19;
    int scon_at_m19 = 0;
    if (ginfo(2) == 0)
    {
        objsel(0);
    }
    else
    {
        key = "";
        objprm(0, ""s);
        keylog = "";
        await(100);
        return;
    }
    if (msgalert == 1)
    {
        if (cfg_alert > 1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (cfg_alert); cnt < cnt_end; ++cnt)
                {
                    await(10);
                    p_at_m19 = 0;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (106); cnt < cnt_end; ++cnt)
                        {
                            if (cnt == 32 || cnt == 13 || cnt >= 65 && cnt <= 90
                                || cnt >= 96 && cnt <= 105)
                            {
                                getkey(a_at_m19, cnt);
                                if (a_at_m19)
                                {
                                    p_at_m19 = 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (p_at_m19 == 0)
                    {
                        break;
                    }
                }
            }
            msgalert = 0;
            keylog = "";
            objprm(0, ""s);
        }
    }
    key = "";
    if (keylog != ""s)
    {
        keylog = strmid(keylog, 0, 1);
        if (peek(keylog, 0) == 13)
        {
            keylog = key_enter;
        }
        key = keylog;
        keylog = "";
        objprm(0, ""s);
    }
    mousel = 0;
    f_at_m19 = 0;
    key_tab = 0;
    key_escape = 0;
    stick(p_at_m19, 15);
    if (p_at_m19 != 0)
    {
        if (p_at_m19 == 128)
        {
            if (keywait == 0)
            {
                key = key_cancel;
                key_escape = 1;
            }
        }
        if (p_at_m19 == 1024)
        {
            key_tab = 1;
            key = key_next;
        }
    }
    else
    {
        getkey(a_at_m19, 12);
        if (a_at_m19)
        {
            key = key_wait;
            f_at_m19 = 1;
        }
        getkey(a_at_m19, 45);
        if (a_at_m19)
        {
            key = key_get;
            f_at_m19 = 1;
        }
        getkey(a_at_m19, 36);
        if (a_at_m19)
        {
            p_at_m19 = 3;
        }
        getkey(a_at_m19, 33);
        if (a_at_m19)
        {
            p_at_m19 = 6;
        }
        getkey(a_at_m19, 35);
        if (a_at_m19)
        {
            p_at_m19 = 9;
        }
        getkey(a_at_m19, 34);
        if (a_at_m19)
        {
            p_at_m19 = 12;
        }
    }
    getkey(a_at_m19, 17);
    if (a_at_m19)
    {
        key_ctrl = 1;
    }
    else
    {
        key_ctrl = 0;
    }
    getkey(a_at_m19, 18);
    if (a_at_m19)
    {
        key_alt = 1;
    }
    else
    {
        key_alt = 0;
    }
    getkey(a_at_m19, 16);
    if (a_at_m19)
    {
        keybd_wait = 100000;
        key_shift = 1;
        if (keywait != 0)
        {
            if (a_at_m19 == 0)
            {
                if (key_shift == 0)
                {
                    keywait = 0;
                }
            }
        }
        if (keywait == 0)
        {
            if (a_at_m19 == 1)
            {
                key = key_cancel;
                keywait = 1;
            }
        }
    }
    else
    {
        keywait = 0;
        if (key_shift == 1)
        {
        }
        key_shift = 0;
    }
    if (cfg_joypad)
    {
        j_at_m19 = 0;
        DIGETJOYSTATE(j_at_m19, 0);
        HMMBITCHECK(j_at_m19, 0);
        if (stat)
        {
            p_at_m19 += 2;
        }
        HMMBITCHECK(j_at_m19, 1);
        if (stat)
        {
            p_at_m19 += 8;
        }
        HMMBITCHECK(j_at_m19, 2);
        if (stat)
        {
            p_at_m19 += 1;
        }
        HMMBITCHECK(j_at_m19, 3);
        if (stat)
        {
            p_at_m19 += 4;
        }
        a_at_m19 = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                HMMBITCHECK(j_at_m19, 4 + cnt);
                if (stat)
                {
                    a_at_m19 = 1;
                    if (jkey(cnt) == key_alter)
                    {
                        key_alt = 1;
                    }
                    if (jkey(cnt) == key_cancel)
                    {
                        key_shift = 1;
                        if (p_at_m19 != 0)
                        {
                            keybd_wait = 100000;
                        }
                    }
                    if (prevjoy_at_m19 != cnt)
                    {
                        key = jkey(cnt);
                        prevjoy_at_m19 = cnt;
                        if (key == key_esc)
                        {
                            key = key_cancel;
                            key_escape = 1;
                        }
                        if (prm_299 == 0)
                        {
                            b_at_m19 = 0;
                            if (key == key_fire)
                            {
                                key = key_northeast;
                                b_at_m19 = 1;
                            }
                            if (key == key_target)
                            {
                                key = key_northwest;
                                b_at_m19 = 1;
                            }
                            if (key == key_get)
                            {
                                key = key_northeast;
                                b_at_m19 = 1;
                            }
                            if (key == key_alter)
                            {
                                key = key_northwest;
                                b_at_m19 = 1;
                            }
                            if (b_at_m19 == 0 && key != key_enter
                                && key != key_cancel && key != key_esc)
                            {
                                key = key_identify;
                            }
                        }
                    }
                }
            }
        }
        if (a_at_m19 == 0)
        {
            prevjoy_at_m19 = -1;
        }
        else
        {
            if (prm_299 == 2)
            {
                return;
            }
        }
    }
    if (quickkeywait)
    {
        if (p_at_m19 != 0)
        {
            return;
        }
        else
        {
            quickkeywait = 0;
        }
    }
    if (keybd_wait >= 100000)
    {
        if (key_shift == 0)
        {
            keybd_wait = 1000;
        }
    }
    if (p_at_m19 == 1)
    {
        if (key_alt == 0)
        {
            key = key_west;
            f_at_m19 = 1;
        }
    }
    if (p_at_m19 == 2)
    {
        if (key_alt == 0)
        {
            key = key_north;
            f_at_m19 = 1;
        }
    }
    if (p_at_m19 == 4)
    {
        if (key_alt == 0)
        {
            key = key_east;
            f_at_m19 = 1;
        }
    }
    if (p_at_m19 == 8)
    {
        if (key_alt == 0)
        {
            key = key_south;
            f_at_m19 = 1;
        }
    }
    if (p_at_m19 == 3)
    {
        key = key_northwest;
        f_at_m19 = 1;
    }
    if (p_at_m19 == 6)
    {
        key = key_northeast;
        f_at_m19 = 1;
    }
    if (p_at_m19 == 9)
    {
        key = key_southwest;
        f_at_m19 = 1;
    }
    if (p_at_m19 == 12)
    {
        key = key_southeast;
        f_at_m19 = 1;
    }
    if (prm_299 == 2)
    {
        return;
    }
    if (f_at_m19)
    {
        if (keyactive_at_m19 != key)
        {
            keyactive_at_m19 = key;
        }
        if (keybd_wait == 0)
        {
            keyactive_at_m19 = key;
        }
        if (prm_299 == 1)
        {
            if (keybd_attacking != 0)
            {
                if (keybd_wait % cfg_attackwait != 0)
                {
                    key = ""s;
                }
            }
            else
            {
                if (cfg_scroll == 0)
                {
                    if (keybd_wait < cfg_walkwait * cfg_startrun)
                    {
                        if (keybd_wait % cfg_walkwait == 0)
                        {
                        }
                        else
                        {
                            key = "";
                        }
                    }
                    else
                    {
                        running = 1;
                        if (keybd_wait < 100000)
                        {
                            if (keybd_wait % cfg_runwait != 0)
                            {
                                key = ""s;
                            }
                        }
                    }
                }
                else
                {
                    if (p_at_m19 == 0)
                    {
                        if (keybd_wait < 10)
                        {
                            if (keybd_wait != 0)
                            {
                                key = ""s;
                            }
                        }
                    }
                    else
                    {
                        if (keybd_wait > cfg_startrun)
                        {
                            if (cfg_runscroll == 0)
                            {
                                if (keybd_wait % cfg_runwait == 0)
                                {
                                }
                                else
                                {
                                    key = "";
                                }
                            }
                            running = 1;
                        }
                    }
                }
            }
        }
        else
        {
            if (keybd_wait < 14)
            {
                if (keybd_wait == 0 || keybd_wait == 7)
                {
                }
                else
                {
                    key = "";
                }
            }
            else
            {
                if (keybd_wait < 1000)
                {
                    if (keybd_wait % 2 != 1)
                    {
                        key = ""s;
                    }
                }
            }
        }
        ++keybd_wait;
    }
    else
    {
        keybd_wait = 0;
        keybd_attacking = 0;
        running = 0;
        keyactive_at_m19 = "";
    }
    {
        int cnt = 48;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            getkey(p_at_m19, cnt);
            if (p_at_m19)
            {
                p_at_m19 = (cnt - 48) % 10;
                key = u8"sc"s;
                sc = cnt - 48 + (key_shift == 1 || key_ctrl == 1) * 10;
                keybd_event(cnt, 0, 2);
                scon_at_m19 = 1;
            }
        }
    }
    if (scon_at_m19)
    {
        key = u8"sc"s;
        scon_at_m19 = 0;
        keylog = "";
        objprm(0, ""s);
        return;
    }
    if (keyhalt != 0)
    {
        if (key != ""s || keybd_wait != 0)
        {
            key = "";
        }
        else
        {
            keyhalt = 0;
        }
    }
    return;
}
void keyrelease()
{
    int a_at_m20 = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            await(30);
            stick(a_at_m20, 768);
            if (a_at_m20 == 0)
            {
                key_check();
                if (key == ""s)
                {
                    break;
                }
            }
        }
    }
    return;
}
void press(int prm_300)
{
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            await(20);
            key_check();
            if (prm_300 == 0)
            {
                if (key != ""s)
                {
                    break;
                }
            }
            if (prm_300 == 1)
            {
                if (key == key_enter || key == key_cancel)
                {
                    break;
                }
            }
        }
    }
    keyhalt = 1;
    return;
}
void bmes(const std::string& prm_301, int prm_302, int prm_303, int prm_304)
{
    int pos_x_at_m21 = 0;
    int pos_y_at_m21 = 0;
    elona_vector1<int> mes_color_at_m21;
    int mes_y_at_m21 = 0;
    pos_x_at_m21 = ginfo(22);
    pos_y_at_m21 = ginfo(23);
    mes_color_at_m21(0) = prm_302;
    mes_color_at_m21(1) = prm_303;
    mes_color_at_m21(2) = prm_304;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            mes_y_at_m21 = cnt + pos_y_at_m21 - 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    pos(pos_x_at_m21 - 1 + cnt, mes_y_at_m21);
                    mes(prm_301);
                }
            }
        }
    }
    color(mes_color_at_m21(0), mes_color_at_m21(1), mes_color_at_m21(2));
    pos(pos_x_at_m21, pos_y_at_m21);
    mes(prm_301);
    return;
}
void msg_write(std::string& prm_307)
{
    int mp_at_txtfunc = 0;
    int mark_at_txtfunc = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            mp_at_txtfunc = instr(prm_307, 0, u8"♪"s);
            if (mp_at_txtfunc != -1)
            {
                mark_at_txtfunc =
                    elona_int(strmid(prm_307, mp_at_txtfunc + 2, 1));
                if (jp)
                {
                    if (mark_at_txtfunc == 0)
                    {
                        break;
                    }
                }
                prm_307 = strmid(prm_307, 0, mp_at_txtfunc) + u8"  "s
                    + strmid(prm_307,
                             (mp_at_txtfunc + 2 + (mark_at_txtfunc != 0)),
                             9999);
                pos((msglen + mp_at_txtfunc) * inf_mesfont / 2 + inf_msgx + 7
                        + en * 3,
                    (inf_msgline - 1) * inf_msgspace + inf_msgy + 5);
                gmode(2);
                gcopy(3, 600 + mark_at_txtfunc * 24, 360, 16, 16);
                --cnt;
                continue;
            }
        }
    }
    color(tcol_at_txtfunc(0), tcol_at_txtfunc(1), tcol_at_txtfunc(2));
    pos(msglen * inf_mesfont / 2 + inf_msgx + 6,
        (inf_msgline - 1) * inf_msgspace + inf_msgy + 6);
    font(lang(cfg_font1, cfg_font2), inf_mesfont - en * 2, 0);
    mes(prm_307);
    return;
}
void txtmore()
{
    int tmore_at_txtfunc = 0;
    tmore_at_txtfunc = 1;
    return;
}
void txtcontinue()
{
    tcontinue_at_txtfunc = 1;
    return;
}
void anime_halt()
{
    key = "";
    objprm(0, ""s);
    keylog = "";
    redraw(0);
    gmode(0);
    gsel(3);
    pos(672, 504);
    gcopy(0, x_at_txtfunc, y_at_txtfunc, 120, 24);
    gsel(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            await(10);
            pos(x_at_txtfunc, y_at_txtfunc + 12 - cnt);
            gzoom(120, cnt * 2 + 1, 3, 552, 504, 120, 22);
            redraw(1);
        }
    }
    press(1);
    snd(20);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (7); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            await(10);
            pos(x_at_txtfunc, y_at_txtfunc);
            gcopy(3, 672, 504, 120, 24);
            if (cnt != 6)
            {
                pos(x_at_txtfunc, y_at_txtfunc + cnt * 2);
                gzoom(120, 22 - cnt * 4, 3, 552, 504, 120, 22);
            }
            redraw(1);
        }
    }
    redraw(0);
    gmode(2);
    return;
}
void msg_halt()
{
    x_at_txtfunc = windoww - 120;
    y_at_txtfunc = windowh - 22;
    anime_halt();
    screenupdate = -1;
    label_1419();
    return;
}
void help_halt()
{
    x_at_txtfunc = wx + dx - 140;
    y_at_txtfunc = wy + dy - 1;
    anime_halt();
    return;
}
void txtef(int prm_308)
{
    tcol_at_txtfunc(0) = 255 - c_col(0, prm_308);
    tcol_at_txtfunc(1) = 255 - c_col(1, prm_308);
    tcol_at_txtfunc(2) = 255 - c_col(2, prm_308);
    if (prm_308 == 5)
    {
        tcolfix_at_txtfunc = 1;
    }
    else
    {
        tcolfix_at_txtfunc = 0;
    }
    return;
}
void msg_newlog()
{
    if (cfg_exlog == 0)
    {
        return;
    }
    gsel(8);
    gmode(0);
    pos(0, msgline % inf_maxlog * inf_msgspace);
    gcopy(
        0,
        inf_msgx,
        inf_msgy + 5 + inf_msgspace * 3 + en * 3,
        windoww - inf_msgx,
        inf_msgspace);
    gsel(0);
    return;
}
void msg_newline()
{
    msg_newlog();
    msglen = 0;
    ++msgline;
    if (msgline >= inf_maxlog)
    {
        msgline -= inf_maxlog;
    }
    msg(msgline % inf_maxlog) = "";
    p_at_txtfunc = (windoww - inf_msgx) / 192;
    redraw(0);
    gmode(0);
    pos(inf_msgx, inf_msgy + 5);
    gcopy(
        0,
        inf_msgx,
        inf_msgy + 5 + inf_msgspace,
        windoww - inf_msgx,
        inf_msgspace * 3 + en * 3);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p_at_txtfunc + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt == p_at_txtfunc)
            {
                x_at_txtfunc = (windoww - inf_msgx) % 192;
            }
            else
            {
                x_at_txtfunc = 192;
            }
            pos(cnt * 192 + inf_msgx, inf_msgy + 5 + inf_msgspace * 3 + en * 2);
            gcopy(
                3,
                496,
                536 + msgline % 4 * inf_msgspace,
                x_at_txtfunc,
                inf_msgspace);
        }
    }
    gmode(2);
    msgtempprev = "";
    return;
}
void txtnew()
{
    if (tnew == 0)
    {
        if (strlen_u(msg(msgline % inf_maxlog)) > 4)
        {
            msg_newline();
            msglen = 2;
        }
    }
    return;
}
void msg_clear()
{
    msg_len = 0;
    msgtemp = "";
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            msg_newline();
        }
    }
    return;
}
void txt_conv()
{
    int len_at_txtfunc = 0;
    int p2_at_txtfunc = 0;
    std::string m_at_txtfunc;
    int b_at_txtfunc = 0;
    std::string mst_at_txtfunc;
    redraw(0);
    if (msgtemp == ""s)
    {
        return;
    }
    if (tcopy)
    {
        tcopy = 0;
        txtcopy = ""s + msgtemp;
    }
    if (tnew == 1)
    {
        if (msg(msgline % inf_maxlog) != ""s)
        {
            if (cfg_msgtrans)
            {
                p_at_txtfunc = (windoww - inf_msgx) / 192;
                redraw(0);
                gmode(4 - 1, -1, cfg_msgtrans * 20);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (p_at_txtfunc + 1); cnt < cnt_end;
                         ++cnt)
                    {
                        if (cnt == p_at_txtfunc)
                        {
                            x_at_txtfunc = (windoww - inf_msgx) % 192;
                        }
                        else
                        {
                            x_at_txtfunc = 192;
                        }
                        pos(cnt * 192 + inf_msgx, inf_msgy + 5);
                        gcopy(3, 496, 536, x_at_txtfunc, inf_msgspace * 4);
                    }
                }
            }
            msg_newline();
            tnew = 0;
            if (cfg_msgaddtime)
            {
                msgtemp = u8"["s + gdata(14) + u8"] "s + msgtemp;
            }
            else
            {
                msglen = 2;
            }
        }
    }
    if (msgdup != 0)
    {
        if (msgtempprev == msgtemp)
        {
            return;
        }
        msgtempprev = msgtemp;
        msgdup = 0;
    }
    if (jp)
    {
        if (instr(msgtemp, 0, u8"「"s) != -1)
        {
            if (tcolfix_at_txtfunc == 0)
            {
                tcol_at_txtfunc(0) = 210;
                tcol_at_txtfunc(1) = 250;
                tcol_at_txtfunc(2) = 160;
            }
            else
            {
                tcolfix_at_txtfunc = 0;
            }
        }
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                len_at_txtfunc = strlen(msgtemp);
                if (msglen + 4 > inf_maxmsglen)
                {
                    if (msgtemp != ""s)
                    {
                        msg_newline();
                    }
                }
                if (msglen + len_at_txtfunc > inf_maxmsglen)
                {
                    p2_at_txtfunc = 0;
                    {
                        int cnt = 0;
                        for (;; ++cnt)
                        {
                            p_at_txtfunc = peek(msgtemp, p2_at_txtfunc);
                            ++p2_at_txtfunc;
                            if (p_at_txtfunc > 128 && p_at_txtfunc < 160)
                            {
                                ++p2_at_txtfunc;
                            }
                            if (p_at_txtfunc > 223 && p_at_txtfunc < 253)
                            {
                                ++p2_at_txtfunc;
                            }
                            if (p2_at_txtfunc + msglen > inf_maxmsglen)
                            {
                                if (p2_at_txtfunc + msglen > inf_maxmsglen + 2)
                                {
                                    break;
                                }
                                m_at_txtfunc =
                                    strmid(msgtemp, p2_at_txtfunc, 2);
                                if (m_at_txtfunc != u8"。"s
                                    && m_at_txtfunc != u8"、"s
                                    && m_at_txtfunc != u8"」"s
                                    && m_at_txtfunc != u8"』"s
                                    && m_at_txtfunc != u8"！"s
                                    && m_at_txtfunc != u8"？"s
                                    && m_at_txtfunc != u8"…"s)
                                {
                                    break;
                                }
                            }
                        }
                    }
                    m_at_txtfunc = strmid(msgtemp, 0, p2_at_txtfunc);
                    msg(msgline % inf_maxlog) += m_at_txtfunc;
                    msg_write(m_at_txtfunc);
                    msgtemp = strmid(
                        msgtemp, p2_at_txtfunc, len_at_txtfunc - p2_at_txtfunc);
                    if (msgtemp == ""s || msgtemp == u8" "s)
                    {
                        break;
                    }
                    msg_newline();
                    continue;
                }
                break;
            }
        }
        msg(msgline % inf_maxlog) += msgtemp;
        msg_write(msgtemp);
        msglen += len_at_txtfunc;
    }
    else
    {
        if (tcontinue_at_txtfunc == 0)
        {
            b_at_txtfunc = peek(msgtemp, 0);
            if (instr(msgtemp, 0, u8"\""s) != -1)
            {
                if (tcolfix_at_txtfunc == 0)
                {
                    tcol_at_txtfunc(0) = 210;
                    tcol_at_txtfunc(1) = 250;
                    tcol_at_txtfunc(2) = 160;
                }
                else
                {
                    tcolfix_at_txtfunc = 0;
                }
            }
            if (b_at_txtfunc >= 97 && b_at_txtfunc <= 122)
            {
                poke(msgtemp, 0, b_at_txtfunc - 32);
            }
        }
        else
        {
            tcontinue_at_txtfunc = 0;
        }
        msgtemp += u8" "s;
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                await();
                p_at_txtfunc = instr(msgtemp, 0, u8" "s) + 1;
                if (p_at_txtfunc == 0)
                {
                    break;
                }
                if (msglen + p_at_txtfunc > inf_maxmsglen)
                {
                    msg_newline();
                    continue;
                }
                mst_at_txtfunc = strmid(msgtemp, 0, p_at_txtfunc);
                msg(msgline % inf_maxlog) += mst_at_txtfunc;
                msg_write(mst_at_txtfunc);
                msglen += p_at_txtfunc;
                msgtemp = strmid(
                    msgtemp, p_at_txtfunc, strlen(msgtemp) - p_at_txtfunc);
            }
        }
        msg(msgline % inf_maxlog) += msgtemp;
        msg_write(msgtemp);
        msglen += strlen(msgtemp);
    }
    return;
}
std::string name(int prm_309)
{
    std::string s_at_m23;
    if (prm_309 == 0)
    {
        return lang(u8"あなた"s, u8"you"s);
    }
    if (synccheck(prm_309, -1) == 0)
    {
        return lang(u8"何か"s, u8"something"s);
    }
    if (cdata(253, 0) != 0
        || cbit(6, prm_309) == 1 && cbit(7, 0) == 0 && cdata(259, prm_309) == 0)
    {
        return lang(u8"何か"s, u8"something"s);
    }
    if (en)
    {
        s_at_m23 = strmid(cdatan(0, prm_309), 0, 1);
        if (s_at_m23 == u8"\""s || s_at_m23 == u8"<"s)
        {
            return cdatan(0, prm_309);
        }
        if (cbit(977, prm_309) == 0)
        {
            return u8"the "s + cdatan(0, prm_309);
        }
    }
    return cdatan(0, prm_309);
}
std::string aln(int prm_310)
{
    if (prm_310 == 0)
    {
        return "";
    }
    if (synccheck(prm_310, -1) == 0)
    {
        return u8"それは"s;
    }
    return ""s + cdatan(0, prm_310) + u8"は"s;
}
std::string npcn(int prm_311)
{
    if (prm_311 == 0)
    {
        return "";
    }
    if (synccheck(prm_311, -1) == 0)
    {
        return u8"それは"s;
    }
    return ""s + cdatan(0, prm_311) + u8"は"s;
}
std::string _s(int prm_312, int prm_313)
{
    if (prm_312 < 0 || prm_312 >= 245)
    {
        if (prm_313)
        {
            return u8"es"s;
        }
        else
        {
            return u8"s"s;
        }
    }
    if (prm_312 == 0)
    {
        return "";
    }
    if (prm_313)
    {
        return u8"es"s;
    }
    else
    {
        return u8"s"s;
    }
}
std::string _s2(int prm_314)
{
    if (prm_314 > 1)
    {
        return "";
    }
    else
    {
        return u8"s"s;
    }
}
std::string is2(int prm_315)
{
    if (prm_315 > 1)
    {
        return u8"are"s;
    }
    else
    {
        return u8"is"s;
    }
}
std::string is(int prm_316)
{
    if (prm_316 < 0 || prm_316 >= 245)
    {
        return u8"is"s;
    }
    if (prm_316 == 0)
    {
        return u8"are"s;
    }
    return u8"is"s;
}
std::string have(int prm_318)
{
    if (prm_318 < 0 || prm_318 >= 245)
    {
        return u8"has"s;
    }
    if (prm_318 == 0)
    {
        return u8"have"s;
    }
    return u8"has"s;
}
std::string does(int prm_319)
{
    if (prm_319 == 1)
    {
        return u8"do"s;
    }
    else
    {
        return u8"does"s;
    }
}
std::string he(int prm_320, int prm_321)
{
    if (prm_321)
    {
        if (jp)
        {
            if (cdata(8, prm_320) == 0)
            {
                return u8"彼"s;
            }
            else
            {
                return u8"彼女"s;
            }
        }
        if (cdata(8, prm_320) == 0)
        {
            return u8"he"s;
        }
        else
        {
            return u8"she"s;
        }
    }
    if (prm_320 < 0 || prm_320 >= 245)
    {
        return u8"it"s;
    }
    if (synccheck(prm_320, -1) == 0)
    {
        return u8"it"s;
    }
    if (prm_320 == 0)
    {
        return u8"you"s;
    }
    if (cdata(8, prm_320) == 0)
    {
        return u8"he"s;
    }
    return u8"she"s;
}
std::string his(int prm_322, int prm_323)
{
    if (prm_323)
    {
        if (jp)
        {
            if (prm_322 == 0)
            {
                return u8"あなたの"s;
            }
            else
            {
                if (cdata(8, prm_322) == 0)
                {
                    return u8"彼の"s;
                }
                else
                {
                    return u8"彼女の"s;
                }
            }
        }
        if (prm_322 == 0)
        {
            return u8"your"s;
        }
        else
        {
            if (cdata(8, prm_322) == 0)
            {
                return u8"his"s;
            }
            else
            {
                return u8"her"s;
            }
        }
    }
    if (prm_322 < 0 || prm_322 >= 245)
    {
        return u8"its"s;
    }
    if (synccheck(prm_322, -1) == 0)
    {
        return u8"its"s;
    }
    if (prm_322 == 0)
    {
        return u8"your"s;
    }
    if (cdata(8, prm_322) == 0)
    {
        return u8"his"s;
    }
    return u8"her"s;
}
std::string him(int prm_324, int prm_325)
{
    if (prm_325)
    {
        if (jp)
        {
            if (cdata(8, prm_324) == 0)
            {
                return u8"彼"s;
            }
            else
            {
                return u8"彼女"s;
            }
        }
        if (cdata(8, prm_324) == 0)
        {
            return u8"him"s;
        }
        else
        {
            return u8"her"s;
        }
    }
    if (prm_324 < 0 || prm_324 >= 245)
    {
        return u8"it"s;
    }
    if (synccheck(prm_324, -1) == 0)
    {
        return u8"it"s;
    }
    if (prm_324 == 0)
    {
        return u8"yourself"s;
    }
    if (cdata(8, prm_324) == 0)
    {
        return u8"him"s;
    }
    return u8"her"s;
}
std::string your(int prm_326, int)
{
    if (prm_326 < 0 || prm_326 >= 245)
    {
        return u8"'s"s;
    }
    if (prm_326 == 0)
    {
        return u8"r"s;
    }
    return u8"'s"s;
}
std::string yourself(int prm_328)
{
    if (prm_328 < 0 || prm_328 >= 245)
    {
        return u8"itself"s;
    }
    if (synccheck(prm_328, -1) == 0)
    {
        return u8"itself"s;
    }
    if (prm_328 == 0)
    {
        return u8"yourself"s;
    }
    if (cdata(8, prm_328) == 0)
    {
        return u8"himself"s;
    }
    return u8"herself"s;
}
void txt_check(int prm_329)
{
    txtvalid = -1;
    if (prm_329 == 0)
    {
        if (cc >= 0)
        {
            if (synccheck(cc, -1) || cc == 0)
            {
                txtvalid = 0;
                return;
            }
        }
    }
    if (prm_329 == 1)
    {
        if (tc >= 0)
        {
            if (synccheck(tc, -1) || tc == 0)
            {
                txtvalid = 0;
                return;
            }
        }
    }
    if (prm_329 == 2)
    {
        if (cc == 0 || cdata(9, cc) == 10)
        {
            txtvalid = 0;
            return;
        }
    }
    if (prm_329 == 3)
    {
        if (cc > 0)
        {
            if (synccheck(cc, -1))
            {
                txtvalid = 0;
                return;
            }
        }
    }
    if (prm_329 == 4)
    {
        if (tc == 0)
        {
            txtvalid = 0;
            return;
        }
    }
    if (prm_329 == 5)
    {
        if (tc > 0)
        {
            if (synccheck(tc, -1))
            {
                txtvalid = 0;
            }
        }
    }
    return;
}
std::string cnvfix(int prm_339)
{
    if (prm_339 >= 0)
    {
        return u8"+"s + prm_339;
    }
    else
    {
        return ""s + prm_339;
    }
}
void stxt(int prm_340, const std::string& prm_341)
{
    if (prm_340 == 0 || synccheck(prm_340, -1) && cdata(253, 0) == 0)
    {
        txt(prm_341);
    }
    return;
}
std::string cnvdate(int prm_342, int prm_343)
{
    int p_at_m27 = 0;
    int hour_at_m27 = 0;
    int day_at_m27 = 0;
    int month_at_m27 = 0;
    int year_at_m27 = 0;
    std::string s_at_m27;
    p_at_m27 = prm_342;
    hour_at_m27 = prm_342 % 24;
    day_at_m27 = prm_342 / 24 % 30;
    if (day_at_m27 == 0)
    {
        day_at_m27 = 30;
        p_at_m27 -= 720;
    }
    month_at_m27 = p_at_m27 / 24 / 30 % 12;
    if (month_at_m27 == 0)
    {
        month_at_m27 = 12;
        p_at_m27 -= 8640;
    }
    year_at_m27 = p_at_m27 / 24 / 30 / 12;
    if (jp)
    {
        s_at_m27 = ""s + year_at_m27 + u8"年"s + month_at_m27 + u8"月"s
            + day_at_m27 + u8"日"s;
        if (prm_343 == 1)
        {
            s_at_m27 += ""s + hour_at_m27 + u8"時"s;
        }
    }
    else
    {
        s_at_m27 = ""s + year_at_m27 + u8" "s + month_at_m27 + u8"/"s
            + day_at_m27 + u8" "s;
        if (prm_343 == 1)
        {
            s_at_m27 += ""s + hour_at_m27 + u8"h"s;
        }
    }
    return s_at_m27;
}
std::string cnvplaytime(int prm_344)
{
    return ""s + prm_344 / 60 / 60 + lang(u8"時間"s, u8":"s) + prm_344 / 60 % 60
        + lang(u8"分"s, u8":"s) + prm_344 % 60 + lang(u8"秒"s, u8" Sec"s);
}
int roundmargin(int prm_345, int prm_346)
{
    if (prm_345 > prm_346)
    {
        stat = prm_345 - rnd((prm_345 - prm_346));
        return stat;
    }
    if (prm_345 < prm_346)
    {
        stat = prm_345 + rnd((prm_346 - prm_345));
        return stat;
    }
    stat = prm_345;
    return stat;
}
void at(int prm_347)
{
    if (cc == 0)
    {
        autoturn = 1;
        if (cfg_autoturn == 0)
        {
            await(prm_347);
            ++scrturn;
        }
        if (cfg_autoturn != 2 || firstautoturn == 1)
        {
            screenupdate = -1;
            label_1419();
        }
        if (cfg_autoturn == 0)
        {
            redraw(1);
        }
    }
    return;
}
void text_set()
{
    SDIM3(bodyn, 4, 15);
    bodyn(0) = "";
    bodyn(1) = u8"頭"s;
    bodyn(2) = u8"首"s;
    bodyn(3) = u8"背中"s;
    bodyn(4) = u8"胴体"s;
    bodyn(5) = u8"手"s;
    bodyn(6) = u8"指"s;
    bodyn(7) = u8"腕"s;
    bodyn(8) = u8"腰"s;
    bodyn(9) = u8"足"s;
    bodyn(10) = u8"遠隔"s;
    bodyn(11) = u8"矢弾"s;
    _impression(0) = lang(u8"天敵"s, u8"Foe"s);
    _impression(1) = lang(u8"嫌い"s, u8"Hate"s);
    _impression(2) = lang(u8"うざい"s, u8"Annoying"s);
    _impression(3) = lang(u8"普通"s, u8"Normal"s);
    _impression(4) = lang(u8"好意的"s, u8"Amiable"s);
    _impression(5) = lang(u8"友達"s, u8"Friend"s);
    _impression(6) = lang(u8"親友"s, u8"Fellow"s);
    _impression(7) = lang(u8"魂の友"s, u8"Soul Mate"s);
    _impression(8) = lang(u8" *Love*"s, u8" *Love*"s);
    if (jp)
    {
        _weather(0) = "";
        _weather(1) = u8"*エーテル*"s;
        _weather(2) = u8"雪"s;
        _weather(3) = u8"雨"s;
        _weather(4) = u8"雷雨"s;
    }
    if (en)
    {
        _weather(0) = "";
        _weather(1) = u8"Etherwind"s;
        _weather(2) = u8"Snow"s;
        _weather(3) = u8"Rain"s;
        _weather(4) = u8"Hard rain"s;
    }
    if (jp)
    {
        _homename(0) = u8"洞窟"s;
        _homename(1) = u8"森のほったて小屋"s;
        _homename(2) = u8"住み心地のいい家"s;
        _homename(3) = u8"セレブ邸"s;
        _homename(4) = u8"サイバーハウス"s;
        _homename(5) = u8"小城"s;
        _furniture(0) = "";
        _furniture(1) = u8"みすぼらしい"s;
        _furniture(2) = u8"気になる"s;
        _furniture(3) = u8"いい感じの"s;
        _furniture(4) = u8"マダム殺しの"s;
        _furniture(5) = u8"思わず見入りそうな"s;
        _furniture(6) = u8"マニア向けの"s;
        _furniture(7) = u8"凄く華麗な"s;
        _furniture(8) = u8"王家御用達の"s;
        _furniture(9) = u8"芸術的な"s;
        _furniture(10) = u8"神々しい"s;
        _furniture(11) = u8"世界最高の"s;
        _weight(0) = u8"超ミニに"s;
        _weight(1) = u8"小振りに"s;
        _weight(2) = u8"手ごろに"s;
        _weight(3) = u8"やや大きく"s;
        _weight(4) = u8"どでかく"s;
        _weight(5) = u8"かなり巨大に"s;
        _weight(6) = u8"化け物サイズに"s;
        _weight(7) = u8"人より大きく"s;
        _weight(8) = u8"伝説的サイズに"s;
        _weight(9) = u8"象より重く"s;
    }
    else
    {
        _homename(0) = u8"cave"s;
        _homename(1) = u8"shack"s;
        _homename(2) = u8"cozy house"s;
        _homename(3) = u8"estate"s;
        _homename(4) = u8"cyber house"s;
        _homename(5) = u8"small castle"s;
        _furniture(0) = "";
        _furniture(1) = u8"stupid"s;
        _furniture(2) = u8"lame"s;
        _furniture(3) = u8"cool"s;
        _furniture(4) = u8"madam's favorite"s;
        _furniture(5) = u8"bewitched"s;
        _furniture(6) = u8"maniac"s;
        _furniture(7) = u8"magnificent"s;
        _furniture(8) = u8"royal"s;
        _furniture(9) = u8"masterpiece"s;
        _furniture(10) = u8"heavenly"s;
        _furniture(11) = u8"godly"s;
        _weight(0) = u8"extremely mini"s;
        _weight(1) = u8"small"s;
        _weight(2) = u8"handy"s;
        _weight(3) = u8"rather big"s;
        _weight(4) = u8"huge"s;
        _weight(5) = u8"pretty huge"s;
        _weight(6) = u8"monstrous-size"s;
        _weight(7) = u8"bigger than a man"s;
        _weight(8) = u8"legendary-size"s;
        _weight(9) = u8"heavier than an elephant"s;
    }
    SDIM3(_tone, 20, 10);
    if (jp)
    {
        _reward(0) = "";
        _reward(1) = u8"装備品"s;
        _reward(2) = u8"魔道具"s;
        _reward(3) = u8"防具"s;
        _reward(4) = u8"武器"s;
        _reward(5) = u8"補給品"s;
    }
    if (en)
    {
        _reward(0) = "";
        _reward(1) = u8"equipment"s;
        _reward(2) = u8"magical goods"s;
        _reward(3) = u8"armor"s;
        _reward(4) = u8"weapons"s;
        _reward(5) = u8"ores"s;
        _reward(6) = u8"furnitures"s;
    }
    if (jp)
    {
        _time(0) = u8"深夜"s;
        _time(1) = u8"夜明け"s;
        _time(2) = u8"朝"s;
        _time(3) = u8"昼"s;
        _time(4) = u8"宵"s;
        _time(5) = u8"夜"s;
        _time(6) = "";
        _time(7) = "";
    }
    if (en)
    {
        _time(0) = u8"Midnight"s;
        _time(1) = u8"Dawn"s;
        _time(2) = u8"Morning"s;
        _time(3) = u8"Noon"s;
        _time(4) = u8"Dusk"s;
        _time(5) = u8"Night"s;
        _time(6) = "";
        _time(7) = "";
    }
    if (jp)
    {
        _stats(0) = u8" 力"s;
        _stats(1) = u8" 耐"s;
        _stats(2) = u8" 器"s;
        _stats(3) = u8" 感"s;
        _stats(4) = u8" 習"s;
        _stats(5) = u8" 意"s;
        _stats(6) = u8" 魔"s;
        _stats(7) = u8" 魅"s;
    }
    if (en)
    {
        _stats(0) = u8"STR"s;
        _stats(1) = u8"CON"s;
        _stats(2) = u8"DEX"s;
        _stats(3) = u8"PER"s;
        _stats(4) = u8"LER"s;
        _stats(5) = u8"WIL"s;
        _stats(6) = u8"MAG"s;
        _stats(7) = u8"CHR"s;
    }
    if (jp)
    {
        _stats2(0) = u8"筋力"s;
        _stats2(1) = u8"耐久"s;
        _stats2(2) = u8"器用"s;
        _stats2(3) = u8"感覚"s;
        _stats2(4) = u8"習得"s;
        _stats2(5) = u8"意思"s;
        _stats2(6) = u8"魔力"s;
        _stats2(7) = u8"魅力"s;
    }
    if (en)
    {
        _stats2(0) = u8" STR"s;
        _stats2(1) = u8" CON"s;
        _stats2(2) = u8" DEX"s;
        _stats2(3) = u8" PER"s;
        _stats2(4) = u8" LER"s;
        _stats2(5) = u8" WIL"s;
        _stats2(6) = u8" MAG"s;
        _stats2(7) = u8" CHR"s;
    }
    if (jp)
    {
        _hunger(0) = u8"餓死中"s;
        _hunger(1) = u8"飢餓"s;
        _hunger(2) = u8"空腹"s;
        _hunger(3) = u8"空腹"s;
        _hunger(4) = u8"空腹"s;
        _hunger(5) = "";
        _hunger(6) = "";
        _hunger(7) = "";
        _hunger(8) = "";
        _hunger(9) = "";
        _hunger(10) = u8"満腹"s;
        _hunger(11) = u8"満腹"s;
        _hunger(12) = u8"食過ぎ"s;
    }
    if (en)
    {
        _hunger(0) = u8"Starving!"s;
        _hunger(1) = u8"Starving"s;
        _hunger(2) = u8"Hungry!"s;
        _hunger(3) = u8"Hungry"s;
        _hunger(4) = u8"Hungry"s;
        _hunger(5) = "";
        _hunger(6) = "";
        _hunger(7) = "";
        _hunger(8) = "";
        _hunger(9) = "";
        _hunger(10) = u8"Satisfied"s;
        _hunger(11) = u8"Satisfied!"s;
        _hunger(12) = u8"Bloated"s;
    }
    if (jp)
    {
        _burden(0) = "";
        _burden(1) = u8"重荷"s;
        _burden(2) = u8"圧迫"s;
        _burden(3) = u8"超過"s;
        _burden(4) = u8"潰れ中"s;
    }
    if (en)
    {
        _burden(0) = "";
        _burden(1) = u8"Burden"s;
        _burden(2) = u8"Burden!"s;
        _burden(3) = u8"Overweight"s;
        _burden(4) = u8"Overweight!"s;
    }
    if (jp)
    {
        _sleep(0) = u8"睡眠可"s;
        _sleep(1) = u8"要睡眠"s;
        _sleep(2) = u8"要睡眠"s;
    }
    if (en)
    {
        _sleep(0) = u8"Sleepy"s;
        _sleep(1) = u8"Need Sleep"s;
        _sleep(2) = u8"Need Sleep!"s;
    }
    if (jp)
    {
        _consick(0) = u8"病気"s;
        _consick(1) = u8"重病"s;
    }
    if (en)
    {
        _consick(0) = u8"Sick"s;
        _consick(1) = u8"Very Sick"s;
    }
    if (jp)
    {
        _conpoison(0) = u8"毒"s;
        _conpoison(1) = u8"猛毒"s;
    }
    if (en)
    {
        _conpoison(0) = u8"Poisoned"s;
        _conpoison(1) = u8"Poisoned Bad!"s;
    }
    if (jp)
    {
        _condim(0) = u8"朦朧"s;
        _condim(1) = u8"混濁"s;
        _condim(2) = u8"気絶"s;
    }
    if (en)
    {
        _condim(0) = u8"Dim"s;
        _condim(1) = u8"Muddled"s;
        _condim(2) = u8"Unconscious"s;
    }
    if (jp)
    {
        _conangry(0) = u8"激怒"s;
        _conangry(1) = u8"狂乱"s;
    }
    if (en)
    {
        _conangry(0) = u8"Fury"s;
        _conangry(1) = u8"Berserk"s;
    }
    if (jp)
    {
        _conbleed(0) = u8"切り傷"s;
        _conbleed(1) = u8"出血"s;
        _conbleed(2) = u8"大出血"s;
    }
    if (en)
    {
        _conbleed(0) = u8"Bleeding"s;
        _conbleed(1) = u8"Bleeding!"s;
        _conbleed(2) = u8"Hemorrhage"s;
    }
    if (jp)
    {
        _coninsane(0) = u8"不安定"s;
        _coninsane(1) = u8"狂気"s;
        _coninsane(2) = u8"崩壊"s;
    }
    if (en)
    {
        _coninsane(0) = u8"Unsteady"s;
        _coninsane(1) = u8"Insane"s;
        _coninsane(2) = u8"Paranoia"s;
    }
    if (jp)
    {
        _condrunk = u8"酔払い"s;
    }
    if (en)
    {
        _condrunk = u8"Drunk"s;
    }
    if (jp)
    {
        _conwet = u8"濡れ"s;
    }
    if (en)
    {
        _conwet = u8"Wet"s;
    }
    if (jp)
    {
        _congravity = u8"重力"s;
    }
    if (en)
    {
        _congravity = u8"Gravity"s;
    }
    if (jp)
    {
        _consleep(0) = u8"睡眠"s;
        _consleep(1) = u8"爆睡"s;
    }
    if (en)
    {
        _consleep(0) = u8"Sleep"s;
        _consleep(1) = u8"Deep Sleep"s;
    }
    if (jp)
    {
        _conblind = u8"盲目"s;
    }
    if (en)
    {
        _conblind = u8"Blinded"s;
    }
    if (jp)
    {
        _conparalyze = u8"麻痺"s;
    }
    if (en)
    {
        _conparalyze = u8"Paralyzed"s;
    }
    if (jp)
    {
        _conmochi = u8"窒息"s;
    }
    if (en)
    {
        _conmochi = u8"Choked"s;
    }
    if (jp)
    {
        _conconfuse = u8"混乱"s;
    }
    if (en)
    {
        _conconfuse = u8"Confused"s;
    }
    if (jp)
    {
        _confear = u8"恐怖"s;
    }
    if (en)
    {
        _confear = u8"Fear"s;
    }
    if (jp)
    {
        _confatigue(0) = u8"軽疲労"s;
        _confatigue(1) = u8"疲労"s;
        _confatigue(2) = u8"過労"s;
    }
    if (en)
    {
        _confatigue(0) = u8"Tired"s;
        _confatigue(1) = u8"Very tired"s;
        _confatigue(2) = u8"VERY tired"s;
    }
    if (jp)
    {
        _quality(0) = "";
        _quality(1) = u8"粗悪"s;
        _quality(2) = u8"良質"s;
        _quality(3) = u8"高品質"s;
        _quality(4) = u8"奇跡"s;
        _quality(5) = u8"神器"s;
        _quality(6) = u8"特別"s;
    }
    if (en)
    {
        _quality(0) = "";
        _quality(1) = u8"bad"s;
        _quality(2) = u8"good"s;
        _quality(3) = u8"great"s;
        _quality(4) = u8"miracle"s;
        _quality(5) = u8"godly"s;
        _quality(6) = u8"special"s;
    }
    if (jp)
    {
        _resist(0) = u8"致命的な弱点"s;
        _resist(1) = u8"弱点"s;
        _resist(2) = u8"耐性なし"s;
        _resist(3) = u8"弱い耐性"s;
        _resist(4) = u8"普通の耐性"s;
        _resist(5) = u8"強い耐性"s;
        _resist(6) = u8"素晴らしい耐性"s;
    }
    if (en)
    {
        _resist(0) = u8"Criticaly Weak"s;
        _resist(1) = u8"Weak"s;
        _resist(2) = u8"No Resist"s;
        _resist(3) = u8"Little"s;
        _resist(4) = u8"Normal"s;
        _resist(5) = u8"Strong"s;
        _resist(6) = u8"Superb"s;
    }
    if (jp)
    {
        _mark(0) = u8"。"s;
        _mark(1) = u8"？"s;
        _mark(2) = u8"！"s;
        _mark(3) = "";
    }
    if (en)
    {
        _mark(0) = u8"."s;
        _mark(1) = u8"?"s;
        _mark(2) = u8"!"s;
        _mark(3) = "";
    }
    if (jp)
    {
        _sex(0) = u8"男"s;
        _sex(1) = u8"女"s;
    }
    if (en)
    {
        _sex(0) = u8"Male"s;
        _sex(1) = u8"Female"s;
    }
    if (jp)
    {
        _sex2(0) = u8"男"s;
        _sex2(1) = u8"女"s;
    }
    if (en)
    {
        _sex2(0) = u8"boy"s;
        _sex2(1) = u8"girl"s;
    }
    if (jp)
    {
        _onii(0) = u8"お兄"s;
        _onii(1) = u8"お姉"s;
    }
    if (jp)
    {
        _syujin(0) = u8"ご主人様"s;
        _syujin(1) = u8"お嬢様"s;
    }
    if (jp)
    {
        strhint1 = u8"ｶｰｿﾙ [選択]  "s;
        strhint2 =
            ""s + key_pageup + u8","s + key_pagedown + u8" [ページ切替]  "s;
        strhint3 = u8"Shift,Esc [閉じる]  "s;
        strhint3b = u8"Shift,Esc [戻る]  "s;
        strhint4 = u8"決定、"s;
        strhint5 = ""s + key_identify + u8" [既知の情報]  "s;
        strhint5b = ""s + key_mode + u8" [情報切替]  "s;
        strhint6 = u8"p [ポートレイト変更]  "s;
        strhint7 = u8"0〜9 [ショートカット]  "s;
        strmale = u8"男性"s;
        strfemale = u8"女性"s;
        strbye = u8"さようなら"s;
        strmore = u8"(続く)"s;
        strnogold = u8"(所持金が足りない！)"s;
        strinteractfail = u8"その方向には、操作できる対象はない。"s;
        invtitle(0) = "";
        invtitle(1) = u8"調べる"s;
        invtitle(2) = u8"置く"s;
        invtitle(3) = u8"拾う"s;
        invtitle(4) = "";
        invtitle(5) = u8"食べる"s;
        invtitle(6) = u8"装備する"s;
        invtitle(7) = u8"読む"s;
        invtitle(8) = u8"飲む"s;
        invtitle(9) = u8"振る"s;
        invtitle(10) = u8"渡す"s;
        invtitle(11) = u8"購入する"s;
        invtitle(12) = u8"売却する"s;
        invtitle(13) = u8"鑑定する"s;
        invtitle(14) = u8"使う"s;
        invtitle(15) = u8"開く"s;
        invtitle(16) = u8"料理する"s;
        invtitle(17) = u8"調合"s;
        invtitle(18) = u8"混ぜる対象"s;
        invtitle(19) = u8"捧げる"s;
        invtitle(20) = u8"交換する"s;
        invtitle(21) = u8"提示する"s;
        invtitle(22) = u8"取る"s;
        invtitle(23) = u8"対象の"s;
        invtitle(24) = u8"入れる"s;
        invtitle(25) = u8"もらう"s;
        invtitle(26) = u8"投げる"s;
        invtitle(27) = u8"盗む"s;
        invtitle(28) = u8"交換する"s;
        invtitle(29) = u8"予約する"s;
        bodyn(0) = "";
        bodyn(1) = u8"頭"s;
        bodyn(2) = u8"首"s;
        bodyn(3) = u8"背中"s;
        bodyn(4) = u8"胴体"s;
        bodyn(5) = u8"手"s;
        bodyn(6) = u8"指"s;
        bodyn(7) = u8"腕"s;
        bodyn(8) = u8"腰"s;
        bodyn(9) = u8"足"s;
        bodyn(10) = u8"遠隔"s;
        bodyn(11) = u8"矢弾"s;
        actlistn(0) = u8"行動"s;
        actlistn(1) = u8"食事"s;
        actlistn(2) = u8"読書"s;
        actlistn(3) = u8"移動"s;
        actlistn(4) = u8"休息"s;
        actlistn(5) = u8"採掘"s;
        actlistn(6) = u8"演奏"s;
        actlistn(7) = u8"釣り"s;
        actlistn(8) = u8"採取"s;
        actlistn(9) = u8"探索"s;
        actlistn(10) = u8"行動"s;
        actlistn(11) = u8"行動"s;
        actlistn(12) = u8"行動"s;
        actlistn(13) = u8"行動"s;
    }
    else
    {
        strhint1 = u8"Cursor [Select]  "s;
        strhint2 = ""s + key_pageup + u8","s + key_pagedown + u8" [Page]  "s;
        strhint3 = u8"Shift,Esc [Close]  "s;
        strhint3b = u8"Shift,Esc [Back]  "s;
        strhint4 = u8"Enter,"s;
        strhint5 = ""s + key_identify + u8" [Known info]  "s;
        strhint5b = ""s + key_mode + u8" [Mode]  "s;
        strhint6 = u8"p [Portrait]  "s;
        strhint7 = u8"0~9 [Shortcut]  "s;
        strmale = u8"male"s;
        strfemale = u8"female"s;
        strbye = u8"Bye bye."s;
        strmore = u8"(More)"s;
        strnogold = u8"(You don't have enough money!)"s;
        strinteractfail = u8"There's no valid target in that direction."s;
        invtitle(0) = "";
        invtitle(1) = u8"Examine"s;
        invtitle(2) = u8"Drop"s;
        invtitle(3) = u8"Pick Up"s;
        invtitle(4) = "";
        invtitle(5) = u8"Eat"s;
        invtitle(6) = u8"Wear"s;
        invtitle(7) = u8"Read"s;
        invtitle(8) = u8"Drink"s;
        invtitle(9) = u8"Zap"s;
        invtitle(10) = u8"Give"s;
        invtitle(11) = u8"Buy"s;
        invtitle(12) = u8"Sell"s;
        invtitle(13) = u8"Identify"s;
        invtitle(14) = u8"Use"s;
        invtitle(15) = u8"Open"s;
        invtitle(16) = u8"Cook"s;
        invtitle(17) = u8"Mix"s;
        invtitle(18) = u8"Mix Target"s;
        invtitle(19) = u8"Offer"s;
        invtitle(20) = u8"Trade"s;
        invtitle(21) = u8"Present"s;
        invtitle(22) = u8"Take"s;
        invtitle(23) = u8"Target"s;
        invtitle(24) = u8"Put"s;
        invtitle(25) = u8"Take"s;
        invtitle(26) = u8"Throw"s;
        invtitle(27) = u8"Pickpocket"s;
        invtitle(28) = u8"Trade"s;
        invtitle(29) = u8"Reserve"s;
        bodyn(0) = "";
        bodyn(1) = u8"Head"s;
        bodyn(2) = u8"Neck"s;
        bodyn(3) = u8"Back"s;
        bodyn(4) = u8"Body"s;
        bodyn(5) = u8"Hand"s;
        bodyn(6) = u8"Ring"s;
        bodyn(7) = u8"Arm"s;
        bodyn(8) = u8"Waist"s;
        bodyn(9) = u8"Leg"s;
        bodyn(10) = u8"Shoot"s;
        bodyn(11) = u8"Ammo"s;
        actlistn(0) = u8"current action"s;
        actlistn(1) = u8"eating"s;
        actlistn(2) = u8"reading"s;
        actlistn(3) = u8"moving"s;
        actlistn(4) = u8"resting"s;
        actlistn(5) = u8"mining"s;
        actlistn(6) = u8"playing"s;
        actlistn(7) = u8"fishing"s;
        actlistn(8) = u8"collecting materials"s;
        actlistn(9) = u8"searching"s;
        actlistn(10) = u8"current action"s;
        actlistn(11) = u8"current action"s;
        actlistn(12) = u8"current action"s;
        actlistn(13) = u8"current action"s;
    }
    SDIM3(_cast, 30, 7);
    _cast(0) = lang(u8"魔法を詠唱した。"s, u8" casts a spell."s);
    _cast(1) = lang(u8"糸を吐いた。"s, u8" splits cobweb."s);
    _cast(2) = lang(u8"体液をまき散らした。"s, u8" spreads body fluid."s);
    _cast(3) = lang(u8"触手を伸ばした。"s, u8" puts out a tentacle."s);
    _cast(4) = lang(u8"鋭く睨んだ。"s, u8" gazes."s);
    _cast(5) = lang(u8"胞子を飛ばした。"s, u8" scatters spores."s);
    _cast(6) = lang(u8"細かく振動した。"s, u8" vibrates."s);
    SDIM4(_melee, 20, 3, 8);
    if (jp)
    {
        _melee(0, 0) = u8"殴って"s;
        _melee(1, 0) = u8"殴られた。"s;
        _melee(2, 0) = u8"手"s;
    }
    if (en)
    {
        _melee(0, 0) = u8"punch"s;
        _melee(1, 0) = u8"punch"s;
        _melee(2, 0) = u8"hand"s;
    }
    if (jp)
    {
        _melee(0, 3) = u8"噛み付いて"s;
        _melee(1, 3) = u8"噛み付かれた。"s;
        _melee(2, 3) = u8"牙"s;
    }
    if (en)
    {
        _melee(0, 3) = u8"bite"s;
        _melee(1, 3) = u8"bite"s;
        _melee(2, 3) = u8"fang"s;
    }
    if (jp)
    {
        _melee(0, 4) = u8"睨んで"s;
        _melee(1, 4) = u8"睨まれた。"s;
        _melee(2, 4) = u8"眼"s;
    }
    if (en)
    {
        _melee(0, 4) = u8"gaze"s;
        _melee(1, 4) = u8"gaze"s;
        _melee(2, 4) = u8"eye"s;
    }
    if (jp)
    {
        _melee(0, 1) = u8"引っ掻き"s;
        _melee(1, 1) = u8"引っ掻かれた。"s;
        _melee(2, 1) = u8"爪"s;
    }
    if (en)
    {
        _melee(0, 1) = u8"claw"s;
        _melee(1, 1) = u8"claw"s;
        _melee(2, 1) = u8"claw"s;
    }
    if (jp)
    {
        _melee(0, 5) = u8"刺し"s;
        _melee(1, 5) = u8"刺された。"s;
        _melee(2, 5) = u8"針"s;
    }
    if (en)
    {
        _melee(0, 5) = u8"sting"s;
        _melee(1, 5) = u8"sting"s;
        _melee(2, 5) = u8"needle"s;
    }
    if (jp)
    {
        _melee(0, 6) = u8"触って"s;
        _melee(1, 6) = u8"触られた。"s;
        _melee(2, 6) = u8"手"s;
    }
    if (en)
    {
        _melee(0, 6) = u8"touch"s;
        _melee(1, 6) = u8"touch"s;
        _melee(2, 6) = u8"hand"s;
    }
    if (jp)
    {
        _melee(0, 7) = u8"胞子を撒き散らし"s;
        _melee(1, 7) = u8"胞子を飛ばされた。"s;
        _melee(2, 7) = u8"胞子"s;
    }
    if (en)
    {
        _melee(0, 7) = u8"attack"s;
        _melee(1, 7) = u8"attack"s;
        _melee(2, 7) = u8"spore"s;
    }
    randcolor(0) = 0;
    randcolor(1) = 4;
    randcolor(2) = 2;
    randcolor(3) = 5;
    randcolor(4) = 6;
    _randcolor(0) = 0;
    _randcolor(1) = 2;
    _randcolor(2) = 4;
    _randcolor(3) = 5;
    _randcolor(4) = 6;
    _randcolor(5) = 3;
    if (jp)
    {
        _namepotion(0) = u8"透明な"s;
        _namepotion(1) = u8"緑色の"s;
        _namepotion(2) = u8"青い"s;
        _namepotion(3) = u8"金色の"s;
        _namepotion(4) = u8"茶色い"s;
        _namepotion(5) = u8"赤い"s;
    }
    if (en)
    {
        _namepotion(0) = u8"clear"s;
        _namepotion(1) = u8"green"s;
        _namepotion(2) = u8"blue"s;
        _namepotion(3) = u8"gold"s;
        _namepotion(4) = u8"brown"s;
        _namepotion(5) = u8"red"s;
    }
    if (jp)
    {
        _namespellbook(0) = u8"分厚い"s;
        _namespellbook(1) = u8"苔むした"s;
        _namespellbook(2) = u8"真新しい"s;
        _namespellbook(3) = u8"豪華な"s;
        _namespellbook(4) = u8"古びた"s;
        _namespellbook(5) = u8"血の滴る"s;
    }
    if (en)
    {
        _namespellbook(0) = u8"thick"s;
        _namespellbook(1) = u8"mossy"s;
        _namespellbook(2) = u8"clear"s;
        _namespellbook(3) = u8"luxurious"s;
        _namespellbook(4) = u8"old"s;
        _namespellbook(5) = u8"bloody"s;
    }
    if (jp)
    {
        _namescroll(0) = u8"かすれた"s;
        _namescroll(1) = u8"苔むした"s;
        _namescroll(2) = u8"ぼろぼろの"s;
        _namescroll(3) = u8"難しそうな"s;
        _namescroll(4) = u8"古びた"s;
        _namescroll(5) = u8"血文字の"s;
    }
    if (en)
    {
        _namescroll(0) = u8"blurred"s;
        _namescroll(1) = u8"mossy"s;
        _namescroll(2) = u8"ragged"s;
        _namescroll(3) = u8"boring"s;
        _namescroll(4) = u8"old"s;
        _namescroll(5) = u8"bloody"s;
    }
    if (jp)
    {
        _namestaff(0) = u8"鉄の"s;
        _namestaff(1) = u8"つたの"s;
        _namestaff(2) = u8"サファイアの"s;
        _namestaff(3) = u8"金の"s;
        _namestaff(4) = u8"木の"s;
        _namestaff(5) = u8"錆の"s;
    }
    if (en)
    {
        _namestaff(0) = u8"iron"s;
        _namestaff(1) = u8"ivy"s;
        _namestaff(2) = u8"sapphire"s;
        _namestaff(3) = u8"golden"s;
        _namestaff(4) = u8"wooden"s;
        _namestaff(5) = u8"rusty"s;
    }
    if (jp)
    {
        _namering(0) = u8"鉄の"s;
        _namering(1) = u8"緑の"s;
        _namering(2) = u8"サファイアの"s;
        _namering(3) = u8"金の"s;
        _namering(4) = u8"木の"s;
        _namering(5) = u8"錆びた"s;
    }
    if (en)
    {
        _namering(0) = u8"iron"s;
        _namering(1) = u8"green"s;
        _namering(2) = u8"sapphire"s;
        _namering(3) = u8"golden"s;
        _namering(4) = u8"wooden"s;
        _namering(5) = u8"rusty"s;
    }
    if (jp)
    {
        homepage = u8"http://homepage3.nifty.com/rfish/index.html"s;
    }
    if (en)
    {
        homepage = u8"http://homepage3.nifty.com/rfish/index_e.html"s;
    }
    if (jp)
    {
        strcursed = u8"呪われた"s;
    }
    else
    {
        strcursed = u8"cursed"s;
    }
    if (jp)
    {
        strblessed = u8"祝福された"s;
    }
    else
    {
        strblessed = u8"blessed"s;
    }
    if (jp)
    {
        stramulet = u8"首飾り"s;
    }
    else
    {
        stramulet = u8"amulet"s;
    }
    if (jp)
    {
        strring = u8"指輪"s;
    }
    else
    {
        strring = u8"ring"s;
    }
    if (jp)
    {
        strpotion = u8"ポーション"s;
    }
    else
    {
        strpotion = u8"potion"s;
    }
    if (jp)
    {
        strspellbook = u8"魔法書"s;
    }
    else
    {
        strspellbook = u8"spellbook"s;
    }
    if (jp)
    {
        strscroll = u8"巻物"s;
    }
    else
    {
        strscroll = u8"scroll"s;
    }
    if (jp)
    {
        strstaff = u8"魔法棒"s;
    }
    else
    {
        strstaff = u8"rod"s;
    }
    if (jp)
    {
        strbracketleft = u8"『"s;
    }
    else
    {
        strbracketleft = u8"<"s;
    }
    if (jp)
    {
        strbracketright = u8"』"s;
    }
    else
    {
        strbracketright = u8">"s;
    }
    if (jp)
    {
        strfix = u8"修正"s;
    }
    else
    {
        strfix = u8"bonus"s;
    }
    if (jp)
    {
        strsex = u8"性別"s;
    }
    else
    {
        strsex = u8"sex"s;
    }
    if (jp)
    {
        strdoomed = u8"堕落した"s;
    }
    else
    {
        strdoomed = u8"doomed"s;
    }
    if (jp)
    {
        strgold = u8" gold"s;
    }
    else
    {
        strgold = u8" gold pieces"s;
    }
    if (jp)
    {
        strplat = u8" plat"s;
    }
    else
    {
        strplat = u8" platinum pieces"s;
    }
    if (jp)
    {
        strweight = u8"s"s;
    }
    else
    {
        strweight = u8"s"s;
    }
    if (jp)
    {
        stryes = u8"ああ"s;
    }
    else
    {
        stryes = u8"Yes"s;
    }
    if (jp)
    {
        strno = u8"いや…"s;
    }
    else
    {
        strno = u8"No.."s;
    }
    if (jp)
    {
        strblank = "";
    }
    else
    {
        strblank = u8" "s;
    }
    return;
}
std::string elename(int prm_348)
{
    if (efid == 614)
    {
        return lang(u8"飢えた"s, u8"starving"s);
    }
    if (efid == 613)
    {
        return lang(u8"腐った"s, u8"rotten"s);
    }
    if (efid == 617)
    {
        return lang(u8"恐ろしい"s, u8"fearful"s);
    }
    if (efid == 618)
    {
        return lang(u8"柔らかい"s, u8"silky"s);
    }
    if (prm_348 == 50)
    {
        return lang(u8"燃える"s, u8"burning"s);
    }
    if (prm_348 == 51)
    {
        return lang(u8"冷たい"s, u8"icy"s);
    }
    if (prm_348 == 52)
    {
        return lang(u8"放電する"s, u8"electric"s);
    }
    if (prm_348 == 54)
    {
        return lang(u8"霊的な"s, u8"psychic"s);
    }
    if (prm_348 == 58)
    {
        return lang(u8"痺れる"s, u8"numb"s);
    }
    if (prm_348 == 57)
    {
        return lang(u8"震える"s, u8"shivering"s);
    }
    if (prm_348 == 55)
    {
        return lang(u8"毒の"s, u8"poisonous"s);
    }
    if (prm_348 == 56)
    {
        return lang(u8"地獄の"s, u8"infernal"s);
    }
    if (prm_348 == 59)
    {
        return lang(u8"混沌の"s, u8"chaotic"s);
    }
    if (prm_348 == 53)
    {
        return lang(u8"暗黒の"s, u8"gloomy"s);
    }
    if (prm_348 == 61)
    {
        return lang(u8"出血の"s, u8"cut"s);
    }
    if (prm_348 == 62)
    {
        return lang(u8"エーテルの"s, u8"ether"s);
    }
    return u8"?"s;
}
void txttargetlevel()
{
    if (cdata(38, cc) * 20 < cdata(38, tc))
    {
        s = lang(
            u8"相手が巨人だとすれば、あなたは蟻のフン以下だ。"s,
            u8"If "s + he(tc)
                + u8" is a giant, you are less than a dropping of an ant."s);
        return;
    }
    if (cdata(38, cc) * 10 < cdata(38, tc))
    {
        s = lang(
            u8"絶対に勝てない相手だ。"s,
            cnven(he(tc)) + u8" can mince you with "s + his(tc)
                + u8" eyes closed."s);
        return;
    }
    if (cdata(38, cc) * 5 < cdata(38, tc))
    {
        s = lang(
            u8"確実に殺されるだろう。"s,
            u8"You will get killed, a hundred percent sure."s);
        return;
    }
    if (cdata(38, cc) * 3 < cdata(38, tc))
    {
        s = lang(
            u8"奇跡が起きなければ殺されるだろう。"s,
            u8"You will get killed unless miracles happen."s);
        return;
    }
    if (cdata(38, cc) * 2 < cdata(38, tc))
    {
        s = lang(
            u8"少なくとも、あなたの倍は強そうだ。"s,
            cnven(he(tc)) + u8" "s + is(tc)
                + u8" at least twice stronger than you."s);
        return;
    }
    if (cdata(38, cc) * 3 / 2 < cdata(38, tc))
    {
        s = lang(
            u8"相手はかなり強そうだ。"s, u8"The opponent looks quite strong."s);
        return;
    }
    if (cdata(38, cc) < cdata(38, tc))
    {
        s = lang(u8"勝てない相手ではない。"s, u8"Won't be an easy fight."s);
        return;
    }
    if (cdata(38, cc) / 3 * 2 < cdata(38, tc))
    {
        s = lang(u8"たぶん勝てそうだ。"s, u8"You will probably win."s);
        return;
    }
    if (cdata(38, cc) / 2 < cdata(38, tc))
    {
        s = lang(
            u8"負ける気はしない。"s,
            cnven(he(tc)) + u8" "s + is(tc) + u8" a easy opponent."s);
        return;
    }
    if (cdata(38, cc) / 3 < cdata(38, tc))
    {
        s = lang(
            u8"目隠ししていても勝てそうだ。"s,
            u8"You bet you can beat "s + him(tc)
                + u8" with your eyes closed."s);
        return;
    }
    s = lang(
        u8"目隠しして座っていても勝てる。"s,
        u8"You can absolutely beat "s + him(tc)
            + u8" with your eyes closed and arms crossed."s);
    return;
}
std::string sncnv(std::string& prm_349)
{
    return strmid(prm_349, 0, instr(prm_349, 0, u8" "s)) + u8" "s;
}
void sngeneral(std::string& prm_350)
{
    prm_350 =
        lang(u8"雑貨屋の"s + prm_350, sncnv(prm_350) + u8"the general vendor"s);
    return;
}
void sninn(std::string& prm_351)
{
    prm_351 = lang(u8"宿屋の"s + prm_351, sncnv(prm_351) + u8"the Innkeeper"s);
    return;
}
void sntrade(std::string& prm_352)
{
    prm_352 = lang(u8"交易店の"s + prm_352, sncnv(prm_352) + u8"the trader"s);
    return;
}
void sngoods(std::string& prm_353)
{
    prm_353 =
        lang(u8"何でも屋の"s + prm_353, sncnv(prm_353) + u8"the goods vendor"s);
    return;
}
void snbakery(std::string& prm_354)
{
    prm_354 = lang(u8"パン屋の"s + prm_354, sncnv(prm_354) + u8"the baker"s);
    return;
}
void snmagic(std::string& prm_355)
{
    prm_355 =
        lang(u8"魔法店の"s + prm_355, sncnv(prm_355) + u8"the magic vendor"s);
    return;
}
void snarmor(std::string& prm_356)
{
    prm_356 =
        lang(u8"武具店の"s + prm_356, sncnv(prm_356) + u8"the blacksmith"s);
    return;
}
void sntrainer(std::string& prm_357)
{
    prm_357 = lang(u8"ギルドの"s + prm_357, sncnv(prm_357) + u8"the trainer"s);
    return;
}
void snfish(std::string& prm_358)
{
    prm_358 = lang(u8"釣具店の"s + prm_358, sncnv(prm_358) + u8"the fisher"s);
    return;
}
void snblack(std::string& prm_359)
{
    prm_359 = lang(
        u8"ブラックマーケットの"s + prm_359,
        sncnv(prm_359) + u8"the blackmarket vendor"s);
    return;
}
void snfood(std::string& prm_360)
{
    prm_360 =
        lang(u8"食品店"s + prm_360, sncnv(prm_360) + u8"the food vendor"s);
    return;
}
void txtsetlastword()
{
    notesel(buff);
    noteload(
        exedir + u8"user\\"s + lang(u8"lastwords.txt"s, u8"lastwords-e.txt"s));
    noteget(lastword, rnd(noteinfo(0) + 1));
    return;
}
void txtsetwinword(int prm_361)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
        {
            i = rnd(cnt + 1);
            p(cnt) = p(i);
            p(i) = cnt;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_361); cnt < cnt_end; ++cnt)
        {
            if (p(cnt) == 0)
            {
                s(cnt) = lang(u8"遂に…！"s, u8"Finally!"s);
            }
            if (p(cnt) == 1)
            {
                s(cnt) = lang(u8"当然の結果だ"s, u8"It's a matter of course."s);
            }
            if (p(cnt) == 2)
            {
                s(cnt) = lang(u8"おぉぉぉぉ！"s, u8"Woooooo!"s);
            }
            if (p(cnt) == 3)
            {
                s(cnt) = lang(u8"ふっ"s, u8"Heh."s);
            }
            if (p(cnt) == 4)
            {
                s(cnt) =
                    lang(u8"今日は眠れないな"s, u8"I can't sleep tonight."s);
            }
            if (p(cnt) == 5)
            {
                s(cnt) = lang(u8"またそんな冗談を"s, u8"You're kidding."s);
            }
        }
    }
    return;
}
int limitmax(int prm_362, int prm_363)
{
    if (prm_362 > prm_363)
    {
        stat = prm_363;
        return stat;
    }
    else
    {
        stat = prm_362;
        return stat;
    }
}
void label_0140()
{
    SDIM4(mapnamerd, 20, 2, 5);
    mapnamerd(0, 0) = lang(u8"はじまりの"s, u8"Beginner's "s);
    mapnamerd(1, 0) = lang(u8"安全な"s, u8"Safe "s);
    mapnamerd(0, 1) = lang(u8"冒険者の"s, u8"Adventurer's"s);
    mapnamerd(1, 1) = lang(u8"時めきの"s, u8"Exciting "s);
    mapnamerd(0, 2) = lang(u8"迷いの"s, u8"Dangerous "s);
    mapnamerd(1, 2) = lang(u8"勇者の"s, u8"Servant's "s);
    mapnamerd(0, 3) = lang(u8"死の"s, u8"Fearful "s);
    mapnamerd(1, 3) = lang(u8"闇の"s, u8"Shadow "s);
    mapnamerd(0, 4) = lang(u8"不帰の"s, u8"King's "s);
    mapnamerd(1, 4) = lang(u8"混沌の"s, u8"Chaotic "s);
    return;
}
std::string maplevel(int)
{
    if (gdata(20) == 7)
    {
        if (gdata(22) != 1)
        {
            if (gdata(22) > 0)
            {
                return u8"B."s + (gdata(22) - 1);
            }
            else
            {
                return u8"L."s + (gdata(22) - 2) * -1;
            }
        }
    }
    if (adata(0, gdata(20)) != 3)
    {
        if (adata(16, gdata(20)) == 3 || adata(16, gdata(20)) == 8
            || adata(16, gdata(20)) == 13
            || (mdata(6) >= 20 && mdata(6) <= 23) == 1)
        {
            return ""s + cnvrank((gdata(22) - adata(17, gdata(20)) + 1))
                + lang(u8"層"s, ""s);
        }
    }
    return "";
}
std::string mapfile(int prm_365)
{
    if (adata(16, prm_365) == 5)
    {
        return u8"vernis"s;
    }
    if (adata(16, prm_365) == 11)
    {
        return u8"kapul"s;
    }
    if (adata(16, prm_365) == 12)
    {
        return u8"yowyn"s;
    }
    if (adata(16, prm_365) == 14)
    {
        return u8"rogueden"s;
    }
    if (adata(16, prm_365) == 15)
    {
        return u8"palmia"s;
    }
    if (adata(16, prm_365) == 33)
    {
        return u8"noyel"s;
    }
    if (adata(16, prm_365) == 36)
    {
        return u8"lumiest"s;
    }
    return u8"vernis"s;
}
std::string mapname(int prm_366, int prm_367)
{
    s(0) = "";
    s(1) = "";
    if (adata(16, prm_366) == 4)
    {
        s = lang(u8"ノースティリス"s, u8"North Tyris"s);
    }
    if (adata(16, prm_366) == 5)
    {
        s(0) = lang(u8"ヴェルニース"s, u8"Vernis"s);
        s(1) = lang(
            u8"ヴェルニースの街が見える。辺りは活気に満ちている。"s,
            u8"You see Vernis. The mining town is full of liveliness."s);
    }
    if (adata(16, prm_366) == 11)
    {
        s(0) = lang(u8"ポート・カプール"s, u8"Port Kapul"s);
        s(1) = lang(
            u8"ポート・カプールが見える。港は船で賑わっている。"s,
            u8"You see Port Kapul. The port is crowded with merchants."s);
    }
    if (adata(16, prm_366) == 12)
    {
        s(0) = lang(u8"ヨウィン"s, u8"Yowyn"s);
        s(1) = lang(
            u8"ヨウィンの村が見える。懐かしい土の匂いがする。"s,
            u8"You see a small town, Yowyn. You remember fondly the smell of the soil."s);
    }
    if (adata(16, prm_366) == 14)
    {
        s(0) = lang(u8"ダルフィ"s, u8"Derphy"s);
        s(1) = lang(
            u8"ダルフィの街がある。何やら危険な香りがする。"s,
            u8"You see the infamous rogue's den Derphy."s);
    }
    if (adata(16, prm_366) == 15)
    {
        s(0) = lang(u8"パルミア"s, u8"Palmia"s);
        s(1) = lang(
            u8"パルミアの都がある。都は高い壁に囲われている。"s,
            u8"You see the great city of Palmia. Entire city is surrounded by tall wall."s);
    }
    if (adata(16, prm_366) == 16)
    {
        s = lang(u8"灼熱の塔"s, u8"the Tower of Fire"s);
    }
    if (adata(16, prm_366) == 17)
    {
        s = lang(u8"死者の洞窟"s, u8" the crypt of the damned "s);
    }
    if (adata(16, prm_366) == 18)
    {
        s = lang(u8"古城"s, u8"the Ancient Castle"s);
    }
    if (adata(16, prm_366) == 7)
    {
        s(0) = lang(u8"わが家"s, u8"Your Home"s);
        s(1) = lang(u8"あなたの家だ。"s, u8"It's your sweet home."s);
    }
    if (adata(16, prm_366) == 3)
    {
        s(0) = lang(u8"レシマス"s, u8"Lesimas"s);
        s(1) = lang(
            u8"レシマスの洞窟がある。運命の鼓動を感じる。"s,
            u8"You see the dungeon of Lesimas. The wheel of fortune starts to turn."s);
    }
    if (adata(16, prm_366) == 42)
    {
        s(0) = lang(u8"すくつ"s, u8"the Void"s);
        s(1) = lang(u8"なんだこの場所は…？"s, u8"What is this place?"s);
    }
    if (adata(16, prm_366) == 2)
    {
        s = lang(u8"野外"s, u8"Wilderness"s);
    }
    if (adata(16, prm_366) == 10)
    {
        s(0) = lang(u8"ルミエスト墓所"s, u8"the graveyard"s);
        s(1) = lang(
            u8"墓所が見える。辺りは静寂に包まれている…"s,
            u8"You see the graveyard of Lumiest. It's slient. Very silent."s);
    }
    if (adata(16, prm_366) == 6)
    {
        s = lang(u8"闘技場"s, u8"Arena"s);
    }
    if (adata(16, prm_366) == 19)
    {
        s = lang(u8"竜窟"s, u8"the Dragon's Nest"s);
    }
    if (adata(16, prm_366) == 20)
    {
        s(0) = lang(u8"神々の休戦地"s, u8"the Truce Ground"s);
        s(1) = lang(
            u8"寺院がある。神聖な雰囲気がする。"s,
            u8"You see old shrines. Sacred air surrounds the ground."s);
    }
    if (adata(16, prm_366) == 21)
    {
        s(0) = lang(u8"アクリ・テオラ"s, u8"Cyber Dome"s);
        s(1) = lang(
            u8"何やら奇妙な建物がある。"s,
            u8"You see a very strange building."s);
    }
    if (adata(16, prm_366) == 22)
    {
        s(0) = lang(u8"混沌の城《獣》"s, u8"Fort of Chaos <Beast>"s);
        s(1) = lang(
            u8"不気味な城がある。絶対に入ってはいけない予感がする。(危険度は666階相当)"s,
            u8"You see an unearthly fort. Your inner voice wanrs you to not go there. (Approximate danger level: 666) "s);
    }
    if (adata(16, prm_366) == 23)
    {
        s(0) = lang(u8"混沌の城《機甲》"s, u8"Fort of Chaos <Machine>"s);
        s(1) = lang(
            u8"不気味な城がある。絶対に入ってはいけない予感がする。(危険度は666階相当)"s,
            u8"You see an unearthly fort. Your inner voice wanrs you to not go there. (Approximate danger level: 666) "s);
    }
    if (adata(16, prm_366) == 24)
    {
        s(0) = lang(u8"混沌の城《奇形》"s, u8"Fort of Chaos <Collapsed>"s);
        s(1) = lang(
            u8"不気味な城がある。絶対に入ってはいけない予感がする。(危険度は666階相当)"s,
            u8"You see an unearthly fort. Your inner voice wanrs you to not go there. (Approximate danger level: 666) "s);
    }
    if (adata(16, prm_366) == 40)
    {
        s = lang(u8"コロシアム"s, u8"Pet Arena"s);
    }
    if (adata(16, prm_366) == 101)
    {
        s = lang(u8"博物館"s, u8"My Museum"s);
    }
    if (adata(16, prm_366) == 102)
    {
        s = lang(u8"店"s, u8"Shop"s);
    }
    if (adata(16, prm_366) == 103)
    {
        s = lang(u8"畑"s, u8"Crop"s);
    }
    if (adata(16, prm_366) == 104)
    {
        s = lang(u8"倉庫"s, u8"Storage House"s);
    }
    if (adata(16, prm_366) == 31)
    {
        s = lang(u8"牧場"s, u8"Ranch"s);
    }
    if (adata(16, prm_366) == 30)
    {
        s = lang(u8"シェルター"s, u8"Shelter"s);
    }
    if (adata(16, prm_366) == 32)
    {
        s = lang(u8"パルミア大使館"s, u8"the Embassy"s);
    }
    if (adata(16, prm_366) == 9)
    {
        s = lang(u8"実験場"s, u8"Test Ground"s);
    }
    if (adata(16, prm_366) == 33)
    {
        s(0) = lang(u8"ノイエル"s, u8"Noyel"s);
        s(1) = lang(
            u8"ノイエルの村がある。子供たちの笑い声が聞こえる。"s,
            u8"You see Noyel. The laughters of children travel from the playground."s);
    }
    if (adata(16, prm_366) == 34)
    {
        s = lang(u8"工房ミラル・ガロク"s, u8"Miral and Garok's Workshop"s);
    }
    if (adata(16, prm_366) == 35)
    {
        s = lang(u8"ハウスドーム"s, u8"Show House"s);
    }
    if (adata(16, prm_366) == 25)
    {
        s = lang(u8"ラーナ"s, u8"Larna"s);
    }
    if (adata(16, prm_366) == 26)
    {
        s = lang(u8"山道"s, u8"the Mountain Pass"s);
    }
    if (adata(16, prm_366) == 27)
    {
        s = lang(u8"子犬の洞窟"s, u8"the Puppy Cave"s);
    }
    if (adata(16, prm_366) == 28)
    {
        s = lang(u8"イークの洞窟"s, u8"the Yeek's Nest"s);
    }
    if (adata(16, prm_366) == 29)
    {
        s = lang(u8"妹の館"s, u8"the mansion of younger sister"s);
    }
    if (adata(16, prm_366) == 36)
    {
        s(0) = lang(u8"ルミエスト"s, u8"Lumiest"s);
        s(1) = lang(
            u8"ルミエストの都が見える。水のせせらぎが聴こえる。"s,
            u8"You see Lumiest. Murmuring of water pleasantly echos."s);
    }
    if (adata(16, prm_366) == 37)
    {
        s = lang(u8"ピラミッド"s, u8"the Pyramid"s);
    }
    if (adata(16, prm_366) == 38)
    {
        s = lang(u8"ﾐﾉﾀｳﾛｽの巣"s, u8"the Minotaur's Nest"s);
    }
    if (adata(16, prm_366) == 41)
    {
        s(0) = lang(u8"牢獄"s, u8"Jail"s);
        s(1) = lang(
            u8"収容所がある。入り口は固く閉ざされている。"s,
            u8"You see a prison. The entrance is strictly closed."s);
    }
    if (adata(16, prm_366) == 43)
    {
        s = lang(u8"ノースティリス南関所"s, u8"North Tyris south border"s);
    }
    if (adata(16, prm_366) == 44)
    {
        s = lang(u8"サウスティリス"s, u8"South Tyris"s);
    }
    if (adata(16, prm_366) == 45)
    {
        s = lang(u8"サウスティリス北関所"s, u8"South Tyris north border"s);
    }
    if (adata(16, prm_366) == 46)
    {
        s = lang(u8"煙とパイプ亭"s, u8"The smoke and pipe"s);
    }
    if (adata(16, prm_366) == 47)
    {
        s = lang(u8"テストワールド"s, u8"Test World"s);
    }
    if (adata(16, prm_366) == 48)
    {
        s = lang(u8"テストワールド北関所"s, u8"Test World north border"s);
    }
    if (adata(16, prm_366) == 13)
    {
        if (gdata(70) == 1001)
        {
            s = lang(u8"街近辺"s, u8"The outskirts"s);
        }
        if (gdata(70) == 1010 || gdata(70) == 1008)
        {
            s = lang(u8"市街地"s, u8"Urban area"s);
        }
    }
    if (adata(16, prm_366) == 8)
    {
        s = mapnamerd(
            adata(5, prm_366),
            limitmax(adata(17, prm_366) / 5, length2(mapnamerd) - 1));
        if (adata(0, prm_366) == 20)
        {
            s += lang(u8"洞窟"s, u8"Dungeon"s);
        }
        if (adata(0, prm_366) == 22)
        {
            s += lang(u8"森"s, u8"Forest"s);
        }
        if (adata(0, prm_366) == 21)
        {
            s += lang(u8"塔"s, u8"Tower"s);
        }
        if (adata(0, prm_366) == 23)
        {
            s += lang(u8"砦"s, u8"Fort"s);
        }
    }
    if (prm_367 == 1)
    {
        if (adata(16, prm_366) == 29)
        {
            return "";
        }
        if (s(1) != ""s)
        {
            return s(1);
        }
        if (adata(0, prm_366) >= 20)
        {
            return lang(
                s + u8"への入り口がある(入り口の危険度は"s + adata(17, prm_366)
                    + u8"階相当)。"s,
                u8"You see an entrance leading to "s + s
                    + u8".(Approximate danger level: "s + adata(17, prm_366)
                    + u8") "s);
        }
        return lang(s + u8"がある。"s, u8"You see "s + s + u8"."s);
    }
    return s;
}
std::string txtbuilding(int prm_368, int prm_369)
{
    int p_at_m32 = 0;
    std::string s_at_m32;
    p_at_m32 = bddata(0, prm_368, prm_369);
    s_at_m32 = lang(
        bdrefn(p_at_m32) + u8"がある。"s, u8"You see "s + bdrefn(p_at_m32));
    return s_at_m32;
}
std::string txtskillchange(int prm_370, int prm_371, int prm_372)
{
    if (prm_370 == 2)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は生命力の上昇を感じた。"s,
                name(prm_372) + your(prm_372) + u8" life force increases."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は生命力の衰えを感じた。"s,
                name(prm_372) + your(prm_372) + u8" life force decreases."s);
        }
    }
    if (prm_370 == 3)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"はマナの向上を感じた。"s,
                name(prm_372) + your(prm_372) + u8" mana increases."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"はマナの衰えを感じた。"s,
                name(prm_372) + your(prm_372) + u8" mana decreases."s);
        }
    }
    if (prm_370 == 10)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"はより強くなった。"s,
                name(prm_372) + your(prm_372) + u8" muscles feel stronger."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は少し贅肉が増えたような気がした。"s,
                name(prm_372) + your(prm_372) + u8" muscles soften."s);
        }
    }
    if (prm_370 == 11)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は我慢することの快感を知った。"s,
                name(prm_372) + u8" begin"s + _s(prm_372)
                    + u8" to feel good when being hit hard."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は我慢ができなくなった。"s,
                name(prm_372) + u8" lose"s + _s(prm_372) + u8" patience."s);
        }
    }
    if (prm_370 == 12)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は器用になった。"s,
                name(prm_372) + u8" become"s + _s(prm_372) + u8" dexterous."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は不器用になった。"s,
                name(prm_372) + u8" become"s + _s(prm_372) + u8" clumsy."s);
        }
    }
    if (prm_370 == 13)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は世界をより身近に感じるようになった。"s,
                name(prm_372) + u8" feel"s + _s(prm_372)
                    + u8" more in touch with the world."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は感覚のずれを感じた。"s,
                name(prm_372) + u8" "s + is(prm_372)
                    + u8" getting out of touch with the world"s);
        }
    }
    if (prm_370 == 14)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は急に色々なことを学びたくなった。"s,
                name(prm_372) + u8" feel"s + _s(prm_372) + u8" studious."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"の学習意欲が低下した。"s,
                name(prm_372) + u8" lose"s + _s(prm_372) + u8" curiosity."s);
        }
    }
    if (prm_370 == 15)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"の意思は固くなった。"s,
                name(prm_372) + your(prm_372) + u8" will hardens."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は何でもすぐ諦める。"s,
                name(prm_372) + your(prm_372) + u8" will softens."s);
        }
    }
    if (prm_370 == 16)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は魔力の上昇を感じた。"s,
                name(prm_372) + your(prm_372) + u8" magic improves."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は魔力の衰えを感じた。"s,
                name(prm_372) + your(prm_372) + u8" magic degrades."s);
        }
    }
    if (prm_370 == 17)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は周囲の視線を心地よく感じる。"s,
                name(prm_372) + u8" enjoy"s + _s(prm_372) + u8" showing off "s
                    + his(prm_372) + u8" body."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は急に人前に出るのが嫌になった。"s,
                name(prm_372) + u8" start"s + _s(prm_372)
                    + u8" to avoid eyes of people."s);
        }
    }
    if (prm_370 == 18)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は周りの動きが遅く見えるようになった。"s,
                name(prm_372) + your(prm_372) + u8" speed increases."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は遅くなった。"s,
                name(prm_372) + your(prm_372) + u8" speed decreases."s);
        }
    }
    if (prm_370 == 19)
    {
        if (prm_371 == 0)
        {
            return lang(
                name(prm_372) + u8"は幸運になった。"s,
                name(prm_372) + u8" become"s + _s(prm_372) + u8" lucky."s);
        }
        else
        {
            return lang(
                name(prm_372) + u8"は不幸になった。"s,
                name(prm_372) + u8" become"s + _s(prm_372) + u8" unlucky."s);
        }
    }
    if (prm_371 == 0)
    {
        return lang(
            name(prm_372) + u8"は"s + skillname(prm_370)
                + u8"の技術の向上を感じた。"s,
            name(prm_372) + your(prm_372) + u8" "s + skillname(prm_370)
                + u8" skill increases."s);
    }
    else
    {
        return lang(
            name(prm_372) + u8"は"s + skillname(prm_370)
                + u8"の技術の衰えを感じた。"s,
            name(prm_372) + your(prm_372) + u8" "s + skillname(prm_370)
                + u8" skill falls off."s);
    }
}
std::string
foodname(int prm_373, const std::string& prm_374, int prm_375, int prm_376)
{
    std::string s_at_m33;
    std::string n_at_m33;
    int p_at_m33 = 0;
    s_at_m33 = prm_374;
    if (prm_373 == 1)
    {
        if (prm_376 == 0)
        {
            n_at_m33 = lang(u8"動物"s, u8"beast"s);
        }
        else
        {
            n_at_m33 = refchara_str(prm_376, 2);
        }
        if (prm_375 == 1)
        {
            p_at_m33 = (lang(
                            u8"グロテスクな"s + n_at_m33 + u8"の肉"s,
                            u8"grotesque "s + n_at_m33 + u8" meat"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"グロテスクな"s + n_at_m33 + u8"の肉"s,
                    u8"grotesque "s + n_at_m33 + u8" meat"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 = (lang(
                            u8"焼け焦げた"s + n_at_m33 + u8"の肉"s,
                            u8"charred "s + n_at_m33 + u8" meat"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"焼け焦げた"s + n_at_m33 + u8"の肉"s,
                    u8"charred "s + n_at_m33 + u8" meat"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(
                     ""s + n_at_m33 + u8"のこんがり肉"s, u8"roast "s + n_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"のこんがり肉"s, u8"roast "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 = (lang(
                            ""s + n_at_m33 + u8"肉のオードブル"s,
                            u8"deep fried "s + n_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"肉のオードブル"s,
                    u8"deep fried "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(
                            ""s + n_at_m33 + u8"のピリ辛炒め"s,
                            u8"skewer grilled "s + n_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"のピリ辛炒め"s,
                    u8"skewer grilled "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(
                     ""s + n_at_m33 + u8"コロッケ"s, n_at_m33 + u8" croquette"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"コロッケ"s, n_at_m33 + u8" croquette"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 = (lang(
                            ""s + n_at_m33 + u8"のハンバーグ"s,
                            n_at_m33 + u8" hamburger"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"のハンバーグ"s,
                    n_at_m33 + u8" hamburger"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 = (lang(
                            ""s + n_at_m33 + u8"肉の大葉焼き"s,
                            n_at_m33 + u8" cutlet"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"肉の大葉焼き"s,
                    n_at_m33 + u8" cutlet"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 =
                (lang(""s + n_at_m33 + u8"ステーキ"s, n_at_m33 + u8" steak"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + n_at_m33 + u8"ステーキ"s, n_at_m33 + u8" steak"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 2)
    {
        if (s_at_m33 == ""s)
        {
            s_at_m33 = lang(u8"野菜"s, u8"vegetable"s);
        }
        if (prm_375 == 1)
        {
            p_at_m33 = (lang(
                            u8"生ごみ同然の"s + s_at_m33,
                            u8"kitchen refuse "s + s_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"生ごみ同然の"s + s_at_m33,
                    u8"kitchen refuse "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 =
                (lang(u8"悪臭を放つ"s + s_at_m33, u8"smelly "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"悪臭を放つ"s + s_at_m33, u8"smelly "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"のサラダ"s, s_at_m33 + u8" salad"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のサラダ"s, s_at_m33 + u8" salad"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の炒め物"s, u8"fried "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の炒め物"s, u8"fried "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"風味の肉じゃが"s,
                            s_at_m33 + u8" roll"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"風味の肉じゃが"s,
                    s_at_m33 + u8" roll"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の天ぷら"s, s_at_m33 + u8" tenpura"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の天ぷら"s, s_at_m33 + u8" tenpura"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の煮込み"s, s_at_m33 + u8" gratin"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の煮込み"s, s_at_m33 + u8" gratin"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"シチュー"s,
                            u8"meat and "s + s_at_m33 + u8" stew"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"シチュー"s,
                    u8"meat and "s + s_at_m33 + u8" stew"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"風カレー"s, s_at_m33 + u8" curry"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"風カレー"s, s_at_m33 + u8" curry"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 3)
    {
        if (s_at_m33 == ""s)
        {
            s_at_m33 = lang(u8"果物"s, u8"fruit"s);
        }
        if (prm_375 == 1)
        {
            p_at_m33 = (lang(
                            u8"食べてはならない"s + s_at_m33,
                            u8"dangerous "s + s_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"食べてはならない"s + s_at_m33,
                    u8"dangerous "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 =
                (lang(u8"べっちょりした"s + s_at_m33, u8"doubtful "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"べっちょりした"s + s_at_m33, u8"doubtful "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"のフルーツサラダ"s,
                            s_at_m33 + u8" jelly salad"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のフルーツサラダ"s,
                    s_at_m33 + u8" jelly salad"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"のプリン"s, s_at_m33 + u8" pudding"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のプリン"s, s_at_m33 + u8" pudding"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"シャーベット"s,
                            s_at_m33 + u8" sherbet"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"シャーベット"s,
                    s_at_m33 + u8" sherbet"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(
                     ""s + s_at_m33 + u8"シェイク"s, s_at_m33 + u8" ice cream"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"シェイク"s, s_at_m33 + u8" ice cream"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"クレープ"s, s_at_m33 + u8" crepe"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"クレープ"s, s_at_m33 + u8" crepe"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"フルーツケーキ"s,
                            s_at_m33 + u8" fruit cake"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"フルーツケーキ"s,
                    s_at_m33 + u8" fruit cake"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"パフェ"s,
                            s_at_m33 + u8" grand parfait"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"パフェ"s,
                    s_at_m33 + u8" grand parfait"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 5)
    {
        n_at_m33 = lang(u8"麺"s, u8"noodle"s);
        if (prm_375 == 1)
        {
            p_at_m33 =
                (lang(u8"禁断の"s + n_at_m33, u8"risky "s + n_at_m33) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"禁断の"s + n_at_m33, u8"risky "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 = (lang(
                            u8"のびてふにゃった"s + n_at_m33,
                            u8"exhausted "s + n_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"のびてふにゃった"s + n_at_m33,
                    u8"exhausted "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(u8"サラダパスタ"s, u8"salad pasta"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"サラダパスタ"s, u8"salad pasta"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 = (lang(u8"うどん"s, u8"udon"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"うどん"s, u8"udon"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(u8"冷やし蕎麦"s, u8"soba"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"冷やし蕎麦"s, u8"soba"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(u8"ペペロンチーノ"s, u8"peperoncino"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"ペペロンチーノ"s, u8"peperoncino"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 = (lang(u8"カルボナーラ"s, u8"carbonara"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"カルボナーラ"s, u8"carbonara"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 = (lang(u8"ラーメン"s, u8"ramen"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"ラーメン"s, u8"ramen"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 = (lang(u8"ミートスパゲティ"s, u8"meat spaghetti"s) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"ミートスパゲティ"s, u8"meat spaghetti"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 4)
    {
        if (s_at_m33 == ""s)
        {
            s_at_m33 = lang(u8"お菓子"s, u8"candy"s);
        }
        if (prm_375 == 1)
        {
            p_at_m33 =
                (lang(
                     u8"原型を留めない"s + s_at_m33, u8"collapsed "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"原型を留めない"s + s_at_m33, u8"collapsed "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 = (lang(u8"まずそうな"s + s_at_m33, u8"nasty "s + s_at_m33)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"まずそうな"s + s_at_m33, u8"nasty "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"クッキー"s, s_at_m33 + u8" cookie"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"クッキー"s, s_at_m33 + u8" cookie"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"のゼリー"s, s_at_m33 + u8" jelly"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のゼリー"s, s_at_m33 + u8" jelly"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"パイ"s, s_at_m33 + u8" pie"s) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(""s + s_at_m33 + u8"パイ"s, s_at_m33 + u8" pie"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"まんじゅう"s, s_at_m33 + u8" bun"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"まんじゅう"s, s_at_m33 + u8" bun"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"風味のシュークリーム"s,
                            s_at_m33 + u8" cream puff"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"風味のシュークリーム"s,
                    s_at_m33 + u8" cream puff"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"のケーキ"s, s_at_m33 + u8" cake"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のケーキ"s, s_at_m33 + u8" cake"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 = (lang(
                            ""s + s_at_m33 + u8"風ザッハトルテ"s,
                            s_at_m33 + u8" sachertorte"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"風ザッハトルテ"s,
                    s_at_m33 + u8" sachertorte"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 6)
    {
        if (s_at_m33 == ""s)
        {
            s_at_m33 = lang(u8"魚"s, u8"fish"s);
        }
        if (prm_375 == 1)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の残骸"s, u8"leftover "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の残骸"s, u8"leftover "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 =
                (lang(u8"骨だけ残った"s + s_at_m33, u8"bony "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"骨だけ残った"s + s_at_m33, u8"bony "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"のフライ"s, u8"fried "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"のフライ"s, u8"fried "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の煮込み"s, u8"stewed "s + s_at_m33)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の煮込み"s, u8"stewed "s + s_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"スープ"s, s_at_m33 + u8" soup"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"スープ"s, s_at_m33 + u8" soup"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の天ぷら"s, s_at_m33 + u8" tenpura"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の天ぷら"s, s_at_m33 + u8" tenpura"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 =
                (lang(
                     ""s + s_at_m33 + u8"ソーセージ"s, s_at_m33 + u8" sausage"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"ソーセージ"s, s_at_m33 + u8" sausage"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の刺身"s, s_at_m33 + u8" sashimi"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の刺身"s, s_at_m33 + u8" sashimi"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 =
                (lang(""s + s_at_m33 + u8"の活け作り"s, s_at_m33 + u8" sushi"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    ""s + s_at_m33 + u8"の活け作り"s, s_at_m33 + u8" sushi"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 7)
    {
        n_at_m33 = lang(u8"パン"s, u8"bread"s);
        if (prm_375 == 1)
        {
            p_at_m33 =
                (lang(u8"恐怖の"s + n_at_m33, u8"fearsome "s + n_at_m33) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"恐怖の"s + n_at_m33, u8"fearsome "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 =
                (lang(u8"ガチガチの"s + n_at_m33, u8"hard "s + n_at_m33) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"ガチガチの"s + n_at_m33, u8"hard "s + n_at_m33);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 =
                (lang(u8"くるみパン"s, u8"walnut bread"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"くるみパン"s, u8"walnut bread"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 = (lang(u8"アップルパイ"s, u8"apple pie"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"アップルパイ"s, u8"apple pie"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(u8"サンドイッチ"s, u8"sandwich"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"サンドイッチ"s, u8"sandwich"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 = (lang(u8"クロワッサン"s, u8"croissant"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"クロワッサン"s, u8"croissant"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 = (lang(u8"コロッケパン"s, u8"croquette sandwich"s) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"コロッケパン"s, u8"croquette sandwich"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 =
                (lang(u8"カレーパン"s, u8"chocolate babka"s) != ""s) + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"カレーパン"s, u8"chocolate babka"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 = (lang(u8"メロンパン"s, u8"melon flavored bread"s) != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(u8"メロンパン"s, u8"melon flavored bread"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    if (prm_373 == 8)
    {
        if (prm_376 == 0)
        {
            n_at_m33 = lang(u8"鳥"s, u8"animal"s);
        }
        else
        {
            n_at_m33 = refchara_str(prm_376, 2);
        }
        if (prm_375 == 1)
        {
            p_at_m33 = (lang(
                            u8"グロテスクな"s + n_at_m33 + u8"の卵"s,
                            u8"grotesque "s + n_at_m33 + u8" egg"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"グロテスクな"s + n_at_m33 + u8"の卵"s,
                    u8"grotesque "s + n_at_m33 + u8" egg"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 2)
        {
            p_at_m33 = (lang(
                            u8"焦げた"s + n_at_m33 + u8"の卵"s,
                            u8"overcooked "s + n_at_m33 + u8" egg"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"焦げた"s + n_at_m33 + u8"の卵"s,
                    u8"overcooked "s + n_at_m33 + u8" egg"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 3)
        {
            p_at_m33 = (lang(
                            n_at_m33 + u8"の卵の目玉焼き"s,
                            u8"fried "s + n_at_m33 + u8" egg"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    n_at_m33 + u8"の卵の目玉焼き"s,
                    u8"fried "s + n_at_m33 + u8" egg"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 4)
        {
            p_at_m33 =
                (lang(
                     n_at_m33 + u8"風味のキッシュ"s, n_at_m33 + u8" egg toast"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    n_at_m33 + u8"風味のキッシュ"s, n_at_m33 + u8" egg toast"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 5)
        {
            p_at_m33 = (lang(
                            u8"半熟"s + n_at_m33,
                            u8"soft boiled "s + n_at_m33 + u8" egg"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"半熟"s + n_at_m33,
                    u8"soft boiled "s + n_at_m33 + u8" egg"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 6)
        {
            p_at_m33 = (lang(
                            n_at_m33 + u8"の卵入りスープ"s,
                            u8"soup with "s + n_at_m33 + u8" egg"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    n_at_m33 + u8"の卵入りスープ"s,
                    u8"soup with "s + n_at_m33 + u8" egg"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 7)
        {
            p_at_m33 = (lang(
                            u8"熟成"s + n_at_m33 + u8"チーズ"s,
                            u8"mature "s + n_at_m33 + u8" cheeze"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    u8"熟成"s + n_at_m33 + u8"チーズ"s,
                    u8"mature "s + n_at_m33 + u8" cheeze"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 8)
        {
            p_at_m33 = (lang(
                            n_at_m33 + u8"のレアチーズケーキ"s,
                            n_at_m33 + u8" cheeze cake"s)
                        != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    n_at_m33 + u8"のレアチーズケーキ"s,
                    n_at_m33 + u8" cheeze cake"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        if (prm_375 == 9)
        {
            p_at_m33 =
                (lang(n_at_m33 + u8"風オムライス"s, n_at_m33 + u8" omelet"s)
                 != ""s)
                + 0 + 0;
            p_at_m33 = prm_376 % p_at_m33;
            if (p_at_m33 == 0)
            {
                return lang(
                    n_at_m33 + u8"風オムライス"s, n_at_m33 + u8" omelet"s);
            }
            else
            {
                if (p_at_m33 == 1)
                {
                    return "";
                }
                else
                {
                    return "";
                }
            }
        }
        return s_at_m33;
    }
    return s_at_m33;
}
void label_0149()
{
    DIM3(picfood, 10, 9);
    picfood(0, 8) = 230;
    picfood(1, 8) = 230;
    picfood(2, 8) = 230;
    picfood(3, 8) = 190;
    picfood(4, 8) = 229;
    picfood(5, 8) = 190;
    picfood(6, 8) = 342;
    picfood(7, 8) = 168;
    picfood(8, 8) = 347;
    picfood(9, 8) = 194;
    picfood(0, 1) = 230;
    picfood(1, 1) = 230;
    picfood(2, 1) = 230;
    picfood(3, 1) = 195;
    picfood(4, 1) = 227;
    picfood(5, 1) = 167;
    picfood(6, 1) = 167;
    picfood(7, 1) = 194;
    picfood(8, 1) = 229;
    picfood(9, 1) = 227;
    picfood(0, 2) = 230;
    picfood(1, 2) = 230;
    picfood(2, 2) = 230;
    picfood(3, 2) = 229;
    picfood(4, 2) = 342;
    picfood(5, 2) = 194;
    picfood(6, 2) = 229;
    picfood(7, 2) = 342;
    picfood(8, 2) = 229;
    picfood(9, 2) = 194;
    picfood(0, 3) = 230;
    picfood(1, 3) = 230;
    picfood(2, 3) = 230;
    picfood(3, 3) = 229;
    picfood(4, 3) = 346;
    picfood(5, 3) = 346;
    picfood(6, 3) = 345;
    picfood(7, 3) = 345;
    picfood(8, 3) = 347;
    picfood(9, 3) = 346;
    picfood(0, 4) = 230;
    picfood(1, 4) = 230;
    picfood(2, 4) = 230;
    picfood(3, 4) = 108;
    picfood(4, 4) = 346;
    picfood(5, 4) = 110;
    picfood(6, 4) = 346;
    picfood(7, 4) = 347;
    picfood(8, 4) = 347;
    picfood(9, 4) = 347;
    picfood(0, 5) = 230;
    picfood(1, 5) = 230;
    picfood(2, 5) = 229;
    picfood(3, 5) = 343;
    picfood(4, 5) = 344;
    picfood(5, 5) = 344;
    picfood(6, 5) = 343;
    picfood(7, 5) = 343;
    picfood(8, 5) = 344;
    picfood(9, 5) = 343;
    picfood(0, 6) = 230;
    picfood(1, 6) = 230;
    picfood(2, 6) = 230;
    picfood(3, 6) = 228;
    picfood(4, 6) = 342;
    picfood(5, 6) = 342;
    picfood(6, 6) = 228;
    picfood(7, 6) = 341;
    picfood(8, 6) = 228;
    picfood(9, 6) = 228;
    picfood(0, 7) = 230;
    picfood(1, 7) = 230;
    picfood(2, 7) = 110;
    picfood(3, 7) = 108;
    picfood(4, 7) = 110;
    picfood(5, 7) = 112;
    picfood(6, 7) = 114;
    picfood(7, 7) = 113;
    picfood(8, 7) = 115;
    picfood(9, 7) = 111;
    return;
}
std::string _yoro(int prm_377)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしくお願いします"s;
            _tone_at_m34(1) = u8"どうぞ、よろしくです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくお願いしますわ"s;
            _tone_at_m34(1) = u8"よろしくです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしく頼むぜ"s;
            _tone_at_m34(1) = u8"よろしくな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくね"s;
            _tone_at_m34(1) = u8"よろしくな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしくね"s;
            _tone_at_m34(1) = u8"よろしくお願いするよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくねっ"s;
            _tone_at_m34(1) = u8"よろしく〜"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしく…"s;
            _tone_at_m34(1) = u8"今後とも、よろしく…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくね…"s;
            _tone_at_m34(1) = u8"よろ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしく頼もう"s;
            _tone_at_m34(1) = u8"よろしく頼むぞよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしく頼むぞよ"s;
            _tone_at_m34(1) = u8"よろしく頼むぞな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よしなに"s;
            _tone_at_m34(1) = u8"よろしく頼むでござる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくでござりまする"s;
            _tone_at_m34(1) = u8"どうぞよしなに"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よろしくッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
        else
        {
            _tone_at_m34(0) = u8"よろしくにゃの"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_377);
        }
    }
    return _tone_at_m34;
}
std::string _dozo(int prm_378)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"はい、どうぞ"s;
            _tone_at_m34(1) = u8"お待ちどうさまです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"はい、どうぞ"s;
            _tone_at_m34(1) = u8"注文の品ですわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ほらよ"s;
            _tone_at_m34(1) = u8"ほれ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"ほら"s;
            _tone_at_m34(1) = u8"待たせたね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"はい、お待ち"s;
            _tone_at_m34(1) = u8"さあ、どうぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"さあ、どうぞ"s;
            _tone_at_m34(1) = u8"お待ちどうさま"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ほら…"s;
            _tone_at_m34(1) = u8"待たせたな…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"はい…"s;
            _tone_at_m34(1) = u8"どうぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ほうれ"s;
            _tone_at_m34(1) = u8"ほれ、受け取りたまえ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"ほれ、受け取るが良い"s;
            _tone_at_m34(1) = u8"ほれ、待たせたのう"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"お待たせ申した"s;
            _tone_at_m34(1) = u8"待たせたでござる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"お待たせ致しました"s;
            _tone_at_m34(1) = u8"ささ、どうぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"お待たせッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
        else
        {
            _tone_at_m34(0) = u8"お待たせにゃん"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_378);
        }
    }
    return _tone_at_m34;
}
std::string _thanks(int prm_379)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"感謝します"s;
            _tone_at_m34(1) = u8"ありがとうございます"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"感謝します"s;
            _tone_at_m34(1) = u8"ありがとうございます"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ありがとよ"s;
            _tone_at_m34(1) = u8"ありがたい"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"礼を言うよ"s;
            _tone_at_m34(1) = u8"ありがたいね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ありがとう"s;
            _tone_at_m34(1) = u8"感謝するよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"ありがとう〜"s;
            _tone_at_m34(1) = u8"感謝するわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"礼を言う…"s;
            _tone_at_m34(1) = u8"感謝する…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"ありがと…"s;
            _tone_at_m34(1) = u8"礼を言うわ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"礼を申すぞ"s;
            _tone_at_m34(1) = u8"感謝してつかわす"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"くるしゅうない"s;
            _tone_at_m34(1) = u8"礼をいってつかわす"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かたじけない"s;
            _tone_at_m34(1) = u8"恩に着る"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"ありがたや"s;
            _tone_at_m34(1) = u8"お礼申し上げます"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"アザーッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃりーん"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_379);
        }
    }
    return _tone_at_m34;
}
std::string _rob(int prm_380)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"悪いことは言わない。おやめなさい"s;
            _tone_at_m34(1) = u8"止めてください。きっと後悔しますよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"止めてくださいませ"s;
            _tone_at_m34(1) =
                u8"こういう時のために、傭兵に金をかけているのです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"なんだ、貴様賊だったのか"s;
            _tone_at_m34(1) = u8"馬鹿な奴だ。後になって謝っても遅いぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"ふん、返り討ちにしてくれるよ"s;
            _tone_at_m34(1) = u8"ごろつき風情に何が出来る"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) =
                u8"おい、傭兵さんたち、このごろつきを追い払ってくれ"s;
            _tone_at_m34(1) =
                u8"馬鹿な真似をするな。こっちには屈強の傭兵がいるんだぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"やめて"s;
            _tone_at_m34(1) = u8"傭兵さんたち〜出番ですよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"甘く見られたものだ…"s;
            _tone_at_m34(1) = u8"この護衛の数が見えないのか…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"おやめ…"s;
            _tone_at_m34(1) = u8"愚かな試みよ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"なんたる無礼者か"s;
            _tone_at_m34(1) = u8"ほほほ、こやつめ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"下賤の者どもの分際で"s;
            _tone_at_m34(1) = u8"ほほほ、殺してあげなさい"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"何をするでござるか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"ご無体な"s;
            _tone_at_m34(1) = u8"まあ、お戯れが過ぎますわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"見損なったッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃりーん"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_380);
        }
    }
    return _tone_at_m34;
}
std::string _ka(int prm_381)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ですか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"ですか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かよ"s;
            _tone_at_m34(1) = u8"か"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"かい"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かい"s;
            _tone_at_m34(1) = u8"なの"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"なの"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"か…"s;
            _tone_at_m34(1) = u8"かよ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"なの…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かのう"s;
            _tone_at_m34(1) = u8"であるか"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"であるか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござるか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"でござりまするか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
        else
        {
            _tone_at_m34(0) = u8"かにゃ"s;
            _tone_at_m34(1) = u8"かニャン"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_381);
        }
    }
    return _tone_at_m34;
}
std::string _da(int prm_382)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"です"s;
            _tone_at_m34(1) = u8"ですね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"ですわ"s;
            _tone_at_m34(1) = u8"です"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だぜ"s;
            _tone_at_m34(1) = u8"だ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = u8"よ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だよ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"だわ"s;
            _tone_at_m34(1) = u8"よ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だ…"s;
            _tone_at_m34(1) = u8"さ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"よ…"s;
            _tone_at_m34(1) = u8"ね…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"じゃ"s;
            _tone_at_m34(1) = u8"でおじゃる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"じゃ"s;
            _tone_at_m34(1) = u8"でおじゃるぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござる"s;
            _tone_at_m34(1) = u8"でござるよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"でござりまする"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
        else
        {
            _tone_at_m34(0) = u8"みゃん"s;
            _tone_at_m34(1) = u8"ミャ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_382);
        }
    }
    return _tone_at_m34;
}
std::string _nda(int prm_383)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のです"s;
            _tone_at_m34(1) = u8"んです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"のですわ"s;
            _tone_at_m34(1) = u8"のです"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = "";
            _tone_at_m34(1) = u8"んだ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"の"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"んだよ"s;
            _tone_at_m34(1) = u8"んだ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"わ"s;
            _tone_at_m34(1) = u8"のよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"…"s;
            _tone_at_m34(1) = u8"んだ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"の…"s;
            _tone_at_m34(1) = u8"わ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のじゃ"s;
            _tone_at_m34(1) = u8"のだぞよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"のじゃわ"s;
            _tone_at_m34(1) = u8"のだぞよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のでござる"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"のでございます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"んだッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
        else
        {
            _tone_at_m34(0) = u8"のニャ"s;
            _tone_at_m34(1) = u8"のにゃん"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_383);
        }
    }
    return _tone_at_m34;
}
std::string _noka(int prm_384)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のですか"s;
            _tone_at_m34(1) = u8"んですか"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"のですか"s;
            _tone_at_m34(1) = u8"んですか"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のか"s;
            _tone_at_m34(1) = u8"のだな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"の"s;
            _tone_at_m34(1) = u8"のかい"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のかい"s;
            _tone_at_m34(1) = u8"の"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"の"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のか…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"の…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のかのう"s;
            _tone_at_m34(1) = u8"のだな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"のかね"s;
            _tone_at_m34(1) = u8"のだな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のでござるか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"のでございます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"のッスか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃんか"s;
            _tone_at_m34(1) = u8"ニャン"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_384);
        }
    }
    return _tone_at_m34;
}
std::string _kana(int prm_385)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でしょうか"s;
            _tone_at_m34(1) = u8"ですか"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"かしら"s;
            _tone_at_m34(1) = u8"でしょう"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"か"s;
            _tone_at_m34(1) = u8"かい"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"か"s;
            _tone_at_m34(1) = u8"かい"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かな"s;
            _tone_at_m34(1) = u8"かなぁ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"かな"s;
            _tone_at_m34(1) = u8"かなー"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かな…"s;
            _tone_at_m34(1) = u8"か…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"かな…"s;
            _tone_at_m34(1) = u8"か…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"かのう"s;
            _tone_at_m34(1) = u8"かの"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"かのう"s;
            _tone_at_m34(1) = u8"かの"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござるか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"でございますか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスか"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
        else
        {
            _tone_at_m34(0) = u8"かにゃん"s;
            _tone_at_m34(1) = u8"かニャ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_385);
        }
    }
    return _tone_at_m34;
}
std::string _kimi(int prm_386)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"貴方"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"貴方"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"お前"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"お前"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"君"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"君"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"君"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"君"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"お主"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"お主"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"そこもと"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"そなた様"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"アンタ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
        else
        {
            _tone_at_m34(0) = u8"あにゃた"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_386);
        }
    }
    return _tone_at_m34;
}
std::string _ru(int prm_387)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ます"s;
            _tone_at_m34(1) = u8"ますよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"ますわ"s;
            _tone_at_m34(1) = u8"ますの"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"るぜ"s;
            _tone_at_m34(1) = u8"るぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"るわ"s;
            _tone_at_m34(1) = u8"るよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"るよ"s;
            _tone_at_m34(1) = u8"るね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"るの"s;
            _tone_at_m34(1) = u8"るわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"る…"s;
            _tone_at_m34(1) = u8"るが…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"る…"s;
            _tone_at_m34(1) = u8"るわ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"るぞよ"s;
            _tone_at_m34(1) = u8"るぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"るぞよ"s;
            _tone_at_m34(1) = u8"るぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"るでござる"s;
            _tone_at_m34(1) = u8"るでござるよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"るのでございます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"るッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
        else
        {
            _tone_at_m34(0) = u8"るのニャ"s;
            _tone_at_m34(1) = u8"るにゃん"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_387);
        }
    }
    return _tone_at_m34;
}
std::string _tanomu(int prm_388)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"お願いします"s;
            _tone_at_m34(1) = u8"頼みます"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"お願いしますわ"s;
            _tone_at_m34(1) = u8"頼みますわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼む"s;
            _tone_at_m34(1) = u8"頼むな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"頼むよ"s;
            _tone_at_m34(1) = u8"頼む"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼むね"s;
            _tone_at_m34(1) = u8"頼むよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"頼むわ"s;
            _tone_at_m34(1) = u8"頼むね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼む…"s;
            _tone_at_m34(1) = u8"頼むぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"頼むわ…"s;
            _tone_at_m34(1) = u8"頼むよ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼むぞよ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"頼むぞよ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼み申す"s;
            _tone_at_m34(1) = u8"頼むでござる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"お頼み申し上げます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頼むッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
        else
        {
            _tone_at_m34(0) = u8"おねがいにゃ"s;
            _tone_at_m34(1) = u8"おねがいニャン"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_388);
        }
    }
    return _tone_at_m34;
}
std::string _ore(int prm_389)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"私"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"私"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"俺"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"あたし"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"僕"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"わたし"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"自分"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"自分"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"麻呂"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"わらわ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"拙者"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"手前"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あっし"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
        else
        {
            _tone_at_m34(0) = u8"みゅー"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_389);
        }
    }
    return _tone_at_m34;
}
std::string _ga(int prm_390)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ですが"s;
            _tone_at_m34(1) = u8"ですけど"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"ですが"s;
            _tone_at_m34(1) = u8"ですけど"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"が"s;
            _tone_at_m34(1) = u8"がな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"が"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"けど"s;
            _tone_at_m34(1) = u8"が"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"が"s;
            _tone_at_m34(1) = u8"けど"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"が…"s;
            _tone_at_m34(1) = u8"けど…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"が…"s;
            _tone_at_m34(1) = u8"けど…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"であるが"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"であるが"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござるが"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"でございますが"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスけど"s;
            _tone_at_m34(1) = u8"ッスが"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
        else
        {
            _tone_at_m34(0) = u8"ニャけど"s;
            _tone_at_m34(1) = u8"にゃが"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_390);
        }
    }
    return _tone_at_m34;
}
std::string _dana(int prm_391)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ですね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"ですわね"s;
            _tone_at_m34(1) = u8"ですね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"だね"s;
            _tone_at_m34(1) = u8"ね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だな…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"だね…"s;
            _tone_at_m34(1) = u8"ね…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"であるな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"であるな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござるな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"でございますね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃ"s;
            _tone_at_m34(1) = u8"みゃ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_391);
        }
    }
    return _tone_at_m34;
}
std::string _kure(int prm_392)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ください"s;
            _tone_at_m34(1) = u8"くださいよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"くださいな"s;
            _tone_at_m34(1) = u8"ください"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"くれ"s;
            _tone_at_m34(1) = u8"くれよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"くれ"s;
            _tone_at_m34(1) = u8"よ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = u8"よ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = u8"ね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"くれ…"s;
            _tone_at_m34(1) = u8"…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"よ…"s;
            _tone_at_m34(1) = u8"…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"つかわせ"s;
            _tone_at_m34(1) = u8"たもれ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"つかわせ"s;
            _tone_at_m34(1) = u8"たもれ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"頂きたいでござる"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"くださいませ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"くれッス"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃ"s;
            _tone_at_m34(1) = u8"みゃ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_392);
        }
    }
    return _tone_at_m34;
}
std::string _daro(int prm_393)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でしょう"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"でしょう"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だろ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"だろうね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だろうね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"でしょ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"だろ…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"でしょ…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"であろう"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"であろうな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござろうな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"でございましょう"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスね"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃ"s;
            _tone_at_m34(1) = u8"みゃ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_393);
        }
    }
    return _tone_at_m34;
}
std::string _yo(int prm_394)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ですよ"s;
            _tone_at_m34(1) = u8"です"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"ですよ"s;
            _tone_at_m34(1) = u8"です"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ぜ"s;
            _tone_at_m34(1) = u8"ぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"わ"s;
            _tone_at_m34(1) = u8"よ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"よ"s;
            _tone_at_m34(1) = u8"ぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"わよ"s;
            _tone_at_m34(1) = u8"わ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"…"s;
            _tone_at_m34(1) = u8"ぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"わ…"s;
            _tone_at_m34(1) = u8"…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"であろう"s;
            _tone_at_m34(1) = u8"でおじゃる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"であろうぞ"s;
            _tone_at_m34(1) = u8"でおじゃる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござろう"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"でございますわ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスよ"s;
            _tone_at_m34(1) = u8"ッス"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
        else
        {
            _tone_at_m34(0) = u8"にゃぁ"s;
            _tone_at_m34(1) = u8"みゃぁ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_394);
        }
    }
    return _tone_at_m34;
}
std::string _aru(int prm_395)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あります"s;
            _tone_at_m34(1) = u8"ありますね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あります"s;
            _tone_at_m34(1) = u8"ありますわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ある"s;
            _tone_at_m34(1) = u8"あるな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あるね"s;
            _tone_at_m34(1) = u8"あるよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あるね"s;
            _tone_at_m34(1) = u8"あるよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あるわ"s;
            _tone_at_m34(1) = u8"あるわね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ある…"s;
            _tone_at_m34(1) = u8"あるぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あるわ…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あろう"s;
            _tone_at_m34(1) = u8"おじゃる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あろう"s;
            _tone_at_m34(1) = u8"おじゃる"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あるでござる"s;
            _tone_at_m34(1) = u8"あるでござるな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"ござます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"あるッスよ"s;
            _tone_at_m34(1) = u8"あるッス"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
        else
        {
            _tone_at_m34(0) = u8"あにゅ"s;
            _tone_at_m34(1) = u8"あみぅ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_395);
        }
    }
    return _tone_at_m34;
}
std::string _u(int prm_396)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"います"s;
            _tone_at_m34(1) = u8"いますよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"いますわ"s;
            _tone_at_m34(1) = u8"います"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"うぜ"s;
            _tone_at_m34(1) = u8"うぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うわ"s;
            _tone_at_m34(1) = u8"うよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"うよ"s;
            _tone_at_m34(1) = u8"う"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うわ"s;
            _tone_at_m34(1) = u8"う"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"う…"s;
            _tone_at_m34(1) = u8"うぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うわ…"s;
            _tone_at_m34(1) = u8"う…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"うぞよ"s;
            _tone_at_m34(1) = u8"うぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うぞよ"s;
            _tone_at_m34(1) = u8"うぞ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"うでござる"s;
            _tone_at_m34(1) = u8"うでござるよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うでございます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"うッスよ"s;
            _tone_at_m34(1) = u8"うッス"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
        else
        {
            _tone_at_m34(0) = u8"うにぁ"s;
            _tone_at_m34(1) = u8"うみぁ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_396);
        }
    }
    return _tone_at_m34;
}
std::string _na(int prm_397)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ですね"s;
            _tone_at_m34(1) = u8"です"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"ですわ"s;
            _tone_at_m34(1) = u8"ですね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ぜ"s;
            _tone_at_m34(1) = u8"な"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = u8"な"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ね"s;
            _tone_at_m34(1) = u8"なぁ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"わ"s;
            _tone_at_m34(1) = u8"わね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"…"s;
            _tone_at_m34(1) = u8"な…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"…"s;
            _tone_at_m34(1) = u8"わ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でおじゃるな"s;
            _tone_at_m34(1) = u8"のう"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"でおじゃるな"s;
            _tone_at_m34(1) = u8"のう"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"でござるな"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"でございますわ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ッスね"s;
            _tone_at_m34(1) = u8"ッス"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
        else
        {
            _tone_at_m34(0) = u8"ニァ"s;
            _tone_at_m34(1) = u8"ミァ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_397);
        }
    }
    return _tone_at_m34;
}
std::string _ta(int prm_398)
{
    if (cdata(18, tc) == 0)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"ました"s;
            _tone_at_m34(1) = u8"ましたね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"ました"s;
            _tone_at_m34(1) = u8"ましたわ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 1)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"た"s;
            _tone_at_m34(1) = u8"たな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"たね"s;
            _tone_at_m34(1) = u8"たよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 2)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"たね"s;
            _tone_at_m34(1) = u8"たよ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"たよ"s;
            _tone_at_m34(1) = u8"たね"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 3)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"た…"s;
            _tone_at_m34(1) = u8"たぞ…"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"たわ…"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 4)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"たぞよ"s;
            _tone_at_m34(1) = u8"たぞな"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"たぞよ"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 5)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"たでござる"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"ましてございます"s;
            _tone_at_m34(1) = "";
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 1;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    if (cdata(18, tc) == 6)
    {
        if (cdata(8, tc) == 0)
        {
            _tone_at_m34(0) = u8"たッスよ"s;
            _tone_at_m34(1) = u8"たッス"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
        else
        {
            _tone_at_m34(0) = u8"たにゃぁ"s;
            _tone_at_m34(1) = u8"たみゃぁ"s;
            _tone_at_m34(2) = "";
            _tone_at_m34(3) = "";
            _tone_at_m34(4) = "";
            p_at_m34 = 2;
            _tone_at_m34 = _tone_at_m34(rnd(p_at_m34)) + _mark(prm_398);
        }
    }
    return _tone_at_m34;
}
void label_0173()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            await();
            p(0) = instr(buff, 0, u8"{"s);
            p(1) = instr(buff, p, u8"}"s);
            p(2) = strlen(buff);
            if (p == -1)
            {
                break;
            }
            s(0) = strmid(buff, p + 1, p(1) - 1);
            s(1) = strmid(buff, 0, p);
            s(2) = strmid(buff, p + p(1) + 1, p(2) - p(1) - p);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                {
                    if (s == u8"ref"s)
                    {
                        if (talkref == 1)
                        {
                            s = lang(
                                ""s + gdata(814),
                                ""s + gdata(814) + u8" guest"s
                                    + _s2(gdata(814)));
                            break;
                        }
                    }
                    if (s == u8"you"s)
                    {
                        s = _kimi(3);
                        break;
                    }
                    if (s == u8"sex"s)
                    {
                        s = _sex2(0);
                        break;
                    }
                    if (s == u8"player"s)
                    {
                        s = cdatan(0, 0);
                        break;
                    }
                    if (s == u8"aka"s)
                    {
                        s = cdatan(1, 0);
                        break;
                    }
                    if (s == u8"npc"s)
                    {
                        s = cdatan(0, tc);
                        break;
                    }
                    if (s == u8"ある"s)
                    {
                        s = _aru(3);
                        break;
                    }
                    if (s == u8"が"s)
                    {
                        s = _ga(3);
                        break;
                    }
                    if (s == u8"か"s)
                    {
                        s = _ka(3);
                        break;
                    }
                    if (s == u8"かな"s)
                    {
                        s = _kana(3);
                        break;
                    }
                    if (s == u8"だ"s)
                    {
                        s = _da(3);
                        break;
                    }
                    if (s == u8"よ"s)
                    {
                        s = _yo(3);
                        break;
                    }
                    if (s == u8"だな"s)
                    {
                        s = _dana(3);
                        break;
                    }
                    if (s == u8"だろ"s)
                    {
                        s = _daro(3);
                        break;
                    }
                    if (s == u8"る"s)
                    {
                        s = _ru(3);
                        break;
                    }
                    if (s == u8"のだ"s)
                    {
                        s = _nda(3);
                        break;
                    }
                    if (s == u8"な"s)
                    {
                        s = _na(3);
                        break;
                    }
                    if (s == u8"くれ"s)
                    {
                        s = _kure(3);
                        break;
                    }
                    s = u8"Unknown Code"s;
                }
            }
            buff = s(1) + s + s(2);
        }
    }
    return;
}
void label_0174()
{
    buff = strmid(buff, p, instr(buff, p, u8"%END"s));
    if (noteinfo(0) <= 1)
    {
        noteload(exedir + u8"data\\talk.txt"s);
        p = instr(buff, 0, u8"%DEFAULT,"s + lang(u8"JP"s, u8"EN"s));
        buff = strmid(buff, p, instr(buff, p, u8"%END"s));
    }
    notedel(0);
    p = rnd(noteinfo(0));
    noteget(s, p);
    buff = s;
    label_0173();
    return;
}
void label_0175()
{
    buff = "";
    notesel(buff);
    noteload(exedir + u8"data\\talk.txt"s);
    p = instr(buff, 0, valn + u8","s + lang(u8"JP"s, u8"EN"s));
    label_0174();
    return;
}
void label_0176()
{
    buff = "";
    notesel(buff);
    noteload(exedir + u8"data\\talk.txt"s);
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (cdata(150, tc) == 18)
            {
                if (gdata(814) > 0)
                {
                    talkref = 1;
                    p = instr(buff, 0, u8"%MAID,"s + lang(u8"JP"s, u8"EN"s));
                    break;
                }
            }
            if (cdata(14, tc) <= 0)
            {
                p = instr(buff, 0, u8"%BORED,"s + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (tc < 16)
            {
                p = instr(
                    buff, 0, u8"%ALLY_DEFAULT,"s + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (cdata(27, tc) == 335)
            {
                p = instr(buff, 0, u8"%BITCH,"s + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (cdata(150, tc) == 1015)
            {
                p = instr(buff, 0, u8"%MOYER,"s + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (cdata(150, tc) == 17)
            {
                p = instr(buff, 0, u8"%SLAVEKEEPER,"s + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (cdata(150, tc) >= 1000 && cdata(150, tc) < 2000
                || cdata(150, tc) == 2003)
            {
                if (rnd(3))
                {
                    p = instr(
                        buff, 0, u8"%SHOPKEEPER,"s + lang(u8"JP"s, u8"EN"s));
                    break;
                }
            }
            if (cdata(17, tc) >= 100)
            {
                if (rnd(3) == 0)
                {
                    p = instr(
                        buff, 0, u8"%RUMOR,LOOT,"s + lang(u8"JP"s, u8"EN"s));
                    break;
                }
            }
            if (adata(29, gdata(20)))
            {
                if (gdata(20) == 33)
                {
                    if (rnd(3))
                    {
                        p = instr(
                            buff,
                            0,
                            u8"%FEST,"s + gdata(20) + u8","s
                                + lang(u8"JP"s, u8"EN"s));
                        break;
                    }
                }
            }
            if (rnd(2))
            {
                p = instr(
                    buff,
                    0,
                    u8"%PERSONALITY,"s + cdata(16, tc) + u8","s
                        + lang(u8"JP"s, u8"EN"s));
                break;
            }
            if (rnd(3))
            {
                p = instr(
                    buff,
                    0,
                    u8"%AREA,"s + gdata(20) + u8","s + lang(u8"JP"s, u8"EN"s));
                break;
            }
        }
    }
    if (p == -1)
    {
        p = instr(buff, 0, u8"%DEFAULT,"s + lang(u8"JP"s, u8"EN"s));
    }
    label_0174();
    return;
}
std::string cnvweight(int prm_399)
{
    std::string s_at_m35;
    s_at_m35 = ""s + abs(prm_399) / 1000 + u8"."s + abs(prm_399) % 1000 / 100
        + ""s + strweight;
    return s_at_m35;
}
std::string fltname(int prm_400)
{
    if (prm_400 == 60001)
    {
        return lang(u8"井戸"s, u8"well"s);
    }
    if (prm_400 == 57000)
    {
        return lang(u8"食べ物"s, u8"food"s);
    }
    if (prm_400 == 56000)
    {
        return lang(u8"杖"s, u8"rods"s);
    }
    if (prm_400 == 53000)
    {
        return lang(u8"巻物"s, u8"scrolls"s);
    }
    if (prm_400 == 52000)
    {
        return lang(u8"ポーション"s, u8"potions"s);
    }
    if (prm_400 == 64000)
    {
        return lang(u8"ジャンク"s, u8"junks"s);
    }
    if (prm_400 == 77000)
    {
        return lang(u8"鉱石"s, u8"ores"s);
    }
    if (prm_400 == 60000)
    {
        return lang(u8"家具"s, u8"furniture"s);
    }
    if (prm_400 == 25000)
    {
        return lang(u8"矢弾"s, u8"ammos"s);
    }
    return lang(u8"不明"s, u8"Unknown"s);
}
void label_0180()
{
    noteadd(lang(u8"@QM[メインクエスト]"s, u8"@QM[Main Quest]"s));
    if (gdata(252) >= 0 && gdata(252) < 30)
    {
        s1 = lang(
            u8"ヴェルニースの南にあるネフィアの迷宮群のひとつ《レシマス》で、何かが見つかるかもしれない。"s,
            u8"I should check the dungeon called Lesimas. It's located south of Vernis."s);
    }
    if (gdata(252) >= 30 && gdata(252) < 50)
    {
        s1 = lang(
            u8"致命傷を負った斥候に、パルミアのジャビ王へ書簡を渡すよう頼まれた。パルミアには、ヴェルニースから東の街道を進めば辿り着ける。"s,
            u8"The injured scout asked me to devliver a letter to the king of Palmia. Palmia is located east of Vernis."s);
    }
    if (gdata(252) >= 50 && gdata(252) < 60)
    {
        s1 = lang(
            u8"ジャビ王によると、仕事が欲しい時は城の図書館にいるエリステアを訪ねればいいようだ。"s,
            u8"Eristia will have some tasks for me if I want to work for Palmia. She's in the library of the castle."s);
    }
    if (gdata(252) >= 60 && gdata(252) < 100)
    {
        s1 = lang(
            u8"レシマスに赴き、冒険者カラムという人物を探すよう依頼された。彼は最低でもレシマスの16階より先の階層にいるらしい。"s,
            u8"Eristia asked to look for an adventurer called Karam in the dungeon of Lesimas. He was on the 16th level of the dungeon the last time he sent a report. I may have to go deeper if I am to find him."s);
    }
    if (gdata(252) >= 100 && gdata(252) < 110)
    {
        s1 = lang(
            u8"瀕死のカラムから得た情報を、パルミアのエリステアに伝えなければならない。"s,
            u8"I need to bring information Karam gave me to Eristia at once."s);
    }
    if (gdata(252) >= 110 && gdata(252) < 125)
    {
        s1 = lang(
            u8"レシマス最下層の封印を解く為に必要な三つの魔石の入手を依頼された。賢者の魔石は《灼熱の塔》に、愚者の魔石は《死者の洞窟》に、覇者の魔石は《古城》にある。"s,
            u8"I need to find 3 magic stones to break the seal of Lesimas. They can be found at the Tower of Fire, the crypt of the damned and the Ancient Castle"s);
    }
    if (gdata(252) >= 125 && gdata(252) < 180)
    {
        s1 = lang(
            u8"三つの魔石の力で最下層の封印を解き、レシマスの秘宝を持ち帰るようエリステアに依頼された。"s,
            u8"With 3 magic stones I have, I need to get to the deepest level of Lesimas and break the seal. Then bring back an item called Hidden Artifact of Lesimas, whatever it is."s);
    }
    if (gdata(252) >= 180 && gdata(252) < 1000)
    {
        s1 = lang(
            u8"第一部メインクエスト完了"s,
            u8"You have completed the main quest."s);
    }
    talk_conv(s1, 40 - en * 4);
    buff += s1;
    noteadd(""s);
    return;
}
void label_0181()
{
    if (val == 0)
    {
        noteadd(""s);
        noteadd(lang(u8"@QM[サブクエスト]"s, u8"@QM[Sub Quest]"s));
    }
    p = 0;
    if (gdata(450) != 0)
    {
        s = lang(u8"ぬいぐるみを守れ！ Lv6相当"s, u8"Putit attacks Lv6"s);
        p = gdata(450);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヴェルニースのミシェスに、スライムの退治を頼まれた。スライムの巣窟は、ミシェスの家のすぐ南の家のようだ。"s,
                u8"Miches of Vernis asked me to investigate the house just south of her home."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"ヴェルニースのミシェスに頼まれたスライムの退治を完了した。あとは報告するだけだ。"s,
                u8"I've wiped out the putit's nest. I have to visit Miches of Vernis to report it."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(451) != 0)
    {
        s = lang(u8"お酒泥棒 Lv2相当"s, u8"Thieves' hideout Lv2"s);
        p = gdata(451);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヴェルニースのシーナが勤める酒場に、酒泥棒が頻出しているらしい。盗賊団を壊滅させてシーナに報告しよう。"s,
                u8"Bandits have been stealing things in Vernis. I need to find and destroy their hideout."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"酒樽を盗んでいたごろつき団を殲滅した。あとはヴェルニースのシーナに報告するだけだ。"s,
                u8"Those bandits are no more. All I have to do now is bring the news to Shena of Vernis."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(455) != 0)
    {
        s = lang(u8"迷子の子犬 Lv4相当"s, u8"Puppy's cave Lv4"s);
        p = gdata(455);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヴェルニースのリリアンに、迷子の子犬ポピーを捜すよう頼まれた。どうやら子犬はヴェルニースのすぐ東にある洞窟にいるらしい。"s,
                u8"Rilian of Vernis asked me to find her puppy named poppy in the puppy's cave located east of Vernis."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(452) != 0)
    {
        s = lang(u8"実験場のナイトメア Lv50相当"s, u8"Nightmare Lv50"s);
        p = gdata(452);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヴェルニースのロイターに金になる仕事を持ちかけられた。何やら危険な仕事のようだ。万全の準備を整えてからロイターに話し掛けよう。"s,
                u8"Loyter of Vernis has a dangerous, yet highly profitable job for me. I need to prepare well before talking to him again."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"実験場の全ての敵を殲滅しなければならない。"s,
                u8"I need to eliminate all of the monsters in the test ground."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 3)
        {
            s1 = lang(
                u8"実験を生き延びて完了させた。ヴェルニースのロイターに報告しよう。"s,
                u8"I've survived the nightmare. Now to meet Loyer of Vernis to receive the reward."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(453) != 0)
    {
        s = lang(u8"エーテル病を治せ Lv20相当"s, u8"Pael and her mom Lv20"s);
        p = gdata(453);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ノイエルのパエルにエーテル抗体を渡した。母親の容態に変化があらわれるのを待とう。"s,
                u8"Pael's mother is suffering from Ether Disease and I gave Pael a potion of cure corruption in Noyel. Let's wait until the condition of her mother changes."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"ノイエルのパエルの母親の容態が変わったようだ。今度見舞いにいったほうがいいかもしれない。"s,
                u8"There's a change in the condition of Pael's mother. I should go check her when I have time."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 3)
        {
            s1 = lang(
                u8"ノイエルのパエルにエーテル抗体を渡した。母親の容態に変化があらわれるのを待とう。"s,
                u8"Pael's mother is suffering from Ether Disease and I gave Pael a potion of cure corruption in Noyel. Let's wait until the condition of her mother changes."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 4)
        {
            s1 = lang(
                u8"ノイエルのパエルの母親の容態が変わったようだ。今度見舞いにいったほうがいいかもしれない。"s,
                u8"There's a change in the condition of Pael's mother. I should go check her when I have time."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 5)
        {
            s1 = lang(
                u8"ノイエルのパエルにエーテル抗体を渡した。母親の容態に変化があらわれるのを待とう。"s,
                u8"Pael's mother is suffering from Ether Disease and I gave Pael a potion of cure corruption in Noyel. Let's wait until the condition of her mother changes."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 6)
        {
            s1 = lang(
                u8"ノイエルのパエルの母親の容態が変わったようだ。今度見舞いにいったほうがいいかもしれない。"s,
                u8"There's a change in the condition of Pael's mother. I should go check her when I have time."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 7)
        {
            s1 = lang(
                u8"ノイエルのパエルにエーテル抗体を渡した。母親の容態に変化があらわれるのを待とう。"s,
                u8"Pael's mother is suffering from Ether Disease and I gave Pael a potion of cure corruption in Noyel. Let's wait until the condition of her mother changes."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 8)
        {
            s1 = lang(
                u8"ノイエルのパエルの母親の容態が変わったようだ。今度見舞いにいったほうがいいかもしれない。"s,
                u8"There's a change in the condition of Pael's mother. I should go check her when I have time."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 9)
        {
            s1 = lang(
                u8"ノイエルのパエルにエーテル抗体を渡した。母親の容態に変化があらわれるのを待とう。"s,
                u8"Pael's mother is suffering from Ether Disease and I gave Pael a potion of cure corruption in Noyel. Let's wait until the condition of her mother changes."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 10)
        {
            s1 = lang(
                u8"ノイエルのパエルの母親の容態が変わったようだ。今度見舞いにいったほうがいいかもしれない。"s,
                u8"There's a change in the condition of Pael's mother. I should go check her when I have time."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(454) != 0)
    {
        s = lang(u8"嫁泥棒 Lv3相当"s, u8"Wife collector LV3"s);
        p = gdata(454);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"カプールのラファエロに嫁を持ってくるよう頼まれた。なんという下劣な男だ。"s,
                u8"I was asked by Raphael of Port Kapul to bring my wife. What a moron."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(456) != 0)
    {
        s = lang(u8"猫退治 Lv25相当"s, u8"Cat house Lv25"s);
        p = gdata(456);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヨウィンのタムに、家の猫退治を依頼された。家は南の畑のあたりにあるそうだ。"s,
                u8"Tam of Yowyn asked me to eliminate the cats in his house. The house is located southern part of Yowyn."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"タムの家の中の猫を退治した。あとはヨウィンでタムに報告するだけだ。"s,
                u8"I've freed Tam's house from the cats. To get the reward, I need to speak Tam again in Yowyn."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(457) != 0)
    {
        s = lang(u8"防衛戦線の死闘 Lv17相当"s, u8"Defense line Lv17"s);
        p = gdata(457);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヨウィンのギルバート大佐に、ジューア解放軍の援護を求められた。準備が整い次第、大佐に話し掛けよう。"s,
                u8"Carnel Gilbert of Yowyn asked me to help the Juere freedom force fight the Yerles Army. I should speak to him again when I'm ready."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"イェルスの防衛軍を殲滅しなければならない。"s,
                u8"I need to destroy the Yerles Army."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 3)
        {
            s1 = lang(
                u8"防衛線を見事に突破した。ヨウィンのギルバート大佐に報告しよう。"s,
                u8"I've won the war. Now to bring the good news to carnel Gilbert."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(458) != 0)
    {
        s = lang(u8"騎士昇格試験の手伝い Lv8相当"s, u8"Novice knightLv8"s);
        p = gdata(458);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ヨウィンのアインクに騎士昇格試験の手伝いを頼まれた。ヨウィンの西にあるイークの洞窟に住むイークの首領を倒せばいいそうだ。"s,
                u8"Ainc of Yowyn asked me to help his promotion task. I need to enter the Yeek's dungeon which is located west of Yowyn and kill the chief."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"イークの首領を無事討伐した。ヨウィンのアインクに報告しよう。"s,
                u8"I've defeated the chief of Yeek. I should head back to Yowyn and report to Ainc."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(459) != 0)
    {
        s = lang(u8"カミカゼ特攻隊 Lv14相当"s, u8"Kamikaze attack Lv14"s);
        p = gdata(459);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"カプールのアーノルドに、カミカゼ特攻隊に耐えるパルミア軍への援軍を頼まれた。準備が整い次第、アーノルドに話し掛けよう。"s,
                u8"Arnord of Port Kapul asked me to help the isolated Palmian 10th regiment from massive Kamikaze attacks. I should prepare and speak to Arnord when ready."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"パルミア軍が撤退を完了するまでの間、カミカゼ特攻隊の猛攻に耐えなければならない。パルミア軍が撤退したら、知らせが入るはずだ。"s,
                u8"I have to hold the battle line to gain time while the Palmian army retreats. A messenger will inform me when it's done."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 3)
        {
            s1 = lang(
                u8"カミカゼ特攻隊の猛攻に耐えきった。カプールのアーノルドに報告しよう。"s,
                u8"I survived the kamikaze attack. I have to bring the good news to Arnord of Port Kapul."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(460) != 0)
    {
        s = lang(u8"ミーアの夢 Lv1相当"s, u8"Mia's dream Lv1"s);
        p = gdata(460);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"パルミアのミーアは、稀少猫シルバーキャットが欲しいらしい。なんとか捕まえて、ミーアに渡そう。"s,
                u8"Mia of Palmia wants a silver cat, a very rare cat. If I happen to capture one, I should bring it to Mia."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(461) != 0)
    {
        s = lang(u8"幻の絵本 Lv12相当"s, u8"Rare books Lv12"s);
        p = gdata(461);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ルミエストのレントンが、レイチェルという童話作家によって描かれた絵本を探している。絵本は全部で4巻あるらしい。全て見つけたら、レントンに報告しよう。"s,
                u8"Renton of Lumiest is looking for the fairy tale books written by Rachael. I should bring it to him if I happen to find one. There're total of 4 books in the series."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(462) != 0)
    {
        s = lang(u8"ピラミッドからの挑戦状 Lv16相当"s, u8"Pyramid trial Lv16"s);
        p = gdata(462);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ピラミッドに出入りする資格を得た。ピラミッドはカプールの北にあり、中には古代の秘宝が眠っているといわれている。"s,
                u8"I've got a invitation to the pyramid. The pyramid is located north of Port Kapul and it is rumored that it holds great treasure."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(463) != 0)
    {
        s = lang(
            u8"パルミアに赤い花を Lv14相当"s, u8"Red blossom in Palmia Lv14"s);
        p = gdata(463);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ダルフィのノエルにパルミアの街に爆弾をしかけるように依頼された。爆弾をパルミアの宿屋の部屋にあるぬいぐるみにしかけよう。"s,
                u8"Noel of Derphy asked me to set up a bomb in Palmia. I need to place it right on the teddy bear in the inn."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"見事にパルミアを壊滅させた。あとはダルフィのノエルの元に戻り、報告するだけだ。"s,
                u8"I have successfully destroyed Palmia. Now all I need to report back to Noel in Derphy."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(464) != 0)
    {
        s = lang(u8"生化学者の野望 Lv5相当"s, u8"Ambitious scientist Lv5"s);
        p = gdata(464);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == gdata(464) * (gdata(464) < 6) + (gdata(464) == 0))
        {
            s1 = lang(
                u8"カプールのイコールに、実験用の生物5体の捕獲を頼まれた。依頼品、モンスターボールに捕獲したものでなくてはならない。あと"s
                    + (6 - gdata(464))
                    + u8"個の捕獲済みモンスターボールを届ける必要がある。"s,
                u8"Icolle of Port Kapul asked me to bring 5 filled monster balls. I still need to bring him "s
                    + (6 - gdata(464)) + u8" of them."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(465) != 0)
    {
        s = lang(u8"下水道大作戦 Lv23相当"s, u8"Sewer sweeping Lv23"s);
        p = gdata(465);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"ルミエストのバルザックに、下水道の清掃を頼まれた。下水道の入り口は宿屋の近くにあるみたいだ。。"s,
                u8"Balzak of Lumiest wants me to sweep the entire sewer. I can find the entrance to the sewer around the inn."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"下水道の大掃除を完了した。あとはルミエストのバルザックに報告するだけだ。"s,
                u8"I've finished sweeping the sewer. I need to report it to Balzak of Lumiest."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(466) != 0)
    {
        s = lang(u8"魔術士ギルド審査"s, u8"Joining the Mages Guild"s);
        p = gdata(466);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"魔術士ギルドに加入するには、ルミエストのメイジギルドの納入箱に、解読済みの古書物を納入し、ギルドポイントを貯めた後、ギルドの番人に話しかけなければならない。審査をクリアするには、あと"s +
                    gdata(266) + u8"ギルドポイントを獲得する必要がある。"s,
                u8"To join the Mages Guild, I need to gather "s + gdata(266) +
                    u8" more guild points and talk to the guild guard in Lumiest. I can earn the guild points by collecting ancients books, decrypt them, and put them into the delivery box near the guild guard."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(468) != 0)
    {
        s = lang(u8"盗賊ギルド審査"s, u8"Joining the Thieves Guild"s);
        p = gdata(468);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"盗賊ギルドに加入するには、税金を4ヶ月以上滞納した状態で、ダルフィのギルドの番人に話しかける必要がある。"s,
                u8"To join the Thieves Guild, I need to not pay tax for 4 months, that means I'll be a criminal for sure."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(467) != 0)
    {
        s = lang(u8"戦士ギルド審査"s, u8"Joining the Fighters Guild"s);
        p = gdata(467);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(u8"戦士ギルドに加入するには、"s +
                    refchara_str(gdata(268), 2) + u8"をあと"s + gdata(267) +
                    u8"匹討伐してから、カプールのギルドの番人に話しかける必要がある。"s,
                u8"To join the Fighters Guild, I need to slay "s + gdata(267) +
                    u8" more "s + refchara_str(gdata(268), 2) +
                    u8" and talk to the guild guard in Port Kapul."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(469) != 0)
    {
        s = lang(u8"魔術士ギルドノルマ"s, u8"The Mages Guild quota"s);
        p = gdata(469);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"魔術士ギルドのランクを上げるためには、ルミエストのメイジギルドの納入箱に、解読済みの古書物を納入し、ギルドポイントを貯めた後、ギルドの番人に話しかけなければならない。ランク上昇のためには、あと"s +
                    gdata(266) + u8"ギルドポイントを獲得する必要がある。"s,
                u8"To raise the rank in the Mages Guild, you need to gather "s +
                    gdata(266) +
                    u8" more guild points and talk to the guard in Lumiest. I can earn the guild points by collecting ancients books, decrypt them, and put them into the delivery box near the guild guard."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(470) != 0)
    {
        s = lang(u8"戦士ギルドノルマ"s, u8"The Fighters Guild quota"s);
        p = gdata(470);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(u8"戦士ギルドのランクを上げるためには、"s +
                    refchara_str(gdata(268), 2) + u8"をあと"s + gdata(267) +
                    u8"匹討伐してから、カプールのギルドの番人に話しかける必要がある。"s,
                u8"To raise the rank in the Fighters Guild, I need to slay "s +
                    gdata(267) + u8" more "s + refchara_str(gdata(268), 2) +
                    u8" and talk to the guild guard in Port Kapul."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(471) != 0)
    {
        s = lang(u8"盗賊ギルドノルマ"s, u8"The Thieves Guild quota"s);
        p = gdata(471);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(u8"盗賊ギルドのランクを上げるためには、あと金貨"s +
                    gdata(269) +
                    u8"枚分の盗品を売りさばき、ダルフィのギルドの番人に話しかける必要がある。"s,
                u8"To raise the rank in the Thieves Guild, I need to sell stolen goods worth total of "s +
                    gdata(269) +
                    u8" gold pices and talk to the guild guard in Derphy."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(472) != 0)
    {
        s = lang(u8"ミノタウロスの王 Lv24相当"s, u8"Minotaur king Lv24"s);
        p = gdata(472);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"パルミアのコネリー少将に、ミノタウロスの首領の退治を頼まれた。ミノタウロスの巣窟は、ヨウィンの南にあるみたいだ。"s,
                u8"General Conery wants me to hunt the chief of minotaur. The nest is located south of Yowyn."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    if (val == 0)
    {
        if (p == 2)
        {
            s1 = lang(
                u8"ミノタウロスの首領を無事討伐した。パルミアのコネリー少将に報告しよう。"s,
                u8"I've killed the chief of minotaur. I should head back to Palmia and speak to General Conery."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    p = 0;
    if (gdata(473) != 0)
    {
        s = lang(u8"リトルシスター Lv30相当"s, u8"Little sister Lv30"s);
        p = gdata(473);
        if (val == 1)
        {
            if (p >= 1000)
            {
                noteadd(lang(u8"[達成]"s, u8"[Done]"s) + s);
            }
        }
    }
    if (val == 0)
    {
        if (p == 1)
        {
            s1 = lang(
                u8"アクリ・テオラの謎の科学者に、リトルシスターを連れてくるよう頼まれた。捕獲するためには、ビッグダディを倒し、捕獲玉をリトルにぶつける必要がある。"s,
                u8"A strange scientist asked me to bring little sisters to her. To capture a little sister, I need to kill Big Daddy first then throw the little ball at her."s);
            talk_conv(s1, 40 - en * 4);
            buff += u8"("s + s + u8")\n"s + s1;
            noteadd(""s);
        }
    }
    return;
}
void label_0182()
{
    noteadd(lang(u8"[古びたお守り]"s, u8"[An old talisman]"s));
    if (gdata(252) >= 30)
    {
        noteadd(lang(u8"[ジャビ王への書簡]"s, u8"A letter to the king"s));
    }
    if (gdata(253) != 0)
    {
        noteadd(lang(u8"[愚者の魔石]"s, u8"Fool's magic stone"s));
    }
    if (gdata(255) != 0)
    {
        noteadd(lang(u8"[覇者の魔石]"s, u8"King's magic stone"s));
    }
    if (gdata(254) != 0)
    {
        noteadd(lang(u8"[賢者の魔石]"s, u8"Sage's magic stone"s));
    }
    return;
}
void label_0183()
{
    notesel(buffboard);
    SDIM1(buff2);
    p = instr(buffboard, 0, s + u8","s + lang(u8"JP"s, u8"EN"s));
    buff2 = strmid(buffboard, p, instr(buffboard, p, u8"%END"s));
    notesel(buff2);
    if (noteinfo(0) <= 1)
    {
        buff2 = u8"no txt"s;
        return;
    }
    p = rnd(noteinfo(0) - 1) + 1;
    noteget(buff2, p);
    p = instr(buff2, 0, u8":"s);
    s(3) = strmid(buff2, 0, p);
    if (val == 2)
    {
        notesel(buff);
        return;
    }
    buff2 = strmid(buff2, p + 1, strlen(buff2) - p - 1);
    if (val != 2)
    {
        buff = buff2;
    }
    return;
}
void label_0184()
{
    randomize(qdata(0, rq) + 1);
    s(6) = "";
    s(5) = lang(
        u8"金貨"s + qdata(6, rq) + u8"枚"s,
        ""s + qdata(6, rq) + u8" gold pieces"s);
    if (qdata(7, rq) != 0)
    {
        if (qdata(7, rq) < 10000)
        {
            s(5) += lang(u8"と"s, u8" and "s) + _reward(qdata(7, rq));
        }
        else
        {
            s(5) += lang(u8"と"s, u8" and "s) + fltname(qdata(7, rq));
        }
    }
    if (qdata(9, rq) == -1)
    {
        nquestdate = lang(u8"即時"s, u8"-"s);
    }
    else
    {
        nquestdate = ""s + qdata(9, rq) + lang(u8"日"s, u8"d"s);
    }
    if (qdata(3, rq) == 1006)
    {
        s = u8"%HARVEST"s;
        label_0183();
        s(10) = ""s + cnvweight(qdata(12, rq));
        s(11) = mapname(qdata(1, rq));
        s(4) = lang(
            ""s + s(10) + u8"の作物の納入"s,
            u8"Gather harvests weight "s + s(10) + u8"."s);
        if (gdata(72) == rq)
        {
            s(4) += lang(u8"(現在"s, u8" (Now "s) + cnvweight(qdata(13, rq))
                + u8")"s;
        }
        s(6) = s(4);
    }
    if (qdata(3, rq) == 1009)
    {
        s = u8"%PARTY"s;
        label_0183();
        s(10) = ""s + qdata(12, rq) + lang(u8"ポイント"s, u8" points"s);
        s(11) = mapname(qdata(1, rq));
        s(4) = lang(""s + s(10) + u8"の獲得"s, u8"Gather "s + s(10) + u8"."s);
        if (gdata(72) == rq)
        {
            s(4) += lang(u8"(現在"s, u8" (Now "s) + qdata(13, rq) + u8")"s;
        }
        s(6) = s(4);
    }
    if (qdata(3, rq) == 1007)
    {
        s = u8"%ESCORT,"s + qdata(4, rq);
        label_0183();
        s(11) = ""s + mapname(qdata(12, rq));
        s(4) = lang(
            u8"クライアントを"s + s(11),
            u8"Escort the client to "s + s(11) + u8"."s);
        s(6) = s(4) + lang(u8"まで護衛"s, ""s);
    }
    if (qdata(3, rq) == 1001)
    {
        s = u8"%HUNT"s;
        label_0183();
        s(4) = lang(u8"全ての敵の殲滅"s, u8"Eliminate monsters."s);
        s(6) = s(4);
    }
    if (qdata(3, rq) == 1004)
    {
        s = u8"%SUPPLY"s;
        label_0183();
        s(4) = cnvarticle(cnvitemname(qdata(11, rq)));
        s(6) =
            lang(s(4) + u8"の納入"s, u8"Give "s + s(4) + u8" to the client."s);
    }
    if (qdata(3, rq) == 1002)
    {
        s = u8"%DELIVER,"s + qdata(12, rq);
        label_0183();
        s(10) = cnvarticle(cnvitemname(qdata(11, rq)));
        s(11) = ""s + mapname(qdata(1, qdata(10, rq)));
        s(12) = ""s + qname(qdata(10, rq));
        if (iorgweight(qdata(11, rq)) > 50000)
        {
            s(10) += lang(u8"(凄く重い)"s, u8"(Heavy!)"s);
        }
        s(4) = lang(
            ""s + s(11) + u8"に住む"s + s(12) + u8"に"s + s(10),
            u8"Deliver "s + s(10) + u8" to "s + s(12) + u8" who lives in "s
                + s(11) + u8"."s);
        s(6) = s(4) + lang(u8"を配達"s, ""s);
    }
    if (qdata(3, rq) == 1003)
    {
        s = u8"%COOK,"s + qdata(12, rq);
        if (rnd(6) == 0)
        {
            s = u8"%COOK,GENERAL"s;
        }
        label_0183();
        s(4) = cnvarticle(foodname(qdata(12, rq), ""s, qdata(13, rq)));
        s(6) =
            lang(s(4) + u8"の納入"s, u8"Give "s + s(4) + u8" to the client."s);
    }
    if (qdata(3, rq) == 1008)
    {
        s = u8"%CONQUER"s;
        label_0183();
        s(4) = refchara_str(qdata(12, rq), 2);
        if (qdata(12, rq) == 343)
        {
            s(4) = lang(u8"正体不明の存在"s, u8"unknown monster"s);
        }
        s(10) = ""s + qdata(5, rq) * 10 / 6;
        s(6) = lang(s(4) + u8"の討伐"s, u8"Slay "s + s(4) + u8"."s);
    }
    if (qdata(3, rq) == 1010)
    {
        s = u8"%HUNTEX"s;
        label_0183();
        s(4) = refchara_str(qdata(12, rq), 2);
        s(10) = ""s + qdata(5, rq) * 3 / 2;
        s(6) = lang(u8"全ての敵の殲滅"s, u8"Eliminate monsters"s);
    }
    if (qdata(3, rq) == 1011)
    {
        s = u8"%COLLECT"s;
        label_0183();
        s(10) = cnvarticle(cnvitemname(qdata(11, rq)));
        s(11) = ""s + mapname(qdata(1, rq));
        if (gdata(20) == qdata(1, rq) && gdata(22) == 1)
        {
            s(12) = ""s + cdatan(0, qdata(10, rq));
        }
        else
        {
            s(12) = lang(s(11) + u8"に住む人物"s, u8"the target in "s + s(11));
        }
        if (iorgweight(qdata(11, rq)) > 50000)
        {
            s(10) += lang(u8"(凄く重い)"s, u8"(Heavy!)"s);
        }
        s(4) = lang(
            u8"依頼人のために"s + s(12) + u8"から"s + s(10),
            u8"Acquire "s + s(10) + u8" from "s + s(12)
                + u8" for the client."s);
        s(6) = s(4) + lang(u8"を調達"s, ""s);
    }
    label_0185();
    if (val == 1)
    {
        buff = lang(_kimi(3) + u8"に頼みたいことがある"s + _nda(), ""s) + buff;
        if (qdata(9, rq) != -1)
        {
            buff += lang(
                u8"期限は残り"s + qdata(9, rq) + u8"日"s + _da(),
                u8" You have "s + qdata(9, rq)
                    + u8" days to perform the task. "s);
        }
        buff += lang(u8"依頼を受けてくれるの"s + _kana(1), u8"How about it?"s);
    }
    if (val == 2)
    {
        if (qdata(8, rq) == 3)
        {
            buff += u8"@QC["s + lang(u8"依頼 完了"s, u8"Complete"s) + u8"]"s
                + s(3) + u8"\n"s;
        }
        else
        {
            buff += u8"@QL["s + lang(u8"依頼"s, u8"Job"s) + u8"] "s + s(3)
                + u8"\n"s;
        }
        buff += lang(u8"依頼: "s, u8"Client  : "s) + qname(rq) + u8"\n"s;
        buff += lang(u8"場所: "s, u8"Location: "s) + mapname(qdata(1, rq))
            + u8"\n"s;
        buff += lang(u8"期限: "s, u8"Deadline: "s);
        if (qdata(9, rq) != -1)
        {
            buff += lang(u8"残り"s, ""s);
        }
        buff += nquestdate + u8"\n"s;
        s(5) = lang(u8"報酬: "s, u8"Reward  : "s) + s(5);
        talk_conv(s(5), 40 - en * 10);
        buff += s(5) + u8"\n"s;
        if (qdata(8, rq) == 3)
        {
            s(4) = lang(
                u8"内容: あとは報告するだけだ。"s,
                u8"Detail  : Report to the client."s);
        }
        else
        {
            s(4) = lang(u8"内容: "s, u8"Detail  : "s) + s(6);
        }
        talk_conv(s(4), 40 - en * 10);
        buff += s(4) + u8"\n"s;
    }
    if (val == 3)
    {
        buff = lang(
            u8"依頼を無事終わらせたよう"s + _dana() + _thanks(2),
            u8"You've done well. Thanks. Here's your reward."s);
        if (elona_int(s(5)) != 0)
        {
            txt(lang(u8"報酬の"s + s(5) + u8"を受けとって"s + _kure(), ""s));
        }
        if (qdata(3, rq) == 1006)
        {
            if (qdata(12, rq) * 125 / 100 < qdata(13, rq))
            {
                buff += lang(
                    u8"予想以上にいい働きだったから、幾らか色を付けておいた"s
                        + _yo(),
                    u8"I've added some extra coins since you worked really hard."s);
            }
        }
        if (qdata(3, rq) == 1009)
        {
            if (qdata(12, rq) * 150 / 100 < qdata(13, rq))
            {
                buff += lang(
                    u8"予想以上の盛り上がりだったから、おまけをあげる"s + _yo(),
                    u8"The party was terrific! I'll give you these tickets as an extra bonus."s);
            }
        }
    }
    randomize();
    return;
}
void label_0185()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            await();
            p(0) = instr(buff, 0, u8"{"s);
            p(1) = instr(buff, p, u8"}"s);
            p(2) = strlen(buff);
            if (p == -1)
            {
                break;
            }
            s(0) = strmid(buff, p + 1, p(1) - 1);
            s(1) = strmid(buff, 0, p);
            s(2) = strmid(buff, p + p(1) + 1, p(2) - p(1) - p);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                {
                    if (s == u8"client"s)
                    {
                        s = s(12);
                        break;
                    }
                    if (s == u8"map"s)
                    {
                        s = s(11);
                        break;
                    }
                    if (s == u8"ref"s)
                    {
                        s = s(10);
                        break;
                    }
                    if (s == u8"you"s)
                    {
                        s = _kimi(3);
                        break;
                    }
                    if (s == u8"me"s)
                    {
                        s = _ore(3);
                        break;
                    }
                    if (s == u8"reward"s)
                    {
                        s = s(5);
                        break;
                    }
                    if (s == u8"objective"s)
                    {
                        s = s(4);
                        break;
                    }
                    if (s == u8"deadline"s)
                    {
                        s = nquestdate;
                        break;
                    }
                    if (s == u8"player"s)
                    {
                        s = cdatan(0, 0);
                        break;
                    }
                    if (s == u8"aka"s)
                    {
                        s = cdatan(1, 0);
                        break;
                    }
                    if (s == u8"npc"s)
                    {
                        s = cdatan(0, tc);
                        break;
                    }
                    if (s == u8"ある"s)
                    {
                        s = _aru(3);
                        break;
                    }
                    if (s == u8"う"s)
                    {
                        s = _u(3);
                        break;
                    }
                    if (s == u8"か"s)
                    {
                        s = _ka(3);
                        break;
                    }
                    if (s == u8"が"s)
                    {
                        s = _ga(3);
                        break;
                    }
                    if (s == u8"かな"s)
                    {
                        s = _kana(3);
                        break;
                    }
                    if (s == u8"だ"s)
                    {
                        s = _da(3);
                        break;
                    }
                    if (s == u8"よ"s)
                    {
                        s = _yo(3);
                        break;
                    }
                    if (s == u8"た"s)
                    {
                        s = _ta(3);
                        break;
                    }
                    if (s == u8"だな"s)
                    {
                        s = _dana(3);
                        break;
                    }
                    if (s == u8"だろ"s)
                    {
                        s = _daro(3);
                        break;
                    }
                    if (s == u8"たのむ"s)
                    {
                        s = _tanomu(3);
                        break;
                    }
                    if (s == u8"る"s)
                    {
                        s = _ru(3);
                        break;
                    }
                    if (s == u8"のだ"s)
                    {
                        s = _nda(3);
                        break;
                    }
                    if (s == u8"な"s)
                    {
                        s = _na(3);
                        break;
                    }
                    if (s == u8"くれ"s)
                    {
                        s = _kure(3);
                        break;
                    }
                    s = u8"Unknown Code"s;
                }
            }
            buff = s(1) + s + s(2);
        }
    }
    return;
}
void addnews2(const std::string& prm_401, int prm_402)
{
    std::string n_at_m36;
    n_at_m36 = prm_401;
    if (prm_402)
    {
        txtef(13);
        txt(u8"[News] "s + n_at_m36);
    }
    talk_conv(n_at_m36, 38 - en * 5);
    newsbuff += n_at_m36 + u8"\n"s;
    return;
}
void addnewstopic(const std::string& prm_403, const std::string& prm_404)
{
    addnews2(
        prm_403 + u8" "s + gdata(10) + u8"/"s + gdata(11) + u8"/"s + gdata(12)
        + u8" h"s + gdata(13) + ""s + u8" "s + prm_404);
    return;
}
void addnews(int prm_405, int prm_406)
{
    if (prm_405 == 0)
    {
        addnews2(valn);
        newsbuff += u8"\n"s;
        return;
    }
    if (prm_405 == 1)
    {
        addnewstopic(u8"@01"s, lang(u8"アイテム発見"s, u8"Discovery"s));
        addnews2(
            lang(
                cdatan(1, prm_406) + u8"は"s + mapname(cdata(80, prm_406))
                    + u8"にて"s + valn + u8"を入手した。"s,
                cdatan(1, prm_406) + u8" has discovered "s + valn + u8" in "s
                    + mapname(cdata(80, prm_406)) + u8"."s),
            1);
    }
    if (prm_405 == 2)
    {
        addnewstopic(u8"@02"s, lang(u8"新たなる力"s, u8"Growth"s));
        addnews2(
            lang(
                cdatan(1, prm_406) + u8"は経験をつみ、レベル"s
                    + cdata(38, prm_406) + u8"になった。"s,
                cdatan(1, prm_406)
                    + u8" has gained experience and achieved level "s
                    + cdata(38, prm_406) + u8"."s),
            1);
    }
    if (prm_405 == 3)
    {
        addnewstopic(
            u8"@02"s, lang(u8"怪我からの復帰"s, u8"Recovery from injury"s));
        addnews2(
            lang(
                cdatan(1, prm_406) + u8"は怪我から回復した。"s,
                cdatan(1, prm_406) + u8" has fully recovered from injury."s),
            1);
    }
    if (prm_405 == 4)
    {
        addnewstopic(u8"@03"s, lang(u8"クエストの達成"s, u8"Accomplishment"s));
        addnews2(
            lang(
                cdatan(1, prm_406) + u8"はクエストを達成し、"s + val
                    + u8"の名声を手にした。"s,
                cdatan(1, prm_406) + u8" has finished a quest and gained "s
                    + val + u8" fame."s),
            1);
    }
    if (prm_405 == 5)
    {
        addnewstopic(u8"@04"s, lang(u8"引退"s, u8"Retirement"s));
        addnews2(
            lang(
                cdatan(1, prm_406)
                    + u8"は自分の力の限界を悟り、ノースティリスから去っていった。"s,
                cdatan(1, prm_406)
                    + u8" realizes the limitations and leaves North Tyris."s),
            1);
    }
    newsbuff += u8"\n"s;
    return;
}
void txtgod(int prm_407, int prm_408)
{
    if (prm_407 == 0)
    {
        return;
    }
    txtef(5);
    if (prm_408 == 12)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                    u8"「お前も体を機械化したらどうだ？」"s,
                    cnvtalk(u8"You should mechanize your body."s)),
                lang(
                    u8"「常に、私の名に恥じぬよう振舞え」"s,
                    cnvtalk(u8"Always behave true to my name."s)),
                lang(
                    u8"「焦るな。すぐに機械が全てを支配する時代が来る」"s,
                    cnvtalk(
                        u8"No need to hurry. The day machines dominate the world is much closer than you think."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(u8"「みじめなブタども」"s, cnvtalk(u8"Pathetic pigs."s)),
                lang(
                    u8"「マニ？その名を再び口にしたらミンチよ、子猫ちゃん」"s,
                    cnvtalk(
                        u8"Mani? Say that name again and I'll mince you, kitty."s)),
                lang(
                    u8"「前の下僕は、八つ裂きにしてシルフ達の餌にしたわ。髪型がちょっと気に食わなかったから。アハハ！」"s,
                    cnvtalk(
                        u8"I've teared the former servant limb from limb to feed the sylphs. I just didn't like his hair style. Ahaha!"s)),
                lang(
                    u8"「私の子供達は風の声、何事にも縛られてはいけない。オマエもよ」"s,
                    cnvtalk(
                        u8"My children are the voices of the wind, never tied to anything."s)));
        }
        if (prm_407 == 3)
        {
            if (rnd(3))
            {
                txt(lang(
                        u8"「汝油断することなかれ」"s,
                        cnvtalk(u8"Idleness is the devil's workshop."s)),
                    lang(
                        u8"「我々の抱える痛みを、定命の者が理解することはないであろう」"s,
                        cnvtalk(
                            u8"You mortals will never understand the pain we hold."s)),
                    lang(
                        u8"「我が名はイツパロトル。元素の起源にて、最古の炎を従えし王、全ての神の主なり」"s,
                        cnvtalk(
                            u8"My name is Itzpalt. I am the origin of elements, the king that bears the earliest flame and the master of all the Gods."s)));
            }
            else
            {
                txt(lang(
                    u8"「神々の戦いに終わりはない。来るべき時は、汝も我が軍門の元で働いてもらうであろう」"s,
                    cnvtalk(
                        u8"God's war never end. In times to come, you shall be a warrior of my faction."s)));
            }
        }
        if (prm_407 == 4)
        {
            txt(lang(u8"「たらばがに！」"s, cnvtalk(u8"Coconut crab!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(u8"「フハハハハ」"s, cnvtalk(u8"Muwahaha."s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(u8"「な、なによバカ！」"s, cnvtalk(u8"W-What? Silly!"s)),
                lang(
                    u8"「私はこの仕事に向いているのかなあ」"s,
                    cnvtalk(u8"Am I really suitable for this job?"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                    u8"「木々のさえずり…森の命が奏でる歌…耳をすませば…」"s,
                    cnvtalk(
                        u8"Twitter of trees...song weaved by forests...if you strain your ears...."s)),
                lang(
                    u8"「争いごとは…醜い」"s,
                    cnvtalk(u8"This conflict between Gods...ugly."s)),
                lang(
                    u8"「僕のエヘカトル…今はもう…かつての面影さえない」"s,
                    cnvtalk(
                        u8"My Ehekatl...you are not what you used to be..."s)),
                lang(
                    u8"「僕は与えよう…君たちが奪う以上のものを」"s,
                    cnvtalk(u8"I will give...more than you spoil..."s)));
        }
    }
    if (prm_408 == 9)
    {
        if (prm_407 == 1)
        {
            txt(lang(u8"「いいぞ」"s, cnvtalk(u8"Nice kill."s)),
                lang(
                    u8"「分解してみたくならないか？」"s,
                    cnvtalk(u8"Don't you want to decompose it?"s)),
                lang(
                    u8"「その魂なら質の良い機械が組めそうだ」"s,
                    cnvtalk(
                        u8"Ah, this soul could be a good component for a new machine."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                    u8"「不潔ね。血を拭いなさいよ」"s,
                    cnvtalk(u8"How dirty. Wipe the blood off your hands."s)),
                lang(
                    u8"「アハハ！ミンチミンチィ！」"s,
                    cnvtalk(u8"Aha! Mince! Mince!."s)),
                lang(
                    u8"「まあ、いけない子猫ちゃん」"s,
                    cnvtalk(u8"Bad kitty."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(u8"「なかなかのものだ」"s, cnvtalk(u8"Impressive."s)),
                lang(
                    u8"「そして魂は元素へと還る」"s,
                    cnvtalk(u8"And so the soul returns to the element."s)),
                lang(
                    u8"「高らかに我が名を唱えよ。屍に炎と安息を」"s,
                    cnvtalk(
                        u8"Chant my name proudly. Flame and eternal rest for the dead."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(u8"「もっと！もっと！」"s, cnvtalk(u8"More! More!"s)),
                lang(
                    u8"「死んじゃったよ！たよ！」"s,
                    cnvtalk(u8"It's dead! Dead!"s)),
                lang(
                    u8"「うっみゅーうみゅうみゅ」"s,
                    cnvtalk(u8"Meoow mew mew."s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(u8"「フハハハ！」"s, cnvtalk(u8"Mwahaha!"s)),
                lang(
                    u8"「逝け！逝け！フハハハッ！」"s,
                    cnvtalk(u8"Die! Die! Mwahahaha!"s)),
                lang(u8"「フハーン！」"s, cnvtalk(u8"Muhan!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                    u8"「や、やるじゃない」"s,
                    cnvtalk(u8"N-Not bad, for you"s)),
                lang(
                    u8"「や、やめてよ。気持ち悪い」"s,
                    cnvtalk(u8"S-Stop it. Disgusting..."s)),
                lang(
                    u8"「こっち来ないで！」"s,
                    cnvtalk(u8"Don't look at me!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(u8"「汚れたね」"s, cnvtalk(u8"You got dirty."s)),
                lang(u8"「ほどほどに」"s, cnvtalk(u8"Don't kill too much."s)),
                lang(
                    u8"「…これが…君の望んでいた結果？」"s,
                    cnvtalk(u8"...are you satisfied now?"s)));
        }
    }
    if (prm_408 == 10)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「短い命の多くを無駄な眠りに費やすとは、生身の体とは不自由なものだ。だが今はそう、休むがいい。また私に仕えるために」"s,
                cnvtalk(
                    u8"Flesh and blood, how pathetic to waste much of your limited life sleeping. But rest well for now, for you will need to serve me again."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「いいわ、少しの間だけ首枷を外してあげる。存分に休息を楽しみなさい」"s,
                cnvtalk(
                    u8"Fine, I'll unshackle you for a little while. Enjoy your sleep. But remember kitty, if you cheat on me in your dream, you'll never see a daylight again."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「旅の疲れを癒すがよい。我が費えることなき紅蓮の炎が、夜のとばりに紛れる邪なる者から汝を守るであろう」"s,
                cnvtalk(
                    u8"Relieve your fatigue. May the eternal flame protects you from filthy beings that crawl in the shroud of night."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「寝るの？本当に寝るの？おやつみ！」"s,
                cnvtalk(
                    u8"Are you going to sleep? Really sleepy? Good night!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハハハハ。付いて行くぞぉ、夢の中までも」"s,
                cnvtalk(u8"Muwahaha! I'll be following you, to your dream."s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「お、おやすみのキスなんて…絶対にやだからね！」"s,
                cnvtalk(u8"I-I'll never give you a good night kiss...ever!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「おやすみ…明日…また朗らかな芽を吹いておくれ」"s,
                cnvtalk(
                    u8"Good night...May a bright sprout brought forth tomorrow... "s)));
        }
    }
    if (prm_408 == 11)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「戻ってきたか。案外ホネのある奴だな」"s,
                cnvtalk(
                    u8"Ah, you've returned. You're tougher than I thought."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「どこホッツキ歩いてたのよ。もっと調教が必要ね」"s,
                cnvtalk(
                    u8"Where were you until now? You need more breaking, it seems."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「定命の者よ、よくぞ戻ってきた」"s,
                cnvtalk(
                    u8"And so the mortal returns. You shall serve me again."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「みゃみゃ？帰って来たの？来たの？たくさん待ってたよ！」"s,
                cnvtalk(u8"Weeee♪ You are back? You are back!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハハハハハ！！おかえり」"s,
                cnvtalk(u8"Muwahahahahaha! Welcome back."s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「べ、別にアンタが帰ってくるのを待ってたんじゃないからね！」"s,
                cnvtalk(u8"N-no...I-I wasn't looking for you! Silly!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「おかえり…待っていた」"s,
                cnvtalk(u8"Welcome back...I was...waiting for you."s)));
        }
    }
    if (prm_408 == 5)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「入信者か。私の名を貶めないよう励むがいい」"s,
                cnvtalk(
                    u8"Oh, someone comes to me finally. Devote yourself to my tasks, you'll be rewarded greatly, maybe."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「私を選んだのは正解よ。たっぷり可愛がってあげるわ、子猫ちゃん」"s,
                cnvtalk(
                    u8"You know, you've made a right choice. I will treat you with great love, little kitty."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「我が期待に応えて見せよ」"s,
                cnvtalk(u8"Do not fail me, servant."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「わ〜ほんとに信じてくれるの？くれるの？」"s,
                cnvtalk(
                    u8"Weee! You really have faith in me? Do you really?"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハッハハハハ。逃がさんぞ！」"s,
                cnvtalk(u8"Muwahahahahaha. You're mine!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「べ、別にアンタの活躍なんて期待してないんだからねっ」"s,
                cnvtalk(
                    u8"I-I don't expect you to be my servant...I-I r-really don't, you silly!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「よくきたね…期待…しているよ」"s,
                cnvtalk(u8"Welcome...I have...expectations on you..."s)));
        }
    }
    if (prm_408 == 1)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「やってくれたな。裏切り者め！」"s,
                cnvtalk(u8"Great, a trator."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「アハハ。馬鹿ね。私なしで生きていくの？」"s,
                cnvtalk(u8"Huh, fool. A life without me is all but empty."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「我を裏切ると？愚かなり」"s,
                cnvtalk(
                    u8"Remember mortal, a betrayal is not something I can forgive."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「うみみやゅっ！裏切っちゃうの？ちゃうの？」"s,
                cnvtalk(u8"Mewmewmew! Really betray me? Really betray me?"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フフッフフッフハハハハハ！」"s,
                cnvtalk(u8"Muwahahahahahahaha!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「な、何よ。アンタなんか、いなくたって寂しくないんだからね！」"s,
                cnvtalk(u8"I-I don't miss you. I-I really don't!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「裏切り…許さない…」"s,
                cnvtalk(u8"A trator...I can't...tolerate...."s)));
        }
    }
    if (prm_408 == 2)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「やるじゃないか。見直したよ」"s,
                cnvtalk(
                    u8"Well done. After all, you might be useful than I thought."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「褒めてあげるわ。私の可愛い小さなお人形さん」"s,
                cnvtalk(u8"Oh my little puppet, you serve me well."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「良し。汝の行いは覚えておこう」"s,
                cnvtalk(u8"Impressive. Your action shall be remembered."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「わおっ♪嬉しい！好き！大好き！」"s,
                cnvtalk(u8"Weeee! I'm so happy. I like you! I like you!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハハッ、いいぞいいぞ」"s,
                cnvtalk(u8"Muwahaha muwaha. Good. Good!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「な、なによ。ほ、褒めてなんかあげないわよ！」"s,
                cnvtalk(u8"W-What? I-I'm not gonna praise you. I'm not!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「よくやった…ほんとに…」"s,
                cnvtalk(u8"Good work...truly..."s)));
        }
    }
    if (prm_408 == 3)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「馬鹿にしてくれたじゃないか」"s,
                cnvtalk(u8"Heh, Nice try."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「やってくれたわね、ゴミの分際で。お仕置きよ」"s,
                cnvtalk(u8"Bad bad puppy. I need to punish you."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「汝の愚かな試みの代償を味わうがよい」"s,
                cnvtalk(
                    u8"You shall pay a painful price for your foolish try."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「バカバカバカ！バカ！」"s,
                cnvtalk(u8"Stupid stupid! Stupid!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハハハハッ、弱い弱い」"s,
                cnvtalk(u8"Muwahahahaha! Weak! Weak!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「な、なにするのよ！」"s,
                cnvtalk(u8"W-What have you done!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「敵には…容赦しない…絶対」"s,
                cnvtalk(
                    u8"I...will have no mercy..for enemies...absolutely."s)));
        }
    }
    if (prm_408 == 4)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「なかなかの贈り物だ」"s, cnvtalk(u8"Cool. I like it."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「あら、気の利いたものをくれるわね。下心でもあるの？」"s,
                cnvtalk(
                    u8"Oh, such a nice gift. Do you have a secret intention or something?"s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「汝の贈り物に感謝しよう」"s,
                cnvtalk(u8"I appriciate it, mortal."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(u8"「うみみゃぁ！」"s, cnvtalk(u8"Mew mew mew meow!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(u8"「フッハッハハー！」"s, cnvtalk(u8"Muwahahahahaha!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「べ、別に嬉しくなんかないんだからねっ！」"s,
                cnvtalk(u8"I-I'm not that pleased. I-I'm not, you silly!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「ありがたい…とてもいいよ…これ」"s,
                cnvtalk(u8"This is...very good....Thank you."s)));
        }
    }
    if (prm_408 == 6)
    {
        txtmore();
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「お前は忠実なるシモベだ。これを有効に使うがいい」"s,
                cnvtalk(
                    u8"You've been a faithful servant of me. Here, use it wisely."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「下僕のオマエにご褒美よ。大事に使いなさい。」"s,
                cnvtalk(
                    u8"My dear little kitty, you deserve a reward, don't you think?"s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「汝の忠誠に答え、贈り物を授けよう」"s,
                cnvtalk(
                    u8"To answer your loyalty, you shall have this reward."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「これあげるぅ…大切にしてね！…してね！」"s,
                cnvtalk(u8"Here's a gift! For you! Mewmew!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハハハァ！受け取れィ」"s,
                cnvtalk(u8"Muwahahahaha, take it!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「ア、アンタのためにしてあげるんじゃないんだからっ」"s,
                cnvtalk(
                    u8"I-I'm not giving it to you as my gratitude! I-I r-really am not! Silly!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「いいもの…あげる…」"s,
                cnvtalk(u8"Here...there's something for...you..."s)));
        }
    }
    if (prm_408 == 7)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「お前はまさに信者の模範だな」"s,
                cnvtalk(
                    u8"Truly, you are an ideal believer. I'm impressed."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「どこまでも私のために尽くしなさい。オマエは私の一番の奴隷なんだから」"s,
                cnvtalk(
                    u8"Serve me to the end of this pathetic world, for you are my dearest slave."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「我が名を語るに相応しい者が絶えて久しい。汝ならば、あるいは…」"s,
                cnvtalk(
                    u8"Long gone those worthy to bear my name are. But perhaps..."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「どきどきどき。君のこと、好きだよ。だよ！」"s,
                cnvtalk(u8"My heart aches! I think I like you...I guess!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「フハァッハハハハハハ！愉快愉快！」"s,
                cnvtalk(u8"Mwahaha haha! Fun! Fun!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「や、やめてよ。アンタのことなんか、大好きじゃないんだからねっ。バカ！」"s,
                cnvtalk(u8"N-No! Cut it! I-I don't love you. Stupid!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「君は…大切なしもべだ…」"s,
                cnvtalk(u8"You are...my precious valet..."s)));
        }
    }
    if (prm_408 == 8)
    {
        if (prm_407 == 1)
        {
            txt(lang(
                u8"「お前は最愛のシモベだ。その魂を私に捧げろ。お前を必ず守ってみせよう」"s,
                cnvtalk(
                    u8"Sacrifice your very soul to me and I shall protect you with my name."s)));
        }
        if (prm_407 == 2)
        {
            txt(lang(
                u8"「私に従え。全てを委ねろ。オマエの綺麗な顔を傷つけるブタどもは、私がミンチにしてあげるわ」"s,
                cnvtalk(
                    u8"Obey me and surrender everything. I shall mince all the pigs that try to hurt your beautiful face, my kitty."s)));
        }
        if (prm_407 == 3)
        {
            txt(lang(
                u8"「見事なり、定命の者よ。汝を、我が信頼に値する唯一の存在として認めよう」"s,
                cnvtalk(
                    u8"Very impressive, mortal. You shall be the one worthy to carry my name."s)));
        }
        if (prm_407 == 4)
        {
            txt(lang(
                u8"「好き！好き好き好きっ！だいすき！君とは死ぬまでずっと一緒だよ。だよ！」"s,
                cnvtalk(
                    u8"I love you! Love you! You will be with me forever...promise!"s)));
        }
        if (prm_407 == 5)
        {
            txt(lang(
                u8"「ファハハハハハハハハハハハハハー！フワハァー！」"s,
                cnvtalk(u8"Muwahahahaha! Mwaaaahahaha!"s)));
        }
        if (prm_407 == 6)
        {
            txt(lang(
                u8"「べ、別にアンタのこと愛してなんかいないんだからっ。あたしの傍から離れたらしょうちしないからねっ！このバカぁ…！"s,
                cnvtalk(
                    u8"I-I'm not falling l-love with you! D-don't you never ever leave me...okay? You stupid...!"s)));
        }
        if (prm_407 == 7)
        {
            txt(lang(
                u8"「ずっと一緒…だよね？…もう離さない…君が死ぬまで」"s,
                cnvtalk(""s)));
        }
    }
    return;
}
void label_0192()
{
    tmset();
    time_warn = timeGetTime() / 1000;
    time_begin = timeGetTime() / 1000;
    exist(exedir + u8"config.txt"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"config.txt"s,
            exedir + u8"config.txt"s);
    }
    exist(exedir + u8"user\\export.txt"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"export.txt"s,
            exedir + u8"user\\export.txt"s);
    }
    exist(exedir + u8"user\\lastwords.txt"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"lastwords.txt"s,
            exedir + u8"user\\lastwords.txt"s);
    }
    exist(exedir + u8"user\\lastwords-e.txt"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"lastwords-e.txt"s,
            exedir + u8"user\\lastwords-e.txt"s);
    }
    exist(exedir + u8"user\\music\\musiclist.txt"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"musiclist.txt"s,
            exedir + u8"user\\music\\musiclist.txt"s);
    }
    exist(exedir + u8"user\\graphic\\face1.bmp"s);
    if (strsize == -1)
    {
        bcopy(
            exedir + u8"original\\"s + u8"face1.bmp"s,
            exedir + u8"user\\graphic\\face1.bmp"s);
    }
    label_2140();
    SDIM3(s, 160, 40);
    DIM2(p, 100);
    DIM2(rtval, 10);
    SDIM3(rtvaln, 50, 10);
    SDIM3(key_select, 2, 20);
    SDIM2(buff, 10000);
    label_2714();
    label_2715();
    label_2716();
    label_1415();
    if (cfg_fullscreen)
    {
        chgdisp(1, windoww, windowh);
        bgscr(0, windoww, windowh, 0, 0);
        width(windoww, windowh, 0, 0);
    }
    else
    {
        screen(0, windoww, windowh, 0, windowx, windowy);
    }
    gsel(0);
    redraw(0);
    color(0);
    boxf();
    redraw(1);
    onkey_0();
    buffer(3, 1440, 800);
    picload(exedir + u8"\\graphic\\interface"s + devfile + u8".bmp"s, 1);
    buffer(4, windoww, windowh);
    cfg_exlog = 1;
    if (cfg_exlog)
    {
        buffer(8, windoww, windowh);
        p = windoww / 192;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (inf_maxlog); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (p + 1); cnt < cnt_end; ++cnt)
                    {
                        if (cnt == p)
                        {
                            x = (windoww - inf_msgx) % 192;
                        }
                        else
                        {
                            x = 192;
                        }
                        pos(cnt * 192, cnt2 * inf_msgspace);
                        gcopy(
                            3,
                            496,
                            536 + cnt2 % 4 * inf_msgspace,
                            x,
                            inf_msgspace);
                    }
                }
            }
        }
        gsel(0);
    }
    folder = exedir + u8"user\\graphic\\"s;
    buffer(1, 1584, 1200);
    picload(exedir + u8"\\graphic\\item"s + devfile + u8".bmp"s, 1);
    if (inf_tiles != 48)
    {
        pos(0, 0);
        gzoom(33 * inf_tiles, 25 * inf_tiles, 1, 0, 0, 1584, 1200);
    }
    buffer(2, 33 * inf_tiles, 25 * inf_tiles);
    buffer(6, 33 * inf_tiles, 25 * inf_tiles);
    buffer(7, 24, 24);
    buffer(9, 24, 24);
    DIM3(cmapdata, 5, 400);
    DIM2(fixeditemenc, 20);
    DIM2(dir, 5);
    DIM3(dblist, 2, 800);
    DIM2(unlist, 800);
    SDIM3(csv, 1000, 40);
    SDIM1(filemod);
    SDIM2(csvbuff, 10000);
    SDIM3(csvidx, 100, 40);
    SDIM2(inputlog, 100);
    SDIM2(key, 20);
    SDIM2(keylog, 20);
    SDIM3(msg, 120, inf_maxlog);
    SDIM2(msgtemp, 1000);
    SDIM2(msgref, 200);
    SDIM3(randn1, 30, 20);
    SDIM3(randn2, 30, 20);
    SDIM2(select, 200);
    DIM2(n, 40);
    DIM2(rtval, 10);
    DIM3(list, 3, 500);
    SDIM4(listn, 40, 2, 500);
    DIM2(invctrl, 2);
    SDIM4(promptl, 50, 3, 20);
    SDIM3(description, 1000, 3);
    SDIM2(file, 1000);
    SDIM2(folder, 1000);
    SDIM1(msgtempprev);
    DIM3(mef, 9, 200);
    DIM3(adata, 40, 500);
    DIM3(qdata, 20, 500);
    SDIM3(qname, 40, 500);
    DIM2(gdata, 1000);
    DIM2(genetemp, 1000);
    SDIM3(gdatan, 40, 50);
    DIM2(mdatatmp, 100);
    DIM2(mdata, 100);
    SDIM3(mdatan, 20, 2);
    SDIM4(cdatan, 40, 10, 245);
    SDIM2(s1, 1000);
    DIM3(cdata, 500, 245);
    DIM3(sdata, 1200, 245);
    DIM2(spell, 200);
    DIM2(spact, 500);
    DIM2(mat, 400);
    DIM3(inv, 70, 5480);
    DIM2(trait, 500);
    DIM3(itemmemory, 3, 800);
    DIM3(npcmemory, 2, 800);
    DIM2(recipememory, 1200);
    DIM2(invmark, 35);
    DIM2(commark, 3);
    DIM2(feat, 5);
    SDIM2(iname, 40);
    DIM2(val, 10);
    SDIM3(valn, 50, 10);
    DIM3(dirchk, 3, 2);
    dirchk(0, 0) = -1;
    dirchk(1, 0) = 0;
    dirchk(2, 0) = 1;
    dirchk(0, 1) = 1;
    dirchk(1, 1) = 0;
    dirchk(2, 1) = -1;
    DIM2(chatval, 5);
    DIM2(evlist, 10);
    DIM2(matneed, 20);
    DIM3(pcc, 30, 20);
    maxrain = windoww * windowh / 3500;
    DIM2(rainx, maxrain * 2);
    DIM2(rainy, maxrain * 2);
    SDIM1(fltnrace);
    DIM3(card, 4, 1000);
    DIM2(deck, 1000);
    label_0034();
    label_0031();
    label_0478();
    DIM2(idata, 8);
    DIM3(dirxy, 2, 4);
    dirxy(0, 3) = 0;
    dirxy(1, 3) = -1;
    dirxy(0, 0) = 0;
    dirxy(1, 0) = 1;
    dirxy(0, 1) = -1;
    dirxy(1, 1) = 0;
    dirxy(0, 2) = 1;
    dirxy(1, 2) = 0;
    DIM3(c_col, 3, 30);
    c_col(0, 0) = 0;
    c_col(1, 0) = 0;
    c_col(2, 0) = 0;
    c_col(0, 2) = 80;
    c_col(1, 2) = 0;
    c_col(2, 2) = 80;
    c_col(0, 3) = 0;
    c_col(1, 3) = 100;
    c_col(2, 3) = 100;
    c_col(0, 4) = 80;
    c_col(1, 4) = 80;
    c_col(2, 4) = 0;
    c_col(0, 6) = 0;
    c_col(1, 6) = 40;
    c_col(2, 6) = 80;
    c_col(0, 5) = 0;
    c_col(1, 5) = 0;
    c_col(2, 5) = 80;
    c_col(0, 7) = 100;
    c_col(1, 7) = 101;
    c_col(2, 7) = 102;
    c_col(0, 8) = 70;
    c_col(1, 8) = 100;
    c_col(2, 8) = 40;
    c_col(0, 9) = 100;
    c_col(1, 9) = 50;
    c_col(2, 9) = 50;
    c_col(0, 10) = 0;
    c_col(1, 10) = 60;
    c_col(2, 10) = 70;
    c_col(0, 11) = 20;
    c_col(1, 11) = 40;
    c_col(2, 11) = 100;
    c_col(0, 12) = 0;
    c_col(1, 12) = 0;
    c_col(2, 12) = 0;
    c_col(0, 13) = 30;
    c_col(1, 13) = 40;
    c_col(2, 13) = 70;
    c_col(0, 14) = 150;
    c_col(1, 14) = 20;
    c_col(2, 14) = 150;
    c_col(0, 15) = 50;
    c_col(1, 15) = 50;
    c_col(2, 15) = 50;
    c_col(0, 16) = 0;
    c_col(1, 16) = 30;
    c_col(2, 16) = 30;
    c_col(0, 17) = 30;
    c_col(1, 17) = 30;
    c_col(2, 17) = 0;
    c_col(0, 18) = 30;
    c_col(1, 18) = 60;
    c_col(2, 18) = 0;
    c_col(0, 19) = 40;
    c_col(1, 19) = 0;
    c_col(2, 19) = 40;
    c_col(0, 20) = 45;
    c_col(1, 20) = 5;
    c_col(2, 20) = 95;
    DIM3(dirchk, 3, 2);
    dirchk(0, 0) = -1;
    dirchk(1, 0) = 0;
    dirchk(2, 0) = 1;
    dirchk(0, 1) = 1;
    dirchk(1, 1) = 0;
    dirchk(2, 1) = -1;
    DIM2(val_skill, 5);
    SDIM3(valn_skill, 40, 3);
    DIM2(cs_posbk, 4);
    DIM2(floorstack, 400);
    SDIM3(key_list, 2, 20);
    SDIM2(playerheader, 100);
    SDIM1(artifactlocation);
    SDIM1(newsbuff);
    SDIM3(soundfile, 30, 122);
    SDIM3(musicfile, 30, 97);
    DIM3(slight, inf_screenw + 4, inf_screenh + 4);
    DIM3(slightbk, inf_screenw + 4, inf_screenh + 4);
    gsel(3);
    gmode(0);
    redraw(0);
    color(1, 1, 1);
    font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (18); cnt < cnt_end; ++cnt)
        {
            pos(cnt * 24 + 72, 30);
            gcopy(3, 0, 30, 24, 18);
            pos(cnt * 24 + 77, 31);
            color(50, 60, 80);
            bmes(key_select(cnt), 250, 240, 230);
        }
    }
    gsel(0);
    gmode(2);
    text_set();
    notesel(msg_log);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (inf_maxlog - 2); cnt < cnt_end; ++cnt)
        {
            noteadd(""s);
        }
    }
    noteadd(lang(u8"■メッセージログ"s, u8"<Message Log>"s));
    noteadd(lang(
        u8"過去の20行分のメッセージが表示されます。"s,
        u8"Past 20 message lines are logged."s));
    fmode = 10;
    label_2107();
    tc = 0;
    tcol_at_txtfunc(0) = 255;
    tcol_at_txtfunc(1) = 255;
    tcol_at_txtfunc(2) = 255;
    invctrl(0) = 0;
    invctrl(1) = 0;
    pos(-40, -40);
    mesbox(keylog, 0, 0, 1, 10);
    SDIM1(buffboard);
    notesel(buffboard);
    noteload(exedir + u8"data\\board.txt"s);
    SDIM1(filter_item);
    SDIM1(rffilter_item);
    SDIM1(ioriginalnameref);
    SDIM1(ioriginalnameref2);
    SDIM1(iknownnameref);
    SDIM1(ialphanameref);
    DIM2(irandomname, 800);
    DIM1(icolref);
    DIM2(keybd_st, 256);
    DIM2(trate, 8);
    SDIM1(filtern);
    SDIM1(filter_creature);
    SDIM2(netbuf, 20000);
    label_2110();
    label_2111();
    label_2296();
    label_2655();
    label_1276();
    label_0202();
    label_0030();
    label_1752();
    label_1618();
    label_0221();
    gdata(8) = rnd(800) + 2;
    gdata(9) = rnd(200) + 2;
    label_1883();
    label_1277();
    label_0041();
    label_0026();
    label_0029();
    label_0262();
    label_0258();
    label_0246();
    label_1572();
    label_0149();
    label_1921();
    label_0268();
    label_0140();
    label_1713();
    label_0002();
    label_2105();
    if (cfg_music == 1)
    {
        DMINIT();
        if (stat == 0)
        {
            cfg_music = 2;
        }
    }
    if (cfg_sound == 1)
    {
        DSINIT();
        if (stat == 0)
        {
            cfg_sound = 2;
        }
    }
    if (cfg_joypad == 1)
    {
        DIINIT();
        DIGETJOYNUM();
        if (stat == 0)
        {
            cfg_joypad = 0;
        }
    }
    label_0066();
    label_0067();
    mainskill(0) = 173;
    mainskill(1) = 106;
    mainskill(2) = 108;
    DIM3(cycle, 15, 5);
    SDIM3(cyclekey, 5, 15);
    cycle(0, 0) = 1;
    cycle(1, 0) = 2;
    cycle(2, 0) = 5;
    cycle(3, 0) = 7;
    cycle(4, 0) = 8;
    cycle(5, 0) = 9;
    cycle(6, 0) = 14;
    cycle(7, 0) = 15;
    cycle(8, 0) = 17;
    cycle(9, 0) = 26;
    cycle(10, 0) = -1;
    cycle(0, 1) = 1;
    cycle(1, 1) = 5;
    cycle(2, 1) = 7;
    cycle(3, 1) = 8;
    cycle(4, 1) = 14;
    cycle(5, 1) = -1;
    cycle(0, 2) = 10;
    cycle(1, 2) = 25;
    cycle(2, 2) = -1;
    cycle(0, 3) = 22;
    cycle(1, 3) = 24;
    cycle(2, 3) = -1;
    cycle(0, 4) = 2;
    cycle(1, 4) = -1;
    cyclemax(0) = 9;
    cyclemax(1) = 4;
    cyclemax(2) = 1;
    cyclemax(3) = 1;
    cyclemax(4) = 0;
    shadowmap(0) = 0;
    shadowmap(1) = 9;
    shadowmap(2) = 10;
    shadowmap(3) = 5;
    shadowmap(4) = 12;
    shadowmap(5) = 7;
    shadowmap(6) = 0;
    shadowmap(7) = 1;
    shadowmap(8) = 11;
    shadowmap(9) = 0;
    shadowmap(10) = 6;
    shadowmap(11) = 3;
    shadowmap(12) = 8;
    shadowmap(13) = 4;
    shadowmap(14) = 2;
    shadowmap(15) = 0;
    shadowmap(16) = 0;
    lastctrl = 1;
    DIM2(invicon, 40);
    SDIM3(invkey, 4, 40);
    invkey(0) = "";
    invkey(1) = ""s + key_inventory;
    invkey(2) = ""s + key_drop;
    invkey(3) = "";
    invkey(4) = "";
    invkey(5) = ""s + key_eat;
    invkey(6) = "";
    invkey(7) = ""s + key_read;
    invkey(8) = ""s + key_drink;
    invkey(9) = ""s + key_zap;
    invkey(10) = "";
    invkey(11) = "";
    invkey(12) = "";
    invkey(13) = "";
    invkey(14) = ""s + key_use;
    invkey(15) = ""s + key_open;
    invkey(16) = "";
    invkey(17) = ""s + key_dip;
    invkey(26) = ""s + key_throw;
    invicon(0) = -1;
    invicon(1) = 7;
    invicon(2) = 8;
    invicon(3) = -1;
    invicon(4) = -1;
    invicon(5) = 2;
    invicon(6) = -1;
    invicon(7) = 3;
    invicon(8) = 0;
    invicon(9) = 1;
    invicon(10) = 17;
    invicon(11) = -1;
    invicon(12) = -1;
    invicon(13) = -1;
    invicon(14) = 5;
    invicon(15) = 4;
    invicon(16) = -1;
    invicon(17) = 6;
    invicon(18) = -1;
    invicon(19) = -1;
    invicon(20) = -1;
    invicon(21) = -1;
    invicon(22) = 17;
    invicon(23) = -1;
    invicon(24) = 17;
    invicon(25) = 17;
    invicon(26) = 18;
    invicon(27) = -1;
    invicon(28) = -1;
    invicon(29) = -1;
    if (cfg_autonumlock)
    {
        GetKeyboardState(keybd_st);
        if (peek(keybd_st, 144) == 1)
        {
            keybd_event(144);
            keybd_event(144, 0, 2);
        }
    }
    label_2731();
    return;
}
void label_0193()
{
    if (cfg_music == 1)
    {
        DMEND();
    }
    if (cfg_sound == 1)
    {
        DSEND();
    }
    if (ieopen)
    {
        delcom(ie_event);
        delcom(ie);
    }
    if (cfg_autonumlock)
    {
        keybd_event(144);
        keybd_event(144, 0, 2);
    }
    if (mutex_handle != 0)
    {
        CloseHandle(mutex_handle);
    }
    end();
    return;
}
void create_pcpic(int prm_409, int prm_410)
{
    elona::prm_409 = prm_409;
    buffer(10 + prm_409, 384, 198);
    color(0, 0, 0);
    boxf();
    if (pcc(15, prm_409) == 0)
    {
        pcc(15, prm_409) = cdata(8, prm_409) + 1;
        pcc(14, prm_409) = cdata(8, prm_409) + 7;
        pcc(1, prm_409) = 2 + rnd(21) * 1000;
        pcc(9, prm_409) = 1 + rnd(21) * 1000;
        pcc(7, prm_409) = 1 + rnd(21) * 1000;
        pcc(16, prm_409) = 1;
    }
    if (prm_410 == 1)
    {
        pcc(4, prm_409) = 0;
        pcc(2, prm_409) = 0;
        pcc(6, prm_409) = 0;
        pcc(3, prm_409) = 0;
        pcc(8, prm_409) = 0;
        pcc(5, prm_409) = 0;
        {
            int cnt = 100;
            for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
            {
                if (cdata(cnt, prm_409) % 10000 != 0)
                {
                    i_at_m38 = cdata(cnt, prm_409) % 10000 - 1;
                    body_at_m38 = iequiploc(i_at_m38);
                    label_0196();
                }
            }
        }
    }
    pcc(10, prm_409) = pcc(1, prm_409) / 1000 * 1000 + pcc(10, prm_409) % 1000;
    pcc(14, prm_409) = pcc(15, prm_409) / 1000 * 1000 + pcc(14, prm_409) % 1000;
    if (prm_410 != 0)
    {
        if (pcc(24, prm_409) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"mantle"s + u8"_"s
                + pcc(4, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"mantle"s + u8"_"s
                        + pcc(4, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(4, prm_409) / 1000),
                    c_col(1, pcc(4, prm_409) / 1000),
                    c_col(2, pcc(4, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"hairbk"s + u8"_"s
        + pcc(1, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"hairbk"s + u8"_"s
                + pcc(1, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(1, prm_409) / 1000),
            c_col(1, pcc(1, prm_409) / 1000),
            c_col(2, pcc(1, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    if (prm_409 == 0 && gdata(183) != 0 && pcc(16, prm_409) != 0)
    {
        exist(
            exedir + u8"\\graphic\\pcc_"s + u8"ridebk"s + u8"_"s
            + pcc(16, prm_409) % 1000 + u8".bmp"s);
        if (strsize != -1)
        {
            pos(128, 0);
            picload(
                exedir + u8"\\graphic\\pcc_"s + u8"ridebk"s + u8"_"s
                    + pcc(16, prm_409) % 1000 + u8".bmp"s,
                1);
            color(0, 0, 0);
            boxf(256, 0, 384, 198);
            gmode(4 - 1, -1, 256);
            color(43, 133, 133);
            pget(128, 0);
            pos(256, 0);
            gcopy(10 + prm_409, 128, 0, 128, 198);
            pos(256, 0);
            gfini(128, 198);
            gfdec2(
                c_col(0, pcc(16, prm_409) / 1000),
                c_col(1, pcc(16, prm_409) / 1000),
                c_col(2, pcc(16, prm_409) / 1000));
            gmode(2);
            color(0, 0, 0);
            pos(0, 0);
            gcopy(10 + prm_409, 256, 0, 128, 198);
        }
    }
    else
    {
        exist(
            exedir + u8"\\graphic\\pcc_"s + u8"body"s + u8"_"s
            + pcc(15, prm_409) % 1000 + u8".bmp"s);
        if (strsize != -1)
        {
            pos(128, 0);
            picload(
                exedir + u8"\\graphic\\pcc_"s + u8"body"s + u8"_"s
                    + pcc(15, prm_409) % 1000 + u8".bmp"s,
                1);
            color(0, 0, 0);
            boxf(256, 0, 384, 198);
            gmode(4 - 1, -1, 256);
            color(43, 133, 133);
            pget(128, 0);
            pos(256, 0);
            gcopy(10 + prm_409, 128, 0, 128, 198);
            pos(256, 0);
            gfini(128, 198);
            gfdec2(
                c_col(0, pcc(15, prm_409) / 1000),
                c_col(1, pcc(15, prm_409) / 1000),
                c_col(2, pcc(15, prm_409) / 1000));
            gmode(2);
            color(0, 0, 0);
            pos(0, 0);
            gcopy(10 + prm_409, 256, 0, 128, 198);
        }
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"eye"s + u8"_"s
        + pcc(14, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"eye"s + u8"_"s
                + pcc(14, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(14, prm_409) / 1000),
            c_col(1, pcc(14, prm_409) / 1000),
            c_col(2, pcc(14, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    if (prm_409 == 0 && gdata(183) != 0 && pcc(16, prm_409) != 0)
    {
    }
    else
    {
        exist(
            exedir + u8"\\graphic\\pcc_"s + u8"pants"s + u8"_"s
            + pcc(7, prm_409) % 1000 + u8".bmp"s);
        if (strsize != -1)
        {
            pos(128, 0);
            picload(
                exedir + u8"\\graphic\\pcc_"s + u8"pants"s + u8"_"s
                    + pcc(7, prm_409) % 1000 + u8".bmp"s,
                1);
            color(0, 0, 0);
            boxf(256, 0, 384, 198);
            gmode(4 - 1, -1, 256);
            color(43, 133, 133);
            pget(128, 0);
            pos(256, 0);
            gcopy(10 + prm_409, 128, 0, 128, 198);
            pos(256, 0);
            gfini(128, 198);
            gfdec2(
                c_col(0, pcc(7, prm_409) / 1000),
                c_col(1, pcc(7, prm_409) / 1000),
                c_col(2, pcc(7, prm_409) / 1000));
            gmode(2);
            color(0, 0, 0);
            pos(0, 0);
            gcopy(10 + prm_409, 256, 0, 128, 198);
        }
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"cloth"s + u8"_"s
        + pcc(9, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"cloth"s + u8"_"s
                + pcc(9, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(9, prm_409) / 1000),
            c_col(1, pcc(9, prm_409) / 1000),
            c_col(2, pcc(9, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    if (prm_410 != 0)
    {
        if (pcc(20, prm_409) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"chest"s + u8"_"s
                + pcc(2, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"chest"s + u8"_"s
                        + pcc(2, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(2, prm_409) / 1000),
                    c_col(1, pcc(2, prm_409) / 1000),
                    c_col(2, pcc(2, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
        if (prm_409 == 0 && gdata(183) != 0 && pcc(16, prm_409) != 0)
        {
        }
        else
        {
            if (pcc(21, prm_409) == 0)
            {
                exist(
                    exedir + u8"\\graphic\\pcc_"s + u8"leg"s + u8"_"s
                    + pcc(3, prm_409) % 1000 + u8".bmp"s);
                if (strsize != -1)
                {
                    pos(128, 0);
                    picload(
                        exedir + u8"\\graphic\\pcc_"s + u8"leg"s + u8"_"s
                            + pcc(3, prm_409) % 1000 + u8".bmp"s,
                        1);
                    color(0, 0, 0);
                    boxf(256, 0, 384, 198);
                    gmode(4 - 1, -1, 256);
                    color(43, 133, 133);
                    pget(128, 0);
                    pos(256, 0);
                    gcopy(10 + prm_409, 128, 0, 128, 198);
                    pos(256, 0);
                    gfini(128, 198);
                    gfdec2(
                        c_col(0, pcc(3, prm_409) / 1000),
                        c_col(1, pcc(3, prm_409) / 1000),
                        c_col(2, pcc(3, prm_409) / 1000));
                    gmode(2);
                    color(0, 0, 0);
                    pos(0, 0);
                    gcopy(10 + prm_409, 256, 0, 128, 198);
                }
            }
        }
        if (pcc(22, prm_409) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"belt"s + u8"_"s
                + pcc(5, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"belt"s + u8"_"s
                        + pcc(5, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(5, prm_409) / 1000),
                    c_col(1, pcc(5, prm_409) / 1000),
                    c_col(2, pcc(5, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
        if (pcc(23, prm_409) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"glove"s + u8"_"s
                + pcc(8, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"glove"s + u8"_"s
                        + pcc(8, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(8, prm_409) / 1000),
                    c_col(1, pcc(8, prm_409) / 1000),
                    c_col(2, pcc(8, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
    }
    if (prm_409 == 0)
    {
        if (gdata(183) != 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"ride"s + u8"_"s
                + pcc(16, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"ride"s + u8"_"s
                        + pcc(16, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(16, prm_409) / 1000),
                    c_col(1, pcc(16, prm_409) / 1000),
                    c_col(2, pcc(16, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
    }
    if (prm_410 != 0)
    {
        if (pcc(24, prm_409) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + u8"mantlebk"s + u8"_"s
                + pcc(4, prm_409) % 1000 + u8".bmp"s);
            if (strsize != -1)
            {
                pos(128, 0);
                picload(
                    exedir + u8"\\graphic\\pcc_"s + u8"mantlebk"s + u8"_"s
                        + pcc(4, prm_409) % 1000 + u8".bmp"s,
                    1);
                color(0, 0, 0);
                boxf(256, 0, 384, 198);
                gmode(4 - 1, -1, 256);
                color(43, 133, 133);
                pget(128, 0);
                pos(256, 0);
                gcopy(10 + prm_409, 128, 0, 128, 198);
                pos(256, 0);
                gfini(128, 198);
                gfdec2(
                    c_col(0, pcc(4, prm_409) / 1000),
                    c_col(1, pcc(4, prm_409) / 1000),
                    c_col(2, pcc(4, prm_409) / 1000));
                gmode(2);
                color(0, 0, 0);
                pos(0, 0);
                gcopy(10 + prm_409, 256, 0, 128, 198);
            }
        }
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"hair"s + u8"_"s
        + pcc(1, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"hair"s + u8"_"s
                + pcc(1, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(1, prm_409) / 1000),
            c_col(1, pcc(1, prm_409) / 1000),
            c_col(2, pcc(1, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"subhair"s + u8"_"s
        + pcc(10, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"subhair"s + u8"_"s
                + pcc(10, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(10, prm_409) / 1000),
            c_col(1, pcc(10, prm_409) / 1000),
            c_col(2, pcc(10, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
        + pcc(11, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
                + pcc(11, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(11, prm_409) / 1000),
            c_col(1, pcc(11, prm_409) / 1000),
            c_col(2, pcc(11, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
        + pcc(12, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
                + pcc(12, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(12, prm_409) / 1000),
            c_col(1, pcc(12, prm_409) / 1000),
            c_col(2, pcc(12, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    exist(
        exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
        + pcc(13, prm_409) % 1000 + u8".bmp"s);
    if (strsize != -1)
    {
        pos(128, 0);
        picload(
            exedir + u8"\\graphic\\pcc_"s + u8"etc"s + u8"_"s
                + pcc(13, prm_409) % 1000 + u8".bmp"s,
            1);
        color(0, 0, 0);
        boxf(256, 0, 384, 198);
        gmode(4 - 1, -1, 256);
        color(43, 133, 133);
        pget(128, 0);
        pos(256, 0);
        gcopy(10 + prm_409, 128, 0, 128, 198);
        pos(256, 0);
        gfini(128, 198);
        gfdec2(
            c_col(0, pcc(13, prm_409) / 1000),
            c_col(1, pcc(13, prm_409) / 1000),
            c_col(2, pcc(13, prm_409) / 1000));
        gmode(2);
        color(0, 0, 0);
        pos(0, 0);
        gcopy(10 + prm_409, 256, 0, 128, 198);
    }
    gsel(0);
    return;
}
void label_0196()
{
    int p_at_m38 = 0;
    p_at_m38 = refitem(inv(3, i_at_m38), 18);
    if (p_at_m38 == 0)
    {
        p_at_m38 = 1;
    }
    if (body_at_m38 == 1)
    {
        return;
    }
    if (body_at_m38 == 3)
    {
        pcc(4, prm_409) = p_at_m38 + inv(22, i_at_m38) * 1000;
        return;
    }
    if (body_at_m38 == 4)
    {
        pcc(2, prm_409) = p_at_m38 + inv(22, i_at_m38) * 1000;
        return;
    }
    if (body_at_m38 == 9)
    {
        pcc(3, prm_409) = p_at_m38 + inv(22, i_at_m38) * 1000;
        return;
    }
    if (body_at_m38 == 7)
    {
        pcc(8, prm_409) = p_at_m38 + inv(22, i_at_m38) * 1000;
        return;
    }
    if (body_at_m38 == 8)
    {
        pcc(5, prm_409) = p_at_m38 + inv(22, i_at_m38) * 1000;
        return;
    }
    return;
}
void addefmap(
    int prm_411,
    int prm_412,
    int prm_413,
    int prm_414,
    int prm_415,
    int prm_416)
{
    efmap(0, prm_411, prm_412) = prm_413;
    efmap(1, prm_411, prm_412) = prm_414;
    efmap(2, prm_411, prm_412) = prm_415;
    efmap(3, prm_411, prm_412) = prm_416;
    return;
}
void label_0200()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
        {
            if (rnd(2) == 0)
            {
                cloud(2, cnt) = 288;
                cloud(3, cnt) = 1040;
                cloud(4, cnt) = 208;
                cloud(5, cnt) = 160;
            }
            else
            {
                cloud(2, cnt) = 0;
                cloud(3, cnt) = 976;
                cloud(4, cnt) = 288;
                cloud(5, cnt) = 224;
            }
            cloud(0, cnt) = rnd(100) + cnt * 200 + 100000;
            cloud(1, cnt) = rnd(100) + cnt / 5 * 200 + 100000;
        }
    }
    return;
}
void label_0201()
{
    DIM3(chipm, 8, 825);
    if (mdata(2) == 0)
    {
        chipm(5, 233) = 0;
        chipm(6, 233) = 0;
        {
            int cnt = 26;
            for (int cnt_end = cnt + (7); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 4;
            }
        }
        chipm(0, 568) = 4;
        chipm(0, 569) = 4;
        chipm(0, 570) = 4;
        {
            int cnt = 99;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 7;
            }
        }
        {
            int cnt = 165;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 8;
            }
        }
        {
            int cnt = 198;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 4;
            }
        }
        {
            int cnt = 594;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 7;
            }
        }
        {
            int cnt = 599;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 8;
            }
        }
        {
            int cnt = 107;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                chipm(1, cnt) = 9;
            }
        }
        {
            int cnt = 173;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                chipm(1, cnt) = 9;
            }
        }
        {
            int cnt = 206;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                chipm(1, cnt) = 9;
            }
        }
        chipm(0, 604) = 10;
        {
            int cnt = 605;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 10;
                chipm(1, cnt) = 9;
            }
        }
        {
            int cnt = 396;
            for (int cnt_end = cnt + (429); cnt < cnt_end; ++cnt)
            {
                chipm(7, cnt) = 5;
            }
        }
        {
            int cnt = 264;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(7, cnt) = 4;
            }
        }
        chipm(5, 135) = 8;
        chipm(5, 137) = 16;
        chipm(5, 140) = 6;
        chipm(5, 145) = 16;
        chipm(5, 149) = 16;
    }
    if (mdata(2) == 1)
    {
        {
            int cnt = 396;
            for (int cnt_end = cnt + (429); cnt < cnt_end; ++cnt)
            {
                chipm(7, cnt) = 5;
            }
        }
        chipm(5, 233) = 56;
        chipm(6, 233) = 48;
        chipm(7, 594) = 4;
        chipm(7, 628) = 4;
        chipm(7, 637) = 4;
        chipm(7, 641) = 4;
        chipm(7, 733) = 4;
        {
            int cnt = 45;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 4;
            }
        }
        chipm(0, 82) = 4;
        chipm(0, 83) = 4;
        chipm(0, 84) = 4;
        {
            int cnt = 462;
            for (int cnt_end = cnt + (66); cnt < cnt_end; ++cnt)
            {
                chipm(2, cnt) = 1;
                chipm(2, cnt - 66) = 1;
            }
        }
        {
            int cnt = 462;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(2, cnt) = 2;
                chipm(2, cnt - 66) = 2;
            }
        }
        chipm(0, 29) = 1;
        chipm(0, 30) = 2;
        chipm(0, 31) = 2;
        chipm(0, 464) = 6;
        chipm(3, 550) = 2;
        chipm(2, 550) = 1;
        chipm(0, 165) = 3;
        chipm(3, 165) = 3;
        chipm(0, 168) = 3;
        chipm(3, 168) = 3;
        chipm(0, 171) = 3;
        chipm(1, 171) = 5;
        chipm(3, 171) = 3;
        chipm(0, 594) = 3;
        chipm(3, 594) = 3;
    }
    if (mdata(2) == 2)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (13); cnt < cnt_end; ++cnt)
                    {
                        chipm(0, cnt2 * 33 + cnt + 20) = 4;
                    }
                }
            }
        }
        {
            int cnt = 33;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(0, cnt) = 4;
            }
        }
        {
            int cnt = 396;
            for (int cnt_end = cnt + (429); cnt < cnt_end; ++cnt)
            {
                chipm(7, cnt) = 5;
            }
        }
        chipm(5, 233) = 56;
        chipm(6, 233) = 48;
        chipm(7, 594) = 4;
        {
            int cnt = 462;
            for (int cnt_end = cnt + (66); cnt < cnt_end; ++cnt)
            {
                chipm(2, cnt) = 1;
                chipm(2, cnt - 66) = 1;
            }
        }
        {
            int cnt = 462;
            for (int cnt_end = cnt + (33); cnt < cnt_end; ++cnt)
            {
                chipm(2, cnt) = 2;
                chipm(2, cnt - 66) = 2;
            }
        }
        chipm(3, 550) = 2;
        chipm(2, 550) = 1;
        chipm(0, 165) = 3;
        chipm(3, 165) = 3;
        chipm(0, 168) = 3;
        chipm(3, 168) = 3;
        chipm(0, 171) = 3;
        chipm(1, 171) = 5;
        chipm(3, 171) = 3;
        chipm(0, 594) = 3;
        chipm(3, 594) = 3;
        chipm(2, 476) = 0;
        chipm(2, 509) = 0;
    }
    return;
}
void label_0202()
{
    DIM3(cloud, 6, 12);
    DIM3(mefsubref, 6, 6);
    mefsubref(0, 1) = 144;
    mefsubref(1, 1) = 624;
    mefsubref(0, 2) = 272;
    mefsubref(1, 2) = 624;
    mefsubref(2, 2) = 1;
    mefsubref(0, 3) = 304;
    mefsubref(1, 3) = 624;
    mefsubref(2, 3) = 1;
    mefsubref(0, 4) = 368;
    mefsubref(1, 4) = 624;
    mefsubref(0, 5) = 464;
    mefsubref(1, 5) = 624;
    DIM3(lightdata, 10, 20);
    lightdata(0, 4) = 3;
    lightdata(1, 4) = 0;
    lightdata(2, 4) = 80;
    lightdata(3, 4) = 0;
    lightdata(4, 4) = 6;
    lightdata(5, 4) = 40;
    lightdata(0, 3) = 3;
    lightdata(1, 3) = 0;
    lightdata(2, 3) = 100;
    lightdata(3, 3) = 30;
    lightdata(4, 3) = 8;
    lightdata(5, 3) = 20;
    lightdata(0, 1) = 1;
    lightdata(1, 1) = 1;
    lightdata(2, 1) = 50;
    lightdata(3, 1) = 8;
    lightdata(4, 1) = 8;
    lightdata(5, 1) = 50;
    lightdata(6, 1) = 1;
    lightdata(0, 2) = 1;
    lightdata(1, 2) = 1;
    lightdata(2, 2) = 70;
    lightdata(3, 2) = 28;
    lightdata(4, 2) = 8;
    lightdata(5, 2) = 70;
    lightdata(6, 2) = 1;
    lightdata(0, 5) = 11;
    lightdata(1, 5) = 0;
    lightdata(2, 5) = 140;
    lightdata(3, 5) = 48;
    lightdata(4, 5) = 10;
    lightdata(5, 5) = 20;
    lightdata(0, 14) = 0;
    lightdata(1, 14) = 0;
    lightdata(2, 14) = 140;
    lightdata(3, 14) = 62;
    lightdata(4, 14) = 10;
    lightdata(5, 14) = 20;
    lightdata(0, 15) = 11;
    lightdata(1, 15) = 0;
    lightdata(2, 15) = 100;
    lightdata(3, 15) = 72;
    lightdata(4, 15) = 10;
    lightdata(5, 15) = 20;
    lightdata(0, 6) = 5;
    lightdata(1, 6) = 1;
    lightdata(2, 6) = 170;
    lightdata(3, 6) = 4;
    lightdata(4, 6) = 2;
    lightdata(5, 6) = 80;
    lightdata(6, 6) = 1;
    lightdata(0, 7) = 9;
    lightdata(1, 7) = 1;
    lightdata(2, 7) = 30;
    lightdata(3, 7) = 8;
    lightdata(4, 7) = 2;
    lightdata(5, 7) = 80;
    lightdata(6, 7) = 1;
    lightdata(0, 8) = 9;
    lightdata(1, 8) = 1;
    lightdata(2, 8) = 30;
    lightdata(3, 8) = 24;
    lightdata(4, 8) = 2;
    lightdata(5, 8) = 80;
    lightdata(6, 8) = 1;
    lightdata(0, 16) = 9;
    lightdata(1, 16) = 1;
    lightdata(2, 16) = 30;
    lightdata(3, 16) = 50;
    lightdata(4, 16) = 5;
    lightdata(5, 16) = 80;
    lightdata(6, 16) = 1;
    lightdata(0, 11) = 8;
    lightdata(1, 11) = 0;
    lightdata(2, 11) = 120;
    lightdata(3, 11) = 0;
    lightdata(4, 11) = 15;
    lightdata(5, 11) = 15;
    lightdata(0, 9) = 7;
    lightdata(1, 9) = 0;
    lightdata(2, 9) = 35;
    lightdata(3, 9) = 4;
    lightdata(4, 9) = 1;
    lightdata(5, 9) = 40;
    lightdata(6, 9) = 1;
    lightdata(0, 10) = 7;
    lightdata(1, 10) = 0;
    lightdata(2, 10) = 35;
    lightdata(3, 10) = 24;
    lightdata(4, 10) = 1;
    lightdata(5, 10) = 40;
    lightdata(6, 10) = 1;
    lightdata(0, 18) = 12;
    lightdata(1, 18) = 0;
    lightdata(2, 18) = 20;
    lightdata(3, 18) = 32;
    lightdata(4, 18) = 2;
    lightdata(5, 18) = 30;
    lightdata(6, 18) = 1;
    lightdata(0, 12) = 4;
    lightdata(1, 12) = 0;
    lightdata(2, 12) = 50;
    lightdata(3, 12) = 48;
    lightdata(4, 12) = 5;
    lightdata(5, 12) = 70;
    lightdata(6, 12) = 1;
    lightdata(0, 13) = 4;
    lightdata(1, 13) = 0;
    lightdata(2, 13) = 50;
    lightdata(3, 13) = 16;
    lightdata(4, 13) = 5;
    lightdata(5, 13) = 70;
    lightdata(6, 13) = 1;
    lightdata(0, 17) = 12;
    lightdata(1, 17) = 0;
    lightdata(2, 17) = 100;
    lightdata(3, 17) = 24;
    lightdata(4, 17) = 3;
    lightdata(5, 17) = 10;
    lightdata(0, 19) = 13;
    lightdata(1, 19) = 0;
    lightdata(2, 19) = 70;
    lightdata(3, 19) = 35;
    lightdata(4, 19) = 3;
    lightdata(5, 19) = 10;
    SDIM3(tname, 16, 11);
    tname(1) = lang(u8"日干し岩"s, u8"a dryrock"s);
    tname(2) = lang(u8"畑"s, u8"a field"s);
    DIM3(chipc, 6, 925);
    DIM3(chipi, 8, 825);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (825); cnt < cnt_end; ++cnt)
        {
            chipc(0, cnt) = cnt % 33 * inf_tiles;
            chipc(1, cnt) = cnt / 33 * inf_tiles;
            chipc(2, cnt) = inf_tiles;
            chipc(3, cnt) = inf_tiles;
            chipc(4, cnt) = 16;
            chipi(0, cnt) = cnt % 33 * inf_tiles;
            chipi(1, cnt) = cnt / 33 * inf_tiles;
            chipi(2, cnt) = inf_tiles;
            chipi(3, cnt) = inf_tiles;
            chipi(4, cnt) = 0;
            chipi(5, cnt) = 8;
            chipi(6, cnt) = 40;
        }
    }
    {
        int cnt = 825;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            chipc(0, cnt) = cnt % 33 * inf_tiles;
            chipc(1, cnt) = cnt / 33 * inf_tiles;
            chipc(2, cnt) = inf_tiles;
            chipc(3, cnt) = inf_tiles;
            chipc(4, cnt) = 16;
        }
    }
    chipi(4, 24) = 16;
    chipi(4, 30) = 16;
    chipi(4, 72) = 22;
    chipi(4, 73) = 22;
    chipi(4, 74) = 22;
    chipi(4, 75) = 22;
    chipi(4, 76) = 22;
    chipi(5, 76) = 28;
    chipi(4, 78) = 22;
    chipi(4, 80) = 22;
    chipi(4, 85) = 8;
    chipi(5, 85) = 8;
    chipi(6, 85) = 150;
    chipi(4, 87) = 22;
    chipi(4, 88) = 22;
    chipi(4, 91) = 22;
    chipi(4, 95) = 22;
    chipi(4, 96) = 22;
    chipi(5, 96) = 18;
    chipi(4, 97) = 22;
    chipi(4, 99) = 22;
    chipi(4, 98) = 22;
    chipi(4, 100) = 22;
    chipi(4, 102) = 22;
    chipi(4, 103) = 22;
    chipi(4, 104) = 22;
    chipi(4, 107) = 22;
    chipi(4, 116) = 22;
    chipi(4, 117) = 22;
    chipi(4, 123) = 12;
    chipi(4, 125) = 12;
    chipi(4, 130) = 12;
    chipi(4, 132) = 22;
    chipi(4, 134) = 12;
    chipi(4, 136) = 12;
    chipi(4, 137) = 22;
    chipi(4, 138) = 22;
    chipi(4, 139) = 22;
    chipi(4, 142) = 22;
    chipi(5, 142) = 36;
    chipi(4, 143) = 22;
    chipi(5, 143) = 36;
    chipi(4, 145) = 22;
    chipi(4, 146) = 22;
    chipi(4, 147) = 22;
    chipi(4, 150) = 22;
    chipi(5, 150) = 8;
    chipi(6, 150) = 70;
    chipi(4, 151) = 22;
    chipi(4, 156) = 8;
    chipi(5, 156) = 20;
    chipi(6, 156) = 150;
    chipi(4, 158) = 8;
    chipi(5, 158) = 24;
    chipi(6, 158) = 150;
    chipi(4, 159) = 8;
    chipi(5, 159) = 24;
    chipi(6, 159) = 150;
    chipi(4, 160) = 22;
    chipi(4, 163) = 22;
    chipi(5, 163) = 16;
    chipi(4, 164) = 22;
    chipi(4, 118) = 22;
    chipi(4, 166) = 22;
    chipi(4, 197) = 22;
    chipi(5, 197) = 24;
    chipi(4, 232) = 22;
    chipi(4, 248) = 22;
    chipi(4, 234) = 22;
    chipi(5, 234) = 24;
    chipi(4, 235) = 22;
    chipi(5, 235) = 36;
    chipi(4, 236) = 22;
    chipi(4, 242) = 22;
    chipi(5, 242) = 8;
    chipi(6, 242) = 250;
    chipi(4, 259) = 8;
    chipi(5, 259) = 12;
    chipi(4, 260) = 22;
    chipi(5, 260) = 22;
    chipi(4, 262) = 22;
    chipi(4, 263) = 22;
    chipi(4, 264) = 22;
    chipi(4, 266) = 22;
    chipi(5, 266) = 24;
    chipi(4, 270) = 22;
    chipi(4, 272) = 22;
    chipi(5, 272) = 34;
    chipi(4, 273) = 22;
    chipi(4, 276) = 22;
    chipi(4, 277) = 8;
    chipi(4, 278) = 22;
    chipi(4, 279) = 22;
    chipi(4, 281) = 22;
    chipi(5, 281) = 40;
    chipi(4, 282) = 22;
    chipi(4, 285) = 22;
    chipi(4, 286) = 22;
    chipi(4, 288) = 22;
    chipi(5, 288) = 18;
    chipi(4, 291) = 22;
    chipi(4, 292) = 22;
    chipi(5, 292) = 32;
    chipi(4, 293) = 22;
    chipi(4, 295) = 22;
    chipi(4, 296) = 22;
    chipi(4, 299) = 22;
    chipi(5, 299) = 8;
    chipi(6, 299) = 250;
    chipi(4, 300) = 22;
    chipi(4, 320) = 22;
    chipi(4, 321) = 22;
    chipi(4, 325) = 22;
    chipi(4, 327) = 22;
    chipi(4, 331) = 22;
    chipi(4, 332) = 22;
    chipi(4, 348) = 22;
    chipi(4, 353) = 48;
    chipi(5, 354) = 8;
    chipi(6, 354) = 20;
    chipi(4, 360) = 0;
    chipi(5, 360) = 2;
    chipi(6, 360) = 1;
    chipi(4, 364) = 22;
    chipi(5, 364) = 8;
    chipi(6, 364) = 250;
    chipi(4, 367) = 22;
    chipi(4, 368) = 22;
    chipi(4, 370) = 8;
    chipi(4, 372) = 22;
    chipi(4, 373) = 22;
    chipi(4, 375) = 22;
    chipi(4, 376) = 22;
    chipi(4, 377) = 22;
    chipi(4, 395) = 22;
    chipi(4, 378) = 48;
    chipi(4, 379) = 48;
    chipi(4, 380) = 8;
    chipi(4, 381) = 22;
    chipi(4, 382) = 48;
    chipi(4, 384) = 22;
    chipi(4, 442) = 8;
    chipi(5, 442) = 24;
    chipi(6, 442) = 100;
    chipi(4, 507) = 22;
    chipi(4, 508) = 22;
    chipi(4, 506) = 22;
    chipi(4, 510) = 22;
    chipi(4, 511) = 22;
    chipi(5, 511) = 28;
    chipi(4, 512) = 22;
    chipi(4, 513) = 22;
    chipi(4, 541) = 22;
    chipi(5, 541) = 36;
    chipi(4, 543) = 22;
    chipi(4, 544) = 48;
    chipi(4, 545) = 0;
    chipi(5, 545) = 0;
    chipi(6, 545) = 0;
    chipi(4, 627) = 22;
    chipi(4, 637) = 22;
    chipi(4, 639) = 48;
    chipi(4, 640) = 22;
    chipi(5, 640) = 34;
    chipi(4, 641) = 22;
    chipi(4, 642) = 22;
    chipi(4, 643) = 22;
    chipi(4, 644) = 32;
    chipi(4, 646) = 22;
    chipi(4, 647) = 22;
    chipi(4, 648) = 22;
    chipi(4, 650) = 22;
    chipi(4, 651) = 48;
    chipi(4, 652) = 48;
    chipi(4, 653) = 32;
    chipi(4, 655) = 22;
    chipi(4, 659) = 22;
    chipi(4, 662) = 22;
    chipi(6, 664) = 0;
    chipi(6, 665) = 0;
    chipi(6, 667) = 0;
    chipi(4, 668) = 8;
    chipi(4, 669) = 8;
    chipi(4, 672) = 38;
    chipi(4, 674) = 22;
    chipi(5, 674) = 24;
    chipi(4, 675) = 16;
    chipi(4, 676) = 40;
    chipi(4, 677) = 16;
    chipi(5, 677) = 8;
    chipi(6, 677) = 50;
    chipi(6, 679) = 1;
    chipi(3, 523) = inf_tiles * 2;
    chipi(4, 523) = inf_tiles + 16;
    chipi(5, 523) = 40;
    chipi(6, 523) = 6;
    chipi(3, 524) = inf_tiles * 2;
    chipi(4, 524) = inf_tiles + 16;
    chipi(5, 524) = 65;
    chipi(3, 525) = inf_tiles * 2;
    chipi(4, 525) = inf_tiles + 20;
    chipi(3, 526) = inf_tiles * 2;
    chipi(4, 526) = inf_tiles + 20;
    chipi(3, 527) = inf_tiles * 2;
    chipi(4, 527) = inf_tiles + 20;
    chipi(3, 531) = inf_tiles * 2;
    chipi(4, 531) = inf_tiles + 16;
    chipi(5, 531) = 40;
    chipi(3, 563) = inf_tiles * 2;
    chipi(4, 563) = inf_tiles + 15;
    chipi(3, 566) = inf_tiles * 2;
    chipi(4, 566) = inf_tiles + 12;
    chipi(3, 567) = inf_tiles * 2;
    chipi(4, 567) = inf_tiles + 12;
    chipi(3, 568) = inf_tiles * 2;
    chipi(4, 568) = inf_tiles + 12;
    chipi(3, 569) = inf_tiles * 2;
    chipi(4, 569) = inf_tiles + 12;
    chipi(5, 569) = 70;
    chipi(6, 569) = 6;
    chipi(3, 570) = inf_tiles * 2;
    chipi(4, 570) = inf_tiles + 20;
    chipi(3, 571) = inf_tiles * 2;
    chipi(4, 571) = inf_tiles + 20;
    chipi(5, 571) = 64;
    chipi(3, 572) = inf_tiles * 2;
    chipi(4, 572) = inf_tiles + 20;
    chipi(3, 573) = inf_tiles * 2;
    chipi(4, 573) = inf_tiles + 20;
    chipi(3, 574) = inf_tiles * 2;
    chipi(4, 574) = inf_tiles + 20;
    chipi(3, 575) = inf_tiles * 2;
    chipi(4, 575) = inf_tiles + 20;
    chipi(3, 576) = inf_tiles * 2;
    chipi(4, 576) = inf_tiles + 20;
    chipi(3, 577) = inf_tiles * 2;
    chipi(4, 577) = inf_tiles + 20;
    chipi(5, 577) = 48;
    chipi(6, 577) = 6;
    chipi(3, 578) = inf_tiles * 2;
    chipi(4, 578) = inf_tiles + 20;
    chipi(3, 579) = inf_tiles * 2;
    chipi(4, 579) = inf_tiles + 20;
    chipi(3, 580) = inf_tiles * 2;
    chipi(4, 580) = inf_tiles + 20;
    chipi(5, 580) = 40;
    chipi(6, 580) = 6;
    chipi(3, 581) = inf_tiles * 2;
    chipi(4, 581) = inf_tiles + 20;
    chipi(3, 582) = inf_tiles * 2;
    chipi(4, 582) = inf_tiles + 20;
    chipi(3, 583) = inf_tiles * 2;
    chipi(4, 583) = inf_tiles + 20;
    chipi(5, 583) = 44;
    chipi(6, 583) = 6;
    chipi(3, 584) = inf_tiles * 2;
    chipi(4, 584) = inf_tiles + 20;
    chipi(5, 584) = 40;
    chipi(6, 584) = 6;
    chipi(3, 585) = inf_tiles * 2;
    chipi(4, 585) = inf_tiles + 20;
    chipi(3, 586) = inf_tiles * 2;
    chipi(4, 586) = inf_tiles + 20;
    chipi(5, 586) = 44;
    chipi(6, 586) = 6;
    chipi(3, 587) = inf_tiles * 2;
    chipi(4, 587) = inf_tiles + 20;
    chipi(3, 588) = inf_tiles * 2;
    chipi(4, 588) = inf_tiles + 20;
    chipi(3, 589) = inf_tiles * 2;
    chipi(4, 589) = inf_tiles + 20;
    chipi(3, 590) = inf_tiles * 2;
    chipi(4, 590) = inf_tiles + 20;
    chipi(3, 591) = inf_tiles * 2;
    chipi(4, 591) = inf_tiles + 20;
    chipi(3, 592) = inf_tiles * 2;
    chipi(4, 592) = inf_tiles + 20;
    chipi(3, 593) = inf_tiles * 2;
    chipi(4, 593) = inf_tiles + 20;
    chipi(3, 680) = inf_tiles * 2;
    chipi(4, 680) = inf_tiles + 16;
    chipi(3, 681) = inf_tiles * 2;
    chipi(4, 681) = inf_tiles + 16;
    chipi(3, 682) = inf_tiles * 2;
    chipi(4, 682) = inf_tiles + 16;
    chipi(3, 683) = inf_tiles * 2;
    chipi(4, 683) = inf_tiles + 22;
    chipi(5, 683) = 50;
    chipi(3, 685) = inf_tiles * 2;
    chipi(4, 685) = inf_tiles + 52;
    chipi(5, 685) = 50;
    chipi(6, 685) = 18;
    chipi(3, 684) = inf_tiles * 2;
    chipi(4, 684) = inf_tiles + 52;
    chipi(5, 684) = 50;
    chipi(6, 684) = 18;
    chipi(3, 686) = inf_tiles * 2;
    chipi(4, 686) = inf_tiles + 16;
    chipi(3, 687) = inf_tiles * 2;
    chipi(4, 687) = inf_tiles + 16;
    chipi(3, 688) = inf_tiles * 2;
    chipi(4, 688) = inf_tiles + 16;
    chipi(3, 689) = inf_tiles * 2;
    chipi(4, 689) = inf_tiles + 16;
    chipi(3, 690) = inf_tiles * 2;
    chipi(4, 690) = inf_tiles + 16;
    chipi(3, 691) = inf_tiles * 2;
    chipi(4, 691) = inf_tiles + 16;
    chipi(5, 691) = 48;
    chipi(3, 692) = inf_tiles * 2;
    chipi(4, 692) = inf_tiles + 16;
    chipi(7, 19) = 2;
    chipi(7, 24) = 3;
    chipi(7, 27) = 3;
    chipi(7, 30) = 2;
    chipi(7, 349) = 3;
    chipi(7, 355) = 3;
    chipc(4, 176) = 8;
    chipc(4, 225) = 29;
    chipc(4, 230) = 12;
    chipc(4, 256) = 16;
    chipc(4, 277) = 29;
    chipc(3, 201) = inf_tiles * 2;
    chipc(4, 201) = inf_tiles + 16;
    chipc(3, 228) = inf_tiles * 2;
    chipc(4, 228) = inf_tiles + 8;
    chipc(3, 231) = inf_tiles * 2;
    chipc(4, 231) = inf_tiles + 16;
    chipc(3, 232) = inf_tiles * 2;
    chipc(4, 232) = inf_tiles + 16;
    chipc(3, 233) = inf_tiles * 2;
    chipc(4, 233) = inf_tiles + 8;
    chipc(3, 297) = inf_tiles * 2;
    chipc(4, 297) = inf_tiles + 16;
    chipc(3, 235) = inf_tiles * 2;
    chipc(4, 235) = inf_tiles + 16;
    chipc(3, 280) = inf_tiles * 2;
    chipc(4, 280) = inf_tiles + 32;
    chipc(3, 338) = inf_tiles * 2;
    chipc(4, 338) = inf_tiles + 32;
    chipc(3, 339) = inf_tiles * 2;
    chipc(4, 339) = inf_tiles + 16;
    chipc(3, 341) = inf_tiles * 2;
    chipc(4, 341) = inf_tiles + 16;
    chipc(3, 342) = inf_tiles * 2;
    chipc(4, 342) = inf_tiles + 12;
    chipc(3, 343) = inf_tiles * 2;
    chipc(4, 343) = inf_tiles + 16;
    chipc(3, 349) = inf_tiles * 2;
    chipc(4, 349) = inf_tiles + 8;
    chipc(3, 351) = inf_tiles * 2;
    chipc(4, 351) = inf_tiles + 8;
    chipc(3, 389) = inf_tiles * 2;
    chipc(4, 389) = inf_tiles + 16;
    chipc(3, 391) = inf_tiles * 2;
    chipc(4, 391) = inf_tiles + 16;
    chipc(3, 393) = inf_tiles * 2;
    chipc(4, 393) = inf_tiles + 16;
    chipc(3, 398) = inf_tiles * 2;
    chipc(4, 398) = inf_tiles + 16;
    chipc(3, 404) = inf_tiles * 2;
    chipc(4, 404) = inf_tiles + 16;
    chipc(3, 405) = inf_tiles * 2;
    chipc(4, 405) = inf_tiles + 16;
    chipc(3, 408) = inf_tiles * 2;
    chipc(4, 408) = inf_tiles + 16;
    chipc(3, 413) = inf_tiles * 2;
    chipc(4, 413) = inf_tiles + 16;
    chipc(3, 429) = inf_tiles * 2;
    chipc(4, 429) = inf_tiles + 8;
    chipc(3, 430) = inf_tiles * 2;
    chipc(4, 430) = inf_tiles + 8;
    chipc(3, 432) = inf_tiles * 2;
    chipc(4, 432) = inf_tiles + 8;
    chipc(3, 433) = inf_tiles * 2;
    chipc(4, 433) = inf_tiles + 8;
    chipc(3, 439) = inf_tiles * 2;
    chipc(4, 439) = inf_tiles + 8;
    chipc(3, 442) = inf_tiles * 2;
    chipc(4, 442) = inf_tiles + 8;
    chipc(3, 447) = inf_tiles * 2;
    chipc(4, 447) = inf_tiles + 16;
    DIM3(deco, 3, 300);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            deco(0, 1 + cnt * 16) = 0;
            deco(1, 1 + cnt * 16) = 1;
            deco(0, 2 + cnt * 16) = 1;
            deco(1, 2 + cnt * 16) = 2;
            deco(0, 4 + cnt * 16) = 1;
            deco(1, 4 + cnt * 16) = 0;
            deco(0, 6 + cnt * 16) = -1;
            deco(1, 6 + cnt * 16) = 21;
            deco(0, 7 + cnt * 16) = -1;
            deco(1, 7 + cnt * 16) = 30;
            deco(0, 8 + cnt * 16) = 2;
            deco(1, 8 + cnt * 16) = 1;
            deco(0, 9 + cnt * 16) = -1;
            deco(1, 9 + cnt * 16) = 20;
            deco(0, 10 + cnt * 16) = 2;
            deco(1, 10 + cnt * 16) = 2;
            deco(0, 11 + cnt * 16) = -1;
            deco(1, 11 + cnt * 16) = 33;
            deco(0, 12 + cnt * 16) = 2;
            deco(1, 12 + cnt * 16) = 0;
            deco(0, 13 + cnt * 16) = -1;
            deco(1, 13 + cnt * 16) = 32;
            deco(0, 14 + cnt * 16) = -1;
            deco(1, 14 + cnt * 16) = 31;
            deco(0, 15 + cnt * 16) = 3;
            deco(1, 15 + cnt * 16) = 1;
            deco(0, 16 + cnt * 16) = -1;
            deco(1, 16 + cnt * 16) = -1;
            deco(0, 19 + cnt * 16) = 0;
            deco(1, 19 + cnt * 16) = 2;
        }
    }
    deco(2, 49) = 2;
    deco(2, 52) = 2;
    deco(2, 53) = 2;
    deco(2, 97) = 2;
    deco(2, 113) = 2;
    deco(2, 117) = 2;
    deco(2, 164) = 2;
    deco(2, 180) = 2;
    deco(2, 181) = 2;
    deco(2, 145) = 4;
    deco(2, 162) = 4;
    deco(2, 194) = 4;
    deco(2, 195) = 4;
    deco(2, 209) = 4;
    deco(2, 226) = 4;
    deco(2, 243) = 4;
    deco(2, 84) = 3;
    deco(2, 104) = 3;
    deco(2, 196) = 3;
    deco(2, 200) = 3;
    deco(2, 204) = 3;
    deco(2, 212) = 3;
    deco(2, 220) = 3;
    deco(2, 232) = 3;
    deco(2, 236) = 3;
    deco(2, 24) = 1;
    deco(2, 50) = 1;
    deco(2, 56) = 1;
    deco(2, 58) = 1;
    deco(2, 82) = 1;
    deco(2, 114) = 1;
    deco(2, 122) = 1;
    deco(2, 152) = 1;
    deco(2, 184) = 1;
    deco(2, 186) = 1;
    deco(2, 178) = 8;
    deco(2, 241) = 10;
    deco(2, 242) = 8;
    deco(2, 244) = 7;
    deco(0, 16) = -1;
    deco(1, 16) = 1;
    deco(0, 32) = -1;
    deco(1, 32) = 2;
    deco(0, 64) = -1;
    deco(1, 64) = 3;
    deco(0, 128) = -1;
    deco(1, 128) = 4;
    deco(0, 48) = -1;
    deco(1, 48) = 5;
    deco(0, 192) = -1;
    deco(1, 192) = 6;
    deco(0, 96) = -1;
    deco(1, 96) = 7;
    deco(0, 144) = -1;
    deco(1, 144) = 8;
    deco(0, 80) = -1;
    deco(1, 80) = 9;
    deco(0, 160) = -1;
    deco(1, 160) = 10;
    deco(0, 91) = 0;
    deco(1, 91) = 1;
    deco(0, 93) = 0;
    deco(1, 93) = 1;
    deco(0, 21) = 0;
    deco(1, 21) = 0;
    deco(0, 85) = 0;
    deco(1, 85) = 0;
    deco(0, 213) = 0;
    deco(1, 213) = 0;
    deco(0, 149) = 0;
    deco(1, 149) = 0;
    label_0201();
    return;
}
void cardplayerinit(int prm_417, int prm_418)
{
    DIM3(cardplayer_at_cardcontrol, 100, prm_417);
    cardplayermax_at_cardcontrol = prm_417;
    cardholdermax_at_cardcontrol = prm_418;
    return;
}
void cardplayeradd(int prm_419, int prm_420, int prm_421)
{
    cardplayer_at_cardcontrol(1, prm_419) = prm_420;
    cardplayer_at_cardcontrol(2, prm_419) = prm_421;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cardplayer_at_cardcontrol(10 + cnt, prm_419) = -1;
        }
    }
    return;
}
void initcard(int prm_422, int prm_423, int)
{
    pilex_at_cardcontrol = prm_422;
    piley_at_cardcontrol = prm_423;
    DIM3(card_at_cardcontrol, 6, 53);
    cardmax_at_cardcontrol = 53;
    if (nojoker == 1)
    {
        cardmax_at_cardcontrol = 52;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardmax_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            card_at_cardcontrol(0, cnt) = cnt % 13 + 1;
            card_at_cardcontrol(1, cnt) = cnt / 13;
            card_at_cardcontrol(2, cnt) = 1;
            if (cnt == 52)
            {
                card_at_cardcontrol(1, cnt) = 4;
            }
            card_at_cardcontrol(5, cnt) = -1;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
        {
            i_at_cardcontrol(0) = rnd(cardmax_at_cardcontrol);
            i_at_cardcontrol(1) = rnd(cardmax_at_cardcontrol);
            p_at_cardcontrol(0) = card_at_cardcontrol(0, i_at_cardcontrol);
            p_at_cardcontrol(1) = card_at_cardcontrol(1, i_at_cardcontrol);
            card_at_cardcontrol(0, i_at_cardcontrol) =
                card_at_cardcontrol(0, i_at_cardcontrol(1));
            card_at_cardcontrol(1, i_at_cardcontrol) =
                card_at_cardcontrol(1, i_at_cardcontrol(1));
            card_at_cardcontrol(0, i_at_cardcontrol(1)) = p_at_cardcontrol;
            card_at_cardcontrol(1, i_at_cardcontrol(1)) = p_at_cardcontrol(1);
        }
    }
    return;
}
void showcard2(int prm_425, int prm_426)
{
    elona_vector1<int> col_at_cardcontrol;
    std::string s_at_cardcontrol;
    int tx_at_cardcontrol = 0;
    font(lang(cfg_font1, cfg_font2), 43 - en * 2, 1);
    color(0, 0, 0);
    gmode(2, 64, 96);
    pos(card_at_cardcontrol(3, prm_425), card_at_cardcontrol(4, prm_425));
    if (card_at_cardcontrol(2, prm_425) == 1)
    {
        gcopy(3, 736, 216, 64, 96);
    }
    else
    {
        gcopy(3, 672, 216, 64, 96);
        if (prm_426 == 0)
        {
            gmode(4, inf_tiles, inf_tiles, 220);
            color(0, 0, 0);
            if (card_at_cardcontrol(1, prm_425) == 0)
            {
                pos(card_at_cardcontrol(3, prm_425) + 32,
                    card_at_cardcontrol(4, prm_425) + 36);
                grotate(5, 144, 240, 0, 64, 104);
                col_at_cardcontrol(0) = 140;
                col_at_cardcontrol(1) = 140;
                col_at_cardcontrol(2) = 255;
            }
            if (card_at_cardcontrol(1, prm_425) == 1)
            {
                pos(card_at_cardcontrol(3, prm_425) + 32,
                    card_at_cardcontrol(4, prm_425) + 40);
                grotate(5, 1104, 288, 0, 64, 104);
                col_at_cardcontrol(0) = 255;
                col_at_cardcontrol(1) = 140;
                col_at_cardcontrol(2) = 140;
            }
            if (card_at_cardcontrol(1, prm_425) == 2)
            {
                pos(card_at_cardcontrol(3, prm_425) + 32,
                    card_at_cardcontrol(4, prm_425) + 50);
                grotate(5, 480, 336, 0, 64, 84);
                col_at_cardcontrol(0) = 240;
                col_at_cardcontrol(1) = 240;
                col_at_cardcontrol(2) = 240;
            }
            if (card_at_cardcontrol(1, prm_425) == 3)
            {
                pos(card_at_cardcontrol(3, prm_425) + 28,
                    card_at_cardcontrol(4, prm_425) + 48);
                grotate(5, 1200, 288, 0, 64, 80);
                col_at_cardcontrol(0) = 140;
                col_at_cardcontrol(1) = 255;
                col_at_cardcontrol(2) = 140;
            }
            if (card_at_cardcontrol(1, prm_425) == 4)
            {
                pos(card_at_cardcontrol(3, prm_425) + 28,
                    card_at_cardcontrol(4, prm_425) + 44);
                grotate(5, 1296, 336, 0, 72, 86);
                col_at_cardcontrol(0) = 250;
                col_at_cardcontrol(1) = 250;
                col_at_cardcontrol(2) = 105;
            }
            gmode(2);
            s_at_cardcontrol = elona_str(card_at_cardcontrol(0, prm_425));
            tx_at_cardcontrol = 2;
            if (card_at_cardcontrol(0, prm_425) == 1)
            {
                s_at_cardcontrol = u8"A"s;
                tx_at_cardcontrol = 3;
            }
            if (card_at_cardcontrol(0, prm_425) == 11)
            {
                s_at_cardcontrol = u8"J"s;
                tx_at_cardcontrol = 13;
            }
            if (card_at_cardcontrol(0, prm_425) == 12)
            {
                s_at_cardcontrol = u8"Q"s;
                tx_at_cardcontrol = 14;
            }
            if (card_at_cardcontrol(0, prm_425) == 13)
            {
                s_at_cardcontrol = u8"K"s;
                tx_at_cardcontrol = 14;
            }
            if (card_at_cardcontrol(1, prm_425) == 4)
            {
                s_at_cardcontrol = u8"Jo"s;
                tx_at_cardcontrol = -12;
            }
            pos(card_at_cardcontrol(3, prm_425) + 18
                    - (card_at_cardcontrol(0, prm_425) >= 10) * 12
                    + tx_at_cardcontrol,
                card_at_cardcontrol(4, prm_425) + 28);
            color(10, 10, 10);
            bmes(
                s_at_cardcontrol,
                col_at_cardcontrol(0),
                col_at_cardcontrol(1),
                col_at_cardcontrol(2));
        }
        else
        {
            font(lang(cfg_font1, cfg_font2), 12 - en * 2, 0);
            color(0, 0, 0);
            if (card_at_cardcontrol(1, prm_425) != -1)
            {
            }
        }
    }
    return;
}
void showcardpile()
{
    int pilestack_at_cardcontrol = 0;
    redraw(0);
    pos(pilex_at_cardcontrol - 8, piley_at_cardcontrol - 8);
    gcopy(3, 528, 216, 80, 112);
    pilestack_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardmax_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            if (card_at_cardcontrol(5, cnt) == -1)
            {
                ++pilestack_at_cardcontrol;
                if (pilestack_at_cardcontrol > 7)
                {
                    continue;
                }
                card_at_cardcontrol(3, cnt) =
                    pilex_at_cardcontrol - pilestack_at_cardcontrol;
                card_at_cardcontrol(4, cnt) =
                    piley_at_cardcontrol - pilestack_at_cardcontrol;
                showcard2(cnt);
            }
        }
    }
    font(lang(cfg_font1, cfg_font2), 16 - en * 2, 1);
    color(10, 10, 10);
    pos(pilex_at_cardcontrol + 8, piley_at_cardcontrol + 70);
    bmes(u8"X "s + pilestack_at_cardcontrol, 240, 240, 240);
    return;
}
void showcard()
{
    redraw(0);
    showcardpile();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardmax_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            if (card_at_cardcontrol(5, cnt) == -1
                || card_at_cardcontrol(5, cnt) == -2)
            {
                continue;
            }
            showcard2(cnt);
        }
    }
    return;
}
int servecard(int prm_427)
{
    int cardid_at_cardcontrol = 0;
    cardid_at_cardcontrol = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardmax_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            if (card_at_cardcontrol(5, cnt) == -1)
            {
                cardid_at_cardcontrol = cnt;
                break;
            }
        }
    }
    if (cardid_at_cardcontrol == -1)
    {
        stat = 0;
        return stat;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (cardplayer_at_cardcontrol(10 + cnt, prm_427) == -1)
            {
                p_at_cardcontrol = cnt;
                break;
            }
        }
    }
    dx_at_cardcontrol = pilex_at_cardcontrol
        - cardplayer_at_cardcontrol(1, prm_427) - p_at_cardcontrol * 88;
    dy_at_cardcontrol =
        piley_at_cardcontrol - cardplayer_at_cardcontrol(2, prm_427);
    card_at_cardcontrol(5, cardid_at_cardcontrol) = prm_427;
    cardplayer_at_cardcontrol(10 + p_at_cardcontrol, prm_427) =
        cardid_at_cardcontrol;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            if (cnt != 0)
            {
                pos(card_at_cardcontrol(3, cardid_at_cardcontrol),
                    card_at_cardcontrol(4, cardid_at_cardcontrol));
                gcopy(3, 608, 216, 64, 96);
            }
            card_at_cardcontrol(3, cardid_at_cardcontrol) =
                pilex_at_cardcontrol - dx_at_cardcontrol / 10 * cnt;
            if (cnt == 9)
            {
                card_at_cardcontrol(3, cardid_at_cardcontrol) =
                    pilex_at_cardcontrol - dx_at_cardcontrol;
            }
            card_at_cardcontrol(4, cardid_at_cardcontrol) =
                piley_at_cardcontrol - dy_at_cardcontrol / 10 * cnt;
            if (cnt == 9)
            {
                card_at_cardcontrol(4, cardid_at_cardcontrol) =
                    piley_at_cardcontrol - dy_at_cardcontrol;
            }
            gmode(0);
            gsel(3);
            pos(608, 216);
            gcopy(
                0,
                card_at_cardcontrol(3, cardid_at_cardcontrol),
                card_at_cardcontrol(4, cardid_at_cardcontrol),
                64,
                96);
            gsel(0);
            gmode(2);
            showcard2(cardid_at_cardcontrol);
            showcardpile();
            await(10);
            redraw(1);
        }
    }
    stat = cardid_at_cardcontrol;
    return stat;
}
void showcardholder()
{
    redraw(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardplayermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            p_at_cardcontrol = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (cardholdermax_at_cardcontrol);
                     cnt < cnt_end;
                     ++cnt)
                {
                    dx_at_cardcontrol =
                        cardplayer_at_cardcontrol(1, p_at_cardcontrol)
                        + cnt * 88;
                    dy_at_cardcontrol =
                        cardplayer_at_cardcontrol(2, p_at_cardcontrol);
                    pos(dx_at_cardcontrol - 8, dy_at_cardcontrol - 8);
                    gcopy(3, 528, 216, 80, 112);
                }
            }
        }
    }
    return;
}
int opencard2(int prm_428, int prm_429)
{
    if (prm_429 == 1)
    {
        if (card_at_cardcontrol(2, prm_428) == 0)
        {
            stat = prm_428;
            return stat;
        }
    }
    snd(71);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            if (prm_429 == 0)
            {
                pos(card_at_cardcontrol(3, prm_428) - 8,
                    card_at_cardcontrol(4, prm_428) - 8);
                gcopy(3, 528, 216, 80, 112);
                gmode(2, 64, 96);
            }
            else
            {
                pos(card_at_cardcontrol(3, prm_428),
                    card_at_cardcontrol(4, prm_428));
                gcopy(
                    4,
                    card_at_cardcontrol(3, prm_428) - wx - 4,
                    card_at_cardcontrol(4, prm_428) - wy - 4,
                    80,
                    112);
                gmode(2, 64, 96);
            }
            pos(card_at_cardcontrol(3, prm_428) + 32,
                card_at_cardcontrol(4, prm_428) + 48);
            grotate(3, 736, 216, 0, 64 - cnt * 14, 96);
            await(10);
            redraw(1);
        }
    }
    card_at_cardcontrol(2, prm_428) = 0;
    showcard2(prm_428, prm_429);
    redraw(1);
    stat = prm_428;
    return stat;
}
int trashcard(int prm_430)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (21); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            pos(card_at_cardcontrol(3, prm_430) - 8,
                card_at_cardcontrol(4, prm_430) - 8);
            gcopy(3, 528, 216, 80, 112);
            gmode(2, 64, 96);
            if (cnt == 20)
            {
                redraw(1);
                break;
            }
            pos(card_at_cardcontrol(3, prm_430) + 32,
                card_at_cardcontrol(4, prm_430) + 48);
            grotate(3, 736, 216, 0.015 * cnt * cnt, 64 - cnt * 3, 96 - cnt * 4);
            await(10);
            redraw(1);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardplayermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            p_at_cardcontrol = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (cardholdermax_at_cardcontrol);
                     cnt < cnt_end;
                     ++cnt)
                {
                    if (cardplayer_at_cardcontrol(10 + cnt, p_at_cardcontrol)
                        == prm_430)
                    {
                        cardplayer_at_cardcontrol(10 + cnt, p_at_cardcontrol) =
                            -1;
                    }
                }
            }
        }
    }
    stat = prm_430;
    return stat;
}
int cpscore(int prm_431)
{
    int ace_at_cardcontrol = 0;
    i_at_cardcontrol = 0;
    ace_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardholdermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            c_at_cardcontrol = cardplayer_at_cardcontrol(10 + cnt, prm_431);
            if (c_at_cardcontrol == -1)
            {
                break;
            }
            c_at_cardcontrol = card_at_cardcontrol(0, c_at_cardcontrol);
            if (c_at_cardcontrol >= 10)
            {
                c_at_cardcontrol = 10;
            }
            if (c_at_cardcontrol == 1)
            {
                ++ace_at_cardcontrol;
                c_at_cardcontrol = 11;
            }
            i_at_cardcontrol += c_at_cardcontrol;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (ace_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            if (i_at_cardcontrol > 21)
            {
                i_at_cardcontrol -= 10;
            }
        }
    }
    stat = i_at_cardcontrol;
    return stat;
}
int lastcard(int prm_432)
{
    c_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardholdermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            if (cardplayer_at_cardcontrol(10 + cnt, prm_432) == -1)
            {
                break;
            }
            c_at_cardcontrol = cardplayer_at_cardcontrol(10 + cnt, prm_432);
        }
    }
    stat = c_at_cardcontrol;
    return stat;
}
int cpblackcard(int prm_433)
{
    c_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardholdermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            c_at_cardcontrol = cardplayer_at_cardcontrol(10 + cnt, prm_433);
            if (card_at_cardcontrol(2, c_at_cardcontrol) == 1)
            {
                break;
            }
        }
    }
    stat = c_at_cardcontrol;
    return stat;
}
int cpcardnum(int prm_434)
{
    c_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardholdermax_at_cardcontrol); cnt < cnt_end;
             ++cnt)
        {
            if (cardplayer_at_cardcontrol(10 + cnt, prm_434) != -1)
            {
                ++c_at_cardcontrol;
            }
        }
    }
    stat = c_at_cardcontrol;
    return stat;
}
int pileremain()
{
    p_at_cardcontrol = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cardmax_at_cardcontrol); cnt < cnt_end; ++cnt)
        {
            if (card_at_cardcontrol(5, cnt) == -1)
            {
                ++p_at_cardcontrol;
            }
        }
    }
    stat = p_at_cardcontrol;
    return stat;
}
void csvsort(
    elona_vector1<std::string>& prm_435,
    std::string prm_436,
    int prm_437)
{
    elona_vector1<int> p_at_m40;
    p_at_m40(0) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
        {
            prm_435(cnt) = "";
            getstr(prm_435(cnt), prm_436, p_at_m40(0), prm_437);
            if (strsize == 0)
            {
                csvmax = cnt;
                break;
            }
            p_at_m40(0) += strsize;
        }
    }
    return;
}
void label_0221()
{
    SDIM3(randn1, 30, 20);
    notesel(titlebuff);
    noteload(lang(u8"data\\ndata.csv"s, u8"data\\ndata-e.csv"s));
    SDIM4(rnlist, 20, 15, noteinfo(0));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(msgtemp, cnt);
            csvsort(randn1, msgtemp, 44);
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    rnlist(cnt, cnt2) = randn1(cnt);
                }
            }
        }
    }
    notesel(titlebuff);
    noteload(u8"data\\name.csv"s);
    SDIM3(rn1, 15, noteinfo(0));
    SDIM3(rn2, 15, noteinfo(0));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(msgtemp, cnt);
            csvsort(randn1, msgtemp, 44);
            rn1(cnt) = lang(randn1(0), randn1(1));
            rn2(cnt) = lang(randn1(2), randn1(3));
        }
    }
    return;
}
std::string randomname(int)
{
label_0223_internal:
    s_at_m41 = rn1(rnd(length(rn1)));
    if (s_at_m41 == ""s)
    {
        goto label_0223_internal;
    }
    if (jp)
    {
        if (rnd(8) == 0)
        {
            s_at_m41 += u8"ー"s;
        }
    }
    if (rnd(5))
    {
        s_at_m41 += rn2(rnd(length(rn2)));
    }
    p_at_m41 = strlen(s_at_m41);
    if (p_at_m41 < 4)
    {
        goto label_0223_internal;
    }
    if (p_at_m41 < 6)
    {
        if (rnd(3))
        {
            goto label_0223_internal;
        }
    }
    if (p_at_m41 < 8)
    {
        if (rnd(2))
        {
            goto label_0223_internal;
        }
    }
    if (jp)
    {
        if (strmid(s_at_m41, 0, 2) == u8"ー"s)
        {
            goto label_0223_internal;
        }
        if (instr(s_at_m41, 0, u8"ーッ"s) != -1)
        {
            goto label_0223_internal;
        }
    }

    return cnven(s_at_m41);
}
std::string random_title(int prm_439)
{
    elona_vector1<std::string> randn2_at_m41;
    int rtval_at_m41 = 0;
    elona_vector1<std::string> s2_at_m41;
    // clang-format off
label_0227_internal:
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt) {
            p_at_m41(2) = rnd(length2(rnlist));
            p_at_m41(1) = rnd(14);
            if (rnlist(p_at_m41(1), p_at_m41(2)) == ""s) {
                --cnt;
                continue;
            }
        }
    }
    // clang-format on

    if (prm_439 == 1 || prm_439 == 3)
    {
        if (rnlist(14, p_at_m41(2)) == u8"具"s)
        {
            goto label_0227_internal;
        }
    }
    randn2_at_m41(0) = rnlist(p_at_m41(1), p_at_m41(2));
    randn2_at_m41(1) = rnlist(14, p_at_m41(2));
    rtval_at_m41 = -1;
    if (jp)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (p_at_m41(1) == 10 || p_at_m41(1) == 11)
                {
                    if (rnd(5) == 0)
                    {
                        p_at_m41(1) = 0;
                        p_at_m41(3) = rnd(2);
                        if (p_at_m41(3) == 0)
                        {
                            randn2_at_m41 += u8"の"s;
                        }
                        break;
                    }
                    p_at_m41 = rnd(5);
                    if (p_at_m41 == 0)
                    {
                        randn2_at_m41 += u8"・オブ・"s;
                    }
                    if (p_at_m41 == 1)
                    {
                        randn2_at_m41 = u8"ザ・"s + randn2_at_m41;
                        rtval_at_m41 = 1;
                        break;
                    }
                    if (p_at_m41 == 2)
                    {
                        randn2_at_m41 += u8"・"s;
                    }
                }
                if (p_at_m41(1) == 0 || p_at_m41(1) == 1)
                {
                    randn2_at_m41 += u8"の"s;
                    p_at_m41(3) = rnd(10);
                    if (p_at_m41(3) == 0)
                    {
                        p_at_m41(1) = 10;
                    }
                }
            }
        }
    }
    else
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (p_at_m41(1) == 0 || p_at_m41(1) == 1)
                {
                    if (rnd(6) == 0)
                    {
                        randn2_at_m41 += u8" of"s;
                    }
                    else
                    {
                        if (rnd(6) == 0)
                        {
                            randn2_at_m41 = u8"the "s + randn2_at_m41;
                            rtval_at_m41 = 1;
                            break;
                        }
                    }
                }
                randn2_at_m41 += u8" "s;
            }
        }
        randn2_at_m41 = cnven(randn2_at_m41);
    }
    if (rtval_at_m41 == 1)
    {
        s_at_m41 = randn2_at_m41;
        goto label_0228_internal;
    }
    rtval_at_m41 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            p_at_m41(4) = rnd(length2(rnlist));
            if (p_at_m41(4) == p_at_m41(2))
            {
                continue;
            }
            if (rnlist(14, p_at_m41(4)) == randn2_at_m41(1))
            {
                if (rnlist(14, p_at_m41(4)) != u8"万能"s)
                {
                    if (randn2_at_m41(1) != u8"万能"s)
                    {
                        continue;
                    }
                }
            }
            if (p_at_m41(1) < 10)
            {
                p_at_m41(1) = rnd(2);
            }
            else
            {
                p_at_m41(1) = rnd(2);
                p_at_m41(1) += 10;
            }
            if (rnlist(p_at_m41(1), p_at_m41(4)) == ""s)
            {
                continue;
            }
            rtval_at_m41 = 1;
            break;
        }
    }
    if (rtval_at_m41 == -1)
    {
        goto label_0227_internal;
    }
    if (en)
    {
        rnlist(p_at_m41(1), p_at_m41(4)) =
            cnven(rnlist(p_at_m41(1), p_at_m41(4)));
    }
    randn2_at_m41 += rnlist(p_at_m41(1), p_at_m41(4));
    s_at_m41 = randn2_at_m41;
    if (strlen_u(s_at_m41) >= 28)
    {
        goto label_0227_internal;
    }
label_0228_internal:
    if (prm_439 == 2)
    {
        if (jp)
        {
            s2_at_m41(0) = u8"団"s;
            s2_at_m41(1) = u8"チーム"s;
            s2_at_m41(2) = u8"パーティー"s;
            s2_at_m41(3) = u8"の集い"s;
            s2_at_m41(4) = u8"の軍"s;
            s2_at_m41(5) = u8"アーミー"s;
            s2_at_m41(6) = u8"隊"s;
            s2_at_m41(7) = u8"の一家"s;
            s2_at_m41(8) = u8"軍"s;
            s2_at_m41(9) = u8"の隊"s;
            s2_at_m41(10) = u8"の団"s;
            if (rnd(5))
            {
                s_at_m41 += s2_at_m41(rnd(10));
            }
        }
        else
        {
            if (rnd(2))
            {
                s2_at_m41(0) = u8"The army of "s;
                s2_at_m41(1) = u8"The party of "s;
                s2_at_m41(2) = u8"The house of "s;
                s2_at_m41(3) = u8"Clan "s;
                s_at_m41 = s2_at_m41(rnd(4)) + s_at_m41;
            }
            else
            {
                s2_at_m41(0) = u8"Clan"s;
                s2_at_m41(1) = u8"Party"s;
                s2_at_m41(2) = u8"Band"s;
                s2_at_m41(3) = u8"Gangs"s;
                s2_at_m41(4) = u8"Gathering"s;
                s2_at_m41(5) = u8"House"s;
                s2_at_m41(6) = u8"Army"s;
                s_at_m41 += u8" "s + s2_at_m41(rnd(7));
            }
        }
    }
    return s_at_m41;
}
void label_0230()
{
    if (hour_played == 1)
    {
        s += lang(
            u8"ラーネイレ「がんばれ〜」"s,
            u8"Larneire cheers, "s + cnvtalk(u8"Way to go!"s));
    }
    if (hour_played == 2)
    {
        s += lang(
            u8"ロミアス「陰ながら応援しているよ（ニヤリ）」"s,
            u8"Lomias grins, "s + cnvtalk(u8"Go for it."s));
    }
    if (hour_played == 3)
    {
        s += lang(
            u8"クミロミ「…大丈夫…だよね？」"s,
            u8"Kumiromi worries, "s + cnvtalk(u8"Are you...okay..?"s));
    }
    if (hour_played == 4)
    {
        s += lang(
            u8"ルルウィ「あら、思いの他がんばるのね」"s,
            u8"Lulwy sneers, "s
                + cnvtalk(u8"You're tougher than I thought, little kitty."s));
    }
    if (hour_played == 5)
    {
        s += lang(
            u8"ラーネイレ「いけない。このままでは…手遅れになってしまうわ…」"s,
            u8"Larneire cries, "s
                + cnvtalk(u8"No...before it is too late..."s));
    }
    if (hour_played == 6)
    {
        s += lang(
            u8"ロミアス「まだまだ、これからだろう（ニヤリ）」"s,
            u8"Lomias grins, "s
                + cnvtalk(u8"Tt hasn't even started yet... hasn't it?"s));
    }
    if (hour_played == 7)
    {
        s += lang(
            u8"ルルウィ「休憩しなさい。壊れちゃったら、私の役にたてないじゃない」"s,
            u8"Lulwy warns you, "s
                + cnvtalk(
                      u8"Have a rest, kitty. If you are broken, you're no use to me."s));
    }
    if (hour_played == 8)
    {
        s += lang(
            u8"ルルウィ「何を言っても無駄のようね。好きにするといいわ」"s,
            u8"Lulwy laughs, "s
                + cnvtalk(
                      u8"I guess there's no use warning you. Alright. Do as you please, kitty."s));
    }
    if (hour_played == 12)
    {
        s += lang(
            u8"オパートス「フハハハハッフハー」"s,
            u8"Opatos laughs, "s + cnvtalk(u8"Muwahahahahahaha!"s));
    }
    if (hour_played == 24)
    {
        s += lang(
            u8"虚空「希望はまだあるはずだ」"s,
            u8"Ehekatl hugs you,"s
                + cnvtalk(u8"Don't die! Promise you don't die!"s));
    }
    return;
}
void getinheritance(int prm_440, elona_vector1<int>& prm_441, int& prm_442)
{
    int p_at_m42 = 0;
    int f_at_m42 = 0;
    randomize(inv(30, prm_440) + 1);
    DIM2(prm_441, 15);
    prm_442 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            p_at_m42 = rnd(15);
            if (inv(40 + p_at_m42 * 2, prm_440) == 0)
            {
                continue;
            }
            f_at_m42 = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (prm_442 + 1); cnt < cnt_end; ++cnt)
                {
                    if (p_at_m42 == prm_441(cnt))
                    {
                        f_at_m42 = 1;
                        break;
                    }
                }
            }
            if (f_at_m42 == 1)
            {
                continue;
            }
            if (rnd(4) > prm_442 || inv(40 + p_at_m42 * 2 + 1, prm_440) < 0)
            {
                prm_441(prm_442) = p_at_m42;
                ++prm_442;
            }
        }
    }
    randomize();
    return;
}
int calcobjlv(int prm_443)
{
    int objlv_at_m43 = 0;
    if (prm_443 <= 0)
    {
        objlv_at_m43 = gdata(22);
    }
    else
    {
        objlv_at_m43 = prm_443;
    }
    if (gdata(20) == 30)
    {
        objlv_at_m43 = 1;
    }
    {
        int cnt = 1;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            p_at_m43 = rnd(30 + cnt * 5);
            if (p_at_m43 == 0)
            {
                objlv_at_m43 += rnd(10 * cnt);
                continue;
            }
            break;
        }
    }
    if (prm_443 <= 3)
    {
        if (rnd(4) != 0)
        {
            objlv_at_m43 = rnd(3) + 1;
        }
    }
    stat = objlv_at_m43;
    return stat;
}
int calcfixlv(int prm_444)
{
    int fixlv_at_m43 = 0;
    if (prm_444 == 0)
    {
        fixlv_at_m43 = 2;
    }
    else
    {
        fixlv_at_m43 = prm_444;
    }
    {
        int cnt = 1;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            p_at_m43 = rnd(30 + cnt * 5);
            if (p_at_m43 == 0)
            {
                ++fixlv_at_m43;
                continue;
            }
            if (p_at_m43 < 3)
            {
                --fixlv_at_m43;
                continue;
            }
            break;
        }
    }
    if (fixlv_at_m43 < 1)
    {
        fixlv_at_m43 = 1;
    }
    if (fixlv_at_m43 > 5)
    {
        fixlv_at_m43 = 5;
    }
    stat = fixlv_at_m43;
    return stat;
}
void flt(int prm_445, int prm_446)
{
    filtermax = 0;
    fltselect = 0;
    flttypemajor = 0;
    flttypeminor = 0;
    fltnrace = "";
    if (prm_445 == 0)
    {
        objlv = calcobjlv(gdata(22));
    }
    else
    {
        objlv = prm_445;
    }
    if (prm_446 == 0)
    {
        fixlv = calcfixlv(2);
    }
    else
    {
        fixlv = prm_446;
    }
    return;
}
void fltn(const std::string& prm_447)
{
    std::string s2_at_m44;
    int p_at_m44 = 0;
    s2_at_m44 = prm_447;
    p_at_m44 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            getstr(filtern(cnt), s2_at_m44, p_at_m44, 47);
            if (strsize == 0)
            {
                break;
            }
            filtern(cnt) = u8"/"s + filtern(cnt) + u8"/"s;
            p_at_m44 += strsize;
            ++filtermax;
        }
    }
    return;
}
int discsetmc()
{
    stat = rnd(40);
    return stat;
}
int fltsetdungeon()
{
    if (rnd(20) == 0)
    {
        stat = fsetrare(rnd(length(fsetrare)));
        return stat;
    }
    if (rnd(3) == 0)
    {
        stat = fsetwear(rnd(length(fsetwear)));
        return stat;
    }
    stat = fsetitem(rnd(length(fsetitem)));
    return stat;
}
int randomele()
{
    int p_at_m45 = 0;
    int i_at_m45 = 0;
    p_at_m45 = rnd(11) + 50;
    if (p_at_m45 != 1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (sdataref(4, p_at_m45)); cnt < cnt_end;
                 ++cnt)
            {
                i_at_m45 = rnd(11) + 50;
                if (sdataref(4, i_at_m45) < sdataref(4, p_at_m45))
                {
                    if (rnd(2) == 0)
                    {
                        p_at_m45 = i_at_m45;
                    }
                }
            }
        }
    }
    stat = p_at_m45;
    return stat;
}
void putenclv(int prm_448)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (abs(prm_448) + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt > 4)
            {
                s += u8"+"s;
                break;
            }
            s += lang(u8"*"s, u8"#"s);
        }
    }
    return;
}
int encflt(int prm_449, int prm_450)
{
    if (prm_450 == 2)
    {
        if ((prm_449 >= 12000 && prm_449 < 24000) == 0)
        {
            stat = 0;
            return stat;
        }
        else
        {
            stat = 1;
            return stat;
        }
    }
    if (prm_450 == 1)
    {
        if ((prm_449 >= 30000 && prm_449 < 50000) == 0)
        {
            stat = 0;
            return stat;
        }
        else
        {
            stat = 1;
            return stat;
        }
    }
    if (prm_450 == 3)
    {
        if ((prm_449 >= 12000 && prm_449 < 24000) == 1 || prm_449 == 10000)
        {
            stat = 1;
            return stat;
        }
        else
        {
            stat = 0;
            return stat;
        }
    }
    if (prm_449 == prm_450)
    {
        stat = 1;
        return stat;
    }
    else
    {
        stat = 0;
        return stat;
    }
}
void label_0246()
{
    DIM3(encref, 8, 62);
    DIM3(enclist, 2, 62);
    DIM3(encammoref, 3, 6);
    SDIM2(ammoname, 6);
    encammoref(0, 0) = 30;
    encammoref(1, 0) = 70;
    encammoref(2, 0) = 1;
    encammoref(0, 1) = 5;
    encammoref(1, 1) = 15;
    encammoref(2, 1) = 10;
    encammoref(0, 3) = 20;
    encammoref(1, 3) = 35;
    encammoref(2, 3) = 2;
    encammoref(0, 2) = 15;
    encammoref(1, 2) = 30;
    encammoref(2, 2) = 2;
    encammoref(0, 4) = 2;
    encammoref(1, 4) = 5;
    encammoref(2, 4) = 25;
    encammoref(0, 5) = 2;
    encammoref(1, 5) = 5;
    encammoref(2, 5) = 15;
    ammoname(0) = lang(u8"連射弾"s, u8"rapid ammo"s);
    ammoname(1) = lang(u8"炸裂弾"s, u8"explosive ammo"s);
    ammoname(2) = lang(u8"貫通弾"s, u8"piercing ammo"s);
    ammoname(3) = lang(u8"魔弾"s, u8"magic ammo"s);
    ammoname(4) = lang(u8"時止弾"s, u8"time stop ammo"s);
    ammoname(5) = lang(u8"バースト"s, u8"burst ammo"s);
    encref(0, 21) = -1;
    encref(1, 21) = 50;
    encref(2, 21) = 75;
    encref(3, 21) = 0;
    encref(0, 45) = -1;
    encref(1, 45) = 50;
    encref(2, 45) = 100;
    encref(3, 45) = 0;
    encref(0, 46) = -1;
    encref(1, 46) = 50;
    encref(2, 46) = 100;
    encref(3, 46) = 0;
    encref(0, 47) = -1;
    encref(1, 47) = 50;
    encref(2, 47) = 50;
    encref(3, 47) = 0;
    encref(0, 56) = 0;
    encref(1, 56) = 200;
    encref(2, 56) = 30;
    encref(3, 56) = 0;
    encref(0, 59) = 0;
    encref(1, 59) = 200;
    encref(2, 59) = 30;
    encref(3, 59) = 0;
    encref(0, 3) = 0;
    encref(1, 3) = 120;
    encref(2, 3) = 4500;
    encref(3, 3) = 0;
    encref(0, 6) = 0;
    encref(1, 6) = 120;
    encref(2, 6) = 4500;
    encref(3, 6) = 0;
    encref(0, 7) = 1;
    encref(1, 7) = 120;
    encref(2, 7) = 300;
    encref(3, 7) = 10000;
    encref(4, 7) = 24000;
    encref(0, 9) = 1;
    encref(1, 9) = 120;
    encref(2, 9) = 50000;
    encref(3, 9) = 25000;
    encref(0, 23) = 1;
    encref(1, 23) = 120;
    encref(2, 23) = 400;
    encref(3, 23) = 0;
    encref(0, 1) = 1;
    encref(1, 1) = 120;
    encref(2, 1) = 3000;
    encref(3, 1) = 0;
    encref(0, 22) = 1;
    encref(1, 22) = 150;
    encref(2, 22) = 150;
    encref(3, 22) = 0;
    encref(0, 25) = 1;
    encref(1, 25) = 120;
    encref(2, 25) = 400;
    encref(3, 25) = 0;
    encref(0, 2) = 2;
    encref(1, 2) = 150;
    encref(2, 2) = 2500;
    encref(3, 2) = 0;
    encref(0, 24) = 2;
    encref(1, 24) = 120;
    encref(2, 24) = 300;
    encref(3, 24) = 0;
    encref(0, 26) = 1;
    encref(1, 26) = 120;
    encref(2, 26) = 600;
    encref(3, 26) = 0;
    encref(0, 27) = 1;
    encref(1, 27) = 120;
    encref(2, 27) = 600;
    encref(3, 27) = 0;
    encref(0, 28) = 2;
    encref(1, 28) = 120;
    encref(2, 28) = 500;
    encref(3, 28) = 0;
    encref(0, 29) = 3;
    encref(1, 29) = 200;
    encref(2, 29) = 25;
    encref(3, 29) = 18000;
    encref(0, 30) = 3;
    encref(1, 30) = 200;
    encref(2, 30) = 25;
    encref(3, 30) = 20000;
    encref(0, 31) = 2;
    encref(1, 31) = 200;
    encref(2, 31) = 40;
    encref(3, 31) = 32000;
    encref(0, 48) = 1;
    encref(1, 48) = 120;
    encref(2, 48) = 300;
    encref(3, 48) = 0;
    encref(0, 50) = 3;
    encref(1, 50) = 180;
    encref(2, 50) = 150;
    encref(3, 50) = 32000;
    encref(4, 50) = 34000;
    encref(0, 51) = 3;
    encref(1, 51) = 180;
    encref(2, 51) = 150;
    encref(3, 51) = 32000;
    encref(4, 51) = 34000;
    encref(0, 32) = 1;
    encref(1, 32) = 130;
    encref(2, 32) = 250;
    encref(3, 32) = 0;
    encref(0, 55) = 3;
    encref(1, 55) = 130;
    encref(2, 55) = 40;
    encref(3, 55) = 19000;
    encref(4, 55) = 34000;
    encref(0, 33) = 3;
    encref(1, 33) = 160;
    encref(2, 33) = 200;
    encref(3, 33) = 0;
    encref(0, 34) = 3;
    encref(1, 34) = 170;
    encref(2, 34) = 250;
    encref(3, 34) = 10000;
    encref(0, 57) = 2;
    encref(1, 57) = 170;
    encref(2, 57) = 200;
    encref(3, 57) = 10000;
    encref(4, 57) = 24000;
    encref(0, 58) = 2;
    encref(1, 58) = 170;
    encref(2, 58) = 200;
    encref(3, 58) = 10000;
    encref(4, 58) = 24000;
    encref(0, 52) = 1;
    encref(1, 52) = 140;
    encref(2, 52) = 750;
    encref(3, 52) = 14000;
    encref(0, 53) = 2;
    encref(1, 53) = 160;
    encref(2, 53) = 500;
    encref(3, 53) = 14000;
    encref(0, 54) = 3;
    encref(1, 54) = 180;
    encref(2, 54) = 250;
    encref(3, 54) = 14000;
    encref(4, 54) = 16000;
    encref(0, 35) = 2;
    encref(1, 35) = 170;
    encref(2, 35) = 100;
    encref(3, 35) = 12000;
    encref(4, 35) = 32000;
    encref(0, 44) = 99;
    encref(1, 44) = 300;
    encref(2, 44) = 10000;
    encref(3, 44) = 10000;
    encref(4, 44) = 34000;
    encref(0, 42) = 99;
    encref(1, 42) = 300;
    encref(2, 42) = 2000;
    encref(3, 42) = 0;
    encref(0, 36) = 99;
    encref(1, 36) = 450;
    encref(2, 36) = 1000;
    encref(3, 36) = 10000;
    encref(4, 36) = 24000;
    encref(0, 38) = 99;
    encref(1, 38) = 450;
    encref(2, 38) = 1000;
    encref(3, 38) = 10000;
    encref(4, 38) = 24000;
    encref(0, 37) = 99;
    encref(1, 37) = 100;
    encref(2, 37) = 1000;
    encref(3, 37) = 10000;
    encref(4, 37) = 24000;
    encref(0, 39) = 99;
    encref(1, 39) = 500;
    encref(2, 39) = 500;
    encref(3, 39) = 10000;
    encref(4, 39) = 22000;
    encref(0, 40) = 99;
    encref(1, 40) = 550;
    encref(2, 40) = 500;
    encref(3, 40) = 10000;
    encref(4, 40) = 24000;
    encref(0, 41) = 99;
    encref(1, 41) = 300;
    encref(2, 41) = 1500;
    encref(3, 41) = 0;
    encref(0, 43) = 99;
    encref(1, 43) = 150;
    encref(2, 43) = 2000;
    encref(3, 43) = 0;
    encref(0, 8) = 99;
    encref(1, 8) = 300;
    encref(2, 8) = 15000;
    encref(3, 8) = 0;
    encref(0, 49) = 100;
    encref(1, 49) = 120;
    encref(2, 49) = 300;
    encref(3, 49) = 60000;
    encref(0, 60) = 100;
    encref(1, 60) = 120;
    encref(2, 60) = 300;
    encref(3, 60) = 60000;
    encref(0, 61) = 2;
    encref(1, 61) = 170;
    encref(2, 61) = 150;
    encref(3, 61) = 10000;
    encref(4, 61) = 24000;
    DIM3(encprocref, 6, 26);
    encprocref(0, 0) = 450;
    encprocref(1, 0) = 2000;
    encprocref(2, 0) = 1000;
    encprocref(3, 0) = 10000;
    encprocref(4, 0) = 24000;
    encprocref(5, 0) = 10;
    encprocref(0, 1) = 620;
    encprocref(1, 1) = 2000;
    encprocref(2, 1) = 6000;
    encprocref(3, 1) = 24000;
    encprocref(4, 1) = 0;
    encprocref(5, 1) = 50;
    encprocref(0, 2) = 452;
    encprocref(1, 2) = 2000;
    encprocref(2, 2) = 1000;
    encprocref(3, 2) = 10000;
    encprocref(4, 2) = 24000;
    encprocref(5, 2) = 10;
    encprocref(0, 3) = 434;
    encprocref(1, 3) = 2000;
    encprocref(2, 3) = 800;
    encprocref(3, 3) = 10000;
    encprocref(4, 3) = 24000;
    encprocref(5, 3) = 12;
    encprocref(0, 4) = 433;
    encprocref(1, 4) = 2000;
    encprocref(2, 4) = 600;
    encprocref(3, 4) = 10000;
    encprocref(4, 4) = 24000;
    encprocref(5, 4) = 12;
    encprocref(0, 5) = 625;
    encprocref(1, 5) = 3000;
    encprocref(2, 5) = 400;
    encprocref(3, 5) = 10000;
    encprocref(4, 5) = 24000;
    encprocref(5, 5) = 2;
    encprocref(0, 6) = 627;
    encprocref(1, 6) = 3000;
    encprocref(2, 6) = 1000;
    encprocref(3, 6) = 10000;
    encprocref(4, 6) = 24000;
    encprocref(5, 6) = 50;
    encprocref(0, 7) = 619;
    encprocref(1, 7) = 2000;
    encprocref(2, 7) = 4000;
    encprocref(3, 7) = 24000;
    encprocref(4, 7) = 0;
    encprocref(5, 7) = 50;
    encprocref(0, 8) = 604;
    encprocref(1, 8) = 2000;
    encprocref(2, 8) = 1000;
    encprocref(3, 8) = 10000;
    encprocref(4, 8) = 24000;
    encprocref(5, 8) = 15;
    encprocref(0, 9) = 609;
    encprocref(1, 9) = 2000;
    encprocref(2, 9) = 1000;
    encprocref(3, 9) = 10000;
    encprocref(4, 9) = 24000;
    encprocref(5, 9) = 15;
    encprocref(0, 10) = 608;
    encprocref(1, 10) = 2000;
    encprocref(2, 10) = 1000;
    encprocref(3, 10) = 10000;
    encprocref(4, 10) = 24000;
    encprocref(5, 10) = 15;
    encprocref(0, 11) = 453;
    encprocref(1, 11) = 3000;
    encprocref(2, 11) = 1000;
    encprocref(3, 11) = 10000;
    encprocref(4, 11) = 24000;
    encprocref(5, 11) = 4;
    encprocref(0, 12) = 451;
    encprocref(1, 12) = 3000;
    encprocref(2, 12) = 1000;
    encprocref(3, 12) = 10000;
    encprocref(4, 12) = 24000;
    encprocref(5, 12) = 4;
    encprocref(0, 13) = 448;
    encprocref(1, 13) = 3000;
    encprocref(2, 13) = 1000;
    encprocref(3, 13) = 10000;
    encprocref(4, 13) = 24000;
    encprocref(5, 13) = 4;
    encprocref(0, 14) = 446;
    encprocref(1, 14) = 3000;
    encprocref(2, 14) = 400;
    encprocref(3, 14) = 10000;
    encprocref(4, 14) = 24000;
    encprocref(5, 14) = 1;
    encprocref(0, 15) = 444;
    encprocref(1, 15) = 3000;
    encprocref(2, 15) = 1000;
    encprocref(3, 15) = 10000;
    encprocref(4, 15) = 24000;
    encprocref(5, 15) = 3;
    encprocref(0, 16) = 442;
    encprocref(1, 16) = 3000;
    encprocref(2, 16) = 1000;
    encprocref(3, 16) = 10000;
    encprocref(4, 16) = 24000;
    encprocref(5, 16) = 2;
    encprocref(0, 17) = 443;
    encprocref(1, 17) = 2000;
    encprocref(2, 17) = 800;
    encprocref(3, 17) = 10000;
    encprocref(4, 17) = 24000;
    encprocref(5, 17) = 10;
    encprocref(0, 18) = 436;
    encprocref(1, 18) = 2000;
    encprocref(2, 18) = 1000;
    encprocref(3, 18) = 10000;
    encprocref(4, 18) = 24000;
    encprocref(5, 18) = 10;
    encprocref(0, 19) = 421;
    encprocref(1, 19) = 2000;
    encprocref(2, 19) = 1000;
    encprocref(3, 19) = 10000;
    encprocref(4, 19) = 24000;
    encprocref(5, 19) = 15;
    encprocref(0, 20) = 422;
    encprocref(1, 20) = 2000;
    encprocref(2, 20) = 1000;
    encprocref(3, 20) = 10000;
    encprocref(4, 20) = 24000;
    encprocref(5, 20) = 15;
    encprocref(0, 21) = 423;
    encprocref(1, 21) = 2000;
    encprocref(2, 21) = 1000;
    encprocref(3, 21) = 10000;
    encprocref(4, 21) = 24000;
    encprocref(5, 21) = 15;
    encprocref(0, 22) = 419;
    encprocref(1, 22) = 2000;
    encprocref(2, 22) = 1000;
    encprocref(3, 22) = 10000;
    encprocref(4, 22) = 24000;
    encprocref(5, 22) = 15;
    encprocref(0, 23) = 404;
    encprocref(1, 23) = 3000;
    encprocref(2, 23) = 800;
    encprocref(3, 23) = 10000;
    encprocref(4, 23) = 24000;
    encprocref(5, 23) = 2;
    encprocref(0, 24) = 655;
    encprocref(1, 24) = 2000;
    encprocref(2, 24) = 200;
    encprocref(3, 24) = 10000;
    encprocref(4, 24) = 24000;
    encprocref(5, 24) = 90;
    encprocref(0, 25) = 658;
    encprocref(1, 25) = 2000;
    encprocref(2, 25) = 1000;
    encprocref(3, 25) = 10000;
    encprocref(4, 25) = 0;
    encprocref(5, 25) = 100;
    return;
}
void label_0247()
{
    rtval(0) = 4;
    rtval(1) = 0;
    s = u8"error:"s + val + u8"/"s + val(1);
    val(10) = val / 10000;
    if (val(10) != 0)
    {
        if (val(2) == 1)
        {
            s = "";
            return;
        }
        sid = val % 10000;
        if (val(10) == 1)
        {
            rtval = 2;
            if (val(1) / 50 + 1 < 0)
            {
                rtval = 9;
                s = lang(
                    ""s + skillname(sid) + u8"を"s + abs((val(1) / 50 + 1))
                        + u8"下げる"s,
                    u8"decreases your "s + skillname(sid) + u8" by "s
                        + abs((val(1) / 50 + 1)) + u8"."s);
                if (val(3) == 57000)
                {
                    s = lang(
                            ""s + skillname(sid)
                                + u8"を減衰させる毒素を含んでいる"s,
                            u8"has which deteriorates your "s + skillname(sid)
                                + u8"."s)
                        + u8" ["s;
                    putenclv(val(1) / 50);
                    s += u8"]"s;
                }
            }
            else
            {
                s = lang(
                    ""s + skillname(sid) + u8"を"s + abs((val(1) / 50 + 1))
                        + u8"上げる"s,
                    u8"increases your "s + skillname(sid) + u8" by "s
                        + abs((val(1) / 50 + 1)) + u8"."s);
                if (val(3) == 57000)
                {
                    s = lang(
                            ""s + skillname(sid)
                                + u8"を増強させる栄養をもっている"s,
                            u8"has essential nutrients to enhance your "s
                                + skillname(sid) + u8"."s)
                        + u8" ["s;
                    putenclv(val(1) / 50);
                    s += u8"]"s;
                }
            }
        }
        if (val(10) == 2)
        {
            rtval = 3;
            i = val(1) / 2 / 50;
            if (val(1) / 2 < 0)
            {
                rtval = 9;
                s = lang(
                    ""s + skillname(sid) + u8"への耐性を弱化する"s,
                    u8"weaken your resistance to "s + skillname(sid) + u8"."s);
            }
            else
            {
                s = skillencdesc(sid);
                if (s == ""s)
                {
                    s = lang(
                        ""s + skillname(sid) + u8"への耐性を授ける"s,
                        u8"grants your resistance to "s + skillname(sid)
                            + u8"."s);
                }
            }
            s += u8" ["s;
            putenclv(i);
            s += u8"]"s;
        }
        if (val(10) == 3)
        {
            rtval = 1;
            i = val(1) / 50 + 1;
            if (val(1) / 50 + 1 < 0)
            {
                rtval = 9;
                s = lang(
                    ""s + skillname(sid) + u8"の技能を下げる"s,
                    u8"decreases your "s + skillname(sid) + u8" skill."s);
            }
            else
            {
                s = skillencdesc(sid);
                if (s == ""s)
                {
                    s = lang(
                        ""s + skillname(sid) + u8"の技能を上げる"s,
                        u8"improves your "s + skillname(sid) + u8" skill."s);
                }
            }
            s += u8" ["s;
            putenclv(i / 5);
            s += u8"]"s;
        }
        if (val(10) == 6)
        {
            rtval = 8;
            s = lang(
                skillname(sid) + u8"を維持する"s,
                u8"maintains "s + skillname(sid) + u8"."s);
            if (val(3) == 57000)
            {
                s = lang(
                        ""s + skillname(sid)
                            + u8"の成長を助ける栄養をもっている"s,
                        u8"can help you exercise your "s + skillname(sid)
                            + u8" faster."s)
                    + u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
            }
        }
        if (val(10) == 7)
        {
            rtval = 4;
            i = val(1) / 2 / 50;
            s = skillencdesc(sid);
            if (s == ""s)
            {
                s = lang(
                    ""s + skillname(sid) + u8"属性の追加ダメージを与える"s,
                    u8"deals "s + skillname(sid) + u8" damage."s);
            }
            s += u8" ["s;
            putenclv(i);
            s += u8"]"s;
        }
        if (val(10) == 8)
        {
            rtval = 4;
            i = val(1) / 50;
            sid = encprocref(0, sid);
            s = lang(
                ""s + skillname(sid) + u8"を発動する"s,
                u8"invokes "s + skillname(sid) + u8"."s);
            s += u8" ["s;
            putenclv(i);
            s += u8"]"s;
        }
        if (val(10) == 9)
        {
            rtval = 4;
            s = lang(
                ""s + ammoname(sid) + u8"を装填できる"s,
                u8"can be loaded with "s + ammoname(sid) + u8"."s);
            s += lang(u8" [最大"s, u8" [Max "s) + val(1) / 1000
                + lang(u8"発]"s, u8"]"s);
        }
        return;
    }
    if (val == 0)
    {
        s = u8"?????"s;
    }
    if (val == 21)
    {
        rtval = 9;
        s = lang(
            u8"ランダムなテレポートを引き起こす"s,
            u8"causes random teleport."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 45)
    {
        rtval = 9;
        s = lang(u8"使用者の生き血を吸う"s, u8"sucks blood of the wielder."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 46)
    {
        rtval = 9;
        s = lang(u8"あなたの成長を妨げる"s, u8"disturbs your growth."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 47)
    {
        rtval = 9;
        s = lang(u8"魔物を呼び寄せる"s, u8"attracts monsters."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 22)
    {
        rtval = 4;
        s = lang(
            u8"テレポートを妨害する"s, u8"prevents you from teleporting."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 23)
    {
        rtval = 4;
        s = lang(u8"盲目を無効にする"s, u8"negates the effect of blindness."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 24)
    {
        rtval = 4;
        s = lang(u8"麻痺を無効にする"s, u8"negates the effect of paralysis."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 25)
    {
        rtval = 4;
        s = lang(u8"混乱を無効にする"s, u8"negates the effect of confusion."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 26)
    {
        rtval = 4;
        s = lang(u8"恐怖を無効にする"s, u8"negates the effect of fear."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 27)
    {
        rtval = 4;
        s = lang(u8"睡眠を無効にする"s, u8"negates the effect of sleep."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 28)
    {
        rtval = 4;
        s = lang(u8"毒を無効にする"s, u8"negates the effect of poison."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 41)
    {
        rtval = 4;
        s = lang(
            u8"アイテムを盗まれなくする"s, u8"protects you from thieves."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 42)
    {
        rtval = 4;
        s = lang(
            u8"腐ったものを難なく消化させる"s,
            u8"allows you to digest rotten food."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 29)
    {
        rtval = 4;
        s = lang(
            u8"速度を上げ、ワールドマップでの移動時間を短くする"s,
            u8"speeds up your travel progress."s);
        if (val(1) / 100 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 100);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 100;
                return;
            }
        }
    }
    if (val == 30)
    {
        rtval = 4;
        s = lang(
            u8"エーテルの風からあなたを保護する"s,
            u8"protects you from Etherwind."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 31)
    {
        rtval = 4;
        s = lang(
            u8"雷雨と雪による足止めを無効にする"s,
            u8"negates the effect of being stranded by bad weather."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 48)
    {
        rtval = 4;
        s = lang(
            u8"異物の体内への侵入を防ぐ"s,
            u8"prevents aliens from entering your body."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 32)
    {
        rtval = 4;
        s = lang(u8"あなたを浮遊させる"s, u8"floats you."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 33)
    {
        rtval = 4;
        s = lang(
            u8"あなたを変異から保護する"s, u8"protects you from mutation."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 34)
    {
        rtval = 4;
        s = lang(u8"魔法の威力を高める"s, u8"enchances your spells."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 35)
    {
        rtval = 4;
        s = lang(
            u8"透明な存在を見ることを可能にする"s,
            u8"allows you to see invisible creatures."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 36)
    {
        rtval = 4;
        s = lang(
            u8"攻撃対象からスタミナを吸収する"s,
            u8"absorbs stamina from an enemy."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 37)
    {
        rtval = 4;
        s = lang(u8"全てを終結させる"s, u8"brings an end."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 38)
    {
        rtval = 4;
        s = lang(
            u8"攻撃対象からマナを吸収する"s, u8"absorbs MP from an enemy."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 39)
    {
        rtval = 4;
        s = lang(
            u8"完全貫通攻撃発動の機会を増やす"s,
            u8"gives you a chance to throw an absolute piercing attak."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 44)
    {
        rtval = 4;
        s = lang(
            u8"クリティカルヒットの機会を増やす"s,
            u8"increases your chance to deliver critical hits."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 50)
    {
        rtval = 4;
        s = lang(
            u8"追加打撃の機会を増やす"s,
            u8"increases the chance of extra melee attack."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 51)
    {
        rtval = 4;
        s = lang(
            u8"追加射撃の機会を増やす"s,
            u8"increases the chance of extra ranged attack."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 40)
    {
        rtval = 4;
        s = lang(u8"稀に時を止める"s, u8"occasionally stops time."s);
        if (val(1) == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1));
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1);
                return;
            }
        }
    }
    if (val == 43)
    {
        rtval = 4;
        s = lang(
            u8"呪いの言葉から保護する"s, u8"protects you from cursing words."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 49)
    {
        rtval = 4;
        s = lang(
            u8"演奏報酬の品質を上げる"s,
            u8"increases the qualitiy of reward."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 52)
    {
        rtval = 4;
        s = lang(
            u8"被る物理ダメージを軽減する"s,
            u8"decreases physical damage you take."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 53)
    {
        rtval = 4;
        s = lang(
            u8"被るダメージを稀に無効にする"s,
            u8"sometimes nullifies damage you take."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 54)
    {
        rtval = 4;
        s = lang(
            u8"攻撃された時、相手に切り傷のダメージを与える"s,
            u8"deals cut damage to the attacker."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 55)
    {
        rtval = 4;
        s = lang(u8"出血を抑える"s, u8"diminishs bleeding."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 56)
    {
        rtval = 4;
        s = lang(
            u8"神が発する電波をキャッチする"s, u8"catches signals from God."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 57)
    {
        rtval = 4;
        s = lang(
            u8"竜族に対して強力な威力を発揮する"s,
            u8"inflicts massive damage to dragons."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 58)
    {
        rtval = 4;
        s = lang(
            u8"不死者に対して強力な威力を発揮する"s,
            u8"inflicts massive damage to undeads."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    if (val == 59)
    {
        rtval = 4;
        s = lang(u8"他者の信仰を明らかにする"s, u8"reveals religion."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 60)
    {
        rtval = 4;
        s = lang(
            u8"深い音色で聴衆を酔わす"s,
            u8"makes audience drunk with haunting tones."s);
        if (-1 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(-1);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = -1;
                return;
            }
        }
    }
    if (val == 61)
    {
        rtval = 4;
        s = lang(
            u8"神に対して強力な威力を発揮する"s,
            u8"inflicts massive damage to Gods."s);
        if (val(1) / 50 == -1)
        {
            return;
        }
        else
        {
            if (val(2) == 0)
            {
                s += u8" ["s;
                putenclv(val(1) / 50);
                s += u8"]"s;
                return;
            }
            else
            {
                rtval(1) = val(1) / 50;
                return;
            }
        }
    }
    return;
}
int randomenc(int prm_451)
{
    int sum_at_m47 = 0;
    int max_at_m47 = 0;
    int i_at_m47 = 0;
    sum_at_m47 = 0;
    max_at_m47 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (62); cnt < cnt_end; ++cnt)
        {
            if (encref(0, cnt) > prm_451)
            {
                continue;
            }
            if (prm_451 >= 0)
            {
                if (encref(0, cnt) < 0)
                {
                    continue;
                }
            }
            if (encref(3, cnt) != 0)
            {
                if (encflt(reftype, encref(3, cnt)) == 0)
                {
                    if (encref(4, cnt) == 0)
                    {
                        continue;
                    }
                    else
                    {
                        if (encflt(reftype, encref(4, cnt)) == 0)
                        {
                            continue;
                        }
                    }
                }
            }
            sum_at_m47 += encref(2, cnt);
            enclist(0, max_at_m47) = cnt;
            enclist(1, max_at_m47) = sum_at_m47;
            ++max_at_m47;
        }
    }
    if (max_at_m47 == 0)
    {
        stat = 0;
        return stat;
    }
    i_at_m47 = 0;
    exrand_rnd(p_at_m47, sum_at_m47);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (max_at_m47); cnt < cnt_end; ++cnt)
        {
            if (p_at_m47 < enclist(1, cnt))
            {
                i_at_m47 = enclist(0, cnt);
                break;
            }
        }
    }
    stat = i_at_m47;
    return stat;
}
int randomenclv(int prm_452)
{
    int enclv_at_m47 = 0;
    enclv_at_m47 = limit(prm_452, 0, 4);
    enclv_at_m47 = rnd(enclv_at_m47 + 1);
    stat = enclv_at_m47;
    return stat;
}
int randomencp(int prm_453)
{
    int encp_at_m47 = 0;
    encp_at_m47 = rnd(rnd(500 + (trait(163) != 0) * 50) + 1) + 1;
    if (prm_453 != 0)
    {
        encp_at_m47 = encp_at_m47 * prm_453 / 100;
    }
    stat = encp_at_m47;
    return stat;
}
void sortenc(int prm_454)
{
    int f_at_m47 = 0;
    int cnt2_at_m47 = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            f_at_m47 = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (14); cnt < cnt_end; ++cnt)
                {
                    cnt2_at_m47 = cnt + 1;
                    if (inv(40 + cnt * 2, prm_454)
                        < inv(40 + cnt2_at_m47 * 2, prm_454))
                    {
                        p_at_m47(0) = inv(40 + cnt * 2, prm_454);
                        p_at_m47(1) = inv(40 + cnt * 2 + 1, prm_454);
                        inv(40 + cnt * 2, prm_454) =
                            inv(40 + cnt2_at_m47 * 2, prm_454);
                        inv(40 + cnt2_at_m47 * 2, prm_454) = p_at_m47;
                        inv(40 + cnt * 2 + 1, prm_454) =
                            inv(40 + cnt2_at_m47 * 2 + 1, prm_454);
                        inv(40 + cnt2_at_m47 * 2 + 1, prm_454) = p_at_m47(1);
                        f_at_m47 = 1;
                    }
                }
            }
            if (f_at_m47 == 0)
            {
                break;
            }
        }
    }
    return;
}
void encremove(int prm_455, int prm_456, int prm_457)
{
    if (prm_456 == 0)
    {
        return;
    }
    if (prm_456 >= 10000)
    {
        enc_at_m48 = prm_456 / 10000;
    }
    else
    {
        enc_at_m48 = prm_456;
    }
    enc_at_m48 = prm_456;
    encp_at_m48 = prm_457;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            if (inv(40 + cnt * 2, prm_455) == enc_at_m48)
            {
                inv(40 + cnt * 2 + 1, prm_455) -= encp_at_m48;
                if (inv(40 + cnt * 2 + 1, prm_455) == 0)
                {
                    inv(40 + cnt * 2, prm_455) = 0;
                }
                break;
            }
        }
    }
    if (prm_456 < 10000)
    {
        p_at_m48 = prm_456;
    }
    else
    {
        p_at_m48 = prm_456 / 10000;
    }
    inv(1, prm_455) = inv(1, prm_455) * 100 / encref(1, p_at_m48);
    sortenc(prm_455);
    return;
}
int encadd(
    int prm_458,
    int prm_459,
    int prm_460,
    int prm_461,
    int prm_462,
    int prm_463,
    int prm_464)
{
    int sum_at_m48 = 0;
    int max_at_m48 = 0;
    int i_at_m48 = 0;
    if (prm_459 == 0)
    {
        stat = 0;
        return stat;
    }
    if (prm_459 >= 10000)
    {
        enc_at_m48 = prm_459 / 10000;
    }
    else
    {
        enc_at_m48 = prm_459;
    }
    if (prm_464 == 0)
    {
        if (encref(3, enc_at_m48) != 0)
        {
            if (encflt(reftype, encref(3, enc_at_m48)) == 0)
            {
                if (encref(4, enc_at_m48) == 0)
                {
                    stat = 0;
                    return stat;
                }
                else
                {
                    if (encflt(reftype, encref(4, enc_at_m48)) == 0)
                    {
                        stat = 0;
                        return stat;
                    }
                }
            }
        }
        else
        {
            if (reftype == 25000)
            {
                if (prm_462 == 0)
                {
                    stat = 0;
                    return stat;
                }
            }
        }
    }
    enc_at_m48 = prm_459;
    encp_at_m48 = prm_460;
    if (enc_at_m48 < 20)
    {
        if (enc_at_m48 == 1)
        {
            enc_at_m48 = rnd(10) + 10;
            enc_at_m48 += 10000;
            if (prm_461 != 0)
            {
                if (rnd(100) < prm_461)
                {
                    encp_at_m48 = prm_460 * -2;
                }
            }
        }
        if (enc_at_m48 == 2)
        {
            enc_at_m48 = randomele();
            enc_at_m48 += 20000;
            if (prm_461 != 0)
            {
                if (rnd(100) < prm_461)
                {
                    encp_at_m48 = prm_460 * -2;
                }
            }
        }
        if (enc_at_m48 == 3)
        {
            enc_at_m48 = rnd(40) + 150;
            enc_at_m48 += 30000;
            if (prm_461 != 0)
            {
                if (rnd(100) < prm_461)
                {
                    encp_at_m48 = prm_460 * -2;
                }
            }
        }
        if (enc_at_m48 == 6)
        {
            enc_at_m48 = rnd(10) + 10;
            enc_at_m48 += 60000;
        }
        if (enc_at_m48 == 7)
        {
            enc_at_m48 = randomele();
            enc_at_m48 += 70000;
        }
        if (enc_at_m48 == 8)
        {
            sum_at_m48 = 0;
            max_at_m48 = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (26); cnt < cnt_end; ++cnt)
                {
                    if (encprocref(3, cnt) != 0)
                    {
                        if (encflt(reftype, encprocref(3, cnt)) == 0)
                        {
                            if (encprocref(4, cnt) == 0)
                            {
                                continue;
                            }
                            else
                            {
                                if (encflt(reftype, encprocref(4, cnt)) == 0)
                                {
                                    continue;
                                }
                            }
                        }
                    }
                    sum_at_m48 += encprocref(2, cnt);
                    enclist(0, max_at_m48) = cnt;
                    enclist(1, max_at_m48) = sum_at_m48;
                    ++max_at_m48;
                }
            }
            if (max_at_m48 == 0)
            {
                stat = 0;
                return stat;
            }
            i_at_m48 = 0;
            exrand_rnd(p_at_m48, sum_at_m48);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (max_at_m48); cnt < cnt_end; ++cnt)
                {
                    if (p_at_m48 < enclist(1, cnt))
                    {
                        i_at_m48 = enclist(0, cnt);
                        break;
                    }
                }
            }
            enc_at_m48 = 80000 + i_at_m48;
        }
        if (enc_at_m48 == 9)
        {
            enc_at_m48 = rnd(rnd(6) + 1);
            encp_at_m48 =
                limit(encp_at_m48, 0, 500) * encammoref(1, enc_at_m48) / 500
                + encammoref(0, enc_at_m48);
            enc_at_m48 += 90000;
            encp_at_m48 += encp_at_m48 * 1000;
        }
    }
    i_at_m48 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            if (inv(40 + cnt * 2, prm_458) == enc_at_m48)
            {
                i_at_m48 = cnt;
                continue;
            }
            if (i_at_m48 == -1)
            {
                if (inv(40 + cnt * 2, prm_458) == 0)
                {
                    i_at_m48 = cnt;
                }
            }
        }
    }
    if (i_at_m48 == -1)
    {
        stat = 0;
        return stat;
    }
    if (inv(40 + i_at_m48 * 2, prm_458) == enc_at_m48)
    {
        if (reftype == 25000)
        {
            stat = 0;
            return stat;
        }
        if (prm_462)
        {
        }
        else
        {
            encp_at_m48 /= 2;
        }
    }
    if (prm_463)
    {
        rtval(0) = enc_at_m48;
        rtval(1) = encp_at_m48;
        stat = 0;
        return stat;
    }
    if (inv(40 + i_at_m48 * 2, prm_458) == enc_at_m48)
    {
        encp_at_m48 += inv(40 + i_at_m48 * 2 + 1, prm_458);
    }
    inv(40 + i_at_m48 * 2 + 0, prm_458) = enc_at_m48;
    inv(40 + i_at_m48 * 2 + 1, prm_458) = encp_at_m48;
    if (prm_459 < 10000)
    {
        p_at_m48 = prm_459;
    }
    else
    {
        p_at_m48 = prm_459 / 10000;
    }
    if (inv(1, prm_458) * encref(1, p_at_m48) / 100 > 0)
    {
        inv(1, prm_458) = inv(1, prm_458) * encref(1, p_at_m48) / 100;
    }
    sortenc(prm_458);
    stat = 1;
    return stat;
}
void egoadd(int prm_465, int prm_466)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (egoenc(cnt * 2, prm_466) == 0)
            {
                break;
            }
            encadd(
                prm_465,
                egoenc(cnt * 2, prm_466),
                randomencp(egoenc(cnt * 2 + 1, prm_466)));
        }
    }
    return;
}
void label_0258()
{
    SDIM1(egoname);
    DIM3(egoenc, 20, 11);
    DIM3(egoref, 2, 11);
    DIM2(egolist, 11);
    egoname(1) = lang(u8"静寂の"s, u8"of silence"s);
    egoref(0, 1) = 0;
    egoref(1, 1) = 1;
    p = 1;
    egoenc(0, p) = 30157;
    egoenc(1, p) = 100;
    egoenc(2, p) = 22;
    egoenc(3, p) = 100;
    egoname(6) = lang(u8"耐盲目の"s, u8"of resist blind"s);
    egoref(0, 6) = 1;
    egoref(1, 6) = 1;
    p = 6;
    egoenc(0, p) = 23;
    egoenc(1, p) = 100;
    egoname(8) = lang(u8"耐混乱の"s, u8"of resist confusion"s);
    egoref(0, 8) = 1;
    egoref(1, 8) = 1;
    p = 8;
    egoenc(0, p) = 25;
    egoenc(1, p) = 100;
    egoname(0) = lang(u8"烈火の"s, u8"of fire"s);
    egoref(0, 0) = 1;
    egoref(1, 0) = 3;
    p = 0;
    egoenc(0, p) = 20050;
    egoenc(1, p) = 150;
    egoenc(2, p) = 70050;
    egoenc(3, p) = 150;
    egoname(2) = lang(u8"氷結の"s, u8"of cold"s);
    egoref(0, 2) = 1;
    egoref(1, 2) = 3;
    p = 2;
    egoenc(0, p) = 20051;
    egoenc(1, p) = 150;
    egoenc(2, p) = 70051;
    egoenc(3, p) = 150;
    egoname(3) = lang(u8"稲妻の"s, u8"of lightning"s);
    egoref(0, 3) = 1;
    egoref(1, 3) = 3;
    p = 3;
    egoenc(0, p) = 20052;
    egoenc(1, p) = 150;
    egoenc(2, p) = 70052;
    egoenc(3, p) = 150;
    egoname(5) = lang(u8"癒し手の"s, u8"of healing"s);
    egoref(0, 5) = 1;
    egoref(1, 5) = 1;
    p = 5;
    egoenc(0, p) = 30154;
    egoenc(1, p) = 100;
    egoname(7) = lang(u8"耐麻痺の"s, u8"of resist paralysis"s);
    egoref(0, 7) = 2;
    egoref(1, 7) = 1;
    p = 7;
    egoenc(0, p) = 24;
    egoenc(1, p) = 100;
    egoname(9) = lang(u8"耐恐怖の"s, u8"of resist fear"s);
    egoref(0, 9) = 0;
    egoref(1, 9) = 1;
    p = 9;
    egoenc(0, p) = 26;
    egoenc(1, p) = 100;
    egoname(10) = lang(u8"睡眠防止の"s, u8"of resist sleep"s);
    egoref(0, 10) = 0;
    egoref(1, 10) = 1;
    p = 10;
    egoenc(0, p) = 27;
    egoenc(1, p) = 100;
    egoname(4) = lang(u8"防衛者の"s, u8"of defender"s);
    egoref(0, 4) = 3;
    egoref(1, 4) = 10000;
    p = 4;
    egoenc(0, p) = 20050;
    egoenc(1, p) = 100;
    egoenc(2, p) = 20051;
    egoenc(3, p) = 100;
    egoenc(4, p) = 20052;
    egoenc(5, p) = 100;
    egominorn(0) = lang(u8"唄う"s, u8"singing"s);
    egominorn(1) = lang(u8"召使の"s, u8"servant's"s);
    egominorn(2) = lang(u8"従者の"s, u8"follower's"s);
    egominorn(3) = lang(u8"呻く"s, u8"howling"s);
    egominorn(4) = lang(u8"輝く"s, u8"glowing"s);
    egominorn(5) = lang(u8"異彩の"s, u8"conspicuous"s);
    egominorn(6) = lang(u8"魔力を帯びた"s, u8"magical"s);
    egominorn(7) = lang(u8"闇を砕く"s, u8"enchanted"s);
    egominorn(8) = lang(u8"強力な"s, u8"mighty"s);
    egominorn(9) = lang(u8"頼れる"s, u8"trustworthy"s);
    maxegominorn = length(egominorn);
    return;
}
void label_0259()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rnd(rnd(5) + 1) + 1); cnt < cnt_end; ++cnt)
        {
            encadd(ci, randomenc(randomenclv(egolv)), randomencp(), 8);
        }
    }
    inv(23, ci) = 20000 + rnd(maxegominorn);
    return;
}
void label_0260()
{
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
        {
            if (egoref(0, cnt) != egolv)
            {
                continue;
            }
            if (egoref(1, cnt) != 0)
            {
                if (encflt(reftype, egoref(1, cnt)) == 0)
                {
                    continue;
                }
            }
            egolist(p) = cnt;
            ++p;
        }
    }
    if (p == 0)
    {
        return;
    }
    p = egolist(rnd(p));
    inv(23, ci) = 10000 + p;
    egoadd(ci, p);
    if (rnd(2) == 0)
    {
        encadd(ci, randomenc(randomenclv(egolv)), randomencp(), 20);
    }
    if (rnd(4) == 0)
    {
        encadd(ci, randomenc(randomenclv(egolv)), randomencp(), 25);
    }
    return;
}
void label_0261()
{
    if (reftype == 25000)
    {
        inv(9, ci) = -1;
    }
    if (fixlv <= 2)
    {
        return;
    }
    if (fixlv == 6)
    {
        egolv = 4;
    }
    else
    {
        egolv = rnd(limit(rnd(objlv / 10 + 3), 0, 4) + 1);
        inv(1, ci) = inv(1, ci) * 3;
        inv(29, ci) = 50 + rnd((abs((fixlv - 2)) * 100 + 100));
    }
    if (reftypeminor == 10006)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (rnd(10) == 0)
                {
                    encadd(ci, 34, randomencp());
                }
                if (rnd(10) == 0)
                {
                    encadd(ci, 10016, randomencp());
                }
                if (rnd(10) == 0)
                {
                    encadd(ci, 30172, randomencp());
                    break;
                }
                if (rnd(10) == 0)
                {
                    encadd(ci, 10003, randomencp());
                    break;
                }
                if (rnd(10) == 0)
                {
                    encadd(ci, 30164, randomencp());
                    break;
                }
            }
        }
    }
    if (fixlv < 4)
    {
        if (rnd(2))
        {
            label_0259();
        }
        else
        {
            label_0260();
        }
    }
    if (fixlv == 4 || fixlv == 5)
    {
        inv(23, ci) = 40000 + rnd(30000);
        if (fixlv == 5 || fixlv == 4 && rnd(10) == 0)
        {
            encadd(ci, randomenc(99), randomencp());
        }
        if (rnd(100) == 0 || 0)
        {
            if (reftype == 24000 || reftype == 10000)
            {
                ibitmod(10, ci, 1);
                inv(25, ci) = 1;
                return;
            }
        }
        if (fixlv == 4)
        {
            p = rnd(rnd(rnd(10) + 1) + 3) + 3;
        }
        if (fixlv == 5)
        {
            p = rnd(rnd(rnd(10) + 1) + 3) + 6;
        }
        if (p > 11)
        {
            if (reftype == 10000 || reftype == 24000)
            {
                if (rnd(10) == 0)
                {
                    ibitmod(15, ci, 1);
                    encadd(ci, randomenc(99), randomencp());
                    inv(17, ci) = 1;
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
            {
                encadd(
                    ci,
                    randomenc(randomenclv(egolv)),
                    randomencp() + (fixlv == 5) * 100
                        + (ibit(15, ci) == 1) * 100,
                    20 - (fixlv == 5) * 10 - (ibit(15, ci) == 1) * 20);
            }
        }
    }
    if (fixlv == 6)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (rnd(3)); cnt < cnt_end; ++cnt)
            {
                encadd(ci, randomenc(randomenclv(egolv)), randomencp(), 10);
            }
        }
    }
    if (inv(17, ci) <= -1)
    {
        encadd(
            ci,
            randomenc(randomenclv(egolv)),
            limit(randomencp(), 250, 10000) * (125 + (inv(17, ci) == -2) * 25)
                / 100);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1 + (inv(17, ci) == -2) + rnd(2));
                 cnt < cnt_end;
                 ++cnt)
            {
                if (rnd(3) == 0)
                {
                    encadd(ci, 2, randomencp() * 3 / 2, 100);
                    continue;
                }
                if (rnd(3) == 0)
                {
                    encadd(ci, 1, randomencp() * 5 / 2, 100);
                    continue;
                }
                encadd(ci, randomenc(-1), randomencp());
            }
        }
    }
    return;
}
void label_0262()
{
    SDIM4(mtname, 18, 2, 50);
    DIM3(mtref, 10, 50);
    DIM3(mtenc, 16, 50);
    DIM3(mtbit, 10, 50);
    if (jp)
    {
        mtname(0, 36) = u8"野菜"s;
        mtname(0, 37) = u8"果実"s;
        mtname(0, 38) = u8"ハーブ"s;
        mtname(0, 39) = u8"謎の物体"s;
        mtname(0, 40) = u8"アーティファクト"s;
        mtname(0, 41) = u8"宝石"s;
        mtname(0, 42) = u8"魔法の木"s;
    }
    else
    {
        mtname(0, 36) = u8"野菜"s;
        mtname(0, 37) = u8"果実"s;
        mtname(0, 38) = u8"ハーブ"s;
        mtname(0, 39) = u8"謎の物体"s;
        mtname(0, 40) = u8"アーティファクト"s;
        mtname(0, 41) = u8"宝石"s;
        mtname(0, 42) = u8"魔法の木"s;
    }
    p = 0;
    if (jp)
    {
        mtname(0, p) = u8"砂"s;
        mtname(1, p) = u8"子供のおもちゃの"s;
    }
    else
    {
        mtname(0, p) = u8"sand"s;
        mtname(1, p) = u8"toy"s;
    }
    mtref(0, p) = 10;
    mtref(1, p) = 80;
    mtref(2, p) = -5;
    mtref(3, p) = -5;
    mtref(4, p) = -5;
    mtref(5, p) = -5;
    mtref(6, p) = 100;
    mtenc(0, p) = 0;
    p = 35;
    if (jp)
    {
        mtname(0, p) = u8"生もの"s;
        mtname(1, p) = u8"食用"s;
    }
    else
    {
        mtname(0, p) = u8"raw"s;
        mtname(1, p) = u8"candy"s;
    }
    mtref(0, p) = 100;
    mtref(1, p) = 50;
    mtref(2, p) = -5;
    mtref(3, p) = -5;
    mtref(4, p) = -5;
    mtref(5, p) = -5;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 0;
    p = 43;
    if (jp)
    {
        mtname(0, p) = u8"木"s;
        mtname(1, p) = u8"古き"s;
    }
    else
    {
        mtname(0, p) = u8"wood"s;
        mtname(1, p) = u8"old"s;
    }
    mtref(0, p) = 150;
    mtref(1, p) = 50;
    mtref(2, p) = -5;
    mtref(3, p) = -5;
    mtref(4, p) = -5;
    mtref(5, p) = -5;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 0;
    p = 34;
    if (jp)
    {
        mtname(0, p) = u8"鉛"s;
        mtname(1, p) = u8"重き"s;
    }
    else
    {
        mtname(0, p) = u8"iron"s;
        mtname(1, p) = u8"heavy"s;
    }
    mtref(0, p) = 300;
    mtref(1, p) = 50;
    mtref(2, p) = 3;
    mtref(3, p) = 4;
    mtref(4, p) = -3;
    mtref(5, p) = 11;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 0;
    mtbit(0, p) = 1;
    p = 12;
    if (jp)
    {
        mtname(0, p) = u8"ブロンズ"s;
        mtname(1, p) = u8"気高き"s;
    }
    else
    {
        mtname(0, p) = u8"bronze"s;
        mtname(1, p) = u8"noble"s;
    }
    mtref(0, p) = 200;
    mtref(1, p) = 70;
    mtref(2, p) = 2;
    mtref(3, p) = 5;
    mtref(4, p) = 1;
    mtref(5, p) = 5;
    mtref(6, p) = 100;
    mtref(7, p) = 6;
    mtenc(0, p) = 20052;
    mtenc(1, p) = 50;
    p = 21;
    if (jp)
    {
        mtname(0, p) = u8"ミカ"s;
        mtname(1, p) = u8"儚き"s;
    }
    else
    {
        mtname(0, p) = u8"mica"s;
        mtname(1, p) = u8"ephemeral"s;
    }
    mtref(0, p) = 40;
    mtref(1, p) = 150;
    mtref(2, p) = 10;
    mtref(3, p) = -2;
    mtref(4, p) = 12;
    mtref(5, p) = 0;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 10019;
    mtenc(1, p) = 100;
    p = 33;
    if (jp)
    {
        mtname(0, p) = u8"珊瑚"s;
        mtname(1, p) = u8"海からもたらされし"s;
    }
    else
    {
        mtname(0, p) = u8"coral"s;
        mtname(1, p) = u8"ocean"s;
    }
    mtref(0, p) = 180;
    mtref(1, p) = 240;
    mtref(2, p) = 7;
    mtref(3, p) = 2;
    mtref(4, p) = 10;
    mtref(5, p) = 7;
    mtref(6, p) = 120;
    mtref(7, p) = 5;
    mtenc(0, p) = 20052;
    mtenc(1, p) = 100;
    p = 10;
    if (jp)
    {
        mtname(0, p) = u8"鉄"s;
        mtname(1, p) = u8"鉄塊と呼ばれる"s;
    }
    else
    {
        mtname(0, p) = u8"metal"s;
        mtname(1, p) = u8"mass"s;
    }
    mtref(0, p) = 280;
    mtref(1, p) = 190;
    mtref(2, p) = 8;
    mtref(3, p) = 8;
    mtref(4, p) = 3;
    mtref(5, p) = 14;
    mtref(6, p) = 130;
    mtref(7, p) = 0;
    mtenc(0, p) = 20050;
    mtenc(1, p) = 25;
    mtbit(0, p) = 2;
    p = 25;
    if (jp)
    {
        mtname(0, p) = u8"シルバー"s;
        mtname(1, p) = u8"闇を砕く"s;
    }
    else
    {
        mtname(0, p) = u8"silver"s;
        mtname(1, p) = u8"dreadbane"s;
    }
    mtref(0, p) = 230;
    mtref(1, p) = 250;
    mtref(2, p) = 10;
    mtref(3, p) = 7;
    mtref(4, p) = 7;
    mtref(5, p) = 11;
    mtref(6, p) = 130;
    mtref(7, p) = 0;
    mtenc(0, p) = 20053;
    mtenc(1, p) = 50;
    mtbit(0, p) = 2;
    p = 5;
    if (jp)
    {
        mtname(0, p) = u8"硝子"s;
        mtname(1, p) = u8"透き通る"s;
    }
    else
    {
        mtname(0, p) = u8"glass"s;
        mtname(1, p) = u8"transparent"s;
    }
    mtref(0, p) = 180;
    mtref(1, p) = 150;
    mtref(2, p) = 19;
    mtref(3, p) = 0;
    mtref(4, p) = 17;
    mtref(5, p) = 0;
    mtref(6, p) = 100;
    mtref(7, p) = 4;
    mtenc(0, p) = 10018;
    mtenc(1, p) = 150;
    mtbit(0, p) = 2;
    p = 20;
    if (jp)
    {
        mtname(0, p) = u8"オブシディアン"s;
        mtname(1, p) = u8"神殺しの"s;
    }
    else
    {
        mtname(0, p) = u8"obsidian"s;
        mtname(1, p) = u8"godbane"s;
    }
    mtref(0, p) = 160;
    mtref(1, p) = 350;
    mtref(2, p) = 16;
    mtref(3, p) = 10;
    mtref(4, p) = 13;
    mtref(5, p) = 14;
    mtref(6, p) = 130;
    mtref(7, p) = 0;
    mtenc(0, p) = 20059;
    mtenc(1, p) = 100;
    p = 9;
    if (jp)
    {
        mtname(0, p) = u8"スティール"s;
        mtname(1, p) = u8"由緒ある"s;
    }
    else
    {
        mtname(0, p) = u8"steel"s;
        mtname(1, p) = u8"historic"s;
    }
    mtref(0, p) = 270;
    mtref(1, p) = 280;
    mtref(2, p) = 12;
    mtref(3, p) = 13;
    mtref(4, p) = 8;
    mtref(5, p) = 18;
    mtref(6, p) = 140;
    mtref(7, p) = 0;
    mtenc(0, p) = 0;
    mtbit(0, p) = 2;
    p = 26;
    if (jp)
    {
        mtname(0, p) = u8"白銀"s;
        mtname(1, p) = u8"光を纏いし"s;
    }
    else
    {
        mtname(0, p) = u8"platinum"s;
        mtname(1, p) = u8"brilliant"s;
    }
    mtref(0, p) = 260;
    mtref(1, p) = 350;
    mtref(2, p) = 16;
    mtref(3, p) = 11;
    mtref(4, p) = 14;
    mtref(5, p) = 17;
    mtref(6, p) = 140;
    mtref(7, p) = 0;
    mtenc(0, p) = 20053;
    mtenc(1, p) = 100;
    mtbit(0, p) = 2;
    p = 22;
    if (jp)
    {
        mtname(0, p) = u8"真珠"s;
        mtname(1, p) = u8"闇を照らす"s;
    }
    else
    {
        mtname(0, p) = u8"perl"s;
        mtname(1, p) = u8"shining"s;
    }
    mtref(0, p) = 240;
    mtref(1, p) = 400;
    mtref(2, p) = 18;
    mtref(3, p) = 6;
    mtref(4, p) = 18;
    mtref(5, p) = 12;
    mtref(6, p) = 140;
    mtref(7, p) = 10;
    mtenc(0, p) = 10013;
    mtenc(1, p) = 100;
    p = 7;
    if (jp)
    {
        mtname(0, p) = u8"ミスリル"s;
        mtname(1, p) = u8"古なる"s;
    }
    else
    {
        mtname(0, p) = u8"mithril"s;
        mtname(1, p) = u8"ancient"s;
    }
    mtref(0, p) = 240;
    mtref(1, p) = 750;
    mtref(2, p) = 20;
    mtref(3, p) = 18;
    mtref(4, p) = 25;
    mtref(5, p) = 17;
    mtref(6, p) = 190;
    mtref(7, p) = 2;
    mtenc(0, p) = 30172;
    mtenc(1, p) = 100;
    mtbit(0, p) = 1;
    mtbit(1, p) = 2;
    p = 30;
    if (jp)
    {
        mtname(0, p) = u8"クロム"s;
        mtname(1, p) = u8"真実を暴く"s;
    }
    else
    {
        mtname(0, p) = u8"chrome"s;
        mtname(1, p) = u8"pure"s;
    }
    mtref(0, p) = 320;
    mtref(1, p) = 500;
    mtref(2, p) = 15;
    mtref(3, p) = 17;
    mtref(4, p) = 12;
    mtref(5, p) = 22;
    mtref(6, p) = 150;
    mtref(7, p) = 0;
    mtenc(0, p) = 0;
    p = 11;
    if (jp)
    {
        mtname(0, p) = u8"水晶"s;
        mtname(1, p) = u8"異光を放つ"s;
    }
    else
    {
        mtname(0, p) = u8"crystal"s;
        mtname(1, p) = u8"rainbow"s;
    }
    mtref(0, p) = 200;
    mtref(1, p) = 800;
    mtref(2, p) = 19;
    mtref(3, p) = 14;
    mtref(4, p) = 16;
    mtref(5, p) = 19;
    mtref(6, p) = 150;
    mtref(7, p) = 12;
    mtenc(0, p) = 10016;
    mtenc(1, p) = 100;
    p = 23;
    if (jp)
    {
        mtname(0, p) = u8"エメラルド"s;
        mtname(1, p) = u8"奇跡を呼ぶ"s;
    }
    else
    {
        mtname(0, p) = u8"emerald"s;
        mtname(1, p) = u8"miracle"s;
    }
    mtref(0, p) = 240;
    mtref(1, p) = 1050;
    mtref(2, p) = 22;
    mtref(3, p) = 23;
    mtref(4, p) = 18;
    mtref(5, p) = 28;
    mtref(6, p) = 190;
    mtref(7, p) = 2;
    mtenc(0, p) = 20058;
    mtenc(1, p) = 100;
    p = 31;
    if (jp)
    {
        mtname(0, p) = u8"アダマンタイト"s;
        mtname(1, p) = u8"大地を揺るがす"s;
    }
    else
    {
        mtname(0, p) = u8"adamantium"s;
        mtname(1, p) = u8"earth"s;
    }
    mtref(0, p) = 360;
    mtref(1, p) = 1150;
    mtref(2, p) = 11;
    mtref(3, p) = 38;
    mtref(4, p) = 8;
    mtref(5, p) = 42;
    mtref(6, p) = 240;
    mtref(7, p) = 10;
    mtenc(0, p) = 10011;
    mtenc(1, p) = 100;
    mtbit(0, p) = 1;
    mtbit(1, p) = 2;
    p = 29;
    if (jp)
    {
        mtname(0, p) = u8"チタン"s;
        mtname(1, p) = u8"色褪せぬ"s;
    }
    else
    {
        mtname(0, p) = u8"titanium"s;
        mtname(1, p) = u8"fadeless"s;
    }
    mtref(0, p) = 200;
    mtref(1, p) = 750;
    mtref(2, p) = 21;
    mtref(3, p) = 18;
    mtref(4, p) = 19;
    mtref(5, p) = 22;
    mtref(6, p) = 160;
    mtref(7, p) = 0;
    mtenc(0, p) = 10010;
    mtenc(1, p) = 100;
    mtbit(0, p) = 2;
    p = 13;
    if (jp)
    {
        mtname(0, p) = u8"ダイヤ"s;
        mtname(1, p) = u8"うつろいなき"s;
    }
    else
    {
        mtname(0, p) = u8"diamond"s;
        mtname(1, p) = u8"ever lasting"s;
    }
    mtref(0, p) = 330;
    mtref(1, p) = 1100;
    mtref(2, p) = 19;
    mtref(3, p) = 27;
    mtref(4, p) = 13;
    mtref(5, p) = 31;
    mtref(6, p) = 220;
    mtref(7, p) = 0;
    mtenc(0, p) = 20052;
    mtenc(1, p) = 100;
    p = 15;
    if (jp)
    {
        mtname(0, p) = u8"ルビナス"s;
        mtname(1, p) = u8"赤く染まった"s;
    }
    else
    {
        mtname(0, p) = u8"rubynus"s;
        mtname(1, p) = u8"crimson"s;
    }
    mtref(0, p) = 250;
    mtref(1, p) = 1000;
    mtref(2, p) = 38;
    mtref(3, p) = 18;
    mtref(4, p) = 31;
    mtref(5, p) = 24;
    mtref(6, p) = 190;
    mtref(7, p) = 3;
    mtenc(0, p) = 10002;
    mtenc(1, p) = 125;
    mtbit(0, p) = 1;
    mtbit(1, p) = 2;
    p = 8;
    if (jp)
    {
        mtname(0, p) = u8"エーテル"s;
        mtname(1, p) = u8"永遠なる"s;
    }
    else
    {
        mtname(0, p) = u8"ether"s;
        mtname(1, p) = u8"eternal"s;
    }
    mtref(0, p) = 80;
    mtref(1, p) = 1200;
    mtref(2, p) = 8;
    mtref(3, p) = 45;
    mtref(4, p) = 35;
    mtref(5, p) = 8;
    mtref(6, p) = 250;
    mtref(7, p) = 4;
    mtenc(0, p) = 10018;
    mtenc(1, p) = 200;
    mtbit(0, p) = 1;
    mtbit(1, p) = 2;
    p = 3;
    if (jp)
    {
        mtname(0, p) = u8"布"s;
        mtname(1, p) = u8"艶やかなる"s;
    }
    else
    {
        mtname(0, p) = u8"cloth"s;
        mtname(1, p) = u8"charming"s;
    }
    mtref(0, p) = 20;
    mtref(1, p) = 30;
    mtref(2, p) = 6;
    mtref(3, p) = -5;
    mtref(4, p) = 7;
    mtref(5, p) = 2;
    mtref(6, p) = 100;
    mtref(7, p) = 10;
    mtenc(0, p) = 0;
    p = 2;
    if (jp)
    {
        mtname(0, p) = u8"シルク"s;
        mtname(1, p) = u8"美しき"s;
    }
    else
    {
        mtname(0, p) = u8"silk"s;
        mtname(1, p) = u8"beautiful"s;
    }
    mtref(0, p) = 40;
    mtref(1, p) = 190;
    mtref(2, p) = 9;
    mtref(3, p) = -2;
    mtref(4, p) = 10;
    mtref(5, p) = 2;
    mtref(6, p) = 100;
    mtref(7, p) = 5;
    mtenc(0, p) = 20054;
    mtenc(1, p) = 50;
    p = 16;
    if (jp)
    {
        mtname(0, p) = u8"紙"s;
        mtname(1, p) = u8"ふざけた"s;
    }
    else
    {
        mtname(0, p) = u8"paper"s;
        mtname(1, p) = u8"silly"s;
    }
    mtref(0, p) = 10;
    mtref(1, p) = 20;
    mtref(2, p) = 15;
    mtref(3, p) = -10;
    mtref(4, p) = 12;
    mtref(5, p) = 0;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 30173;
    mtenc(1, p) = 100;
    p = 18;
    if (jp)
    {
        mtname(0, p) = u8"ボーン"s;
        mtname(1, p) = u8"不死なる"s;
    }
    else
    {
        mtname(0, p) = u8"bone"s;
        mtname(1, p) = u8"immortal"s;
    }
    mtref(0, p) = 120;
    mtref(1, p) = 300;
    mtref(2, p) = 10;
    mtref(3, p) = 6;
    mtref(4, p) = 12;
    mtref(5, p) = 11;
    mtref(6, p) = 140;
    mtref(7, p) = 0;
    mtenc(0, p) = 20056;
    mtenc(1, p) = 100;
    mtbit(0, p) = 2;
    p = 1;
    if (jp)
    {
        mtname(0, p) = u8"革"s;
        mtname(1, p) = u8"全てを包む"s;
    }
    else
    {
        mtname(0, p) = u8"leather"s;
        mtname(1, p) = u8"mysterious"s;
    }
    mtref(0, p) = 100;
    mtref(1, p) = 150;
    mtref(2, p) = 12;
    mtref(3, p) = 2;
    mtref(4, p) = 13;
    mtref(5, p) = 6;
    mtref(6, p) = 100;
    mtref(7, p) = 6;
    mtenc(0, p) = 0;
    p = 4;
    if (jp)
    {
        mtname(0, p) = u8"鱗"s;
        mtname(1, p) = u8"逆鱗に触れし"s;
    }
    else
    {
        mtname(0, p) = u8"scale"s;
        mtname(1, p) = u8"wrath"s;
    }
    mtref(0, p) = 180;
    mtref(1, p) = 250;
    mtref(2, p) = 14;
    mtref(3, p) = 6;
    mtref(4, p) = 12;
    mtref(5, p) = 11;
    mtref(6, p) = 120;
    mtref(7, p) = 10;
    mtenc(0, p) = 20050;
    mtenc(1, p) = 50;
    p = 19;
    if (jp)
    {
        mtname(0, p) = u8"鉄鎖"s;
        mtname(1, p) = u8"連鎖せし"s;
    }
    else
    {
        mtname(0, p) = u8"chain"s;
        mtname(1, p) = u8"spiral"s;
    }
    mtref(0, p) = 200;
    mtref(1, p) = 300;
    mtref(2, p) = 11;
    mtref(3, p) = 8;
    mtref(4, p) = 17;
    mtref(5, p) = 14;
    mtref(6, p) = 100;
    mtref(7, p) = 0;
    mtenc(0, p) = 20053;
    mtenc(1, p) = 50;
    mtbit(0, p) = 2;
    p = 27;
    if (jp)
    {
        mtname(0, p) = u8"ザイロン"s;
        mtname(1, p) = u8"異国からもたらされし"s;
    }
    else
    {
        mtname(0, p) = u8"zylon"s;
        mtname(1, p) = u8"foreign"s;
    }
    mtref(0, p) = 50;
    mtref(1, p) = 500;
    mtref(2, p) = 5;
    mtref(3, p) = 4;
    mtref(4, p) = 21;
    mtref(5, p) = 16;
    mtref(6, p) = 100;
    mtref(7, p) = 4;
    mtenc(0, p) = 20056;
    mtenc(1, p) = 50;
    p = 32;
    if (jp)
    {
        mtname(0, p) = u8"ゴールデン"s;
        mtname(1, p) = u8"黄金に輝く"s;
    }
    else
    {
        mtname(0, p) = u8"gold"s;
        mtname(1, p) = u8"golden"s;
    }
    mtref(0, p) = 300;
    mtref(1, p) = 800;
    mtref(2, p) = 13;
    mtref(3, p) = 18;
    mtref(4, p) = 14;
    mtref(5, p) = 22;
    mtref(6, p) = 140;
    mtref(7, p) = 5;
    mtenc(0, p) = 10010;
    mtenc(1, p) = 100;
    mtbit(0, p) = 2;
    p = 14;
    if (jp)
    {
        mtname(0, p) = u8"霊布"s;
        mtname(1, p) = u8"この世ならざる"s;
    }
    else
    {
        mtname(0, p) = u8"spirit cloth"s;
        mtname(1, p) = u8"amazing"s;
    }
    mtref(0, p) = 40;
    mtref(1, p) = 750;
    mtref(2, p) = 3;
    mtref(3, p) = 2;
    mtref(4, p) = 34;
    mtref(5, p) = 6;
    mtref(6, p) = 100;
    mtref(7, p) = 4;
    mtenc(0, p) = 10018;
    mtenc(1, p) = 200;
    mtbit(0, p) = 1;
    p = 24;
    if (jp)
    {
        mtname(0, p) = u8"竜鱗"s;
        mtname(1, p) = u8"竜を統べし"s;
    }
    else
    {
        mtname(0, p) = u8"dragon scale"s;
        mtname(1, p) = u8"dragonbane"s;
    }
    mtref(0, p) = 220;
    mtref(1, p) = 800;
    mtref(2, p) = 25;
    mtref(3, p) = 24;
    mtref(4, p) = 29;
    mtref(5, p) = 24;
    mtref(6, p) = 160;
    mtref(7, p) = 2;
    mtenc(0, p) = 20050;
    mtenc(1, p) = 50;
    mtenc(2, p) = 20051;
    mtenc(3, p) = 50;
    mtbit(0, p) = 1;
    mtbit(1, p) = 2;
    p = 17;
    if (jp)
    {
        mtname(0, p) = u8"宵晒"s;
        mtname(1, p) = u8"宵闇を纏いし"s;
    }
    else
    {
        mtname(0, p) = u8"dawn cloth"s;
        mtname(1, p) = u8"dawn"s;
    }
    mtref(0, p) = 45;
    mtref(1, p) = 850;
    mtref(2, p) = 10;
    mtref(3, p) = 8;
    mtref(4, p) = 35;
    mtref(5, p) = 15;
    mtref(6, p) = 100;
    mtref(7, p) = 4;
    mtenc(0, p) = 10003;
    mtenc(1, p) = 200;
    p = 28;
    if (jp)
    {
        mtname(0, p) = u8"翼鳥鱗"s;
        mtname(1, p) = u8"翼を折られし"s;
    }
    else
    {
        mtname(0, p) = u8"griffon scale"s;
        mtname(1, p) = u8"fallen"s;
    }
    mtref(0, p) = 70;
    mtref(1, p) = 1000;
    mtref(2, p) = 16;
    mtref(3, p) = 17;
    mtref(4, p) = 32;
    mtref(5, p) = 24;
    mtref(6, p) = 120;
    mtref(7, p) = 2;
    mtenc(0, p) = 30173;
    mtenc(1, p) = 100;
    DIM3(mtlistmetal, 4, 5);
    DIM3(mtlistleather, 4, 5);
    mtlistmetal(0, 0) = 12;
    mtlistmetal(1, 0) = 34;
    mtlistmetal(2, 0) = 21;
    mtlistmetal(3, 0) = 33;
    mtlistmetal(0, 1) = 10;
    mtlistmetal(1, 1) = 25;
    mtlistmetal(2, 1) = 5;
    mtlistmetal(3, 1) = 20;
    mtlistmetal(0, 2) = 9;
    mtlistmetal(1, 2) = 26;
    mtlistmetal(2, 2) = 22;
    mtlistmetal(3, 2) = 7;
    mtlistmetal(0, 3) = 30;
    mtlistmetal(1, 3) = 11;
    mtlistmetal(2, 3) = 23;
    mtlistmetal(3, 3) = 31;
    mtlistmetal(0, 4) = 29;
    mtlistmetal(1, 4) = 13;
    mtlistmetal(2, 4) = 15;
    mtlistmetal(3, 4) = 8;
    mtlistleather(0, 0) = 3;
    mtlistleather(1, 0) = 2;
    mtlistleather(2, 0) = 16;
    mtlistleather(3, 0) = 18;
    mtlistleather(0, 1) = 1;
    mtlistleather(1, 1) = 4;
    mtlistleather(2, 1) = 5;
    mtlistleather(3, 1) = 20;
    mtlistleather(0, 2) = 19;
    mtlistleather(1, 2) = 26;
    mtlistleather(2, 2) = 22;
    mtlistleather(3, 2) = 7;
    mtlistleather(0, 3) = 27;
    mtlistleather(1, 3) = 32;
    mtlistleather(2, 3) = 14;
    mtlistleather(3, 3) = 24;
    mtlistleather(0, 4) = 17;
    mtlistleather(1, 4) = 28;
    mtlistleather(2, 4) = 15;
    mtlistleather(3, 4) = 8;
    return;
}
void label_0263()
{
    label_0264();
    label_0266();
    return;
}
void label_0264()
{
    if (cm)
    {
        mtlv = cdata(38, rc) / 15 + 1;
    }
    else
    {
        mtlv = rnd((objlv + 1)) / 10 + 1;
    }
    if (inv(3, ci) == 630)
    {
        mtlv = rnd(mtlv + 1);
        if (rnd(3))
        {
            inv(24, ci) = 1000;
        }
        else
        {
            inv(24, ci) = 1001;
        }
    }
    p = rnd(100);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (p < 5)
            {
                p = 3;
                break;
            }
            if (p < 25)
            {
                p = 2;
                break;
            }
            if (p < 55)
            {
                p = 1;
                break;
            }
            p = 0;
        }
    }
    if (mode == 1)
    {
        mtlv = 0;
        p = 0;
    }
    if (mtlv >= 5)
    {
        mtlv = 4;
    }
    mtlv = limit(rnd(mtlv + 1) + objfix, 0, 4);
    objfix = 0;
    if (reftype == 60000)
    {
        if (rnd(2) == 0)
        {
            inv(24, ci) = 1000;
        }
        else
        {
            inv(24, ci) = 1001;
        }
    }
    if (inv(24, ci) == 1000)
    {
        if (rnd(10) != 0)
        {
            inv(24, ci) = mtlistmetal(p, mtlv);
        }
        else
        {
            inv(24, ci) = mtlistleather(p, mtlv);
        }
    }
    if (inv(24, ci) == 1001)
    {
        if (rnd(10) != 0)
        {
            inv(24, ci) = mtlistleather(p, mtlv);
        }
        else
        {
            inv(24, ci) = mtlistmetal(p, mtlv);
        }
    }
    if (rnd(25) == 0)
    {
        inv(24, ci) = 35;
    }
    return;
}
void label_0265()
{
    inv(22, ci) = 0;
    p = inv(24, ci);
    reftype = refitem(inv(3, ci), 5);
    fixlv = inv(4, ci);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            if (mtenc(cnt * 2, p) == 0)
            {
                break;
            }
            encremove(ci, mtenc(cnt * 2, p), mtenc(cnt * 2 + 1, p));
        }
    }
    originalvalue = inv(1, ci) * 100 / mtref(1, p);
    dbid = inv(3, ci);
    dbmode = 10;
    label_0481();
    inv(1, ci) = originalvalue;
    if (fixmaterial != 0)
    {
        inv(24, ci) = fixmaterial;
        fixmaterial = 0;
    }
    else
    {
        label_0264();
    }
    label_0266();
    label_1583();
    r1 = cc;
    label_1477();
    return;
}
void label_0266()
{
    if (reftype == 60000)
    {
        if (inv(24, ci) == 3 || inv(24, ci) == 16 || inv(24, ci) == 21
            || inv(24, ci) == 2)
        {
            inv(24, ci) = 43;
        }
    }
    p = inv(24, ci);
    inv(7, ci) = inv(7, ci) * mtref(0, p) / 100;
    if (reftype == 60000)
    {
        inv(1, ci) += mtref(1, p) * 2;
    }
    else
    {
        inv(1, ci) = inv(1, ci) * mtref(1, p) / 100;
    }
    if (inv(22, ci) == 0)
    {
        inv(22, ci) = mtref(7, p);
    }
    p(1) = 120;
    p(2) = 80;
    if (fixlv == 1)
    {
        p(1) = 150;
        p(2) = 80;
    }
    if (fixlv == 3)
    {
        p(1) = 100;
        p(2) = 70;
    }
    if (fixlv >= 4)
    {
        p(1) = 80;
        p(2) = 70;
    }
    if (inv(13, ci) != 0)
    {
        inv(13, ci) = mtref(2, p) * inv(13, ci) * 9 / (p(1) - rnd(30));
    }
    if (inv(12, ci) != 0)
    {
        inv(12, ci) = mtref(3, p) * inv(12, ci) * 5 / (p(1) - rnd(30));
    }
    if (inv(14, ci) != 0)
    {
        inv(14, ci) = mtref(4, p) * inv(14, ci) * 7 / (p(1) - rnd(30));
    }
    if (inv(15, ci) != 0)
    {
        inv(15, ci) = mtref(5, p) * inv(15, ci) * 9 / (p(1) - rnd(30));
    }
    if (inv(11, ci) != 0)
    {
        inv(11, ci) = inv(11, ci) * mtref(6, p) / (p(1) + rnd(25));
    }
    label_0267();
    return;
}
void label_0267()
{
    p = inv(24, ci);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            if (mtenc(cnt * 2, p) == 0)
            {
                break;
            }
            encadd(ci, mtenc(cnt * 2, p), mtenc(cnt * 2 + 1, p), 0, 1);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (mtbit(cnt, p) == 0)
            {
                break;
            }
            ibitmod(mtbit(cnt, p), ci, 1);
        }
    }
    return;
}
void label_0268()
{
    p = 0;
    DIM3(fishdata, 10, 100);
    SDIM3(fishdatan, 24, 100);
    fishdatan(p) = lang(u8"バグ"s, u8"bug"s);
    fishdata(0, p) = 0;
    fishdata(1, p) = 0;
    fishdata(2, p) = 0;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 100;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"金魚"s, u8"goldfish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 2;
    fishdata(4, p) = 100;
    fishdata(5, p) = 100;
    fishdata(6, p) = 180;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"亀"s, u8"turtle"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 250;
    fishdata(3, p) = 4;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 450;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ゼニタナゴ"s, u8"bitterling"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 50;
    fishdata(3, p) = 5;
    fishdata(4, p) = 100;
    fishdata(5, p) = 1500;
    fishdata(6, p) = 2200;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"おたまじゃくし"s, u8"tadpole"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 150;
    fishdata(6, p) = 80;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"海水パンツ"s, u8"swimming trunks"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 40;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"小汚い長靴"s, u8"dirty long boots"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 0;
    fishdata(2, p) = 100;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 25;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"コイ"s, u8"carp"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 4;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 400;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ウナギ"s, u8"eel"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 800;
    fishdata(3, p) = 6;
    fishdata(4, p) = 100;
    fishdata(5, p) = 300;
    fishdata(6, p) = 750;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ハゼ"s, u8"goby"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 250;
    fishdata(3, p) = 8;
    fishdata(4, p) = 100;
    fishdata(5, p) = 400;
    fishdata(6, p) = 1250;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"キンメダイ"s, u8"sea bream"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 50;
    fishdata(3, p) = 12;
    fishdata(4, p) = 100;
    fishdata(5, p) = 350;
    fishdata(6, p) = 3500;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"空き缶"s, u8"empty can"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 40;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"壊れた機械"s, u8"broken machine"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 1;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 25;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"カジカ"s, u8"sculpin"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 8;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 800;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"スズキ"s, u8"sea bass"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 800;
    fishdata(3, p) = 10;
    fishdata(4, p) = 100;
    fishdata(5, p) = 300;
    fishdata(6, p) = 1200;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ウニ"s, u8"sea urchin"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 250;
    fishdata(3, p) = 12;
    fishdata(4, p) = 100;
    fishdata(5, p) = 400;
    fishdata(6, p) = 1800;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"シロアマダイ"s, u8"red sea bream"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 50;
    fishdata(3, p) = 16;
    fishdata(4, p) = 100;
    fishdata(5, p) = 350;
    fishdata(6, p) = 4500;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"空きビン"s, u8"empty bottle"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 40;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"汚い指輪"s, u8"dirty ring"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 2;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 325;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"キレアジ"s, u8"sword fish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 15;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 1500;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"アロワナ"s, u8"moonfish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 800;
    fishdata(3, p) = 18;
    fishdata(4, p) = 100;
    fishdata(5, p) = 300;
    fishdata(6, p) = 1900;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ハリマグロ"s, u8"tuna fish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 250;
    fishdata(3, p) = 22;
    fishdata(4, p) = 100;
    fishdata(5, p) = 400;
    fishdata(6, p) = 2400;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"古代魚"s, u8"ancient fish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 50;
    fishdata(3, p) = 28;
    fishdata(4, p) = 100;
    fishdata(5, p) = 350;
    fishdata(6, p) = 7200;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"破れた傘"s, u8"broken umbrella"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 40;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"かつら"s, u8"hairpiece"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 3;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 425;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"カツオ"s, u8"bonito"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 19;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 2200;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"アユ"s, u8"sweetfish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 800;
    fishdata(3, p) = 22;
    fishdata(4, p) = 100;
    fishdata(5, p) = 300;
    fishdata(6, p) = 2600;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"シマアジ"s, u8"yellow jack"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 250;
    fishdata(3, p) = 25;
    fishdata(4, p) = 100;
    fishdata(5, p) = 400;
    fishdata(6, p) = 4500;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"ブラックバス"s, u8"black bass"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 50;
    fishdata(3, p) = 30;
    fishdata(4, p) = 100;
    fishdata(5, p) = 350;
    fishdata(6, p) = 11200;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"北からの漂着物"s, u8"ashore from the north"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 240;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"エロ本"s, u8"pornographic book"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 4;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 525;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"サバ"s, u8"mackerel"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 1000;
    fishdata(3, p) = 25;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 3500;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"大食いマグロ"s, u8"big tuna fish"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 800;
    fishdata(3, p) = 29;
    fishdata(4, p) = 100;
    fishdata(5, p) = 300;
    fishdata(6, p) = 4400;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"コバンザメ"s, u8"remora"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 250;
    fishdata(3, p) = 33;
    fishdata(4, p) = 100;
    fishdata(5, p) = 400;
    fishdata(6, p) = 9550;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"クジラ"s, u8"whale"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 50;
    fishdata(3, p) = 40;
    fishdata(4, p) = 100;
    fishdata(5, p) = 350;
    fishdata(6, p) = 25000;
    fishdata(7, p) = 618;
    ++p;
    fishdatan(p) = lang(u8"空き箱"s, u8"empty box"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 40;
    fishdata(7, p) = 619;
    ++p;
    fishdatan(p) = lang(u8"壊れた携帯"s, u8"broken cell phone"s);
    fishdata(0, p) = 1;
    fishdata(1, p) = 5;
    fishdata(2, p) = 400;
    fishdata(3, p) = 0;
    fishdata(4, p) = 100;
    fishdata(5, p) = 250;
    fishdata(6, p) = 25;
    fishdata(7, p) = 619;
    ++p;
    return;
}
int itemcreate(int prm_467, int prm_468, int prm_469, int prm_470, int prm_471)
{
    itemcreatehack = -1;
    if (flttypeminor != 0)
    {
        flttypemajor = 0;
    }
    if (prm_468 == 0)
    {
        dbid = -1;
    }
    else
    {
        dbid = prm_468;
    }
    if (prm_471 != 0)
    {
        initnum = prm_471;
    }
    else
    {
        initnum = 0;
    }
    val(0) = prm_467;
    val(1) = prm_469;
    val(2) = prm_470;
    label_1582();
    itemcreatehack = 0;
    stat = stat;
    return stat;
}
void inv_getheader(int prm_472)
{
    if (prm_472 == 0)
    {
        invhead = 0;
        invrange = 200;
        return;
    }
    if (prm_472 == -1)
    {
        invhead = 5080;
        invrange = 400;
        return;
    }
    invhead = 200 + 20 * (prm_472 - 1);
    invrange = 20;
    return;
}
int inv_getowner(int prm_473)
{
    if (prm_473 < 200)
    {
        stat = 0;
        return stat;
    }
    if (prm_473 >= 5080)
    {
        stat = -1;
        return stat;
    }
    stat = (prm_473 - 200) / 20 + 1;
    return stat;
}
int inv_find(int prm_474, int prm_475)
{
    int f_at_m52 = 0;
    f_at_m52 = -1;
    inv_getheader(prm_475);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) == prm_474)
            {
                f_at_m52 = cnt;
                break;
            }
        }
    }
    stat = f_at_m52;
    return stat;
}
int item_find(int prm_476, int prm_477, int prm_478)
{
    elona_vector1<int> p_at_m52;
    p_at_m52(0) = -1;
    p_at_m52(1) = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                if (prm_478 > 0)
                {
                    continue;
                }
                inv_getheader(-1);
            }
            else
            {
                if (prm_478 < 0)
                {
                    continue;
                }
                inv_getheader(0);
            }
            p_at_m52(2) = cnt;
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (inv(0, cnt) == 0)
                    {
                        continue;
                    }
                    if (p_at_m52(2) == 0)
                    {
                        if (inv(5, cnt) != cdata(1, 0)
                            || inv(6, cnt) != cdata(2, 0))
                        {
                            continue;
                        }
                    }
                    if (prm_477 == 0)
                    {
                        if (refitem(inv(3, cnt), 5) == prm_476)
                        {
                            p_at_m52 = cnt;
                        }
                    }
                    if (prm_477 == 1)
                    {
                        if (inv(16, cnt) == prm_476)
                        {
                            if (p_at_m52(1) < inv(25, cnt))
                            {
                                p_at_m52(0) = cnt;
                                p_at_m52(1) = inv(25, cnt);
                            }
                        }
                    }
                    if (prm_477 == 2)
                    {
                        if (refitem(inv(3, cnt), 9) == prm_476)
                        {
                            p_at_m52 = cnt;
                        }
                    }
                    if (prm_477 == 3)
                    {
                        if (inv(3, cnt) == prm_476)
                        {
                            p_at_m52 = cnt;
                        }
                    }
                }
            }
        }
    }
    stat = p_at_m52;
    return stat;
}
int encfind(int prm_479, int prm_480)
{
    int i_at_m53 = 0;
    f_at_m53 = -1;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, prm_479) % 10000 == 0)
            {
                continue;
            }
            i_at_m53 = cdata(cnt, prm_479) % 10000 - 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (inv(40 + cnt * 2, i_at_m53) == 0)
                    {
                        break;
                    }
                    if (inv(40 + cnt * 2, i_at_m53) == prm_480)
                    {
                        if (inv(40 + cnt * 2 + 1, i_at_m53) > f_at_m53)
                        {
                            f_at_m53 = inv(40 + cnt * 2 + 1, i_at_m53);
                            break;
                        }
                    }
                }
            }
        }
    }
    stat = f_at_m53;
    return stat;
}
int encfindspec(int prm_481, int prm_482)
{
    f_at_m53 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            if (inv(40 + cnt * 2, prm_481) == 0)
            {
                break;
            }
            if (inv(40 + cnt * 2, prm_481) == prm_482)
            {
                f_at_m53 = 1;
                break;
            }
        }
    }
    stat = f_at_m53;
    return stat;
}
void itemlist(int prm_483, int prm_484)
{
    inv_getheader(prm_483);
    listmax = 0;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) == prm_484)
            {
                list(0, listmax) = cnt;
                ++listmax;
            }
        }
    }
    return;
}
int itemusingfind(int prm_485, int prm_486)
{
    f_at_m54 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(140, cnt) != 0)
            {
                if (cdata(141, cnt) > 0)
                {
                    if (cdata(142, cnt) == prm_485)
                    {
                        if (prm_486 == 0 || prm_486 == 1 && cnt != 0)
                        {
                            f_at_m54 = cnt;
                            break;
                        }
                    }
                }
            }
        }
    }
    stat = f_at_m54;
    return stat;
}
int itemfind(int prm_487, int prm_488, int prm_489)
{
    inv_getheader(prm_487);
    f_at_m54 = -1;
    if (prm_489 == 0)
    {
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(3, cnt) == prm_488)
                {
                    f_at_m54 = cnt;
                    break;
                }
            }
        }
        stat = f_at_m54;
        return stat;
    }
    else
    {
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (refitem(inv(3, cnt), 9) == prm_488)
                {
                    f_at_m54 = cnt;
                    break;
                }
            }
        }
        stat = f_at_m54;
        return stat;
    }
}
int mapitemfind(int prm_490, int prm_491, int prm_492)
{
    inv_getheader(-1);
    f_at_m54 = -1;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) == prm_492)
            {
                if (inv(5, cnt) == prm_490)
                {
                    if (inv(6, cnt) == prm_491)
                    {
                        f_at_m54 = cnt;
                        break;
                    }
                }
            }
        }
    }
    stat = f_at_m54;
    return stat;
}
void cell_refresh(int prm_493, int prm_494)
{
    int p_at_m55 = 0;
    elona_vector1<int> n_at_m55;
    int cnt2_at_m55 = 0;
    int i_at_m55 = 0;
    if (mode == 6 || mode == 9)
    {
        return;
    }
    if (prm_493 < 0 || prm_494 < 0 || prm_493 >= mdata(0)
        || prm_494 >= mdata(1))
    {
        return;
    }
    p_at_m55 = 0;
    map(prm_493, prm_494, 4) = 0;
    map(prm_493, prm_494, 9) = 0;
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) > 0)
            {
                if (inv(5, cnt) == prm_493 && inv(6, cnt) == prm_494)
                {
                    floorstack(p_at_m55) = cnt;
                    ++p_at_m55;
                    wpoke(map(prm_493, prm_494, 4), 0, inv(2, cnt));
                    wpoke(map(prm_493, prm_494, 4), 2, inv(22, cnt));
                    if (ilight(inv(3, cnt)) != 0)
                    {
                        map(prm_493, prm_494, 9) = ilight(inv(3, cnt));
                    }
                }
            }
        }
    }
    if (p_at_m55 > 3)
    {
        wpoke(map(prm_493, prm_494, 4), 0, 363);
        wpoke(map(prm_493, prm_494, 4), 2, 0);
    }
    else
    {
        if (p_at_m55 > 1)
        {
            n_at_m55(2) = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (p_at_m55); cnt < cnt_end; ++cnt)
                {
                    cnt2_at_m55 = cnt;
                    i_at_m55 = -1;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (p_at_m55); cnt < cnt_end;
                             ++cnt)
                        {
                            if (cnt2_at_m55 == 1)
                            {
                                if (cnt == n_at_m55(0))
                                {
                                    continue;
                                }
                            }
                            if (cnt2_at_m55 == 2)
                            {
                                if (cnt == n_at_m55(0) || cnt == n_at_m55(1))
                                {
                                    continue;
                                }
                            }
                            if (inv(30, floorstack(cnt)) > i_at_m55)
                            {
                                n_at_m55(cnt2_at_m55) = cnt;
                                i_at_m55 = inv(30, floorstack(cnt));
                            }
                        }
                    }
                }
            }
            map(prm_493, prm_494, 4) = floorstack(n_at_m55(0)) - 5080;
            map(prm_493, prm_494, 4) += (floorstack(n_at_m55(1)) - 5080) * 1000;
            if (p_at_m55 > 2)
            {
                map(prm_493, prm_494, 4) +=
                    (floorstack(n_at_m55(2)) - 5080) * 1000000;
            }
            else
            {
                map(prm_493, prm_494, 4) += 999000000;
            }
            map(prm_493, prm_494, 4) *= -1;
        }
    }
    return;
}
void itemturn(int prm_495)
{
    if (gdata(826) < 0)
    {
        gdata(826) = 0;
    }
    ++gdata(826);
    inv(30, prm_495) = gdata(826);
    return;
}
void removeitem(int prm_496, int prm_497)
{
    int n_at_m56 = 0;
    n_at_m56 = prm_497;
    if (n_at_m56 == 0)
    {
        n_at_m56 = 1;
    }
    inv(0, prm_496) -= n_at_m56;
    if (prm_496 < 200)
    {
        label_1521();
    }
    if (inv(0, prm_496) <= 0)
    {
        inv(0, prm_496) = 0;
        if (mode != 6)
        {
            if (prm_496 >= 5080)
            {
                cell_refresh(inv(5, prm_496), inv(6, prm_496));
            }
        }
    }
    return;
}
void item_copy(int prm_498, int prm_499)
{
    if (prm_498 < 0 || prm_499 < 0)
    {
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
        {
            inv(cnt, prm_499) = inv(cnt, prm_498);
        }
    }
    return;
}
void item_exchange(int prm_500, int prm_501)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
        {
            p_at_m57 = inv(cnt, prm_501);
            inv(cnt, prm_501) = inv(cnt, prm_500);
            inv(cnt, prm_500) = p_at_m57;
        }
    }
    return;
}
void item_delete(int prm_502)
{
    inv.clear(prm_502);
    return;
}
int inv_getspace(int prm_503)
{
    inv_getheader(prm_503);
    p_at_m57 = 0;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                ++p_at_m57;
                break;
            }
        }
    }
    stat = p_at_m57;
    return stat;
}
int inv_sum(int prm_504)
{
    inv_getheader(prm_504);
    p_at_m57 = 0;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) != 0)
            {
                ++p_at_m57;
            }
        }
    }
    stat = p_at_m57;
    return stat;
}
void item_compress(int)
{
    p_at_m57 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            p_at_m57(1) = 200 * (cnt * cnt + 1);
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (inv(0, cnt) != 0)
                    {
                        if (ibit(5, cnt) == 0)
                        {
                            if (inv(1, cnt) < p_at_m57(1))
                            {
                                inv(0, cnt) = 0;
                                ++p_at_m57;
                                if (inv(5, cnt) >= 0 && inv(5, cnt) < mdata(0)
                                    && inv(6, cnt) >= 0
                                    && inv(6, cnt) < mdata(1))
                                {
                                    cell_refresh(inv(5, cnt), inv(6, cnt));
                                }
                            }
                        }
                    }
                    if (p_at_m57 > 10)
                    {
                        break;
                    }
                }
            }
            if (p_at_m57 > 10)
            {
                break;
            }
        }
    }
    p_at_m57 = -1;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                p_at_m57 = cnt;
                break;
            }
        }
    }
    if (p_at_m57 == -1)
    {
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                p_at_m57 = invhead + rnd(invrange);
                if (ibit(5, cnt) == 0)
                {
                    inv(0, p_at_m57) = 0;
                    if (mode != 6)
                    {
                        if (inv(5, p_at_m57) >= 0 && inv(5, p_at_m57) < mdata(0)
                            && inv(6, p_at_m57) >= 0
                            && inv(6, p_at_m57) < mdata(1))
                        {
                            cell_refresh(inv(5, p_at_m57), inv(6, p_at_m57));
                        }
                    }
                    break;
                }
            }
        }
    }
    return;
}
int inv_getfreeid(int prm_506)
{
    inv_getheader(prm_506);
    p_at_m57 = -1;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                p_at_m57 = cnt;
                break;
            }
        }
    }
    if (p_at_m57 == -1)
    {
        if (prm_506 == -1)
        {
            if (mode != 6)
            {
                txt(lang(
                    u8"アイテム情報が多すぎる！幾つかのアイテムは破壊された。"s,
                    u8"Too many item data! Some items in this area are destroyed."s));
                item_compress(prm_506);
            }
        }
    }
    stat = p_at_m57;
    return stat;
}
int inv_weight(int prm_507)
{
    p_at_m57 = 0;
    inv_getheader(prm_507);
    if (prm_507 == 0)
    {
        gdata(80) = 0;
    }
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) != 0)
            {
                if (inv(7, cnt) >= 0)
                {
                    p_at_m57 += inv(7, cnt) * inv(0, cnt);
                }
                else
                {
                    if (prm_507 == 0)
                    {
                        gdata(80) += inv(7, cnt) * inv(0, cnt) * -1;
                    }
                }
            }
        }
    }
    stat = p_at_m57;
    return stat;
}
void item_num(int prm_508, int prm_509)
{
    inv(0, prm_508) += prm_509;
    if (inv(0, prm_508) < 0)
    {
        inv(0, prm_508) = 0;
    }
    if (prm_508 >= 5080)
    {
        cell_refresh(inv(5, prm_508), inv(6, prm_508));
    }
    else
    {
        label_1521();
    }
    return;
}
int item_separate(int& prm_510)
{
    int ti_at_m59 = 0;
    if (inv(0, prm_510) <= 1)
    {
        stat = prm_510;
        return stat;
    }
    ti_at_m59 = inv_getfreeid(inv_getowner(prm_510));
    if (ti_at_m59 == -1)
    {
        ti_at_m59 = inv_getfreeid(-1);
        if (ti_at_m59 == -1)
        {
            inv(0, prm_510) = 1;
            txt(lang(
                u8"何かが地面に落ちて消えた…"s,
                u8"Something falls to the ground and desappear..."s));
            stat = prm_510;
            return stat;
        }
    }
    item_copy(prm_510, ti_at_m59);
    inv(0, ti_at_m59) = inv(0, prm_510) - 1;
    inv(0, prm_510) = 1;
    if (inv_getowner(ti_at_m59) == -1)
    {
        if (mode != 6)
        {
            if (inv_getowner(prm_510) != -1)
            {
                inv(5, prm_510) = cdata(1, inv_getowner(prm_510));
                inv(6, prm_510) = cdata(2, inv_getowner(prm_510));
            }
            inv(5, ti_at_m59) = inv(5, prm_510);
            inv(6, ti_at_m59) = inv(6, prm_510);
            itemturn(ti_at_m59);
            cell_refresh(inv(5, ti_at_m59), inv(6, ti_at_m59));
            txt(lang(
                u8"何かが地面に落ちた。"s,
                u8"Something falls to the ground from your backpack."s));
            label_1521();
        }
    }
    stat = ti_at_m59;
    return stat;
}
int chara_unequip(int prm_511)
{
    int p_at_m59 = 0;
    int c_at_m59 = 0;
    if (inv(18, prm_511) == 0)
    {
        stat = 0;
        return stat;
    }
    p_at_m59 = inv(18, prm_511);
    c_at_m59 = inv_getowner(prm_511);
    if (c_at_m59 == -1)
    {
        stat = 0;
        return stat;
    }
    cdata(p_at_m59, c_at_m59) = cdata(p_at_m59, c_at_m59) / 10000 * 10000;
    inv(18, prm_511) = 0;
    stat = 1;
    return stat;
}
int item_identify(int prm_512, int prm_513, int prm_514)
{
    int idlv_at_m60 = 0;
    idlv_at_m60 = prm_513;
    if (prm_514)
    {
        if (prm_514 >= inv(29, prm_512))
        {
            idlv_at_m60 = 3;
        }
    }
    if (idlv_at_m60 >= 2)
    {
        if (refitem(inv(3, prm_512), 5) >= 50000)
        {
            idlv_at_m60 = 3;
        }
    }
    if (idlv_at_m60 == -1 || inv(8, prm_512) >= idlv_at_m60)
    {
        idtresult = 0;
        stat = 0;
        return stat;
    }
    inv(8, prm_512) = idlv_at_m60;
    if (inv(8, prm_512) >= 1)
    {
        itemmemory(0, inv(3, prm_512)) = 1;
    }
    idtresult = idlv_at_m60;
    stat = idtresult;
    return stat;
}
void item_checkknown(int prm_515)
{
    if (inv(8, prm_515) >= 3)
    {
        inv(8, prm_515) = 3;
    }
    if (itemmemory(0, inv(3, prm_515)))
    {
        if (inv(8, prm_515) == 0)
        {
            item_identify(prm_515, 1);
        }
    }
    return;
}
std::string rpname(int prm_516)
{
    std::string s_at_m62;
    s_at_m62 = u8"?????"s;
    if (rpdatan(prm_516) != ""s)
    {
        return rpdatan(prm_516);
    }
    if (prm_516 >= 400)
    {
        return ioriginalnameref(prm_516 - 400);
    }
    return s_at_m62;
}
void label_0311()
{
    if (inv(3, prm_518) == 578)
    {
        s_at_m63 += lang(
            ""s + moneyboxn(inv(26, prm_518)),
            u8"("s + moneyboxn(inv(26, prm_518)) + u8")"s);
    }
    if (inv(3, prm_518) == 617)
    {
        s_at_m63 += lang(
            ""s + biten(inv(25, prm_518)),
            u8" <"s + biten(inv(25, prm_518)) + u8">"s);
    }
    if (inv(3, prm_518) == 687)
    {
        if (jp)
        {
            if (inv(26, prm_518) != 0)
            {
                s_at_m63 += u8"解読済みの"s;
            }
        }
        if (inv(8, prm_518) >= 3)
        {
            s_at_m63 += lang(
                u8"《"s + magebookn(inv(25, prm_518)) + u8"》という題名の"s,
                u8" titled <"s + magebookn(inv(25, prm_518)) + u8">"s);
        }
    }
    if (inv(3, prm_518) == 783)
    {
        if (inv(25, prm_518) == 0)
        {
            s_at_m63 +=
                lang(u8"もう使えない"s, u8" which cannot be used anymore"s);
        }
        else
        {
            if (inv(23, prm_518) == 0)
            {
                s_at_m63 += lang(u8"カスタム"s, ""s);
            }
            else
            {
                s_at_m63 += lang(
                    u8"《"s + rpname(inv(23, prm_518)) + u8"》の"s,
                    u8" of <"s + rpname(inv(23, prm_518)) + u8">"s);
            }
        }
    }
    if (a_at_m63 == 55000)
    {
        if (inv(3, prm_518) == 563)
        {
            s_at_m63 += lang(
                u8"《"s + skillname(inv(25, prm_518)) + u8"》という題名の"s,
                u8" titled <Art of "s + skillname(inv(25, prm_518)) + u8">"s);
        }
        else
        {
            if (inv(3, prm_518) == 668)
            {
                s_at_m63 += lang(u8"第"s, u8" of Rachel No."s)
                    + inv(26, prm_518) + lang(u8"巻目の"s, ""s);
            }
            else
            {
                if (inv(3, prm_518) == 24)
                {
                    s_at_m63 += lang(
                        u8"《"s + booktitle(inv(25, prm_518))
                            + u8"》という題名の"s,
                        u8" titled <"s + booktitle(inv(25, prm_518)) + u8">"s);
                }
            }
        }
    }
    if (a_at_m63 == 60002)
    {
        if (inv(25, prm_518) != 0)
        {
            s_at_m63 += lang(
                godname(inv(25, prm_518)) + u8"の"s,
                u8" <"s + godname(inv(25, prm_518)) + u8">"s);
        }
    }
    if (a_at_m63 == 57000)
    {
        if (inv(25, prm_518) != 0)
        {
            if (inv(26, prm_518) != 0)
            {
                skip_at_m63 = 1;
                if (inv(3, prm_518) == 618)
                {
                    s_at_m63 = s_at_m63
                        + foodname(inv(25, prm_518) / 1000,
                                   (""s + fishdatan(inv(23, prm_518))),
                                   inv(26, prm_518),
                                   inv(23, prm_518));
                }
                else
                {
                    s_at_m63 = s_at_m63
                        + foodname(inv(25, prm_518) / 1000,
                                   ioriginalnameref(inv(3, prm_518)),
                                   inv(26, prm_518),
                                   inv(23, prm_518));
                }
                return;
            }
        }
        if (inv(21, prm_518) == 4)
        {
            s_at_m63 += lang(""s, u8" grown "s) + _weight(inv(23, prm_518))
                + lang(u8"育った"s, ""s);
        }
    }
    if (inv(23, prm_518) != 0)
    {
        if (inv(3, prm_518) == 618 || inv(3, prm_518) == 619)
        {
            if (inv(23, prm_518) < 0 || inv(23, prm_518) >= 100)
            {
                s_at_m63 += u8"/bugged/"s;
                return;
            }
            s_at_m63 += ""s + fishdatan(inv(23, prm_518));
        }
        else
        {
            if (a_at_m63 == 57000 || a_at_m63 == 62000 || inv(3, prm_518) == 503
                || inv(3, prm_518) == 504 || inv(3, prm_518) == 575
                || inv(3, prm_518) == 574)
            {
                if (inv(23, prm_518) < 0 || inv(23, prm_518) >= 800)
                {
                    s_at_m63 += u8"/bugged/"s;
                    return;
                }
                if (inv(21, prm_518) != 4)
                {
                    s_at_m63 += lang(""s, u8" of "s)
                        + refchara_str(inv(23, prm_518), 2);
                    if (jp)
                    {
                        s_at_m63 += u8"の"s;
                    }
                }
            }
        }
        if (a_at_m63 == 60000)
        {
            if (jp)
            {
                if (inv(23, prm_518) >= 12)
                {
                    inv(23, prm_518) = 0;
                }
                else
                {
                    s_at_m63 += _furniture(inv(23, prm_518));
                }
            }
        }
        if (inv(3, prm_518) == 344)
        {
            s_at_m63 += lang(""s, u8" of "s) + _homename(inv(25, prm_518))
                + lang(u8"の"s, ""s);
        }
        if (inv(3, prm_518) == 615)
        {
            s_at_m63 += lang(
                ""s + inv(23, prm_518) + u8"goldの"s,
                u8" <"s + inv(23, prm_518) + u8" gp>"s);
        }
        if (inv(3, prm_518) == 704)
        {
            if (inv(23, prm_518) < 0 || inv(23, prm_518) >= 800)
            {
                s_at_m63 += u8"/bugged/"s;
                return;
            }
            s_at_m63 += lang(
                ""s + refchara_str(inv(23, prm_518), 2) + u8"の"s,
                u8" of "s + refchara_str(inv(23, prm_518), 2));
        }
    }
    if (inv(3, prm_518) == 672)
    {
        if (inv(25, prm_518) == 169)
        {
            s_at_m63 += lang(u8"善人の"s, u8" of saint"s);
        }
        if (inv(25, prm_518) == 162)
        {
            s_at_m63 += lang(u8"悪人の"s, u8" of wicked"s);
        }
        if (inv(25, prm_518) == 163)
        {
            s_at_m63 += lang(u8"エヘカトルの"s, u8" of Ehekatl"s);
        }
        if (inv(25, prm_518) == 164)
        {
            s_at_m63 += lang(u8"オパートスの"s, u8" of Opatos"s);
        }
        if (inv(25, prm_518) == 165)
        {
            s_at_m63 += lang(u8"イツパロトルの"s, u8" of Itzpalt"s);
        }
        if (inv(25, prm_518) == 166)
        {
            s_at_m63 += lang(u8"ジュアの"s, u8" of Jure"s);
        }
    }
    return;
}
std::string itemname(int prm_518, int prm_519, int prm_520)
{
    elona_vector1<int> iqiality_at_m63;
    int num2_at_m63 = 0;
    std::string s2_at_m63;
    std::string s3_at_m63;
    int alpha_at_m63 = 0;
    std::string s4_at_m63;
    int len_at_m63 = 0;
    elona_vector1<std::string> buf_at_m63;
    int ret_at_m63 = 0;
    elona::prm_518 = prm_518;
    itemnamehack = inv(3, prm_518) + 1;
    if (inv(3, prm_518) >= maxitemid - 2
        || inv(3, prm_518) > length(ioriginalnameref))
    {
        itemnamehack = 0;
        return lang(
            u8"未知のアイテム(バージョン非互換)"s,
            u8"unknown item (incompatible version)"s);
    }
    if (inv(4, prm_518) >= 5)
    {
        iqiality_at_m63(prm_518) = 5;
    }
    item_checkknown(prm_518);
    if (prm_519 == 0)
    {
        num2_at_m63 = inv(0, prm_518);
    }
    else
    {
        num2_at_m63 = prm_519;
    }
    a_at_m63 = refitem(inv(3, prm_518), 5);
    if (jp)
    {
        if (num2_at_m63 > 1)
        {
            s2_at_m63 = u8"個の"s;
            if (a_at_m63 == 16000)
            {
                s2_at_m63 = u8"着の"s;
            }
            if (a_at_m63 == 54000 || a_at_m63 == 55000)
            {
                if (inv(3, prm_518) == 783)
                {
                    s2_at_m63 = u8"枚の"s;
                }
                else
                {
                    s2_at_m63 = u8"冊の"s;
                }
            }
            if (a_at_m63 == 10000)
            {
                s2_at_m63 = u8"本の"s;
            }
            if (a_at_m63 == 52000)
            {
                s2_at_m63 = u8"服の"s;
            }
            if (a_at_m63 == 53000)
            {
                s2_at_m63 = u8"巻の"s;
            }
            if (a_at_m63 == 22000 || a_at_m63 == 18000)
            {
                s2_at_m63 = u8"対の"s;
            }
            if (a_at_m63 == 68000 || a_at_m63 == 69000 || inv(3, prm_518) == 622
                || inv(3, prm_518) == 724 || inv(3, prm_518) == 730)
            {
                s2_at_m63 = u8"枚の"s;
            }
            if (inv(3, prm_518) == 618)
            {
                s2_at_m63 = u8"匹の"s;
            }
            s_at_m63 = ""s + num2_at_m63 + s2_at_m63;
        }
        else
        {
            s_at_m63 = "";
        }
        if (inv(8, prm_518) >= 3)
        {
            if (inv(17, prm_518) == 1)
            {
                s_at_m63 += strblessed;
            }
            if (inv(17, prm_518) == -1)
            {
                s_at_m63 += strcursed;
            }
            if (inv(17, prm_518) == -2)
            {
                s_at_m63 += strdoomed;
            }
        }
    }
    else
    {
        s_at_m63 = "";
        if (inv(8, prm_518) >= 3)
        {
            if (inv(17, prm_518) == 1)
            {
                s_at_m63 = strblessed + u8" "s;
            }
            if (inv(17, prm_518) == -1)
            {
                s_at_m63 = strcursed + u8" "s;
            }
            if (inv(17, prm_518) == -2)
            {
                s_at_m63 = strdoomed + u8" "s;
            }
        }
        if (irandomname(inv(3, prm_518)) == 1 && inv(8, prm_518) < 1)
        {
            s2_at_m63 = "";
        }
        else
        {
            s2_at_m63 = ""s + ioriginalnameref2(inv(3, prm_518));
            if (instr(ioriginalnameref(inv(3, prm_518)), 0, u8"with"s) != -1)
            {
                s3_at_m63 = u8"with"s;
            }
            else
            {
                s3_at_m63 = u8"of"s;
            }
            if (inv(8, prm_518) != 0)
            {
                if (s2_at_m63 == ""s)
                {
                    if (inv(7, prm_518) < 0)
                    {
                        s2_at_m63 = u8"cargo"s;
                    }
                    if (a_at_m63 == 22000 || a_at_m63 == 18000)
                    {
                        s2_at_m63 = u8"pair"s;
                    }
                }
            }
            if (a_at_m63 == 57000)
            {
                if (inv(25, prm_518) != 0)
                {
                    if (inv(26, prm_518) != 0)
                    {
                        s2_at_m63 = u8"dish"s;
                    }
                }
            }
        }
        if (s2_at_m63 != ""s)
        {
            if (num2_at_m63 > 1)
            {
                s_at_m63 = ""s + num2_at_m63 + u8" "s + s_at_m63 + s2_at_m63
                    + u8"s "s + s3_at_m63 + u8" "s;
            }
            else
            {
                s_at_m63 = s_at_m63 + s2_at_m63 + u8" "s + s3_at_m63 + u8" "s;
            }
        }
        else
        {
            if (num2_at_m63 > 1)
            {
                s_at_m63 = ""s + num2_at_m63 + u8" "s + s_at_m63;
            }
        }
    }
    if (inv(24, prm_518) == 35)
    {
        if (inv(27, prm_518) < 0)
        {
            if (jp)
            {
                s_at_m63 += u8"腐った"s;
            }
            else
            {
                s_at_m63 += u8"rotten "s;
            }
        }
    }
    if (en)
    {
        if (a_at_m63 == 57000)
        {
            if (inv(25, prm_518) != 0)
            {
                if (inv(26, prm_518) != 0)
                {
                    skip_at_m63 = 1;
                }
            }
        }
        if (inv(23, prm_518) != 0)
        {
            if (a_at_m63 == 60000)
            {
                if (inv(23, prm_518) >= 12)
                {
                    inv(23, prm_518) = 0;
                }
                else
                {
                    s_at_m63 += _furniture(inv(23, prm_518)) + u8" "s;
                }
            }
        }
        if (inv(3, prm_518) == 687)
        {
            if (inv(26, prm_518) != 0)
            {
                s_at_m63 += u8"undecoded "s;
            }
        }
        if (inv(3, prm_518) == 783)
        {
            if (inv(23, prm_518) == 0)
            {
                s_at_m63 += u8"custom "s;
            }
        }
    }
    if (inv(3, prm_518) == 630)
    {
        s_at_m63 += ""s + mtname(0, inv(24, prm_518)) + lang(u8"製の"s, u8" "s);
    }
    if (jp)
    {
        label_0311();
    }
    if (a_at_m63 == 60000)
    {
        if (inv(24, prm_518) != 0)
        {
            if (jp)
            {
                s_at_m63 += ""s + mtname(0, inv(24, prm_518)) + u8"細工の"s;
            }
            else
            {
                s_at_m63 += ""s + mtname(0, inv(24, prm_518)) + u8"work "s;
            }
        }
    }
    if (inv(3, prm_518) == 729)
    {
        s_at_m63 += ""s + giftn(inv(28, prm_518)) + lang(""s, u8" "s);
    }
    if (skip_at_m63 == 1)
    {
        goto label_0313_internal;
    }
    alpha_at_m63 = 0;
    if (inv(8, prm_518) >= 3)
    {
        if (a_at_m63 < 50000)
        {
            if (ibit(15, prm_518))
            {
                alpha_at_m63 = 1;
                s_at_m63 += lang(u8"エターナルフォース"s, u8"eternal force"s)
                    + strblank;
            }
            else
            {
                if (inv(23, prm_518) >= 10000)
                {
                    if (inv(23, prm_518) < 20000)
                    {
                        if (jp)
                        {
                            s_at_m63 +=
                                egoname(inv(23, prm_518) - 10000) + strblank;
                        }
                    }
                    else
                    {
                        if (inv(23, prm_518) < 40000)
                        {
                            s_at_m63 +=
                                egominorn(inv(23, prm_518) - 20000) + strblank;
                        }
                    }
                }
                if (inv(4, prm_518) != 6)
                {
                    if (inv(4, prm_518) >= 4)
                    {
                        s_at_m63 += mtname(1, inv(24, prm_518)) + strblank;
                    }
                    else
                    {
                        s_at_m63 += mtname(0, inv(24, prm_518)) + strblank;
                        if (jp)
                        {
                            if (peek(mtname(0, inv(24, prm_518))) == 131)
                            {
                                alpha_at_m63 = 1;
                            }
                            else
                            {
                                s_at_m63 += u8"の"s;
                            }
                        }
                    }
                }
            }
        }
    }
    if (inv(8, prm_518) == 0)
    {
        s_at_m63 += iknownnameref(inv(3, prm_518));
    }
    else
    {
        if (inv(8, prm_518) < 3)
        {
            if (inv(4, prm_518) < 4 || a_at_m63 >= 50000)
            {
                s_at_m63 += ioriginalnameref(inv(3, prm_518));
            }
            else
            {
                s_at_m63 += iknownnameref(inv(3, prm_518));
            }
        }
        else
        {
            if (inv(4, prm_518) == 6 || ibit(5, prm_518) == 1)
            {
                if (jp)
                {
                    s_at_m63 =
                        u8"★"s + s_at_m63 + ioriginalnameref(inv(3, prm_518));
                }
                else
                {
                    s_at_m63 += ioriginalnameref(inv(3, prm_518));
                }
            }
            else
            {
                if (inv(4, prm_518) >= 4)
                {
                    if (jp)
                    {
                        s_at_m63 = u8"☆"s + s_at_m63;
                    }
                }
                if (alpha_at_m63 == 1 && jp)
                {
                    s_at_m63 += ialphanameref(inv(3, prm_518));
                }
                else
                {
                    s_at_m63 += ioriginalnameref(inv(3, prm_518));
                }
                if (en)
                {
                    if (a_at_m63 < 50000)
                    {
                        if (inv(23, prm_518) >= 10000)
                        {
                            if (inv(23, prm_518) < 20000)
                            {
                                s_at_m63 += u8" "s
                                    + egoname((inv(23, prm_518) - 10000));
                            }
                        }
                    }
                }
                if (inv(23, prm_518) >= 40000)
                {
                    randomize(inv(23, prm_518) - 40000);
                    if (inv(4, prm_518) == 4)
                    {
                        s_at_m63 += lang(u8"『"s, u8" <"s) + random_title(1)
                            + lang(u8"』"s, u8">"s);
                    }
                    else
                    {
                        s_at_m63 += lang(u8"《"s, u8" {"s) + random_title(1)
                            + lang(u8"》"s, u8"}"s);
                    }
                    randomize();
                }
            }
        }
    }
label_0313_internal:
    if (en)
    {
        if (prm_520 == 0)
        {
            if (inv(8, prm_518) >= 3
                && (inv(4, prm_518) >= 4 && a_at_m63 < 50000))
            {
                s_at_m63 = u8"the "s + s_at_m63;
            }
            else
            {
                if (num2_at_m63 == 1)
                {
                    s4_at_m63 = strmid(s_at_m63, 0, 1);
                    if (s4_at_m63 == u8"a"s || s4_at_m63 == u8"o"s
                        || s4_at_m63 == u8"i"s || s4_at_m63 == u8"u"s
                        || s4_at_m63 == u8"e"s)
                    {
                        s_at_m63 = u8"an "s + s_at_m63;
                    }
                    else
                    {
                        s_at_m63 = u8"a "s + s_at_m63;
                    }
                }
            }
        }
        if (s2_at_m63 == ""s)
        {
            if (inv(3, prm_518) != 618)
            {
                if (num2_at_m63 > 1)
                {
                    s_at_m63 += u8"s"s;
                }
            }
        }
        label_0311();
    }
    if (inv(8, prm_518) >= 3)
    {
        if (inv(20, prm_518) != 0)
        {
            s_at_m63 += ""s + cnvfix(inv(20, prm_518)) + u8" "s;
        }
        if (ibit(4, prm_518) == 1)
        {
            s_at_m63 += lang(
                u8"(残り"s + inv(9, prm_518) + u8"回)"s,
                u8"(Charges: "s + inv(9, prm_518) + u8")"s);
        }
        if (inv(10, prm_518) != 0 || inv(13, prm_518) != 0
            || inv(12, prm_518) != 0)
        {
            s_at_m63 += u8" ("s;
            if (inv(10, prm_518) != 0)
            {
                s_at_m63 += ""s + inv(10, prm_518) + u8"d"s + inv(11, prm_518);
                if (inv(12, prm_518) != 0)
                {
                    if (inv(12, prm_518) > 0)
                    {
                        s_at_m63 += u8"+"s + inv(12, prm_518);
                    }
                    else
                    {
                        s_at_m63 += ""s + inv(12, prm_518);
                    }
                }
                s_at_m63 += u8")"s;
                if (inv(13, prm_518) != 0)
                {
                    s_at_m63 += u8"("s + inv(13, prm_518) + u8")"s;
                }
            }
            else
            {
                s_at_m63 +=
                    ""s + inv(13, prm_518) + u8","s + inv(12, prm_518) + u8")"s;
            }
        }
        if (inv(14, prm_518) != 0 || inv(15, prm_518) != 0)
        {
            s_at_m63 +=
                u8" ["s + inv(14, prm_518) + u8","s + inv(15, prm_518) + u8"]"s;
        }
    }
    if (en)
    {
        if (inv(3, prm_518) == 284 || inv(3, prm_518) == 283)
        {
            s_at_m63 += u8"(Lost property)"s;
        }
    }
    if (inv(3, prm_518) == 342)
    {
        if (inv(9, prm_518) != 0)
        {
            s_at_m63 += lang(
                u8"("s + biten(inv(28, prm_518)) + u8"残り"s + inv(9, prm_518)
                    + u8"匹)"s,
                u8"("s + inv(9, prm_518) + u8" "s + biten(inv(28, prm_518))
                    + u8")"s);
        }
    }
    if (inv(3, prm_518) == 685)
    {
        if (inv(23, prm_518) == 0)
        {
            s_at_m63 += lang(u8" Lv"s, u8" Level "s) + inv(26, prm_518)
                + lang(u8" (空)"s, u8"(Empty)"s);
        }
        else
        {
            s_at_m63 += u8" ("s + refchara_str(inv(23, prm_518), 2) + u8")"s;
        }
    }
    if (inv(3, prm_518) == 734)
    {
        s_at_m63 += lang(u8" Lv"s, u8" Level "s) + inv(26, prm_518);
    }
    if (inv(8, prm_518) == 2)
    {
        if (a_at_m63 < 50000)
        {
            s_at_m63 += u8" ("s + cnven(_quality(inv(4, prm_518))) + u8")"s;
            if (jp)
            {
                s_at_m63 += u8"["s + mtname(0, inv(24, prm_518)) + u8"製]"s;
            }
            else
            {
                s_at_m63 +=
                    u8"["s + cnven(mtname(0, inv(24, prm_518))) + u8"]"s;
            }
            if (inv(17, prm_518) == -1)
            {
                s_at_m63 += lang(u8"(恐ろしい)"s, u8"(Scary)"s);
            }
            if (inv(17, prm_518) == -2)
            {
                s_at_m63 += lang(u8"(禍々しい)"s, u8"(Dreadful)"s);
            }
        }
    }
    if (a_at_m63 == 72000)
    {
        if (inv(3, prm_518) == 361)
        {
            s_at_m63 += lang(u8"(移動時消滅)"s, u8"(Temporal)"s);
        }
        else
        {
            if (inv(9, prm_518) == 0)
            {
                if (inv(25, prm_518) == 0)
                {
                    s_at_m63 += lang(u8"(空っぽ)"s, u8"(Empty)"s);
                }
            }
        }
    }
    if (a_at_m63 == 92000)
    {
        if (inv(26, prm_518) != 0)
        {
            s_at_m63 += lang(
                u8"(仕入れ値 "s + inv(26, prm_518) + u8"g)"s,
                u8"(Buying price: "s + inv(26, prm_518) + u8")"s);
        }
    }
    if (ibit(6, prm_518) == 1)
    {
        s_at_m63 += lang(u8"(媚薬混入)"s, u8"(Aphrodisiac)"s);
    }
    if (ibit(14, prm_518) == 1)
    {
        s_at_m63 += lang(u8"(毒物混入)"s, u8"(Poisoned)"s);
    }
    if (ibit(7, prm_518) == 1)
    {
        if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12
            < inv(9, prm_518))
        {
            s_at_m63 += lang(
                u8"("s
                    + (inv(9, prm_518)
                       - (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                          + gdata(10) * 24 * 30 * 12))
                    + u8"時間)"s,
                u8"(Next: "s
                    + (inv(9, prm_518)
                       - (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                          + gdata(10) * 24 * 30 * 12))
                    + u8"h.)"s);
        }
    }
    if (inv(3, prm_518) == 555)
    {
        if (inv(9, prm_518) != 0)
        {
            s_at_m63 +=
                lang(u8" シリアルNo."s, u8" serial no."s) + inv(9, prm_518);
        }
    }
    if (inv(3, prm_518) == 544)
    {
        s_at_m63 += u8" <BGM"s + inv(25, prm_518) + u8">"s;
    }
    if (strlen_u(s_at_m63) > 66)
    {
        len_at_m63 = zentohan(s_at_m63, buf_at_m63, 0);
        SDIM2(buf_at_m63, len_at_m63);
        ret_at_m63 = zentohan(s_at_m63, s_at_m63, len_at_m63);
    }
    skip_at_m63 = 0;
    itemnamehack = 0;
    return s_at_m63;
}
void remain_make(int prm_521, int prm_522)
{
    inv(23, prm_521) = cdata(27, prm_522);
    inv(22, prm_521) = cdata(7, prm_522) / 1000;
    inv(7, prm_521) = cdata(20, prm_522);
    if (inv(3, prm_521) == 204)
    {
        inv(7, prm_521) = 250 * (inv(7, prm_521) + 100) / 100 + 500;
        inv(1, prm_521) = inv(7, prm_521) / 5;
    }
    else
    {
        inv(7, prm_521) = 20 * (inv(7, prm_521) + 500) / 500;
        inv(1, prm_521) = cdata(38, prm_522) * 40 + 600;
        if (refchara(cdata(27, prm_522), 6) < 20)
        {
            if (cdata(69, prm_522) < -1)
            {
                inv(1, prm_521) = inv(1, prm_521)
                    * limit((4 - refchara(cdata(27, prm_522), 6) / 5), 1, 5);
            }
        }
    }
    return;
}
void make_dish(int prm_523, int prm_524)
{
    inv(2, prm_523) = picfood(prm_524, inv(25, prm_523) / 1000);
    inv(7, prm_523) = 500;
    if (inv(24, prm_523) == 35)
    {
        if (inv(27, prm_523) >= 0)
        {
            inv(27, prm_523) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12 + 72;
        }
    }
    inv(26, prm_523) = prm_524;
    return;
}
int item_stack(int prm_525, int prm_526, int prm_527)
{
    elona_vector1<int> p_at_m65;
    inv_getheader(prm_525);
    p_at_m65 = 0;
    if (inv(4, prm_526) == 6)
    {
        if (refitem(inv(3, prm_526), 5) < 50000)
        {
            stat = p_at_m65;
            return stat;
        }
    }
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (cnt == prm_526)
            {
                continue;
            }
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) != inv(3, prm_526))
            {
                continue;
            }
            if (inv(3, cnt) == 622)
            {
                if (prm_525 == -1 && mode != 6)
                {
                    if (inv(5, cnt) != inv(5, prm_526)
                        || inv(6, cnt) != inv(6, prm_526))
                    {
                        continue;
                    }
                }
                p_at_m65(2) = 0;
                goto label_0319_internal;
            }
            p_at_m65(1) = cnt;
            p_at_m65(2) = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
                {
                    if (cnt == 0 || cnt == 4 || cnt == 30)
                    {
                        continue;
                    }
                    if (prm_525 != -1 || mode == 6)
                    {
                        if (cnt == 5 || cnt == 6)
                        {
                            continue;
                        }
                    }
                    if (inv(cnt, p_at_m65(1)) != inv(cnt, prm_526))
                    {
                        ++p_at_m65(2);
                        break;
                    }
                }
            }
        label_0319_internal:
            if (p_at_m65(2) == 0)
            {
                inv(0, cnt) += inv(0, prm_526);
                inv(0, prm_526) = 0;
                p_at_m65 = 1;
                ti = cnt;
                break;
            }
        }
    }
    if (p_at_m65 == 1)
    {
        if (mode != 6)
        {
            if (inv_getowner(prm_526) == -1)
            {
                cell_refresh(inv(5, prm_526), inv(6, prm_526));
            }
        }
        if (prm_527 != 0)
        {
            txtmore();
            txt(lang(
                itemname(ti, 1) + u8"をまとめた(計"s + inv(0, ti) + u8"個) "s,
                itemname(ti, 1) + u8" has been stacked. (Total:"s + inv(0, ti)
                    + u8")"s));
        }
    }
    stat = p_at_m65;
    return stat;
}
void colorres(int)
{
    color(0, 0, 0);
    if (i_at_m66 == 50)
    {
        color(150, 0, 0);
    }
    if (i_at_m66 == 51)
    {
        color(0, 0, 150);
    }
    if (i_at_m66 == 52)
    {
        color(150, 150, 0);
    }
    if (i_at_m66 == 59)
    {
        color(150, 0, 150);
    }
    if (i_at_m66 == 53)
    {
        color(100, 80, 80);
    }
    if (i_at_m66 == 55)
    {
        color(0, 150, 0);
    }
    if (i_at_m66 == 60)
    {
        color(150, 100, 100);
    }
    if (i_at_m66 == 57)
    {
        color(50, 100, 150);
    }
    if (i_at_m66 == 58)
    {
        color(100, 150, 50);
    }
    if (i_at_m66 == 54)
    {
        color(150, 100, 50);
    }
    if (i_at_m66 == 56)
    {
        color(150, 50, 0);
    }
    return;
}
void equipinfo(int prm_529, int prm_530, int prm_531)
{
    int p_at_m66 = 0;
    std::string s_at_m66;
    if (inv(8, prm_529) < 3)
    {
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            p_at_m66 = inv(40 + cnt * 2, prm_529);
            if (p_at_m66 == 0)
            {
                break;
            }
            i_at_m66 = p_at_m66 / 10000;
            if (i_at_m66 != 2)
            {
                continue;
            }
            i_at_m66 = p_at_m66 % 10000;
            pos(prm_530 + (i_at_m66 - 50) * 20, prm_531);
            p_at_m66 = abs(inv((40 + cnt * 2 + 1), prm_529) / 2 / 50) + 1;
            if (p_at_m66 > 5)
            {
                s_at_m66 = u8"+"s;
            }
            else
            {
                s_at_m66 = ""s + p_at_m66;
            }
            if (jp)
            {
                colorres();
                if (inv(40 + cnt * 2 + 1, prm_529) >= 0)
                {
                    mes(u8"●"s);
                }
                else
                {
                    mes(u8"▼"s);
                }
                pos(prm_530 + (i_at_m66 - 50) * 20 + 5, prm_531 + 1);
                color(0, 0, 0);
                mes(s_at_m66);
                pos(prm_530 + (i_at_m66 - 50) * 20 + 4, prm_531);
                color(255, 255, 255);
                mes(s_at_m66);
            }
            else
            {
                color(80, 60, 40);
                pos(prm_530 + (i_at_m66 - 50) * 20 + 5, prm_531);
                mes(""s + p_at_m66);
                colorres();
                pos(prm_530 + (i_at_m66 - 50) * 20 + 4, prm_531);
                mes(""s + p_at_m66);
            }
        }
    }
    return;
}
void csvstr2(elona_vector1<std::string>& prm_532, const std::string& prm_533)
{
    std::string word_at_m67;
    int p_at_m67 = 0;
    int i_at_m67 = 0;
    word_at_m67 = prm_533;
    p_at_m67 = 0;
    i_at_m67 = strlen(word_at_m67);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
        {
            prm_532(cnt) = "";
            getstr(prm_532(cnt), word_at_m67, limit(p_at_m67, 0, i_at_m67), 44);
            if (strsize > i_at_m67)
            {
                break;
            }
            p_at_m67 += strsize;
        }
    }
    return;
}
int cargocheck()
{
    if (refitem(inv(3, ci), 10) == 0)
    {
        stat = 1;
        return stat;
    }
    if (mdata(6) != 1 && mdata(6) != 5 && mdata(6) != 3 && mdata(6) != 4
        && mdata(6) != 6 && mdata(6) != 2)
    {
        ++msgdup;
        txt(lang(
            u8"荷車の荷物は街か野外でしか操作できない。"s,
            u8"You can only use cargo items on the surface."s));
        snd(27);
        stat = 0;
        return stat;
    }
    else
    {
        stat = 1;
        return stat;
    }
}
void rndshuffle(elona_vector1<int>& prm_534)
{
    int p_at_m68 = 0;
    int r_at_m68 = 0;
    p_at_m68 = length(prm_534);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p_at_m68); cnt < cnt_end; ++cnt)
        {
            r_at_m68 = rnd(p_at_m68);
            --p_at_m68;
            i_at_m68 = prm_534(r_at_m68);
            prm_534(r_at_m68) = prm_534(p_at_m68);
            prm_534(p_at_m68) = i_at_m68;
        }
    }
    return;
}
int dist(int prm_535, int prm_536, int prm_537, int prm_538)
{
    int d_at_m69 = 0;
    d_at_m69 = (prm_535 - prm_537) * (prm_535 - prm_537)
        + (prm_536 - prm_538) * (prm_536 - prm_538);
    stat = elona_int(sqrt(d_at_m69));
    return stat;
}
int winposy(int prm_539, int prm_540)
{
    if (prm_540 == 0)
    {
        stat = ((inf_screenh + 1) * inf_tiles - prm_539) / 2 + 8;
        return stat;
    }
    stat = (windowh - prm_539) / 2;
    return stat;
}
void cutname(std::string& prm_541, int prm_542)
{
    int len_at_m71 = 0;
    elona_vector1<std::string> buf_at_m71;
    int ret_at_m71 = 0;
    int p_at_m71 = 0;
    if (strlen_u(prm_541) > prm_542)
    {
        len_at_m71 = zentohan(prm_541, buf_at_m71, 0);
        SDIM2(buf_at_m71, len_at_m71);
        ret_at_m71 = zentohan(prm_541, prm_541, len_at_m71);
        if (strlen_u(prm_541) > prm_542)
        {
            len_at_m71 = 0;
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    if (len_at_m71 >= prm_542)
                    {
                        break;
                    }
                    p_at_m71 = peek(prm_541, len_at_m71);
                    if ((p_at_m71 >= 129 && p_at_m71 <= 159 || p_at_m71 >= 224)
                        && p_at_m71 <= 252)
                    {
                        p_at_m71 = 2;
                    }
                    else
                    {
                        p_at_m71 = 1;
                    }
                    len_at_m71 += p_at_m71;
                }
            }
            prm_541 = strmid(prm_541, 0, len_at_m71) + u8".."s;
        }
    }
    return;
}
void cs_list(
    int CNT,
    const std::string& prm_543,
    int prm_544 = 0,
    int prm_545 = 0,
    int prm_546 = 0,
    int prm_547 = 0,
    int prm_548 = 0,
    int prm_549 = 0)
{
    int tx_at_m72 = 0;
    if (cs == CNT)
    {
        tx_at_m72 = limit(strlen(prm_543) * 7 + 32 + prm_547, 10, 480);
        gsel(3);
        pos(264, 96);
        gcopy(0, prm_544, prm_545, tx_at_m72, prm_546);
        gsel(0);
        pos(prm_544, prm_545);
        gfini(tx_at_m72, prm_546);
        gfdec2(30, 10, 0);
        pos(prm_544 + 1, prm_545 + 1);
        gfini(tx_at_m72 - 2, prm_546 - 2);
        gfinc(50, 50, 50);
        pos(prm_544 + tx_at_m72 - 20, prm_545 + 4);
        gcopy(3, 48, 360, 16, 16);
        cs_posbk(0) = prm_544;
        cs_posbk(1) = prm_545;
        cs_posbk(2) = tx_at_m72;
        cs_posbk(3) = prm_546;
    }
    if (prm_548 == 0)
    {
        color(10, 10, 10);
    }
    if (prm_548 == 1)
    {
        color(0, 0, 0);
        if (inv(8, prm_549) >= 3)
        {
            color(10, 40, 120);
            if (inv(17, prm_549) == 1)
            {
                color(10, 110, 30);
            }
            if (inv(17, prm_549) == -1)
            {
                color(150, 10, 10);
            }
            if (inv(17, prm_549) == -2)
            {
                color(100, 10, 100);
            }
        }
        if (ibit(13, prm_549))
        {
            color(120, 80, 0);
        }
    }
    if (prm_548 == 2)
    {
        color(240, 240, 240);
    }
    if (prm_548 == 3)
    {
        color(160, 10, 10);
    }
    pos(prm_544 + 4 + prm_547, prm_545 + 3);
    mes(prm_543);
    return;
}
void cs_listbk()
{
    if (cs_bk == -1)
    {
        return;
    }
    pos(cs_posbk, cs_posbk(1));
    gcopy(3, 264, 96, cs_posbk(2), cs_posbk(3));
    return;
}
void gohostile()
{
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(150, cnt) == 14 || cdata(150, cnt) == 16
                || cdata(150, cnt) == 1010)
            {
                cdata(9, cnt) = -3;
                cdata(201, cnt) = 80;
                cdata(79, cnt) = 218;
            }
        }
    }
    return;
}
void modkarma(int prm_550, int prm_551)
{
    int a_at_m74 = 0;
    int max_at_m74 = 0;
    a_at_m74 = prm_551;
    if (trait(162))
    {
        if (a_at_m74 < 0)
        {
            a_at_m74 = a_at_m74 * 75 / 100;
            if (a_at_m74 == 0)
            {
                return;
            }
        }
    }
    if (trait(169))
    {
        if (a_at_m74 < 0)
        {
            a_at_m74 = a_at_m74 * 150 / 100;
        }
    }
    txtmore();
    if (a_at_m74 >= 0)
    {
        txtef(5);
    }
    else
    {
        txtef(8);
    }
    txt(lang(
        u8"カルマ変動("s + a_at_m74 + u8") "s,
        u8"Karma("s + a_at_m74 + u8")"s));
    if (a_at_m74 > 0)
    {
        if (cdata(49, prm_550) < -30)
        {
            if (cdata(49, prm_550) + a_at_m74 >= -30)
            {
                txtmore();
                txtef(2);
                txt(lang(
                    u8"あなたの罪は軽くなった。"s,
                    u8"You are no longer a criminal"s));
            }
        }
    }
    if (a_at_m74 < 0)
    {
        if (cdata(49, prm_550) >= -30)
        {
            if (cdata(49, prm_550) + a_at_m74 < -30)
            {
                txtmore();
                txtef(8);
                txt(lang(
                    u8"あなたは今や罪人だ。"s, u8"You are a criminal now."s));
                gohostile();
            }
        }
    }
    cdata(49, prm_550) += a_at_m74;
    max_at_m74 = 20;
    if (trait(162))
    {
        max_at_m74 -= 20;
    }
    if (trait(169))
    {
        max_at_m74 += 20;
    }
    if (cdata(49, prm_550) > max_at_m74)
    {
        cdata(49, prm_550) = max_at_m74;
    }
    if (cdata(49, prm_550) < -100)
    {
        cdata(49, prm_550) = -100;
    }
    return;
}
void modrank(int prm_552, int prm_553, int prm_554)
{
    elona_vector1<int> p_at_m75;
    int orgrank_at_m75 = 0;
    int i_at_m75 = 0;
    std::string s_at_m75;
    p_at_m75 = 120 + prm_552;
    p_at_m75(1) = gdata(p_at_m75) / 100;
    orgrank_at_m75 = gdata(p_at_m75);
    i_at_m75 = prm_553;
    if (prm_553 > 0)
    {
        i_at_m75 = prm_553 * (p_at_m75(1) + 20) * (p_at_m75(1) + 20) / 2500;
        gdata(140 + prm_552) = ranknorma(prm_552);
        if (gdata(p_at_m75) == 100)
        {
            return;
        }
        if (prm_554 != 0)
        {
            if (i_at_m75 / 100 > prm_554)
            {
                i_at_m75 = prm_554 * 100;
            }
        }
    }
    gdata(p_at_m75) -= i_at_m75;
    if (gdata(p_at_m75) >= 10000)
    {
        gdata(p_at_m75) = 10000;
    }
    if (gdata(p_at_m75) < 100)
    {
        gdata(p_at_m75) = 100;
    }
    if (orgrank_at_m75 / 100 != gdata(p_at_m75) / 100)
    {
        i_at_m75 = gdata(p_at_m75) / 100 - orgrank_at_m75 / 100;
        txtmore();
        if (i_at_m75 < 0)
        {
            txtef(2);
        }
        else
        {
            txtef(8);
        }
        s_at_m75 = u8" "s + orgrank_at_m75 / 100 + lang(u8"位 → "s, u8" -> "s)
            + gdata(p_at_m75) / 100 + lang(u8"位 "s, ""s);
        txt(lang(u8"ランク変動"s, u8"Ranking Change "s) + u8"("s
            + rankn(10, prm_552) + s_at_m75 + u8") "s + lang(u8"《"s, u8"<"s)
            + ranktitle(prm_552) + lang(u8"》"s, u8">"s));
    }
    else
    {
        if (i_at_m75 > 0)
        {
            txtef(2);
            txtmore();
            txt(lang(
                u8"着実に次のランクに近づいている。"s,
                u8"You are one step closer to the next rank."s));
        }
    }
    return;
}
int sexp(int prm_555, int prm_556)
{
    stat = sdata((prm_555 + 600), prm_556) % 1000000 / 1000;
    return stat;
}
int sgrowth(int prm_557, int prm_558)
{
    stat = sdata((prm_557 + 600), prm_558) % 1000;
    return stat;
}
void modgrowth(int prm_559, int prm_560, int prm_561)
{
    int growth_at_m76 = 0;
    growth_at_m76 = sdata((prm_560 + 600), prm_559) % 1000 + prm_561;
    if (growth_at_m76 > 400)
    {
        growth_at_m76 = 400;
    }
    if (growth_at_m76 < 2)
    {
        growth_at_m76 = 2;
    }
    sdata(prm_560 + 600, prm_559) = sorg(prm_560, prm_559) * 1000000
        + sexp(prm_560, prm_559) * 1000 + growth_at_m76;
    return;
}
void skillgain(int prm_562, int prm_563, int prm_564, int prm_565)
{
    int lv_at_m76 = 0;
    if (prm_563 >= 400)
    {
        if (prm_562 == 0)
        {
            spell(prm_563 - 400) += prm_565;
            modgrowth(prm_562, prm_563, 1);
        }
    }
    if (sorg(prm_563, prm_562) != 0)
    {
        if (prm_563 < 400)
        {
            modgrowth(prm_562, prm_563, 20);
        }
        return;
    }
    lv_at_m76 = sorg(prm_563, prm_562) + prm_564;
    if (lv_at_m76 < 1)
    {
        lv_at_m76 = 1;
    }
    if (prm_563 >= 400)
    {
        modgrowth(prm_562, prm_563, 200);
    }
    else
    {
        modgrowth(prm_562, prm_563, 50);
    }
    sdata(prm_563 + 600, prm_562) = limit(lv_at_m76, 0, 2000) * 1000000
        + sexp(prm_563, prm_562) * 1000 + sgrowth(prm_563, prm_562);
    r1 = prm_562;
    label_1477();
    return;
}
int skillmod(int prm_566, int prm_567, int prm_568)
{
    lv_at_m77 = sorg(prm_566, prm_567);
    exp_at_m77 = sexp(prm_566, prm_567) + prm_568;
    growth_at_m77 = sgrowth(prm_566, prm_567);
    if (growth_at_m77 == 0)
    {
        stat = 0;
        return stat;
    }
    if (exp_at_m77 >= 1000)
    {
        lvchange_at_m77 = exp_at_m77 / 1000;
        lv_at_m77 += lvchange_at_m77;
        exp_at_m77 = exp_at_m77 % 1000;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (lvchange_at_m77); cnt < cnt_end; ++cnt)
            {
                growth_at_m77 = elona_int(elona_double(growth_at_m77) * 0.9);
                if (growth_at_m77 < 1)
                {
                    growth_at_m77 = 1;
                }
            }
        }
        sdata(prm_566 + 600, prm_567) = limit(lv_at_m77, 0, 2000) * 1000000
            + exp_at_m77 * 1000 + growth_at_m77;
        if (synccheck(prm_567, -1))
        {
            if (prm_567 == 0 || prm_567 < 16)
            {
                snd(61);
                txtef(2);
            }
            txt(txtskillchange(prm_566, 0, prm_567));
        }
        r1 = prm_567;
        label_1477();
        stat = 1;
        return stat;
    }
    if (exp_at_m77 < 0)
    {
        lvchange_at_m77 = -exp_at_m77 / 1000 + 1;
        exp_at_m77 = 1000 + exp_at_m77 % 1000;
        if (lv_at_m77 - lvchange_at_m77 < 1)
        {
            lvchange_at_m77 = lv_at_m77 - 1;
            if (lv_at_m77 == 1)
            {
                if (lvchange_at_m77 == 0)
                {
                    exp_at_m77 = 0;
                }
            }
        }
        lv_at_m77 -= lvchange_at_m77;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (lvchange_at_m77); cnt < cnt_end; ++cnt)
            {
                growth_at_m77 =
                    elona_int(elona_double(growth_at_m77) * (-0.9 + 2)) + 1;
                if (growth_at_m77 > 400)
                {
                    growth_at_m77 = 400;
                }
            }
        }
        sdata(prm_566 + 600, prm_567) = limit(lv_at_m77, 0, 2000) * 1000000
            + exp_at_m77 * 1000 + growth_at_m77;
        if (prm_567 == 0 || prm_567 < 16)
        {
            if (synccheck(prm_567, -1))
            {
                if (lvchange_at_m77 != 0)
                {
                    txtef(3);
                    txt(txtskillchange(prm_566, 1, prm_567));
                }
            }
        }
        r1 = prm_567;
        label_1477();
        stat = 1;
        return stat;
    }
    sdata(prm_566 + 600, prm_567) =
        limit(lv_at_m77, 0, 2000) * 1000000 + exp_at_m77 * 1000 + growth_at_m77;
    stat = 0;
    return stat;
}
int skillexp(int prm_569, int prm_570, int prm_571, int prm_572, int prm_573)
{
    int exp2_at_m77 = 0;
    if (sorg(prm_569, prm_570) == 0)
    {
        stat = 0;
        return stat;
    }
    if (prm_571 == 0)
    {
        stat = 0;
        return stat;
    }
    if (sdataref(0, prm_569) != 0)
    {
        skillexp(sdataref(0, prm_569), prm_570, prm_571 / (2 + prm_572));
    }
    lv_at_m77 = sorg(prm_569, prm_570);
    growth_at_m77 = sgrowth(prm_569, prm_570);
    if (growth_at_m77 == 0)
    {
        stat = 0;
        return stat;
    }
    if (prm_571 > 0)
    {
        exp_at_m77 = prm_571 * growth_at_m77 / (100 + lv_at_m77 * 15);
        if (prm_569 >= 10)
        {
            if (prm_569 <= 19)
            {
                if (cdata(270 + prm_569 - 10, prm_570) > 0)
                {
                    exp_at_m77 = exp_at_m77
                        * (100 + cdata((270 + prm_569 - 10), prm_570)) / 100;
                }
            }
        }
        if (exp_at_m77 == 0)
        {
            if (rnd(lv_at_m77 / 10 + 1) == 0)
            {
                exp_at_m77 = 1;
            }
            else
            {
                stat = 0;
                return stat;
            }
        }
    }
    else
    {
        exp_at_m77 = prm_571;
    }
    if (gdata(20) == 35)
    {
        exp_at_m77 /= 5;
    }
    if (exp_at_m77 > 0)
    {
        if (prm_569 >= 100)
        {
            if (prm_573 != 1000)
            {
                exp2_at_m77 = rnd(cdata(36, prm_570) * exp_at_m77 / 1000
                                      / (cdata(38, prm_570) + prm_573)
                                  + 1)
                    + rnd(2);
                cdata(35, prm_570) += exp2_at_m77;
                if (prm_570 == 0)
                {
                    gdata(92) += exp2_at_m77;
                }
            }
        }
    }
    exp_at_m77 += sexp(prm_569, prm_570);
    if (exp_at_m77 >= 1000)
    {
        lvchange_at_m77 = exp_at_m77 / 1000;
        exp_at_m77 = exp_at_m77 % 1000;
        lv_at_m77 += lvchange_at_m77;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (lvchange_at_m77); cnt < cnt_end; ++cnt)
            {
                growth_at_m77 = elona_int(elona_double(growth_at_m77) * 0.9);
                if (growth_at_m77 < 1)
                {
                    growth_at_m77 = 1;
                }
            }
        }
        sdata(prm_569 + 600, prm_570) = limit(lv_at_m77, 0, 2000) * 1000000
            + exp_at_m77 * 1000 + growth_at_m77;
        if (synccheck(prm_570, -1))
        {
            if (prm_570 == 0 || prm_570 < 16)
            {
                snd(61);
                txtef(2);
                msgalert = 1;
            }
            txt(txtskillchange(prm_569, 0, prm_570));
        }
        r1 = prm_570;
        label_1477();
        stat = 1;
        return stat;
    }
    if (exp_at_m77 < 0)
    {
        lvchange_at_m77 = -exp_at_m77 / 1000 + 1;
        exp_at_m77 = 1000 + exp_at_m77 % 1000;
        if (lv_at_m77 - lvchange_at_m77 < 1)
        {
            lvchange_at_m77 = lv_at_m77 - 1;
            if (lv_at_m77 == 1)
            {
                if (lvchange_at_m77 == 0)
                {
                    exp_at_m77 = 0;
                }
            }
        }
        lv_at_m77 -= lvchange_at_m77;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (lvchange_at_m77); cnt < cnt_end; ++cnt)
            {
                growth_at_m77 =
                    elona_int(elona_double(growth_at_m77) * (-0.9 + 2)) + 1;
                if (growth_at_m77 > 400)
                {
                    growth_at_m77 = 400;
                }
            }
        }
        sdata(prm_569 + 600, prm_570) = limit(lv_at_m77, 0, 2000) * 1000000
            + exp_at_m77 * 1000 + growth_at_m77;
        if (synccheck(prm_570, -1))
        {
            if (prm_570 == 0 || prm_570 < 16)
            {
                if (lvchange_at_m77 != 0)
                {
                    msgalert = 1;
                    txtef(3);
                    txt(txtskillchange(prm_569, 1, prm_570));
                }
            }
        }
        r1 = prm_570;
        label_1477();
        stat = 1;
        return stat;
    }
    sdata(prm_569 + 600, prm_570) =
        limit(lv_at_m77, 0, 2000) * 1000000 + exp_at_m77 * 1000 + growth_at_m77;
    stat = 0;
    return stat;
}
int calcfame(int prm_574, int prm_575)
{
    p_at_m77 = prm_575 * 100
        / (100 + cdata(34, prm_574) / 100 * (cdata(34, prm_574) / 100) / 2500);
    if (p_at_m77 < 5)
    {
        p_at_m77 = rnd(5) + 1;
    }
    stat = p_at_m77;
    return stat;
}
int decfame(int prm_576, int prm_577)
{
    p_at_m77 = cdata(34, prm_576) / prm_577 + 5;
    p_at_m77 = p_at_m77 + rnd(p_at_m77 / 2) - rnd(p_at_m77 / 2);
    cdata(34, prm_576) -= p_at_m77;
    if (cdata(34, prm_576) < 0)
    {
        cdata(34, prm_576) = 0;
    }
    stat = p_at_m77;
    return stat;
}
int getworker(int prm_578, int prm_579)
{
    int p_at_m78 = 0;
    p_at_m78 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                continue;
            }
            if (prm_579 != 0)
            {
                if (cnt != prm_579)
                {
                    continue;
                }
            }
            if (cdata(80, cnt) == prm_578)
            {
                p_at_m78 = cnt;
                break;
            }
        }
    }
    stat = p_at_m78;
    return stat;
}
void removeworker(int prm_580)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                continue;
            }
            if (cdata(80, cnt) == prm_580)
            {
                cdata(80, cnt) = 0;
            }
        }
    }
    return;
}
int calcshopreform()
{
    stat = mdata(18) * 100 + 1000;
    return stat;
}
void delmef(int prm_581)
{
    if (mef(0, prm_581) == 7)
    {
        evadd(21, mef(2, prm_581), mef(3, prm_581));
    }
    map(mef(2, prm_581), mef(3, prm_581), 8) = 0;
    mef(0, prm_581) = 0;
    i_at_m79 = 199;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200 - prm_581); cnt < cnt_end; ++cnt)
        {
            if (mef(0, i_at_m79) != 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
                    {
                        mef(cnt, prm_581) = mef(cnt, i_at_m79);
                    }
                }
                map(mef(2, i_at_m79), mef(3, i_at_m79), 8) = prm_581 + 1;
                mef(0, i_at_m79) = 0;
                break;
            }
            --i_at_m79;
        }
    }
    return;
}
void addmef(
    int prm_582,
    int prm_583,
    int prm_584,
    int prm_585,
    int prm_586,
    int prm_587,
    int prm_588,
    int prm_589,
    int prm_590,
    int prm_591)
{
    int p_at_m79 = 0;
    p_at_m79 = map(prm_582, prm_583, 0);
    if (prm_584 == 5)
    {
        if (chipm(0, p_at_m79) == 3)
        {
            return;
        }
    }
    if (map(prm_582, prm_583, 8) != 0)
    {
        i_at_m79 = map(prm_582, prm_583, 8) - 1;
    }
    else
    {
        i_at_m79 = -1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
            {
                if (mef(0, cnt) == 0)
                {
                    i_at_m79 = cnt;
                    break;
                }
            }
        }
        if (i_at_m79 == -1)
        {
            i_at_m79 = rnd(200);
            map(mef(2, i_at_m79), mef(3, i_at_m79), 8) = 0;
        }
    }
    mef(0, i_at_m79) = prm_584;
    mef(1, i_at_m79) = prm_585 + prm_591 * 10000;
    mef(2, i_at_m79) = prm_582;
    mef(3, i_at_m79) = prm_583;
    mef(4, i_at_m79) = prm_586;
    mef(5, i_at_m79) = prm_587;
    mef(6, i_at_m79) = prm_588;
    mef(7, i_at_m79) = prm_589;
    mef(8, i_at_m79) = prm_590;
    map(prm_582, prm_583, 8) = i_at_m79 + 1;
    return;
}
void cell_featset(
    int prm_592,
    int prm_593,
    int prm_594,
    int prm_595,
    int prm_596,
    int prm_597)
{
    elona_vector1<int> feat_at_m80;
    if (prm_594 != -1)
    {
        feat_at_m80 = prm_594;
    }
    else
    {
        feat_at_m80 = map(prm_592, prm_593, 6) % 1000;
    }
    if (prm_595 != -1)
    {
        feat_at_m80(1) = prm_595;
    }
    else
    {
        feat_at_m80(1) = map(prm_592, prm_593, 6) / 1000 % 100;
    }
    if (prm_596 != -1)
    {
        feat_at_m80(2) = prm_596;
    }
    else
    {
        feat_at_m80(2) = map(prm_592, prm_593, 6) / 100000 % 100;
    }
    if (prm_597 != -1)
    {
        feat_at_m80(3) = prm_597;
    }
    else
    {
        feat_at_m80(3) = map(prm_592, prm_593, 6) / 10000000;
    }
    map(prm_592, prm_593, 6) = feat_at_m80 + feat_at_m80(1) * 1000
        + feat_at_m80(2) * 100000 + feat_at_m80(3) * 10000000;
    return;
}
int cell_featread(int prm_598, int prm_599, int)
{
    feat(0) = map(prm_598, prm_599, 6) % 1000;
    feat(1) = map(prm_598, prm_599, 6) / 1000 % 100;
    feat(2) = map(prm_598, prm_599, 6) / 100000 % 100;
    feat(3) = map(prm_598, prm_599, 6) / 10000000;
    stat = 0;
    return stat;
}
void cell_featclear(int prm_601, int prm_602)
{
    map(prm_601, prm_602, 6) = 0;
    return;
}
void cell_check(int prm_603, int prm_604)
{
    cellaccess = 1;
    cellchara = -1;
    cellfeat = -1;
    if (prm_603 < 0 || prm_603 >= mdata(0) || prm_604 < 0
        || prm_604 >= mdata(1))
    {
        cellaccess = 0;
        return;
    }
    if (map(prm_603, prm_604, 1) != 0)
    {
        cellchara = map(prm_603, prm_604, 1) - 1;
        cellaccess = 0;
    }
    if (map(prm_603, prm_604, 6) != 0)
    {
        cellfeat = map(prm_603, prm_604, 6) / 1000 % 100;
        if (chipm(7, map(prm_603, prm_604, 6) % 1000) && 4)
        {
            cellaccess = 0;
        }
    }
    if (chipm(7, map(prm_603, prm_604, 0)) && 4)
    {
        cellaccess = 0;
    }
    return;
}
void cell_swap(int prm_605, int prm_606, int prm_607, int prm_608)
{
    int x2_at_m81 = 0;
    int y2_at_m81 = 0;
    if (gdata(183) != 0)
    {
        if (gdata(183) == prm_605 || gdata(183) == prm_606)
        {
            return;
        }
    }
    tc_at_m81 = prm_606;
    if (tc_at_m81 == -1)
    {
        if (map(prm_607, prm_608, 1) != 0)
        {
            tc_at_m81 = map(prm_607, prm_608, 1) - 1;
        }
    }
    if (tc_at_m81 != -1)
    {
        map(cdata(1, prm_605), cdata(2, prm_605), 1) = tc_at_m81 + 1;
        x2_at_m81 = cdata(1, tc_at_m81);
        y2_at_m81 = cdata(2, tc_at_m81);
        cdata(1, tc_at_m81) = cdata(1, prm_605);
        cdata(2, tc_at_m81) = cdata(2, prm_605);
    }
    else
    {
        map(cdata(1, prm_605), cdata(2, prm_605), 1) = 0;
        x2_at_m81 = prm_607;
        y2_at_m81 = prm_608;
    }
    map(x2_at_m81, y2_at_m81, 1) = prm_605 + 1;
    cdata(1, prm_605) = x2_at_m81;
    cdata(2, prm_605) = y2_at_m81;
    if (prm_605 == 0 || tc_at_m81 == 0)
    {
        if (gdata(183))
        {
            cdata(1, gdata(183)) = cdata(1, 0);
            cdata(2, gdata(183)) = cdata(2, 0);
        }
    }
    return;
}
void cell_movechara(int prm_609, int prm_610, int prm_611)
{
    int rc_at_m81 = 0;
    if (map(prm_610, prm_611, 1) != 0)
    {
        rc_at_m81 = map(prm_610, prm_611, 1) - 1;
        if (rc_at_m81 == prm_609)
        {
            return;
        }
        cell_swap(prm_609, tc_at_m81);
    }
    else
    {
        map(cdata(1, prm_609), cdata(2, prm_609), 1) = 0;
        cdata(1, prm_609) = prm_610;
        cdata(2, prm_609) = prm_611;
        map(cdata(1, prm_609), cdata(2, prm_609), 1) = prm_609 + 1;
    }
    return;
}
int route_info(int& prm_612, int& prm_613, int prm_614)
{
    if (route(0, prm_614 % maxroute) == 1)
    {
        prm_612 += route(1, prm_614 % maxroute);
    }
    else
    {
        prm_613 += route(1, prm_614 % maxroute);
    }
    if (prm_614 % maxroute % 2 == 0)
    {
        if (route(0, (prm_614 + 1) % maxroute) != route(0, prm_614 % maxroute))
        {
            stat = -1;
            return stat;
        }
    }
    if (prm_614 >= maxroute)
    {
        if (prm_612 < scx || prm_613 < scy || prm_612 >= scx + inf_screenw
            || prm_613 >= scy + inf_screenh)
        {
            stat = 0;
            return stat;
        }
        if (prm_612 < 0 || prm_613 < 0 || prm_612 >= mdata(0)
            || prm_613 >= mdata(1))
        {
            stat = 0;
            return stat;
        }
        if (chipm(7, map(prm_612, prm_613, 0)) && 1)
        {
            stat = 0;
            return stat;
        }
        if (map(prm_612, prm_613, 6) != 0)
        {
            cell_featread(prm_612, prm_613);
            if (chipm(7, feat) && 1)
            {
                stat = 0;
                return stat;
            }
        }
    }
    if (route(1, prm_614 % maxroute) == 0)
    {
        stat = -1;
        return stat;
    }
    stat = 1;
    return stat;
}
int breath_list()
{
    DIM3(breathlist, 2, 100);
    maxbreath = 0;
    breathw = 1;
    dx = cdata(1, cc);
    dy = cdata(2, cc);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (sdataref(3, efid) % 1000 + 1); cnt < cnt_end;
             ++cnt)
        {
            if (route(0, cnt % maxroute) == 1)
            {
                dx += route(1, cnt % maxroute);
            }
            else
            {
                dy += route(1, cnt % maxroute);
            }
            if (cnt < 6)
            {
                if (cnt % 3 == 1)
                {
                    breathw += 2;
                }
            }
            else
            {
                breathw -= 2;
                if (breathw < 3)
                {
                    breathw = 3;
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (breathw); cnt < cnt_end; ++cnt)
                {
                    ty = cnt - breathw / 2 + dy;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (breathw); cnt < cnt_end;
                             ++cnt)
                        {
                            tx = cnt - breathw / 2 + dx;
                            if (tx < scx || ty < scy || tx >= scx + inf_screenw
                                || ty >= scy + inf_screenh)
                            {
                                continue;
                            }
                            if (tx < 0 || ty < 0 || tx >= mdata(0)
                                || ty >= mdata(1))
                            {
                                continue;
                            }
                            if (chipm(7, map(tx, ty, 0)) && 1)
                            {
                                continue;
                            }
                            if (maxbreath >= 100)
                            {
                                break;
                            }
                            p = 0;
                            {
                                int cnt = 0;
                                for (int cnt_end = cnt + (maxbreath);
                                     cnt < cnt_end;
                                     ++cnt)
                                {
                                    if (breathlist(0, cnt) == tx)
                                    {
                                        if (breathlist(1, cnt) == ty)
                                        {
                                            p = 1;
                                            break;
                                        }
                                    }
                                }
                            }
                            if (p == 1)
                            {
                                continue;
                            }
                            breathlist(0, maxbreath) = tx;
                            breathlist(1, maxbreath) = ty;
                            ++maxbreath;
                        }
                    }
                }
            }
        }
    }
    stat = 1;
    return stat;
}
void draw_emo(int prm_615, int prm_616, int prm_617)
{
    gmode(2, 16, 16);
    pos(prm_616 + 16, prm_617);
    gcopy(3, 32 + cdata(79, prm_615) % 100 * 16, 608);
    return;
}
void chara_preparepic(int prm_618, int prm_619)
{
    int p_at_m83 = 0;
    if (prm_619 == 0)
    {
        p_at_m83 = prm_618 / 1000;
    }
    else
    {
        p_at_m83 = prm_619;
    }
    gsel(5);
    color(0);
    boxf(0, 960, chipc(2, prm_618), chipc(3, prm_618) + 960);
    pos(0, 960);
    gcopy(
        5,
        chipc(0, prm_618),
        chipc(1, prm_618),
        chipc(2, prm_618),
        chipc(3, prm_618));
    gfini(chipc(2, prm_618), chipc(3, prm_618));
    gfdec2(c_col(0, p_at_m83), c_col(1, p_at_m83), c_col(2, p_at_m83));
    gsel(selcur);
    return;
}
int cell_itemlist(int prm_625, int prm_626)
{
    listmax = 0;
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) > 0)
            {
                if (inv(5, cnt) == prm_625 && inv(6, cnt) == prm_626)
                {
                    list(0, listmax) = cnt;
                    ++listmax;
                }
            }
        }
    }
    stat = rtval;
    return stat;
}
int cell_itemoncell(int prm_627, int prm_628)
{
    rtval(0) = 0;
    rtval(1) = 0;
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) > 0)
            {
                if (inv(5, cnt) == prm_627 && inv(6, cnt) == prm_628)
                {
                    ++rtval;
                    rtval(1) = cnt;
                }
            }
        }
    }
    stat = rtval;
    return stat;
}
int fov_los(int prm_629, int prm_630, int prm_631, int prm_632)
{
    dy_at_modfov = prm_632 - prm_630;
    dx_at_modfov = prm_631 - prm_629;
    ay_at_modfov = abs(dy_at_modfov);
    ax_at_modfov = abs(dx_at_modfov);
    if (ax_at_modfov < 2 && ay_at_modfov < 2)
    {
        stat = 1;
        return stat;
    }
    if (dx_at_modfov == 0)
    {
        if (dy_at_modfov > 0)
        {
            ty_at_modfov = prm_630 + 1;
        label_0386_internal:
            if (ty_at_modfov < prm_632 == 0)
            {
                goto label_0387_internal;
            }
            if (chipm(7, map(prm_629, ty_at_modfov, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(prm_629, ty_at_modfov, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            ++ty_at_modfov;
            goto label_0386_internal;
        label_0387_internal:
            0;
        }
        else
        {
            ty_at_modfov = prm_630 - 1;
        label_0388_internal:
            if (ty_at_modfov > prm_632 == 0)
            {
                goto label_0389_internal;
            }
            if (chipm(7, map(prm_629, ty_at_modfov, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(prm_629, ty_at_modfov, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            --ty_at_modfov;
            goto label_0388_internal;
        }
    label_0389_internal:
        stat = 1;
        return stat;
    }
    if (dy_at_modfov == 0)
    {
        if (dx_at_modfov > 0)
        {
            tx_at_modfov = prm_629 + 1;
        label_0390_internal:
            if (tx_at_modfov < prm_631 == 0)
            {
                goto label_0391_internal;
            }
            if (chipm(7, map(tx_at_modfov, prm_630, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(tx_at_modfov, prm_630, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            ++tx_at_modfov;
            goto label_0390_internal;
        label_0391_internal:
            0;
        }
        else
        {
            tx_at_modfov = prm_629 - 1;
        label_0392_internal:
            if (tx_at_modfov > prm_631 == 0)
            {
                goto label_0393_internal;
            }
            if (chipm(7, map(tx_at_modfov, prm_630, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(tx_at_modfov, prm_630, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            --tx_at_modfov;
            goto label_0392_internal;
        }
    label_0393_internal:
        stat = 1;
        return stat;
    }
    if (dx_at_modfov < 0)
    {
        sx_at_modfov = -1;
    }
    else
    {
        sx_at_modfov = 1;
    }
    if (dy_at_modfov < 0)
    {
        sy_at_modfov = -1;
    }
    else
    {
        sy_at_modfov = 1;
    }
    if (ax_at_modfov == 1)
    {
        if (ay_at_modfov == 2)
        {
            if ((chipm(7, map(prm_629, prm_630 + sy_at_modfov, 0)) && 1) == 0)
            {
                if ((chipm(7, map(prm_629, (prm_630 + sy_at_modfov), 6) % 1000)
                     && 1)
                    == 0)
                {
                    stat = 1;
                    return stat;
                }
            }
        }
    }
    else
    {
        if (ay_at_modfov == 1)
        {
            if (ax_at_modfov == 2)
            {
                if ((chipm(7, map(prm_629 + sx_at_modfov, prm_630, 0)) && 1)
                    == 0)
                {
                    if ((chipm(
                             7,
                             map((prm_629 + sx_at_modfov), prm_630, 6) % 1000)
                         && 1)
                        == 0)
                    {
                        stat = 1;
                        return stat;
                    }
                }
            }
        }
    }
    f2_at_modfov = ax_at_modfov * ay_at_modfov;
    f1_at_modfov = f2_at_modfov << 1;
    if (ax_at_modfov >= ay_at_modfov)
    {
        qy_at_modfov = ay_at_modfov * ay_at_modfov;
        m_at_modfov = qy_at_modfov << 1;
        tx_at_modfov = prm_629 + sx_at_modfov;
        if (qy_at_modfov == f2_at_modfov)
        {
            ty_at_modfov = prm_630 + sy_at_modfov;
            qy_at_modfov -= f1_at_modfov;
        }
        else
        {
            ty_at_modfov = prm_630;
        }
    label_0394_internal:
        if (prm_631 - tx_at_modfov == 0)
        {
            goto label_0395_internal;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
        {
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
        {
            stat = 0;
            return stat;
        }
        qy_at_modfov += m_at_modfov;
        if (qy_at_modfov < f2_at_modfov)
        {
            tx_at_modfov += sx_at_modfov;
        }
        else
        {
            if (qy_at_modfov > f2_at_modfov)
            {
                ty_at_modfov += sy_at_modfov;
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
                {
                    stat = 0;
                    return stat;
                }
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
                {
                    stat = 0;
                    return stat;
                }
                qy_at_modfov -= f1_at_modfov;
                tx_at_modfov += sx_at_modfov;
            }
            else
            {
                ty_at_modfov += sy_at_modfov;
                qy_at_modfov -= f1_at_modfov;
                tx_at_modfov += sx_at_modfov;
            }
        }
        goto label_0394_internal;
    label_0395_internal:
        0;
    }
    else
    {
        qx_at_modfov = ax_at_modfov * ax_at_modfov;
        m_at_modfov = qx_at_modfov << 1;
        ty_at_modfov = prm_630 + sy_at_modfov;
        if (qx_at_modfov == f2_at_modfov)
        {
            tx_at_modfov = prm_629 + sx_at_modfov;
            qx_at_modfov -= f1_at_modfov;
        }
        else
        {
            tx_at_modfov = prm_629;
        }
    label_0396_internal:
        if (prm_632 - ty_at_modfov == 0)
        {
            goto label_0397_internal;
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
        {
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
        {
            stat = 0;
            return stat;
        }
        qx_at_modfov += m_at_modfov;
        if (qx_at_modfov < f2_at_modfov)
        {
            ty_at_modfov += sy_at_modfov;
        }
        else
        {
            if (qx_at_modfov > f2_at_modfov)
            {
                tx_at_modfov += sx_at_modfov;
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
                {
                    stat = 0;
                    return stat;
                }
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
                {
                    stat = 0;
                    return stat;
                }
                qx_at_modfov -= f1_at_modfov;
                ty_at_modfov += sy_at_modfov;
            }
            else
            {
                tx_at_modfov += sx_at_modfov;
                qx_at_modfov -= f1_at_modfov;
                ty_at_modfov += sy_at_modfov;
            }
        }
        goto label_0396_internal;
    }
label_0397_internal:
    stat = 1;
    return stat;
}
int get_route(int prm_633, int prm_634, int prm_635, int prm_636)
{
    int p_at_modfov = 0;
    DIM3(route, 2, 100);
    dy_at_modfov = prm_636 - prm_634;
    dx_at_modfov = prm_635 - prm_633;
    if (prm_636 == prm_634)
    {
        if (prm_635 == prm_633)
        {
            route(0, 0) = 2;
            route(1, 0) = 0;
            maxroute = 1;
            stat = 1;
            return stat;
        }
    }
    ay_at_modfov = abs(dy_at_modfov);
    ax_at_modfov = abs(dx_at_modfov);
    p_at_modfov = 0;
    if (dx_at_modfov == 0)
    {
        if (dy_at_modfov > 0)
        {
            ty_at_modfov = prm_634 + 1;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = 1;
            ++p_at_modfov;
        label_0399_internal:
            if (ty_at_modfov < prm_636 == 0)
            {
                goto label_0400_internal;
            }
            if (chipm(7, map(prm_633, ty_at_modfov, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(prm_633, ty_at_modfov, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            ++ty_at_modfov;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = 1;
            ++p_at_modfov;
            goto label_0399_internal;
        label_0400_internal:
            0;
        }
        else
        {
            ty_at_modfov = prm_634 - 1;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = -1;
            ++p_at_modfov;
        label_0401_internal:
            if (ty_at_modfov > prm_636 == 0)
            {
                goto label_0402_internal;
            }
            if (chipm(7, map(prm_633, ty_at_modfov, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(prm_633, ty_at_modfov, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            --ty_at_modfov;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = -1;
            ++p_at_modfov;
            goto label_0401_internal;
        }
    label_0402_internal:
        maxroute = p_at_modfov;
        stat = 1;
        return stat;
    }
    if (dy_at_modfov == 0)
    {
        if (dx_at_modfov > 0)
        {
            tx_at_modfov = prm_633 + 1;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = 1;
            ++p_at_modfov;
        label_0403_internal:
            if (tx_at_modfov < prm_635 == 0)
            {
                goto label_0404_internal;
            }
            if (chipm(7, map(tx_at_modfov, prm_634, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(tx_at_modfov, prm_634, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            ++tx_at_modfov;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = 1;
            ++p_at_modfov;
            goto label_0403_internal;
        label_0404_internal:
            0;
        }
        else
        {
            tx_at_modfov = prm_633 - 1;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = -1;
            ++p_at_modfov;
        label_0405_internal:
            if (tx_at_modfov > prm_635 == 0)
            {
                goto label_0406_internal;
            }
            if (chipm(7, map(tx_at_modfov, prm_634, 0)) && 1)
            {
                stat = 0;
                return stat;
            }
            if (chipm(7, map(tx_at_modfov, prm_634, 6) % 1000) && 1)
            {
                stat = 0;
                return stat;
            }
            --tx_at_modfov;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = -1;
            ++p_at_modfov;
            goto label_0405_internal;
        }
    label_0406_internal:
        maxroute = p_at_modfov;
        stat = 1;
        return stat;
    }
    if (dx_at_modfov < 0)
    {
        sx_at_modfov = -1;
    }
    else
    {
        sx_at_modfov = 1;
    }
    if (dy_at_modfov < 0)
    {
        sy_at_modfov = -1;
    }
    else
    {
        sy_at_modfov = 1;
    }
    if (ax_at_modfov == 1)
    {
        if (ay_at_modfov == 2)
        {
            if ((chipm(7, map(prm_633, prm_634 + sy_at_modfov, 0)) && 1) == 0)
            {
                if ((chipm(7, map(prm_633, (prm_634 + sy_at_modfov), 6) % 1000)
                     && 1)
                    == 0)
                {
                    p_at_modfov = 0;
                    route(0, p_at_modfov) = 2;
                    route(1, p_at_modfov) = sy_at_modfov;
                    ++p_at_modfov;
                    route(0, p_at_modfov) = 2;
                    route(1, p_at_modfov) = 0;
                    ++p_at_modfov;
                    route(0, p_at_modfov) = 1;
                    route(1, p_at_modfov) = sx_at_modfov;
                    ++p_at_modfov;
                    maxroute = p_at_modfov;
                    stat = 1;
                    return stat;
                }
            }
        }
    }
    else
    {
        if (ay_at_modfov == 1)
        {
            if (ax_at_modfov == 2)
            {
                if ((chipm(7, map(prm_633 + sx_at_modfov, prm_634, 0)) && 1)
                    == 0)
                {
                    if ((chipm(
                             7,
                             map((prm_633 + sx_at_modfov), prm_634, 6) % 1000)
                         && 1)
                        == 0)
                    {
                        route(0, p_at_modfov) = 1;
                        route(1, p_at_modfov) = sx_at_modfov;
                        ++p_at_modfov;
                        route(0, p_at_modfov) = 1;
                        route(1, p_at_modfov) = 0;
                        ++p_at_modfov;
                        route(0, p_at_modfov) = 2;
                        route(1, p_at_modfov) = sy_at_modfov;
                        ++p_at_modfov;
                        maxroute = p_at_modfov;
                        stat = 1;
                        return stat;
                    }
                }
            }
        }
    }
    f2_at_modfov = ax_at_modfov * ay_at_modfov;
    f1_at_modfov = f2_at_modfov << 1;
    if (ax_at_modfov >= ay_at_modfov)
    {
        qy_at_modfov = ay_at_modfov * ay_at_modfov;
        m_at_modfov = qy_at_modfov << 1;
        tx_at_modfov = prm_633 + sx_at_modfov;
        route(0, p_at_modfov) = 1;
        route(1, p_at_modfov) = sx_at_modfov;
        ++p_at_modfov;
        if (qy_at_modfov == f2_at_modfov)
        {
            ty_at_modfov = prm_634 + sy_at_modfov;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = sy_at_modfov;
            ++p_at_modfov;
            qy_at_modfov -= f1_at_modfov;
        }
        else
        {
            ty_at_modfov = prm_634;
        }
    label_0407_internal:
        if (prm_635 - tx_at_modfov == 0)
        {
            goto label_0408_internal;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
        {
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
        {
            stat = 0;
            return stat;
        }
        qy_at_modfov += m_at_modfov;
        if (qy_at_modfov < f2_at_modfov)
        {
            tx_at_modfov += sx_at_modfov;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = sx_at_modfov;
            ++p_at_modfov;
        }
        else
        {
            if (qy_at_modfov > f2_at_modfov)
            {
                ty_at_modfov += sy_at_modfov;
                route(0, p_at_modfov) = 2;
                route(1, p_at_modfov) = sy_at_modfov;
                ++p_at_modfov;
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
                {
                    stat = 0;
                    return stat;
                }
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
                {
                    stat = 0;
                    return stat;
                }
                qy_at_modfov -= f1_at_modfov;
                tx_at_modfov += sx_at_modfov;
                route(0, p_at_modfov) = 1;
                route(1, p_at_modfov) = sx_at_modfov;
                ++p_at_modfov;
            }
            else
            {
                ty_at_modfov += sy_at_modfov;
                route(0, p_at_modfov) = 2;
                route(1, p_at_modfov) = sy_at_modfov;
                ++p_at_modfov;
                qy_at_modfov -= f1_at_modfov;
                tx_at_modfov += sx_at_modfov;
                route(0, p_at_modfov) = 1;
                route(1, p_at_modfov) = sx_at_modfov;
                ++p_at_modfov;
            }
        }
        goto label_0407_internal;
    label_0408_internal:
        0;
    }
    else
    {
        qx_at_modfov = ax_at_modfov * ax_at_modfov;
        m_at_modfov = qx_at_modfov << 1;
        ty_at_modfov = prm_634 + sy_at_modfov;
        route(0, p_at_modfov) = 2;
        route(1, p_at_modfov) = sy_at_modfov;
        ++p_at_modfov;
        if (qx_at_modfov == f2_at_modfov)
        {
            tx_at_modfov = prm_633 + sx_at_modfov;
            route(0, p_at_modfov) = 1;
            route(1, p_at_modfov) = sx_at_modfov;
            ++p_at_modfov;
            qx_at_modfov -= f1_at_modfov;
        }
        else
        {
            tx_at_modfov = prm_633;
        }
    label_0409_internal:
        if (prm_636 - ty_at_modfov == 0)
        {
            goto label_0410_internal;
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
        {
            stat = 0;
            return stat;
        }
        if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
        {
            stat = 0;
            return stat;
        }
        qx_at_modfov += m_at_modfov;
        if (qx_at_modfov < f2_at_modfov)
        {
            ty_at_modfov += sy_at_modfov;
            route(0, p_at_modfov) = 2;
            route(1, p_at_modfov) = sy_at_modfov;
            ++p_at_modfov;
        }
        else
        {
            if (qx_at_modfov > f2_at_modfov)
            {
                tx_at_modfov += sx_at_modfov;
                route(0, p_at_modfov) = 1;
                route(1, p_at_modfov) = sx_at_modfov;
                ++p_at_modfov;
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 0)) && 1)
                {
                    stat = 0;
                    return stat;
                }
                if (chipm(7, map(tx_at_modfov, ty_at_modfov, 6) % 1000) && 1)
                {
                    stat = 0;
                    return stat;
                }
                qx_at_modfov -= f1_at_modfov;
                ty_at_modfov += sy_at_modfov;
                route(0, p_at_modfov) = 2;
                route(1, p_at_modfov) = sy_at_modfov;
                ++p_at_modfov;
            }
            else
            {
                tx_at_modfov += sx_at_modfov;
                route(0, p_at_modfov) = 1;
                route(1, p_at_modfov) = sx_at_modfov;
                ++p_at_modfov;
                qx_at_modfov -= f1_at_modfov;
                ty_at_modfov += sy_at_modfov;
                route(0, p_at_modfov) = 2;
                route(1, p_at_modfov) = sy_at_modfov;
                ++p_at_modfov;
            }
        }
        goto label_0409_internal;
    }
label_0410_internal:
    maxroute = p_at_modfov;
    stat = 1;
    return stat;
}
void display_customkey(
    const std::string& prm_637,
    int prm_638,
    int prm_639,
    int)
{
    redraw(0);
    gsel(3);
    gmode(0);
    font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
    pos(624, 30);
    gcopy(3, 0, 30, 24, 18);
    pos(629, 31);
    color(50, 60, 80);
    bmes(""s + prm_637, 250, 240, 230);
    gmode(2, inf_tiles, inf_tiles);
    gsel(0);
    pos(prm_638, prm_639);
    gcopy(3, 624, 30, 24, 18);
    return;
}
void display_key(int prm_641, int prm_642, int prm_643)
{
    pos(prm_641, prm_642);
    gcopy(3, prm_643 * 24 + 72, 30, 24, 18);
    return;
}
void cursor_check()
{
    if (key == key_north)
    {
        snd(5);
        --cs;
        if (cs < 0)
        {
            cs = keyrange - 1;
            if (cs < 0)
            {
                cs = 0;
            }
        }
    }
    if (key == key_south)
    {
        snd(5);
        ++cs;
        if (cs >= keyrange)
        {
            cs = 0;
        }
    }
    if (key == key_west)
    {
        key = key_pagedown;
    }
    if (key == key_east)
    {
        key = key_pageup;
    }
    if (cs >= keyrange)
    {
        cs_bk = -1;
        cs = keyrange - 1;
        if (cs < 0)
        {
            cs = 0;
        }
    }
    if (key == key_enter)
    {
        key = key_list(cs);
    }
    return;
}
void lenfix(std::string& prm_644, int prm_645)
{
    int p_at_m89 = 0;
    p_at_m89 = prm_645 - strlen_u(prm_644);
    if (p_at_m89 < 1)
    {
        p_at_m89 = 1;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p_at_m89); cnt < cnt_end; ++cnt)
        {
            prm_644 += u8" "s;
        }
    }
    return;
}
void showscroll(int prm_646, int prm_647, int prm_648, int prm_649)
{
    int x_at_m91 = 0;
    int y_at_m91 = 0;
    int x3_at_m91 = 0;
    int y3_at_m91 = 0;
    int cnt2_at_m91 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                if (windowshadow == 0)
                {
                    continue;
                }
                else
                {
                    gmode(6 - 1, -1, 80);
                    x_at_m91 = prm_646 + 3;
                    y_at_m91 = prm_647 + 3;
                    windowshadow = 0;
                }
            }
            else
            {
                gmode(2);
                x_at_m91 = prm_646;
                y_at_m91 = prm_647;
            }
            x3_at_m91 = prm_648 + x_at_m91 - prm_648 % 8 - 64;
            y3_at_m91 = prm_649 + y_at_m91 - prm_649 % 8 - 64;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (prm_648 / 8); cnt < cnt_end; ++cnt)
                {
                    if (cnt < 8)
                    {
                        if (cnt == 0)
                        {
                            pos(x_at_m91, y_at_m91);
                            gcopy(7, 0, 0, 64, 48);
                            pos(x_at_m91, y3_at_m91);
                            gcopy(7, 0, 144, 64, 48);
                        }
                        continue;
                    }
                    if (cnt < prm_648 / 8 - 8)
                    {
                        pos(cnt * 8 + x_at_m91, y_at_m91);
                        gcopy(7, (cnt - 8) % 18 * 8 + 64, 0, 8, 48);
                        pos(cnt * 8 + x_at_m91, y3_at_m91);
                        gcopy(7, (cnt - 8) % 18 * 8 + 64, 144, 8, 48);
                        continue;
                    }
                    pos(x3_at_m91, y_at_m91);
                    gcopy(7, 208, 0, 64, 48);
                    pos(x3_at_m91, y3_at_m91);
                    gcopy(7, 208, 144, 64, 48);
                    break;
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (prm_649 / 8 - 14); cnt < cnt_end;
                     ++cnt)
                {
                    cnt2_at_m91 = cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (prm_648 / 8); cnt < cnt_end;
                             ++cnt)
                        {
                            if (cnt == 0)
                            {
                                pos(x_at_m91, cnt2_at_m91 * 8 + y_at_m91 + 48);
                                gcopy(7, 0, cnt2_at_m91 % 12 * 8 + 48, 64, 8);
                                continue;
                            }
                            if (cnt < prm_648 / 8 - 15)
                            {
                                pos(cnt * 8 + x_at_m91 + 56,
                                    cnt2_at_m91 * 8 + y_at_m91 + 48);
                                gcopy(
                                    7,
                                    cnt % 18 * 8 + 64,
                                    cnt2_at_m91 % 12 * 8 + 48,
                                    8,
                                    8);
                                continue;
                            }
                            pos(x3_at_m91, cnt2_at_m91 * 8 + y_at_m91 + 48);
                            gcopy(7, 208, cnt2_at_m91 % 12 * 8 + 48, 64, 8);
                            break;
                        }
                    }
                }
            }
        }
    }
    if (s != ""s)
    {
        pos(x_at_m91 + 40, y_at_m91 + prm_649 - 67 - prm_649 % 8);
        gcopy(3, 96, 360, 24, 16);
        color(194, 173, 161);
        line(
            x_at_m91 + 60,
            y_at_m91 + prm_649 - 68 - prm_649 % 8,
            x_at_m91 + prm_648 - 40,
            y_at_m91 + prm_649 - 68 - prm_649 % 8);
        color(224, 213, 191);
        line(
            x_at_m91 + 60,
            y_at_m91 + prm_649 - 69 - prm_649 % 8,
            x_at_m91 + prm_648 - 40,
            y_at_m91 + prm_649 - 69 - prm_649 % 8);
        font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
        color(0, 0, 0);
        pos(x_at_m91 + 68, y_at_m91 + prm_649 - 63 - prm_649 % 8);
        mes(s);
        if (pagesize != 0)
        {
            s = u8"Page."s + (page + 1) + u8"/"s + (pagemax + 1);
            font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
            pos(x_at_m91 + prm_648 - strlen_u(s) * 7 - 40,
                y_at_m91 + prm_649 - 63 - prm_649 % 8);
            mes(s);
        }
    }
    return;
}
void window(
    int prm_650,
    int prm_651,
    int prm_652,
    int prm_653,
    int,
    int prm_655)
{
    int dx_at_m92 = 0;
    int dy_at_m92 = 0;
    int x3_at_m92 = 0;
    int y3_at_m92 = 0;
    int p_at_m92 = 0;
    int cnt2_at_m92 = 0;
    if (prm_655 == -1)
    {
        gmode(6 - 1, -1, 80);
        color(0, 0, 0);
    }
    else
    {
        gmode(2);
    }
    dx_at_m92 = 0;
    dy_at_m92 = 48;
    x3_at_m92 = prm_652 + prm_650 - prm_652 % 8 - 64;
    y3_at_m92 = prm_653 + prm_651 - prm_653 % 8 - 64;
    if (y3_at_m92 < prm_651 + 14)
    {
        y3_at_m92 = prm_651 + 14;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_652 / 8); cnt < cnt_end; ++cnt)
        {
            if (cnt < 8)
            {
                if (cnt == 0)
                {
                    pos(prm_650, prm_651);
                    gcopy(3, dx_at_m92, dy_at_m92, 64, 48);
                    pos(prm_650, y3_at_m92);
                    gcopy(3, dx_at_m92, dy_at_m92 + 144, 64, 48);
                }
                continue;
            }
            if (cnt < prm_652 / 8 - 8)
            {
                pos(cnt * 8 + prm_650, prm_651);
                gcopy(3, (cnt - 8) % 18 * 8 + dx_at_m92 + 36, dy_at_m92, 8, 48);
                pos(cnt * 8 + prm_650, y3_at_m92);
                gcopy(
                    3,
                    (cnt - 8) % 18 * 8 + dx_at_m92 + 54,
                    dy_at_m92 + 144,
                    8,
                    48);
                continue;
            }
            pos(x3_at_m92, prm_651);
            gcopy(3, dx_at_m92 + 208, dy_at_m92, 56, 48);
            pos(x3_at_m92, y3_at_m92);
            gcopy(3, dx_at_m92 + 208, dy_at_m92 + 144, 56, 48);
            break;
        }
    }
    p_at_m92 = prm_653 / 8 - 14;
    if (p_at_m92 < 0)
    {
        p_at_m92 = 0;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p_at_m92); cnt < cnt_end; ++cnt)
        {
            cnt2_at_m92 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (prm_652 / 8); cnt < cnt_end; ++cnt)
                {
                    if (cnt == 0)
                    {
                        pos(prm_650, cnt2_at_m92 * 8 + prm_651 + 48);
                        gcopy(
                            3,
                            dx_at_m92,
                            cnt2_at_m92 % 12 * 8 + dy_at_m92 + 48,
                            64,
                            8);
                        continue;
                    }
                    if (cnt < prm_652 / 8 - 15)
                    {
                        pos(cnt * 8 + prm_650 + 56,
                            cnt2_at_m92 * 8 + prm_651 + 48);
                        gcopy(
                            3,
                            cnt % 18 * 8 + dx_at_m92 + 64,
                            cnt2_at_m92 % 12 * 8 + dy_at_m92 + 48,
                            8,
                            8);
                        continue;
                    }
                    pos(x3_at_m92, cnt2_at_m92 * 8 + prm_651 + 48);
                    gcopy(
                        3,
                        dx_at_m92 + 208,
                        cnt2_at_m92 % 12 * 8 + dy_at_m92 + 48,
                        56,
                        8);
                    break;
                }
            }
        }
    }
    gmode(2);
    return;
}
void window2(
    int prm_656,
    int prm_657,
    int prm_658,
    int prm_659,
    int prm_660,
    int prm_661)
{
    int dx_at_m93 = 0;
    int dy_at_m93 = 0;
    int x2_at_m93 = 0;
    int y2_at_m93 = 0;
    int x3_at_m93 = 0;
    int y3_at_m93 = 0;
    int p_at_m93 = 0;
    dx_at_m93 = 0;
    dy_at_m93 = 240;
    x2_at_m93 = prm_658;
    y2_at_m93 = prm_659;
    if (x2_at_m93 < 32)
    {
        x2_at_m93 = 32;
    }
    if (y2_at_m93 < 24)
    {
        y2_at_m93 = 24;
    }
    x3_at_m93 = prm_656 + x2_at_m93 / 16 * 16 - 16;
    y3_at_m93 = prm_657 + y2_at_m93 / 16 * 16 - 16;
    if (prm_661 == 0)
    {
        pos(prm_656 + 4, prm_657 + 4);
        gzoom(x2_at_m93 - 6, y2_at_m93 - 8, 3, 24, 72, 228, 144);
    }
    if (prm_661 == 1)
    {
        pos(prm_656 + 4, prm_657 + 4);
        gzoom(x2_at_m93 - 6, y2_at_m93 - 8, 3, 24, 72, 228, 144);
        pos(prm_656 + 4, prm_657 + 4);
        gfini(x2_at_m93 - 4, y2_at_m93 - 4);
        gfdec2(195, 205, 195);
    }
    if (prm_661 == 2)
    {
        pos(prm_656 + 4, prm_657 + 4);
        gzoom(x2_at_m93 - 6, y2_at_m93 - 8, 3, 24, 72, 228, 144);
        pos(prm_656 + 4, prm_657 + 4);
        gfini(x2_at_m93 - 4, y2_at_m93 - 4);
        gfdec2(210, 215, 205);
    }
    if (prm_661 == 3)
    {
        pos(prm_656 + 4, prm_657 + 4);
        gzoom(x2_at_m93 - 6, y2_at_m93 - 8, 3, 24, 72, 228, 144);
        pos(prm_656 + 4, prm_657 + 4);
        gfini(x2_at_m93 - 4, y2_at_m93 - 4);
        gfdec2(10, 13, 16);
    }
    if (prm_661 == 4)
    {
        pos(prm_656 + 4, prm_657 + 4);
        gzoom(x2_at_m93 - 6, y2_at_m93 - 8, 3, 24, 72, 228, 144);
        pos(prm_656 + 4, prm_657 + 4);
        gfini(x2_at_m93 - 4, y2_at_m93 - 4);
        gfdec2(195, 205, 195);
    }
    if (prm_661 == 6)
    {
        pos(prm_656 + x2_at_m93 / 2, prm_657 + y2_at_m93 / 2);
        gmode(4, 228, 144, 180);
        grotate(3, 24, 72, 0, x2_at_m93 - 4, y2_at_m93 - 4);
    }
    gmode(2, 16, 16);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (x2_at_m93 / 16 - 2); cnt < cnt_end; ++cnt)
        {
            pos(cnt * 16 + prm_656 + 16, prm_657);
            gcopy(3, prm_660 * 48 + dx_at_m93 + 16, dy_at_m93);
            pos(cnt * 16 + prm_656 + 16, prm_657 + y2_at_m93 - 16);
            gcopy(3, prm_660 * 48 + dx_at_m93 + 16, dy_at_m93 + 32);
        }
    }
    pos(x3_at_m93, prm_657);
    gcopy(3, prm_660 * 48 + dx_at_m93 + 16, dy_at_m93, x2_at_m93 % 16, 16);
    pos(x3_at_m93, prm_657 + y2_at_m93 - 16);
    gcopy(3, prm_660 * 48 + dx_at_m93 + 16, dy_at_m93 + 32, x2_at_m93 % 16, 16);
    p_at_m93 = y2_at_m93 / 16 - 2;
    if (p_at_m93 < 0)
    {
        p_at_m93 = 0;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p_at_m93); cnt < cnt_end; ++cnt)
        {
            pos(prm_656, cnt * 16 + prm_657 + 16);
            gcopy(3, prm_660 * 48 + dx_at_m93, dy_at_m93 + 16);
            pos(prm_656 + x2_at_m93 - 16, cnt * 16 + prm_657 + 16);
            gcopy(3, prm_660 * 48 + dx_at_m93 + 32, dy_at_m93 + 16);
        }
    }
    pos(prm_656, y3_at_m93);
    gcopy(3, prm_660 * 48 + dx_at_m93, dy_at_m93 + 16, 16, y2_at_m93 % 16);
    pos(prm_656 + x2_at_m93 - 16, y3_at_m93);
    gcopy(3, prm_660 * 48 + dx_at_m93 + 32, dy_at_m93 + 16, 16, y2_at_m93 % 16);
    pos(prm_656, prm_657);
    gcopy(3, prm_660 * 48 + dx_at_m93, dy_at_m93);
    pos(prm_656, prm_657 + y2_at_m93 - 16);
    gcopy(3, prm_660 * 48 + dx_at_m93, dy_at_m93 + 32);
    pos(prm_656 + x2_at_m93 - 16, prm_657);
    gcopy(3, prm_660 * 48 + dx_at_m93 + 32, dy_at_m93);
    pos(prm_656 + x2_at_m93 - 16, prm_657 + y2_at_m93 - 16);
    gcopy(3, prm_660 * 48 + dx_at_m93 + 32, dy_at_m93 + 32);
    if (prm_661 == 5)
    {
        pos(prm_656 + 2, prm_657 + 2);
        gzoom(x2_at_m93 - 4, y2_at_m93 - 5, 3, 24, 72, 228, 144);
        pos(prm_656 + 2, prm_657 + 2);
        gfini(x2_at_m93 - 4, y2_at_m93 - 4);
        gfdec2(195, 205, 195);
    }
    return;
}
void display_window2(
    int prm_662,
    int prm_663,
    int prm_664,
    int prm_665,
    int prm_666,
    int prm_667)
{
    gmode(2);
    pos(prm_662, prm_663);
    gcopy(prm_666, 0, 0, prm_664, prm_665);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    color(0, 0, 0);
    if (s != ""s)
    {
        pos(prm_662 + prm_664 - strlen_u(s) * 7 - 140,
            prm_663 + prm_665 - 24 - prm_665 % 8 + prm_667);
        mes(s);
    }
    if (pagesize != 0)
    {
        s = u8"Page."s + (page + 1) + u8"/"s + (pagemax + 1);
        pos(prm_662 + prm_664 - strlen_u(s) * 7 - 40,
            prm_663 + prm_665 - 24 - prm_665 % 8 + prm_667);
        mes(s);
    }
    return;
}
void display_window(
    int prm_668,
    int prm_669,
    int prm_670,
    int prm_671,
    int prm_672,
    int prm_673)
{
    if (windowshadow == 1)
    {
        window(prm_668 + 4, prm_669 + 4, prm_670, prm_671 - prm_671 % 8, 0, -1);
        windowshadow = 0;
    }
    window(prm_668, prm_669, prm_670, prm_671 - prm_671 % 8, 0, 0);
    if (s != ""s)
    {
        window2(
            prm_668 + 34,
            prm_669 - 4,
            45 * prm_670 / 100 + limit((strlen_u(s) * 8 - 120), 0, 200),
            32,
            1,
            1);
    }
    gmode(2);
    pos(prm_668 + 30 + prm_672, prm_669 + prm_671 - 47 - prm_671 % 8);
    gcopy(3, 96, 360, 24, 16);
    color(194, 170, 146);
    line(
        prm_668 + 50 + prm_672,
        prm_669 + prm_671 - 48 - prm_671 % 8,
        prm_668 + prm_670 - 40,
        prm_669 + prm_671 - 48 - prm_671 % 8);
    color(234, 220, 188);
    line(
        prm_668 + 50 + prm_672,
        prm_669 + prm_671 - 49 - prm_671 % 8,
        prm_668 + prm_670 - 40,
        prm_669 + prm_671 - 49 - prm_671 % 8);
    font(lang(cfg_font1, cfg_font2), 15 + en - en * 2, 0);
    color(0, 0, 0);
    pos(prm_668 + 45 * prm_670 / 200 + 34 - strlen_u(s) * 4
            + limit((strlen(s) * 8 - 120), 0, 200) / 2,
        prm_669 + 4 + vfix);
    color(20, 10, 0);
    bmes(s, 255, 255, 255);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    color(0, 0, 0);
    pos(prm_668 + 58 + prm_672, prm_669 + prm_671 - 43 - prm_671 % 8);
    mes(s(1));
    if (pagesize != 0)
    {
        s = u8"Page."s + (page + 1) + u8"/"s + (pagemax + 1);
        font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
        pos(prm_668 + prm_670 - strlen_u(s) * 7 - 40 - prm_673,
            prm_669 + prm_671 - 65 - prm_671 % 8);
        mes(s);
    }
    wx = prm_668;
    wy = prm_669;
    ww = prm_670;
    wh = prm_671;
    return;
}
void display_note(const std::string& prm_674, int prm_675)
{
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    pos(wx + ww - strlen_u(prm_674) * 7 - 140 - prm_675, wy + wh - 65 - wh % 8);
    mes(prm_674);
    return;
}
void display_topic(const std::string& prm_676, int prm_677, int prm_678, int)
{
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    color(0, 0, 0);
    pos(prm_677, prm_678 + 7);
    gcopy(3, 120, 360, 24, 16);
    pos(prm_677 + 26, prm_678 + 8);
    mes(prm_676);
    color(0, 0, 0);
    line(
        prm_677 + 22,
        prm_678 + 21,
        prm_677 + strlen_u(prm_676) * 7 + 36,
        prm_678 + 21);
    return;
}
void display_msg(int prm_680, int prm_681)
{
    msgkeep = prm_681;
    msgclear = 1;
    msgy = prm_680;
    redraw(0);
    label_1424();
    return;
}
int role(int prm_686, int prm_687, int prm_688)
{
    int d_at_m97 = 0;
    d_at_m97 = 0;
    if (prm_686 < 1)
    {
        prm_686 = 1;
    }
    if (prm_687 < 1)
    {
        prm_687 = 1;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_686); cnt < cnt_end; ++cnt)
        {
            d_at_m97 += rnd(prm_687) + 1;
        }
    }
    stat = d_at_m97 + prm_688;
    return stat;
}
int rolemax(int prm_689, int prm_690, int prm_691)
{
    stat = prm_689 * prm_690 + prm_691;
    return stat;
}
void page_save()
{
    pagebk = page;
    csprev = cs;
    pagesaved = 1;
    return;
}
void page_load()
{
    if (pagesaved == 1)
    {
        page = pagebk;
        cs = csprev;
        pagesaved = 0;
    }
    return;
}
void fileadd(const std::string& prm_692, int prm_693)
{
    elona_vector1<std::string> q_at_m98;
    int p_at_m98 = 0;
    std::string a_at_m98;
    if (prm_693 == 0)
    {
        q_at_m98(0) = u8"*"s;
        q_at_m98(1) = u8"#"s;
    }
    else
    {
        q_at_m98(0) = u8"#"s;
        q_at_m98(1) = u8"*"s;
    }
    notesel(filemod);
    p_at_m98 = instr(filemod, 0, prm_692);
    if (p_at_m98 != -1)
    {
        if (strmid(filemod, p_at_m98 - 1, 1) == q_at_m98(1))
        {
            cnvstow(a_at_m98, q_at_m98);
            poke(filemod, p_at_m98 - 1, a_at_m98);
        }
        noteunsel();
        return;
    }
    if (prm_693 != 0)
    {
        noteadd(q_at_m98 + prm_692);
        noteunsel();
        return;
    }
    noteadd(q_at_m98 + prm_692);
    noteunsel();
    return;
}
void arrayfile()
{
    notesel(tmp);
    tmp = "";
    if (fread == 1)
    {
        exist(file);
        if (strsize != -1)
        {
            noteload(file);
        }
    }
    if (fmode == u8"qname"s)
    {
        fidx = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
            {
                if (fread == 0)
                {
                    noteadd(qname(cnt), fidx);
                }
                if (fread == 1)
                {
                    noteget(qname(cnt), fidx);
                }
                ++fidx;
            }
        }
    }
    if (fmode == u8"gdatan"s)
    {
        fidx = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
            {
                if (fread == 0)
                {
                    noteadd(gdatan(cnt), fidx);
                }
                if (fread == 1)
                {
                    noteget(gdatan(cnt), fidx);
                }
                ++fidx;
            }
        }
    }
    if (fmode == u8"mdatan"s)
    {
        fidx = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
            {
                if (fread == 0)
                {
                    noteadd(mdatan(cnt), fidx);
                }
                if (fread == 1)
                {
                    noteget(mdatan(cnt), fidx);
                }
                ++fidx;
            }
        }
    }
    if (fmode == u8"cdatan1"s)
    {
        fidx = 0;
        cdatanfix = 0;
        if (noteinfo(0) < 300)
        {
            cdatanfix = 1;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                    {
                        if (fread == 0)
                        {
                            noteadd(cdatan(cnt, cnt2), fidx);
                        }
                        if (fread == 1)
                        {
                            if (cdatanfix)
                            {
                                if (cnt > 4)
                                {
                                    break;
                                }
                            }
                            noteget(cdatan(cnt, cnt2), fidx);
                        }
                        ++fidx;
                    }
                }
            }
        }
    }
    if (fmode == u8"cdatan2"s)
    {
        fidx = 0;
        cdatanfix = 0;
        if (noteinfo(0) < 1000)
        {
            cdatanfix = 1;
        }
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                    {
                        if (fread == 0)
                        {
                            noteadd(cdatan(cnt, cnt2), fidx);
                        }
                        if (fread == 1)
                        {
                            if (cdatanfix)
                            {
                                if (cnt > 4)
                                {
                                    break;
                                }
                            }
                            noteget(cdatan(cnt, cnt2), fidx);
                        }
                        ++fidx;
                    }
                }
            }
        }
    }
    if (fmode == u8"cdatan3"s)
    {
        fidx = 0;
        cdatanfix = 0;
        if (noteinfo(0) < 6)
        {
            cdatanfix = 1;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                if (fread == 0)
                {
                    noteadd(cdatan(cnt, tg), fidx);
                }
                if (fread == 1)
                {
                    if (cdatanfix)
                    {
                        if (cnt > 4)
                        {
                            break;
                        }
                    }
                    noteget(cdatan(cnt, tg), fidx);
                }
                ++fidx;
            }
        }
    }
    if (fmode == u8"invn1"s)
    {
        fidx = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1320); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                    {
                        if (fread == 0)
                        {
                            noteadd(invn(cnt, cnt2), fidx);
                        }
                        if (fread == 1)
                        {
                            noteget(invn(cnt, cnt2), fidx);
                        }
                        ++fidx;
                    }
                }
            }
        }
    }
    if (fmode == u8"invn2"s)
    {
        fidx = 0;
        {
            int cnt = 1320;
            for (int cnt_end = cnt + (4160); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                    {
                        if (fread == 0)
                        {
                            noteadd(invn(cnt, cnt2), fidx);
                        }
                        if (fread == 1)
                        {
                            noteget(invn(cnt, cnt2), fidx);
                        }
                        ++fidx;
                    }
                }
            }
        }
    }
    if (fread == 0)
    {
        notesave(file);
        if (elona_export == 0)
        {
            fileadd(file);
        }
    }
    elona_export = 0;
    return;
}
std::string del_str(const std::string& prm_694, const std::string& prm_695)
{
    std::string s_at_m99;
    s_at_m99 = prm_694;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            if (instr(s_at_m99, 0, prm_695) == -1)
            {
                break;
            }
            s_at_m99 = strmid(s_at_m99, 0, instr(s_at_m99, 0, prm_695))
                + strmid(s_at_m99,
                         (instr(s_at_m99, 0, prm_695) + strlen(prm_695)),
                         100);
        }
    }
    return s_at_m99;
}
std::string cnv_str(
    std::string& prm_696,
    const std::string& prm_697,
    const std::string& prm_698)
{
    std::string s3_at_m100;
    int p_at_m100 = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            s3_at_m100 = getpath(prm_696, 16);
            p_at_m100 = instr(s3_at_m100, 0, prm_697);
            if (p_at_m100 == -1)
            {
                break;
            }
            prm_696 = strmid(prm_696, 0, p_at_m100) + lang(prm_698, prm_698)
                + strmid(prm_696, (p_at_m100 + strlen(prm_697)), 300);
        }
    }
    return prm_696;
}
void fix_wish(std::string& prm_699)
{
    cnv_str(prm_699, u8"の剥製"s, ""s);
    cnv_str(prm_699, u8"剥製"s, ""s);
    cnv_str(prm_699, u8"のはく製"s, ""s);
    cnv_str(prm_699, u8"はく製"s, ""s);
    cnv_str(prm_699, u8"のカード"s, ""s);
    cnv_str(prm_699, u8"カード"s, ""s);
    cnv_str(prm_699, u8"card "s, ""s);
    cnv_str(prm_699, u8"figure "s, ""s);
    cnv_str(prm_699, u8"card"s, ""s);
    cnv_str(prm_699, u8"figure"s, ""s);
    return;
}
void fix_input_chat(std::string& prm_700)
{
    cnv_str(prm_700, u8" "s, u8"+"s);
    cnv_str(prm_700, u8"%"s, u8"per"s);
    cnv_str(prm_700, u8"&"s, u8"and"s);
    cnv_str(prm_700, u8"<"s, ""s);
    cnv_str(prm_700, u8">"s, ""s);
    return;
}
void fix_input_chat2(std::string& prm_701)
{
    cnv_str(prm_701, u8"fucking"s, u8"nyoro~n"s);
    cnv_str(prm_701, u8"fuck"s, u8"nyou talk funny"s);
    return;
}
void cnv_filestr(std::string& prm_702)
{
    cnv_str(prm_702, u8"\""s, u8"_"s);
    cnv_str(prm_702, u8"\\"s, u8"_"s);
    cnv_str(prm_702, u8"<"s, u8"_"s);
    cnv_str(prm_702, u8">"s, u8"_"s);
    cnv_str(prm_702, u8"/"s, u8"_"s);
    cnv_str(prm_702, u8"?"s, u8"_"s);
    cnv_str(prm_702, u8"|"s, u8"_"s);
    cnv_str(prm_702, u8"*"s, u8"_"s);
    return;
}
void imeset(int prm_709)
{
    himc_at_ime_control = ImmGetContext(hwnd);
    ImmSetOpenStatus(himc_at_ime_control, prm_709);
    ImmReleaseContext(hwnd, himc_at_ime_control);
    return;
}
int imeget()
{
    int imesw_at_ime_control = 0;
    himc_at_ime_control = ImmGetContext(hwnd);
    imesw_at_ime_control = ImmGetOpenStatus(himc_at_ime_control);
    ImmReleaseContext(hwnd, himc_at_ime_control);
    stat = imesw_at_ime_control;
    return stat;
}
void gmes(const std::string& prm_715)
{
    std::string m_at_m102;
    std::string msg_at_m102;
    int i_at_m102 = 0;
    int xorg_at_m102 = 0;
    int size_at_m102 = 0;
    elona_vector1<int> col_at_m102;
    int lim_at_m102 = 0;
    int p_at_m102 = 0;
    int brwait_at_m102 = 0;
    std::string s_at_m102;
    m_at_m102 = "";
    msg_at_m102 = ""s + prm_715 + u8"$end"s;
    i_at_m102 = 0;
    xorg_at_m102 = gmesx;
    size_at_m102 = 14;
    col_at_m102(0) = gmescol;
    col_at_m102(1) = gmescol(1);
    col_at_m102(2) = gmescol(2);
    col_at_m102(3) = 180;
    col_at_m102(4) = 160;
    col_at_m102(5) = 140;
    lim_at_m102 = gmesx + gmesw;
    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 0);
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            p_at_m102 = peek(msg_at_m102, i_at_m102);
            brwait_at_m102 = 0;
            if ((p_at_m102 >= 129 && p_at_m102 <= 159 || p_at_m102 >= 224)
                && p_at_m102 <= 252)
            {
                p_at_m102 = 2;
            }
            else
            {
                p_at_m102 = 1;
            }
            m_at_m102 = strmid(msg_at_m102, i_at_m102, p_at_m102);
            i_at_m102 += p_at_m102;
            if (m_at_m102 == u8"$"s)
            {
                s_at_m102 = strmid(msg_at_m102, i_at_m102, 3);
                p_at_m102 += 3;
                if (s_at_m102 == u8"end"s)
                {
                    break;
                }
                continue;
            }
            else
            {
                if (m_at_m102 != u8"。"s && m_at_m102 != u8"、"s
                    && m_at_m102 != u8"」"s && m_at_m102 != u8"』"s
                    && m_at_m102 != u8"！"s && m_at_m102 != u8"？"s
                    && m_at_m102 != u8"…"s)
                {
                }
                else
                {
                    brwait_at_m102 = 1;
                }
            }
            if (m_at_m102 == u8"<"s)
            {
                s_at_m102 = strmid(
                    msg_at_m102,
                    i_at_m102,
                    instr(msg_at_m102, i_at_m102, u8">"s));
                i_at_m102 += instr(msg_at_m102, i_at_m102, u8">"s) + 1;
                if (s_at_m102 == u8"emp1"s)
                {
                    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 4);
                    col_at_m102(0) = 50;
                    col_at_m102(1) = 50;
                    col_at_m102(2) = 255;
                }
                if (s_at_m102 == u8"emp2"s)
                {
                    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 1);
                    col_at_m102(0) = 40;
                    col_at_m102(1) = 130;
                    col_at_m102(2) = 40;
                }
                if (s_at_m102 == u8"title1"s)
                {
                    size_at_m102 = 12;
                    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 1);
                    col_at_m102(0) = 100;
                    col_at_m102(1) = 50;
                    col_at_m102(2) = 50;
                }
                if (s_at_m102 == u8"def"s)
                {
                    size_at_m102 = 14;
                    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 0);
                    col_at_m102(0) = gmescol;
                    col_at_m102(1) = gmescol(1);
                    col_at_m102(2) = gmescol(2);
                }
                if (s_at_m102 == u8"p"s)
                {
                    gmesy += 24;
                    gmesx = xorg_at_m102;
                }
                if (s_at_m102 == u8"br"s)
                {
                    gmesy += 16;
                    gmesx = xorg_at_m102;
                }
                if (s_at_m102 == u8"b"s)
                {
                    font(lang(cfg_font1, cfg_font2), size_at_m102 - en * 2, 1);
                }
                if (s_at_m102 == u8"green"s)
                {
                    col_at_m102(0) = 20;
                    col_at_m102(1) = 120;
                    col_at_m102(2) = 20;
                }
                if (s_at_m102 == u8"red"s)
                {
                    col_at_m102(0) = 120;
                    col_at_m102(1) = 20;
                    col_at_m102(2) = 20;
                }
                if (s_at_m102 == u8"col"s)
                {
                    col_at_m102(0) = gmescol;
                    col_at_m102(1) = gmescol(1);
                    col_at_m102(2) = gmescol(2);
                    col_at_m102(3) = 180;
                    col_at_m102(4) = 160;
                    col_at_m102(5) = 140;
                }
                continue;
            }
            if (m_at_m102 == u8"^"s)
            {
                m_at_m102 = strmid(msg_at_m102, i_at_m102, 1);
                ++i_at_m102;
            }
            if (brwait_at_m102 == 0)
            {
                if (gmesx >= lim_at_m102)
                {
                    gmesx = xorg_at_m102;
                    gmesy += size_at_m102 + 2;
                }
            }
            if (gmestype == 1)
            {
                color(col_at_m102(3), col_at_m102(4), col_at_m102(5));
                pos(gmesx + 1, gmesy + 1);
                mes(m_at_m102);
            }
            color(col_at_m102(0), col_at_m102(1), col_at_m102(2));
            pos(gmesx, gmesy);
            mes(m_at_m102);
            gmesx += size_at_m102 / 2 * p_at_m102;
        }
    }
    gmesx = xorg_at_m102;
    gmesy += size_at_m102 + 4;
    return;
}
void boxl(int prm_716, int prm_717, int prm_718, int prm_719)
{
    pos(prm_716, prm_719);
    line(prm_716, prm_717);
    line(prm_718, prm_717);
    line(prm_718, prm_719);
    line(prm_716, prm_719);
    return;
}
std::string fixtxt(const std::string& prm_724, int prm_725)
{
    std::string m_at_m104;
    m_at_m104 = ""s + prm_724;
    if (strlen_u(prm_724) < prm_725)
    {
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                if (strlen_u(m_at_m104) >= prm_725)
                {
                    break;
                }
                m_at_m104 += u8" "s;
            }
        }
    }
    else
    {
        m_at_m104 = ""s + strmid(prm_724, 0, prm_725);
    }
    return ""s + m_at_m104;
}
void windowanime(
    int prm_726,
    int prm_727,
    int prm_728,
    int prm_729,
    int prm_730,
    int prm_731)
{
    int cenx_at_m105 = 0;
    int ceny_at_m105 = 0;
    if (nowindowanime)
    {
        nowindowanime = 0;
        return;
    }
    if (cfg_windowanime == 0)
    {
        return;
    }
    gsel(prm_731);
    gmode(0);
    pos(0, 0);
    gcopy(0, prm_726, prm_727, prm_728, prm_729);
    gsel(0);
    gmode(0);
    x2_at_m105 = prm_728 / 2;
    y2_at_m105 = prm_729 / 2;
    cenx_at_m105 = prm_726 + x2_at_m105;
    ceny_at_m105 = prm_727 + y2_at_m105;
    redraw(0);
    {
        int cnt = 1;
        for (int cnt_end = cnt + (prm_730 - 1); cnt < cnt_end; ++cnt)
        {
            color(30, 30, 30);
            boxl(
                cenx_at_m105 - x2_at_m105 / prm_730 * cnt,
                ceny_at_m105 - y2_at_m105 / prm_730 * cnt,
                cenx_at_m105 + x2_at_m105 / prm_730 * cnt,
                ceny_at_m105 + y2_at_m105 / prm_730 * cnt);
            color(240, 240, 240);
            boxl(
                cenx_at_m105 - x2_at_m105 / prm_730 * cnt - 1,
                ceny_at_m105 - y2_at_m105 / prm_730 * cnt - 1,
                cenx_at_m105 + x2_at_m105 / prm_730 * cnt - 1,
                ceny_at_m105 + y2_at_m105 / prm_730 * cnt - 1);
            redraw(0);
            redraw(1);
            if (cnt != prm_730 - 1)
            {
                await(15);
            }
            redraw(0);
            pos(prm_726, prm_727);
            gcopy(prm_731, 0, 0, prm_728, prm_729);
        }
    }
    gmode(2);
    return;
}
void windowanimecorner(
    int prm_732,
    int prm_733,
    int prm_734,
    int prm_735,
    int prm_736,
    int prm_737)
{
    if (cfg_windowanime == 0)
    {
        return;
    }
    gsel(prm_737);
    gmode(0);
    pos(0, 0);
    gcopy(0, prm_732, prm_733, prm_734, prm_735);
    gsel(0);
    gmode(0);
    x2_at_m105 = prm_734 - prm_732;
    y2_at_m105 = prm_735 - prm_733;
    redraw(0);
    {
        int cnt = 1;
        for (int cnt_end = cnt + (prm_736); cnt < cnt_end; ++cnt)
        {
            color(30, 30, 30);
            boxl(
                prm_732 + prm_734,
                prm_733 + prm_735,
                prm_732 + prm_734 - (prm_734 - prm_732) / prm_736 * cnt,
                prm_733 + prm_735 - (prm_735 - prm_733) / prm_736 * cnt);
            color(240, 240, 240);
            boxl(
                prm_732 + prm_734 - 1,
                prm_733 + prm_735 - 1,
                prm_732 + prm_734 - (prm_734 - prm_732) / prm_736 * cnt - 1,
                prm_733 + prm_735 - (prm_735 - prm_733) / prm_736 * cnt - 1);
            redraw(1);
            if (cnt != prm_736)
            {
                await(15);
            }
            redraw(0);
            pos(prm_732, prm_733);
            gcopy(prm_737, 0, 0, prm_734, prm_735);
        }
    }
    gmode(2);
    return;
}
void showtitle(const std::string&, const std::string& prm_739, int prm_740, int)
{
    int x_at_m106 = 0;
    int y_at_m106 = 0;
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    if (mode != 1)
    {
        x_at_m106 = prm_740 - 10;
        y_at_m106 = 0;
    }
    else
    {
        x_at_m106 = 240;
        y_at_m106 = windowh - 16;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + ((windoww - x_at_m106 - 8) / 192 + 1);
             cnt < cnt_end;
             ++cnt)
        {
            pos(x_at_m106 + 8 + cnt * 192, y_at_m106);
            gcopy(3, 496, 581, 192, 18);
        }
    }
    gmode(2);
    pos(x_at_m106, y_at_m106 + (mode != 1));
    gcopy(3, 96, 360, 24, 16);
    color(0, 0, 0);
    pos(x_at_m106 + 32, y_at_m106 + 1 + jp);
    bmes(prm_739, 250, 250, 250);
    return;
}
void drawmenu(int prm_742)
{
    int y_at_m107 = 0;
    elona_vector1<int> x_at_m107;
    y_at_m107 = 34;
    if (prm_742 == 0)
    {
        x_at_m107(0) = windoww - 260;
        x_at_m107(1) = 240;
        p(0) = 9;
        p(1) = 10;
        p(2) = 11;
        p(3) = 12;
        s(0) = lang(u8"情報"s, u8"Chara"s);
        s(1) = lang(u8"装備"s, u8"Wear"s);
        s(2) = lang(u8"特徴"s, u8"Feat"s);
        s(3) = lang(u8"ﾏﾃﾘｱﾙ"s, u8"Material"s);
        s(4) = "";
    }
    if (prm_742 == 1)
    {
        x_at_m107(0) = windoww - 160;
        x_at_m107(1) = 140;
        p(0) = 13;
        p(1) = 14;
        s(0) = lang(u8"魔法"s, u8"Spell"s);
        s(1) = lang(u8"技能"s, u8"Skill"s);
        s(2) = "";
    }
    if (prm_742 == 2)
    {
        x_at_m107(0) = windoww - 210;
        x_at_m107(1) = 190;
        p(0) = 15;
        p(1) = 3;
        p(2) = 16;
        s(0) = lang(u8"ログ"s, u8"Log"s);
        s(1) = lang(u8"日誌"s, u8"Journal"s);
        s(2) = lang(u8"チャット"s, u8"Chat"s);
        s(3) = "";
    }
    if (prm_742 == 3)
    {
        x_at_m107(0) = windoww - 210;
        x_at_m107(1) = 190;
        p(0) = 19;
        p(1) = 20;
        p(2) = 21;
        s(0) = lang(u8"チャート"s, u8"Chart"s);
        s(1) = lang(u8"街情報"s, u8"City"s);
        s(2) = lang(u8"法律"s, u8"Law"s);
        s(3) = "";
    }
    if (menucycle == 0)
    {
        return;
    }
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    window2(x_at_m107, y_at_m107, x_at_m107(1), 22, 5, 5);
    pos(x_at_m107 - 28, y_at_m107 - 8);
    gcopy(3, 64, 288, 50, 32);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            if (s(cnt) == ""s)
            {
                break;
            }
            pos(x_at_m107 + cnt * 50 + 20, y_at_m107 - 24);
            gcopy(3, 288 + p(cnt) * 48, 48, 48, 48);
            if (curmenu == cnt)
            {
                gmode(5 - 1, -1, 70);
                pos(x_at_m107 + cnt * 50 + 20, y_at_m107 - 24);
                gcopy(3, 288 + p(cnt) * 48, 48, 48, 48);
                gmode(2);
            }
            pos(x_at_m107 + cnt * 50 + 46 - strlen_u(s(cnt)) * 3,
                y_at_m107 + 7);
            color(0, 0, 0);
            if (curmenu == cnt)
            {
                bmes(s(cnt), 255, 255, 255);
            }
            else
            {
                bmes(s(cnt), 165, 165, 165);
            }
        }
    }
    color(0, 0, 0);
    pos(x_at_m107 + x_at_m107(1) - 150, y_at_m107 + 28);
    bmes(
        ""s + key_prev + u8","s + key_next + u8",Tab "s
            + lang(u8"[メニュー切替]"s, u8"[Change]"s),
        255,
        255,
        255);
    return;
}
void fillbg(int prm_743, int prm_744, int prm_745, int prm_746, int prm_747)
{
    int cnt2_at_m108 = 0;
    gmode(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (inf_ver / prm_747 + 1); cnt < cnt_end; ++cnt)
        {
            cnt2_at_m108 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (windoww / prm_746 + 1); cnt < cnt_end;
                     ++cnt)
                {
                    pos(windoww - (cnt + 1) * prm_746,
                        inf_ver - (cnt2_at_m108 + 1) * prm_747);
                    gcopy(prm_743, prm_744, prm_745, prm_746, prm_747);
                }
            }
        }
    }
    gmode(2);
    return;
}
int direction(int prm_748, int prm_749, int prm_750, int prm_751)
{
    if (abs(prm_748 - prm_750) > abs(prm_749 - prm_751))
    {
        if (prm_748 > prm_750)
        {
            stat = 1;
            return stat;
        }
        else
        {
            stat = 2;
            return stat;
        }
    }
    else
    {
        if (prm_749 > prm_751)
        {
            stat = 3;
            return stat;
        }
        else
        {
            stat = 0;
            return stat;
        }
    }
}
void label_0478()
{
    DIM2(matval, 4);
    DIM3(matref, 5, 400);
    DIM3(matspot, 5, 400);
    SDIM3(matname, 40, 400);
    SDIM3(matdesc, 80, 400);
    matref(0, 0) = 0;
    matref(1, 0) = 1;
    matref(2, 0) = 240;
    matname(0) = lang(u8"クズ"s, u8"Garbage"s);
    matdesc(0) = lang(u8"何の価値もないクズ"s, u8"Just garbage."s);
    p = 0;
    matspot(0, p) = 18;
    matref(0, 1) = 1;
    matref(1, 1) = 80;
    matref(2, 1) = 434;
    matname(1) = lang(u8"カジノチップ"s, u8"Casino chip"s);
    matdesc(1) = lang(u8"カジノで使うチップ"s, u8"Chips used in casinos."s);
    p = 1;
    matspot(0, p) = 18;
    matref(0, 40) = 1;
    matref(1, 40) = 200;
    matref(2, 40) = 437;
    matname(40) = lang(u8"100Yen硬貨"s, u8"100 Yen coin"s);
    matdesc(40) = lang(u8"異国のお金"s, u8"Foreign money."s);
    p = 40;
    matspot(0, p) = 18;
    matref(0, 41) = 1;
    matref(1, 41) = 1000;
    matref(2, 41) = 437;
    matname(41) = lang(u8"500Yen硬貨"s, u8"500 Yen coin"s);
    matdesc(41) = lang(u8"異国のお金"s, u8"Foreign money."s);
    p = 41;
    matspot(0, p) = 18;
    matref(0, 43) = 1;
    matref(1, 43) = 20;
    matref(2, 43) = 470;
    matname(43) = lang(u8"紙"s, u8"Paper"s);
    matdesc(43) = lang(u8"白紙"s, u8"Blank paper."s);
    p = 43;
    matspot(0, p) = 18;
    matref(0, 2) = 1;
    matref(1, 2) = 10;
    matref(2, 2) = 239;
    matname(2) = lang(u8"炭"s, u8"Charcoal"s);
    matdesc(2) = lang(u8"良質な炭"s, u8"This is good quality charcoal."s);
    p = 2;
    matspot(0, p) = 18;
    matref(0, 3) = 1;
    matref(1, 3) = 10;
    matref(2, 3) = 239;
    matname(3) = lang(u8"流木"s, u8"Driftwood"s);
    matdesc(3) = lang(u8"あまり質の良くない木材"s, u8"Common driftwood."s);
    p = 3;
    matspot(0, p) = 18;
    matref(0, 48) = 1;
    matref(1, 48) = 10;
    matref(2, 48) = 209;
    matname(48) = lang(u8"石ころ"s, u8"Pebble"s);
    matdesc(48) =
        lang(u8"どこにでも落ちている"s, u8"These are around everywhere."s);
    p = 48;
    matspot(0, p) = 18;
    matref(0, 6) = 1;
    matref(1, 6) = 70;
    matref(2, 6) = 239;
    matname(6) = lang(u8"杖"s, u8"Stick"s);
    matdesc(6) = lang(u8"杖"s, u8"A specially shaped piece of wood."s);
    p = 6;
    matspot(0, p) = 18;
    matref(0, 45) = 3;
    matref(1, 45) = 20;
    matref(2, 45) = 155;
    matname(45) = lang(u8"布きれ"s, u8"Cloth"s);
    matdesc(45) = lang(u8"ただの布きれ"s, u8"A piece of cloth."s);
    p = 45;
    matspot(0, p) = 18;
    matref(0, 38) = 4;
    matref(1, 38) = 30;
    matref(2, 38) = 8;
    matname(38) = lang(u8"わめく狂人"s, u8"Yelling madman"s);
    matdesc(38) = lang(u8"黙らない"s, u8"It never shuts up."s);
    p = 38;
    matspot(0, p) = 18;
    matref(0, 30) = 10;
    matref(1, 30) = 150;
    matref(2, 30) = 7;
    matname(30) = lang(u8"マジックマス"s, u8"Magic mass"s);
    matdesc(30) = lang(u8"謎の魔力の塊"s, u8"Unknown magical mass."s);
    p = 30;
    matspot(0, p) = 18;
    matref(0, 23) = 12;
    matref(1, 23) = 20;
    matref(2, 23) = 7;
    matname(23) = lang(u8"電気"s, u8"Electricity"s);
    matdesc(23) = lang(u8"放電している"s, u8"It is discharging."s);
    p = 23;
    matspot(0, p) = 18;
    matref(0, 44) = 25;
    matref(1, 44) = 150;
    matref(2, 44) = 7;
    matname(44) = lang(u8"生成機械"s, u8"Generator"s);
    matdesc(44) =
        lang(u8"何かを生み出す機械"s, u8"This machine generates something."s);
    p = 44;
    matspot(0, p) = 18;
    matref(0, 50) = 1;
    matref(1, 50) = 30;
    matref(2, 50) = 209;
    matname(50) = lang(u8"魔力の結晶"s, u8"Magic fragment"s);
    matdesc(50) = lang(u8"魔力が込められている"s, u8"This is magical."s);
    p = 50;
    matspot(0, p) = 9;
    matref(0, 46) = 2;
    matref(1, 46) = 20;
    matref(2, 46) = 239;
    matname(46) = lang(u8"枝"s, u8"Branch"s);
    matdesc(46) = lang(u8"枝"s, u8"Broken off of a tree."s);
    p = 46;
    matspot(0, p) = 10;
    matref(0, 33) = 4;
    matref(1, 33) = 20;
    matref(2, 33) = 155;
    matname(33) = lang(u8"革"s, u8"Leather"s);
    matdesc(33) = lang(u8"なめした皮"s, u8"A tanned hide."s);
    p = 33;
    matspot(0, p) = 10;
    matref(0, 53) = 6;
    matref(1, 53) = 20;
    matref(2, 53) = 202;
    matname(53) = lang(u8"ツル"s, u8"Vein"s);
    matdesc(53) = lang(u8"ツル"s, u8"Vein."s);
    p = 53;
    matspot(0, p) = 10;
    matref(0, 47) = 10;
    matref(1, 47) = 20;
    matref(2, 47) = 239;
    matname(47) = lang(u8"頑丈な枝"s, u8"Thick wood"s);
    matdesc(47) =
        lang(u8"なかなか折れない"s, u8"This doesn't break down easily."s);
    p = 47;
    matspot(0, p) = 10;
    matref(0, 37) = 12;
    matref(1, 37) = 60;
    matref(2, 37) = 471;
    matname(37) = lang(u8"曲がった杖"s, u8"Curved stick"s);
    matdesc(37) = lang(u8"杖の役割を果たさない"s, u8"Almost unusable."s);
    p = 37;
    matspot(0, p) = 10;
    matref(0, 54) = 1;
    matref(1, 54) = 50;
    matref(2, 54) = 354;
    matname(54) = lang(u8"接着剤"s, u8"Adhesive"s);
    matdesc(54) = lang(u8"ネトネトしている"s, u8"It's sticky."s);
    p = 54;
    matspot(0, p) = 12;
    matref(0, 49) = 5;
    matref(1, 49) = 50;
    matref(2, 49) = 150;
    matname(49) = lang(u8"記憶の欠片"s, u8"Memory fragment"s);
    matdesc(49) =
        lang(u8"思い出が残っている"s, u8" Reminds you of something."s);
    p = 49;
    matspot(0, p) = 12;
    matref(0, 35) = 8;
    matref(1, 35) = 40;
    matref(2, 35) = 470;
    matname(35) = lang(u8"魔法の紙"s, u8"Magic paper"s);
    matdesc(35) = lang(u8"魔力を秘めた紙"s, u8"Magical paper."s);
    p = 35;
    matspot(0, p) = 12;
    matref(0, 36) = 8;
    matref(1, 36) = 40;
    matref(2, 36) = 354;
    matname(36) = lang(u8"魔法のインク"s, u8"Magic ink"s);
    matdesc(36) = lang(u8"魔力を秘めたインク"s, u8"Wizards love to use it."s);
    p = 36;
    matspot(0, p) = 12;
    matref(0, 12) = 1;
    matref(1, 12) = 10;
    matref(2, 12) = 354;
    matname(12) = lang(u8"海水"s, u8"Seawater"s);
    matdesc(12) = lang(u8"しょっぱい水"s, u8"Very salty."s);
    p = 12;
    matspot(0, p) = 13;
    matref(0, 5) = 1;
    matref(1, 5) = 10;
    matref(2, 5) = 354;
    matname(5) = lang(u8"水滴"s, u8"Waterdrop"s);
    matdesc(5) = lang(u8"水滴"s, u8"A drop of water."s);
    p = 5;
    matspot(0, p) = 13;
    matref(0, 10) = 4;
    matref(1, 10) = 50;
    matref(2, 10) = 354;
    matname(10) = lang(u8"天使の涙"s, u8"Angel's tear"s);
    matdesc(10) = lang(u8"不思議な輝きを放つ涙"s, u8"Hard to gather."s);
    p = 10;
    matspot(0, p) = 13;
    matref(0, 25) = 4;
    matref(1, 25) = 20;
    matref(2, 25) = 354;
    matname(25) = lang(u8"お湯"s, u8"Hot water"s);
    matdesc(25) =
        lang(u8"なぜか冷めない"s, u8"Somehow it's not cooling down."s);
    p = 25;
    matspot(0, p) = 13;
    matref(0, 11) = 8;
    matref(1, 11) = 30;
    matref(2, 11) = 354;
    matname(11) = lang(u8"魔女の涙"s, u8"Witch's tear"s);
    matdesc(11) = lang(u8"決して乾かない涙"s, u8"Never dries up."s);
    p = 11;
    matspot(0, p) = 13;
    matref(0, 20) = 12;
    matref(1, 20) = 15;
    matref(2, 20) = 7;
    matname(20) = lang(u8"雪"s, u8"Snow"s);
    matdesc(20) = lang(u8"なぜか溶けない"s, u8"It won't melt somehow."s);
    p = 20;
    matspot(0, p) = 13;
    matref(0, 7) = 1;
    matref(1, 7) = 40;
    matref(2, 7) = 209;
    matname(7) = lang(u8"ミスリルの欠片"s, u8"Mithril fragment"s);
    matdesc(7) = lang(u8"ミスリルを含んだ鉱石の欠片"s, u8"Contains mithril."s);
    p = 7;
    matspot(0, p) = 14;
    matref(0, 9) = 1;
    matref(1, 9) = 10;
    matref(2, 9) = 209;
    matname(9) = lang(u8"鉄の欠片"s, u8"Iron fragment"s);
    matdesc(9) = lang(u8"鉄分を含んだ鉱石の欠片"s, u8"Contains iron."s);
    p = 9;
    matspot(0, p) = 14;
    matref(0, 26) = 5;
    matref(1, 26) = 10;
    matref(2, 26) = 209;
    matname(26) = lang(u8"火炎石"s, u8"Fire stone"s);
    matdesc(26) = lang(u8"熱を帯びた石"s, u8"This is hot."s);
    p = 26;
    matspot(0, p) = 14;
    matref(0, 27) = 5;
    matref(1, 27) = 10;
    matref(2, 27) = 209;
    matname(27) = lang(u8"冷凍石"s, u8"Ice stone"s);
    matdesc(27) = lang(u8"冷たい石"s, u8"This is cool."s);
    p = 27;
    matspot(0, p) = 14;
    matref(0, 28) = 5;
    matref(1, 28) = 10;
    matref(2, 28) = 209;
    matname(28) = lang(u8"帯電石"s, u8"Discharging stone"s);
    matdesc(28) = lang(u8"電気を帯びた石"s, u8"It's electrified."s);
    p = 28;
    matspot(0, p) = 14;
    matref(0, 52) = 8;
    matref(1, 52) = 50;
    matref(2, 52) = 209;
    matname(52) = lang(u8"上等な石"s, u8"Fine stone"s);
    matdesc(52) = lang(u8"状態の良い石"s, u8"A good quality stone."s);
    p = 52;
    matspot(0, p) = 14;
    matref(0, 8) = 10;
    matref(1, 8) = 40;
    matref(2, 8) = 209;
    matname(8) = lang(u8"エーテルの欠片"s, u8"Ether fragment"s);
    matdesc(8) = lang(u8"エーテルを含んだ鉱石の欠片"s, u8"Contains ether."s);
    p = 8;
    matspot(0, p) = 14;
    matref(0, 22) = 20;
    matref(1, 22) = 100;
    matref(2, 22) = 209;
    matname(22) = lang(u8"元素の欠片"s, u8"Element fragment"s);
    matdesc(22) = lang(u8"元素の力を宿した石"s, u8"Elemental."s);
    p = 22;
    matspot(0, p) = 14;
    matref(0, 51) = 40;
    matref(1, 51) = 200;
    matref(2, 51) = 209;
    matname(51) = lang(u8"混沌の石"s, u8"Chaos stone"s);
    matdesc(51) = lang(u8"混沌の力が封じられた石"s, u8"Chaotic."s);
    p = 51;
    matspot(0, p) = 14;
    matref(0, 13) = 1;
    matref(1, 13) = 10;
    matref(2, 13) = 170;
    matname(13) = lang(u8"唸る草"s, u8"Howling weed"s);
    matdesc(13) = lang(u8"変な音を出す草"s, u8"It's making a whining sound."s);
    p = 13;
    matspot(0, p) = 15;
    matref(0, 14) = 1;
    matref(1, 14) = 20;
    matref(2, 14) = 170;
    matname(14) = lang(u8"赤い草"s, u8"Red weed"s);
    matdesc(14) = lang(u8"ほんのり赤い草"s, u8"A faintly reddish weed."s);
    p = 14;
    matspot(0, p) = 15;
    matref(0, 15) = 1;
    matref(1, 15) = 20;
    matref(2, 15) = 170;
    matname(15) = lang(u8"青い草"s, u8"Blue weed"s);
    matdesc(15) = lang(u8"ほんのり青い草"s, u8"A faintly blueish weed."s);
    p = 15;
    matspot(0, p) = 15;
    matref(0, 16) = 1;
    matref(1, 16) = 10;
    matref(2, 16) = 170;
    matname(16) = lang(u8"呪いの草"s, u8"Curse weed"s);
    matdesc(16) = lang(u8"呪われた草"s, u8"A cursed weed."s);
    p = 16;
    matspot(0, p) = 15;
    matref(0, 42) = 3;
    matref(1, 42) = 20;
    matref(2, 42) = 170;
    matname(42) = lang(u8"薬草"s, u8"Medicinal weed"s);
    matdesc(42) = lang(u8"少し傷を癒す"s, u8"Slightly cures wounds."s);
    p = 42;
    matspot(0, p) = 15;
    matref(0, 29) = 7;
    matref(1, 29) = 50;
    matref(2, 29) = 170;
    matname(29) = lang(u8"浮き草"s, u8"Floating weed"s);
    matdesc(29) = lang(u8"とても軽い草"s, u8"Very light."s);
    p = 29;
    matspot(0, p) = 15;
    matref(0, 17) = 12;
    matref(1, 17) = 20;
    matref(2, 17) = 170;
    matname(17) = lang(u8"聖なる草"s, u8"Holy weed"s);
    matdesc(17) = lang(u8"祝福された草"s, u8"It's blessed."s);
    p = 17;
    matspot(0, p) = 15;
    matref(0, 24) = 15;
    matref(1, 24) = 40;
    matref(2, 24) = 8;
    matname(24) = lang(u8"黒い霧"s, u8"Black mist"s);
    matdesc(24) = lang(u8"真っ黒な霧"s, u8"It's as black as coal."s);
    p = 24;
    matspot(0, p) = 15;
    matref(0, 34) = 25;
    matref(1, 34) = 200;
    matref(2, 34) = 354;
    matname(34) = lang(u8"世界樹の樹液"s, u8"Sap of Yaggdrasil"s);
    matdesc(34) = lang(u8"どんな傷も癒す樹液"s, u8"It's pretty rare."s);
    p = 34;
    matspot(0, p) = 15;
    matspot(1, p) = 10;
    matref(0, 4) = 1;
    matref(1, 4) = 10;
    matref(2, 4) = 436;
    matname(4) = lang(u8"鳥の羽"s, u8"Bird's feather"s);
    matdesc(4) = lang(u8"普通の鳥の羽"s, u8"A piece of Feather."s);
    p = 4;
    matspot(0, p) = 16;
    matref(0, 18) = 1;
    matref(1, 18) = 80;
    matref(2, 18) = 301;
    matname(18) = lang(u8"ウサギの尻尾"s, u8"Rabbit's tail"s);
    matdesc(18) = lang(u8"幸運を呼ぶ尻尾"s, u8"Scut."s);
    p = 18;
    matspot(0, p) = 16;
    matref(0, 31) = 1;
    matref(1, 31) = 20;
    matref(2, 31) = 304;
    matname(31) = lang(u8"ヒトの遺伝子"s, u8"Human gene"s);
    matdesc(31) = lang(u8"普通の遺伝子"s, u8"It's common."s);
    p = 31;
    matspot(0, p) = 16;
    matref(0, 39) = 3;
    matref(1, 39) = 20;
    matref(2, 39) = 301;
    matname(39) = lang(u8"クマの尻尾"s, u8"Bear's tail"s);
    matdesc(39) = lang(u8"とても短い"s, u8"Very short."s);
    p = 39;
    matspot(0, p) = 16;
    matref(0, 19) = 5;
    matref(1, 19) = 15;
    matref(2, 19) = 304;
    matname(19) = lang(u8"トロールの遺伝子"s, u8"Troll gene"s);
    matdesc(19) = lang(u8"再生する遺伝子"s, u8"It's regenerating."s);
    p = 19;
    matspot(0, p) = 16;
    matref(0, 32) = 8;
    matref(1, 32) = 40;
    matref(2, 32) = 304;
    matname(32) = lang(u8"魔女の瞳"s, u8"Witch's eye"s);
    matdesc(32) = lang(u8"まだ動いている"s, u8"These eyes are still moving."s);
    p = 32;
    matspot(0, p) = 16;
    matref(0, 21) = 15;
    matref(1, 21) = 45;
    matref(2, 21) = 209;
    matname(21) = lang(u8"フェアリーダスト"s, u8"Fairy dust"s);
    matdesc(21) = lang(u8"妖精の燐粉"s, u8"Fairies leave it."s);
    p = 21;
    matspot(0, p) = 16;
    return;
}
int prodcheck()
{
    int f_at_m110 = 0;
    elona_vector1<int> j_at_m110;
    f_at_m110 = 1;
    if (matval(1) > sdata(matval, 0))
    {
        f_at_m110 = -1;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
        {
            j_at_m110(0) = matneed(cnt * 2);
            j_at_m110(1) = matneed(cnt * 2 + 1);
            if (j_at_m110 == -1)
            {
                break;
            }
            if (mat(j_at_m110) < j_at_m110(1))
            {
                f_at_m110 = -1;
            }
        }
    }
    stat = f_at_m110;
    return stat;
}
int calcweaponfix(int prm_752)
{
    pierce = 0;
    rangemap(0) = 100;
    rangemap(1) = 20;
    rangemap(2) = 20;
    rangemap(3) = 20;
    rangemap(4) = 20;
    rangemap(5) = 20;
    rangemap(6) = 20;
    rangemap(7) = 20;
    rangemap(8) = 20;
    rangemap(9) = 20;
    if (prm_752 == 788)
    {
        pierce = 15;
        rangemap(0) = 60;
        rangemap(1) = 90;
        rangemap(2) = 100;
        rangemap(3) = 100;
        rangemap(4) = 80;
        rangemap(5) = 60;
        stat = 1;
        return stat;
    }
    if (prm_752 == 781)
    {
        pierce = 40;
        stat = 1;
        return stat;
    }
    if (prm_752 == 759)
    {
        pierce = 100;
        stat = 1;
        return stat;
    }
    if (prm_752 == 758)
    {
        pierce = 35;
        rangemap(0) = 100;
        rangemap(1) = 90;
        rangemap(2) = 70;
        rangemap(3) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 741)
    {
        pierce = 20;
        stat = 1;
        return stat;
    }
    if (prm_752 == 739)
    {
        pierce = 65;
        stat = 1;
        return stat;
    }
    if (prm_752 == 735)
    {
        pierce = 5;
        stat = 1;
        return stat;
    }
    if (prm_752 == 725)
    {
        pierce = 0;
        rangemap(0) = 60;
        rangemap(1) = 100;
        rangemap(2) = 70;
        stat = 1;
        return stat;
    }
    if (prm_752 == 718)
    {
        pierce = 5;
        rangemap(0) = 50;
        rangemap(1) = 100;
        rangemap(2) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 716)
    {
        pierce = 50;
        rangemap(0) = 60;
        rangemap(1) = 100;
        rangemap(2) = 70;
        stat = 1;
        return stat;
    }
    if (prm_752 == 714)
    {
        pierce = 0;
        rangemap(0) = 80;
        rangemap(1) = 100;
        rangemap(2) = 90;
        rangemap(3) = 80;
        rangemap(4) = 60;
        stat = 1;
        return stat;
    }
    if (prm_752 == 713)
    {
        pierce = 15;
        rangemap(0) = 60;
        rangemap(1) = 100;
        rangemap(2) = 70;
        stat = 1;
        return stat;
    }
    if (prm_752 == 678)
    {
        pierce = 10;
        stat = 1;
        return stat;
    }
    if (prm_752 == 677)
    {
        pierce = 30;
        stat = 1;
        return stat;
    }
    if (prm_752 == 675)
    {
        pierce = 15;
        stat = 1;
        return stat;
    }
    if (prm_752 == 674)
    {
        pierce = 30;
        rangemap(0) = 100;
        rangemap(1) = 40;
        stat = 1;
        return stat;
    }
    if (prm_752 == 673)
    {
        pierce = 20;
        rangemap(0) = 50;
        rangemap(1) = 90;
        rangemap(2) = 100;
        rangemap(3) = 90;
        rangemap(4) = 80;
        rangemap(5) = 80;
        rangemap(6) = 70;
        rangemap(7) = 60;
        rangemap(8) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 633)
    {
        pierce = 5;
        rangemap(0) = 50;
        rangemap(1) = 100;
        rangemap(2) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 514)
    {
        pierce = 5;
        rangemap(0) = 100;
        rangemap(1) = 100;
        rangemap(2) = 100;
        rangemap(3) = 100;
        rangemap(4) = 100;
        rangemap(5) = 100;
        rangemap(6) = 100;
        rangemap(7) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 512)
    {
        pierce = 5;
        rangemap(0) = 100;
        rangemap(1) = 100;
        rangemap(2) = 100;
        rangemap(3) = 100;
        rangemap(4) = 100;
        rangemap(5) = 100;
        rangemap(6) = 100;
        stat = 1;
        return stat;
    }
    if (prm_752 == 496)
    {
        pierce = 30;
        rangemap(0) = 100;
        rangemap(1) = 60;
        stat = 1;
        return stat;
    }
    if (prm_752 == 482)
    {
        pierce = 25;
        rangemap(0) = 80;
        rangemap(1) = 100;
        rangemap(2) = 90;
        rangemap(3) = 80;
        rangemap(4) = 70;
        rangemap(5) = 60;
        rangemap(6) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 359)
    {
        pierce = 40;
        stat = 1;
        return stat;
    }
    if (prm_752 == 266)
    {
        pierce = 5;
        stat = 1;
        return stat;
    }
    if (prm_752 == 235)
    {
        pierce = 30;
        stat = 1;
        return stat;
    }
    if (prm_752 == 231)
    {
        pierce = 0;
        rangemap(0) = 80;
        rangemap(1) = 100;
        rangemap(2) = 100;
        rangemap(3) = 90;
        rangemap(4) = 80;
        rangemap(5) = 70;
        stat = 1;
        return stat;
    }
    if (prm_752 == 230)
    {
        pierce = 15;
        rangemap(0) = 70;
        rangemap(1) = 100;
        rangemap(2) = 100;
        rangemap(3) = 80;
        rangemap(4) = 60;
        stat = 1;
        return stat;
    }
    if (prm_752 == 228)
    {
        pierce = 25;
        stat = 1;
        return stat;
    }
    if (prm_752 == 225)
    {
        pierce = 10;
        stat = 1;
        return stat;
    }
    if (prm_752 == 224)
    {
        pierce = 20;
        stat = 1;
        return stat;
    }
    if (prm_752 == 213)
    {
        pierce = 25;
        stat = 1;
        return stat;
    }
    if (prm_752 == 211)
    {
        pierce = 5;
        stat = 1;
        return stat;
    }
    if (prm_752 == 210)
    {
        pierce = 5;
        rangemap(0) = 60;
        rangemap(1) = 100;
        rangemap(2) = 70;
        stat = 1;
        return stat;
    }
    if (prm_752 == 207)
    {
        pierce = 20;
        rangemap(0) = 50;
        rangemap(1) = 90;
        rangemap(2) = 100;
        rangemap(3) = 90;
        rangemap(4) = 80;
        rangemap(5) = 80;
        rangemap(6) = 70;
        rangemap(7) = 60;
        rangemap(8) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 206)
    {
        pierce = 20;
        stat = 1;
        return stat;
    }
    if (prm_752 == 73)
    {
        pierce = 20;
        stat = 1;
        return stat;
    }
    if (prm_752 == 64)
    {
        pierce = 15;
        stat = 1;
        return stat;
    }
    if (prm_752 == 63)
    {
        pierce = 15;
        stat = 1;
        return stat;
    }
    if (prm_752 == 60)
    {
        pierce = 10;
        rangemap(0) = 100;
        rangemap(1) = 90;
        rangemap(2) = 70;
        rangemap(3) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 58)
    {
        pierce = 20;
        rangemap(0) = 50;
        rangemap(1) = 90;
        rangemap(2) = 100;
        rangemap(3) = 90;
        rangemap(4) = 80;
        rangemap(5) = 80;
        rangemap(6) = 70;
        rangemap(7) = 60;
        rangemap(8) = 50;
        stat = 1;
        return stat;
    }
    if (prm_752 == 57)
    {
        pierce = 25;
        stat = 1;
        return stat;
    }
    if (prm_752 == 56)
    {
        pierce = 10;
        stat = 1;
        return stat;
    }
    if (prm_752 == 2)
    {
        pierce = 10;
        stat = 1;
        return stat;
    }
    if (prm_752 == 1)
    {
        pierce = 5;
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int label_1280()
{
    matneed(0) = -1;
    matneed(1) = -1;
    matneed(2) = -1;
    matneed(3) = -1;
    matneed(4) = -1;
    matneed(5) = -1;
    matneed(6) = -1;
    matneed(7) = -1;
    matneed(8) = -1;
    matneed(9) = -1;
    if (matid == 502)
    {
        matval(0) = 179;
        matval(1) = 40;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 2;
        matneed(2) = 44;
        matneed(3) = 2;
        matneed(4) = 51;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 501)
    {
        matval(0) = 179;
        matval(1) = 13;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 2;
        matneed(2) = 44;
        matneed(3) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 500)
    {
        matval(0) = 179;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 2;
        matneed(2) = 38;
        matneed(3) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 455)
    {
        matval(0) = 177;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 45;
        matneed(1) = 4;
        matneed(2) = 53;
        matneed(3) = 2;
        matneed(4) = 7;
        matneed(5) = 3;
        stat = 1;
        return stat;
    }
    if (matid == 411)
    {
        matval(0) = 179;
        matval(1) = 5;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 4;
        matneed(2) = 36;
        matneed(3) = 1;
        matneed(4) = 23;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 408)
    {
        matval(0) = 176;
        matval(1) = 11;
        matval(2) = 100;
        matneed(0) = 47;
        matneed(1) = 3;
        matneed(2) = 52;
        matneed(3) = 2;
        matneed(4) = 21;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 407)
    {
        matval(0) = 178;
        matval(1) = 14;
        matval(2) = 100;
        matneed(0) = 25;
        matneed(1) = 4;
        matneed(2) = 20;
        matneed(3) = 3;
        matneed(4) = 42;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 405)
    {
        matval(0) = 176;
        matval(1) = 15;
        matval(2) = 100;
        matneed(0) = 48;
        matneed(1) = 8;
        matneed(2) = 9;
        matneed(3) = 5;
        matneed(4) = 52;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 403)
    {
        matval(0) = 176;
        matval(1) = 12;
        matval(2) = 100;
        matneed(0) = 47;
        matneed(1) = 5;
        matneed(2) = 16;
        matneed(3) = 2;
        matneed(4) = 10;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 402)
    {
        matval(0) = 177;
        matval(1) = 5;
        matval(2) = 100;
        matneed(0) = 53;
        matneed(1) = 7;
        matneed(2) = 45;
        matneed(3) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 401)
    {
        matval(0) = 179;
        matval(1) = 14;
        matval(2) = 100;
        matneed(0) = 3;
        matneed(1) = 8;
        matneed(2) = 53;
        matneed(3) = 4;
        matneed(4) = 21;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 400)
    {
        matval(0) = 176;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 3;
        matneed(1) = 6;
        matneed(2) = 46;
        matneed(3) = 4;
        matneed(4) = 2;
        matneed(5) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 399)
    {
        matval(0) = 177;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 45;
        matneed(1) = 5;
        matneed(2) = 33;
        matneed(3) = 2;
        matneed(4) = 20;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 395)
    {
        matval(0) = 179;
        matval(1) = 30;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 5;
        matneed(2) = 30;
        matneed(3) = 1;
        matneed(4) = 44;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 390)
    {
        matval(0) = 179;
        matval(1) = 25;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 1;
        matneed(2) = 36;
        matneed(3) = 2;
        matneed(4) = 30;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 389)
    {
        matval(0) = 179;
        matval(1) = 25;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 2;
        matneed(2) = 36;
        matneed(3) = 2;
        matneed(4) = 17;
        matneed(5) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 388)
    {
        matval(0) = 179;
        matval(1) = 15;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 1;
        matneed(2) = 17;
        matneed(3) = 2;
        matneed(4) = 23;
        matneed(5) = 3;
        stat = 1;
        return stat;
    }
    if (matid == 384)
    {
        matval(0) = 179;
        matval(1) = 15;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 2;
        matneed(2) = 17;
        matneed(3) = 4;
        matneed(4) = 16;
        matneed(5) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 362)
    {
        matval(0) = 179;
        matval(1) = 18;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 1;
        matneed(2) = 49;
        matneed(3) = 2;
        matneed(4) = 30;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 287)
    {
        matval(0) = 178;
        matval(1) = 45;
        matval(2) = 100;
        matneed(0) = 34;
        matneed(1) = 2;
        matneed(2) = 10;
        matneed(3) = 5;
        matneed(4) = 25;
        matneed(5) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 286)
    {
        matval(0) = 178;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 25;
        matneed(1) = 4;
        matneed(2) = 14;
        matneed(3) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 285)
    {
        matval(0) = 178;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 25;
        matneed(1) = 4;
        matneed(2) = 15;
        matneed(3) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 253)
    {
        matval(0) = 178;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 5;
        matneed(1) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 245)
    {
        matval(0) = 179;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 2;
        matneed(2) = 2;
        matneed(3) = 2;
        matneed(4) = 4;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 242)
    {
        matval(0) = 179;
        matval(1) = 10;
        matval(2) = 100;
        matneed(0) = 35;
        matneed(1) = 1;
        matneed(2) = 36;
        matneed(3) = 1;
        matneed(4) = 23;
        matneed(5) = 3;
        stat = 1;
        return stat;
    }
    if (matid == 236)
    {
        matval(0) = 179;
        matval(1) = 4;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 3;
        matneed(2) = 13;
        matneed(3) = 2;
        matneed(4) = 2;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 209)
    {
        matval(0) = 179;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 4;
        matneed(2) = 17;
        matneed(3) = 2;
        matneed(4) = 16;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 175)
    {
        matval(0) = 176;
        matval(1) = 17;
        matval(2) = 100;
        matneed(0) = 37;
        matneed(1) = 1;
        matneed(2) = 28;
        matneed(3) = 5;
        matneed(4) = 54;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 123)
    {
        matval(0) = 176;
        matval(1) = 14;
        matval(2) = 100;
        matneed(0) = 37;
        matneed(1) = 1;
        matneed(2) = 26;
        matneed(3) = 5;
        matneed(4) = 50;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 122)
    {
        matval(0) = 176;
        matval(1) = 14;
        matval(2) = 100;
        matneed(0) = 37;
        matneed(1) = 1;
        matneed(2) = 27;
        matneed(3) = 5;
        matneed(4) = 20;
        matneed(5) = 5;
        stat = 1;
        return stat;
    }
    if (matid == 120)
    {
        matval(0) = 176;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 6;
        matneed(1) = 1;
        matneed(2) = 9;
        matneed(3) = 4;
        matneed(4) = 50;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 119)
    {
        matval(0) = 176;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 6;
        matneed(1) = 1;
        matneed(2) = 14;
        matneed(3) = 4;
        matneed(4) = 54;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 76)
    {
        matval(0) = 178;
        matval(1) = 40;
        matval(2) = 100;
        matneed(0) = 34;
        matneed(1) = 2;
        matneed(2) = 5;
        matneed(3) = 5;
        matneed(4) = 42;
        matneed(5) = 4;
        stat = 1;
        return stat;
    }
    if (matid == 75)
    {
        matval(0) = 178;
        matval(1) = 30;
        matval(2) = 100;
        matneed(0) = 34;
        matneed(1) = 1;
        matneed(2) = 25;
        matneed(3) = 4;
        matneed(4) = 14;
        matneed(5) = 5;
        stat = 1;
        return stat;
    }
    if (matid == 74)
    {
        matval(0) = 178;
        matval(1) = 25;
        matval(2) = 100;
        matneed(0) = 15;
        matneed(1) = 3;
        matneed(2) = 25;
        matneed(3) = 4;
        matneed(4) = 42;
        matneed(5) = 3;
        stat = 1;
        return stat;
    }
    if (matid == 72)
    {
        matval(0) = 178;
        matval(1) = 20;
        matval(2) = 100;
        matneed(0) = 10;
        matneed(1) = 1;
        matneed(2) = 5;
        matneed(3) = 4;
        matneed(4) = 42;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 71)
    {
        matval(0) = 178;
        matval(1) = 15;
        matval(2) = 100;
        matneed(0) = 25;
        matneed(1) = 3;
        matneed(2) = 42;
        matneed(3) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 70)
    {
        matval(0) = 178;
        matval(1) = 10;
        matval(2) = 100;
        matneed(0) = 25;
        matneed(1) = 3;
        matneed(2) = 14;
        matneed(3) = 1;
        matneed(4) = 15;
        matneed(5) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 69)
    {
        matval(0) = 178;
        matval(1) = 5;
        matval(2) = 100;
        matneed(0) = 5;
        matneed(1) = 3;
        matneed(2) = 15;
        matneed(3) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 68)
    {
        matval(0) = 178;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 5;
        matneed(1) = 3;
        matneed(2) = 14;
        matneed(3) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 66)
    {
        matval(0) = 177;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 33;
        matneed(1) = 4;
        matneed(2) = 39;
        matneed(3) = 5;
        matneed(4) = 18;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 65)
    {
        matval(0) = 177;
        matval(1) = 10;
        matval(2) = 100;
        matneed(0) = 33;
        matneed(1) = 5;
        matneed(2) = 54;
        matneed(3) = 3;
        matneed(4) = 31;
        matneed(5) = 6;
        stat = 1;
        return stat;
    }
    if (matid == 19)
    {
        matval(0) = 176;
        matval(1) = 5;
        matval(2) = 100;
        matneed(0) = 6;
        matneed(1) = 1;
        matneed(2) = 4;
        matneed(3) = 4;
        matneed(4) = 29;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 18)
    {
        matval(0) = 176;
        matval(1) = 8;
        matval(2) = 100;
        matneed(0) = 6;
        matneed(1) = 1;
        matneed(2) = 32;
        matneed(3) = 2;
        matneed(4) = 49;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    if (matid == 16)
    {
        matval(0) = 179;
        matval(1) = 7;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 3;
        matneed(2) = 2;
        matneed(3) = 2;
        matneed(4) = 4;
        matneed(5) = 3;
        stat = 1;
        return stat;
    }
    if (matid == 14)
    {
        matval(0) = 179;
        matval(1) = 1;
        matval(2) = 100;
        matneed(0) = 43;
        matneed(1) = 2;
        matneed(2) = 49;
        matneed(3) = 1;
        stat = 1;
        return stat;
    }
    if (matid == 8)
    {
        matval(0) = 177;
        matval(1) = 4;
        matval(2) = 100;
        matneed(0) = 45;
        matneed(1) = 6;
        matneed(2) = 53;
        matneed(3) = 3;
        matneed(4) = 50;
        matneed(5) = 2;
        stat = 1;
        return stat;
    }
    stat = -1;
    return stat;
}
void fixaiact(int prm_753)
{
    int p_at_m112 = 0;
    int i_at_m112 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (cnt < 5)
            {
                p_at_m112 = 215 + cnt;
            }
            else
            {
                p_at_m112 = 220 + cnt - 5;
            }
            i_at_m112 = cdata(p_at_m112, prm_753);
            if (i_at_m112 == 464 || i_at_m112 == 441 || i_at_m112 == 660
                || i_at_m112 == 657)
            {
                cdata(p_at_m112, prm_753) = -1;
            }
        }
    }
    i_at_m112 = cdata(211, prm_753);
    if (i_at_m112 == 464 || i_at_m112 == 441 || i_at_m112 == 660
        || i_at_m112 == 657)
    {
        cdata(211, prm_753) = 0;
    }
    return;
}
int eleinfo(int prm_754, int prm_755)
{
    if (prm_754 == 50)
    {
        if (prm_755 == 0)
        {
            stat = 3;
            return stat;
        }
        else
        {
            stat = 108;
            return stat;
        }
    }
    if (prm_754 == 51)
    {
        if (prm_755 == 0)
        {
            stat = 12;
            return stat;
        }
        else
        {
            stat = 106;
            return stat;
        }
    }
    if (prm_754 == 52)
    {
        if (prm_755 == 0)
        {
            stat = 5;
            return stat;
        }
        else
        {
            stat = 107;
            return stat;
        }
    }
    if (prm_754 == 59)
    {
        if (prm_755 == 0)
        {
            stat = 8;
            return stat;
        }
        else
        {
            stat = 114;
            return stat;
        }
    }
    if (prm_754 == 53)
    {
        if (prm_755 == 0)
        {
            stat = 4;
            return stat;
        }
        else
        {
            stat = 115;
            return stat;
        }
    }
    if (prm_754 == 58)
    {
        if (prm_755 == 0)
        {
            stat = 9;
            return stat;
        }
        else
        {
            stat = 111;
            return stat;
        }
    }
    if (prm_754 == 57)
    {
        if (prm_755 == 0)
        {
            stat = 11;
            return stat;
        }
        else
        {
            stat = 112;
            return stat;
        }
    }
    if (prm_754 == 54)
    {
        if (prm_755 == 0)
        {
            stat = 10;
            return stat;
        }
        else
        {
            stat = 113;
            return stat;
        }
    }
    if (prm_754 == 55)
    {
        if (prm_755 == 0)
        {
            stat = 2;
            return stat;
        }
        else
        {
            stat = 110;
            return stat;
        }
    }
    if (prm_754 == 56)
    {
        if (prm_755 == 0)
        {
            stat = 7;
            return stat;
        }
        else
        {
            stat = 109;
            return stat;
        }
    }
    if (prm_754 == 63)
    {
        if (prm_755 == 0)
        {
            stat = 2;
            return stat;
        }
        else
        {
            stat = 110;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
int characreate(int prm_756, int prm_757, int prm_758, int prm_759)
{
    characreatehack = -1;
    if (prm_758 == -3)
    {
        cxinit = -1;
        cyinit = -1;
    }
    else
    {
        cxinit = prm_758;
        cyinit = prm_759;
    }
    if (prm_757 == 0)
    {
        dbid = -1;
    }
    else
    {
        dbid = prm_757;
    }
    rc = prm_756;
    label_1533();
    initlv = 0;
    voidlv = 0;
    characreatehack = 0;
    if (stat == 1)
    {
        if (rc == 56)
        {
            cdata(0, rc) = 0;
            --npcmemory(1, cdata(27, rc));
            stat = 1;
            return stat;
        }
        if (rc != 0)
        {
            if (prm_758 != -1)
            {
                label_1532();
            }
        }
    }
    else
    {
        rc = 56;
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
int relationbetween(int prm_760, int)
{
    if (cdata(9, prm_760) >= -2)
    {
        if (cdata(9, prm_760) <= -3)
        {
            stat = -3;
            return stat;
        }
    }
    else
    {
        if (cdata(9, prm_760) >= -2)
        {
            stat = -3;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
std::string calcage(int prm_762)
{
    if (gdata(10) - cdata(21, prm_762) < 0)
    {
        return lang(u8"不明"s, u8"Unknown"s);
    }
    return elona_str(gdata(10) - cdata(21, prm_762));
}
void rowactend(int prm_763)
{
    cdata(140, prm_763) = 0;
    cdata(141, prm_763) = 0;
    cdata(142, prm_763) = 0;
    return;
}
int customtalk(int prm_764, int prm_765)
{
    int f_at_m116 = 0;
    elona_vector1<std::string> buff_at_m116;
    std::string s_at_m116;
    int p_at_m116 = 0;
    f_at_m116 = 0;
    if (cbit(989, prm_764))
    {
        exist(exedir + u8"user\\talk\\"s + cdatan(4, prm_764));
        if (strsize == -1)
        {
            stat = 0;
            return stat;
        }
        SDIM2(buff_at_m116, strsize);
        notesel(buff_at_m116);
        noteload(exedir + u8"user\\talk\\"s + cdatan(4, prm_764));
        f_at_m116 = 1;
    }
    else
    {
        if (cdata(27, prm_764) == 343)
        {
            f_at_m116 = 1;
            buff_at_m116 = ""s + usertxt(cdata(157, prm_764));
            notesel(buff_at_m116);
        }
    }
    if (f_at_m116)
    {
        if (prm_765 == 101)
        {
            s_at_m116 = u8"%txtAggro"s;
        }
        if (prm_765 == 103)
        {
            s_at_m116 = u8"%txtKilled"s;
        }
        if (prm_765 == 102)
        {
            s_at_m116 = u8"%txtDead"s;
        }
        if (prm_765 == 104)
        {
            s_at_m116 = u8"%txtWelcome"s;
        }
        if (prm_765 == 100)
        {
            s_at_m116 = u8"%txtCalm"s;
        }
        if (prm_765 == 106)
        {
            s_at_m116 = u8"%txtDialog"s;
        }
        p_at_m116 =
            instr(buff_at_m116, 0, s_at_m116 + u8","s + lang(u8"JP"s, u8"EN"s));
        buff_at_m116 = strmid(
            buff_at_m116,
            p_at_m116,
            instr(buff_at_m116, p_at_m116 + 1, u8"%"s));
        if (noteinfo(0) > 1)
        {
            p_at_m116 = rnd(noteinfo(0) - 1) + 1;
            noteget(s_at_m116, p_at_m116);
            if (s_at_m116 != ""s)
            {
                if (prm_765 == 106)
                {
                    buff = s_at_m116;
                }
                else
                {
                    txtef(9);
                    txt(s_at_m116);
                }
            }
        }
        noteunsel();
        stat = 1;
        return stat;
    }
    if (prm_765 == 106)
    {
        stat = 0;
        return stat;
    }
    if (cdata(23, prm_764) != 0)
    {
        dbid = cdata(27, prm_764);
        dbmode = prm_765;
        label_2299();
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int findchara(int prm_766)
{
    p_at_m117 = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 2)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
            }
            if (cdata(27, cnt) == prm_766)
            {
                p_at_m117 = cnt;
                break;
            }
        }
    }
    stat = p_at_m117;
    return stat;
}
int findally(int prm_767)
{
    p_at_m117 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(27, cnt) == prm_767)
            {
                p_at_m117 = cnt;
                break;
            }
        }
    }
    stat = p_at_m117;
    return stat;
}
int implevel(int prm_768)
{
    if (prm_768 < 10)
    {
        stat = 0;
        return stat;
    }
    if (prm_768 < 25)
    {
        stat = 1;
        return stat;
    }
    if (prm_768 < 40)
    {
        stat = 2;
        return stat;
    }
    if (prm_768 < 75)
    {
        stat = 3;
        return stat;
    }
    if (prm_768 < 100)
    {
        stat = 4;
        return stat;
    }
    if (prm_768 < 150)
    {
        stat = 5;
        return stat;
    }
    if (prm_768 < 200)
    {
        stat = 6;
        return stat;
    }
    if (prm_768 < 300)
    {
        stat = 7;
        return stat;
    }
    stat = 8;
    return stat;
}
void modimp(int prm_769, int prm_770)
{
    elona_vector1<int> p_at_m118;
    int i_at_m118 = 0;
    p_at_m118 = implevel(cdata(17, prm_769));
    if (prm_770 < 0)
    {
        i_at_m118 = prm_770;
    }
    else
    {
        i_at_m118 = prm_770 * 100 / (50 + p_at_m118 * p_at_m118 * p_at_m118);
        if (i_at_m118 == 0)
        {
            if (p_at_m118 < rnd(10))
            {
                i_at_m118 = 1;
            }
        }
    }
    cdata(17, prm_769) += i_at_m118;
    p_at_m118(1) = implevel(cdata(17, prm_769));
    if (p_at_m118 > p_at_m118(1))
    {
        txtef(8);
        txt(lang(
            cdatan(0, prm_769) + u8"との関係が<"s + _impression(p_at_m118(1))
                + u8">になった…"s,
            u8"Your relation with "s + cdatan(0, prm_769) + u8" becomes <"s
                + _impression(p_at_m118(1)) + u8">..."s));
        return;
    }
    if (p_at_m118(1) > p_at_m118)
    {
        if (cdata(9, prm_769) != -3)
        {
            txtef(2);
            txt(lang(
                cdatan(0, prm_769) + u8"との関係が<"s
                    + _impression(p_at_m118(1)) + u8">になった！"s,
                u8"Your relation with "s + cdatan(0, prm_769) + u8" becomes <"s
                    + _impression(p_at_m118(1)) + u8">!"s));
        }
        return;
    }
    return;
}
void put_questtarget()
{
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 1)
            {
                cbitmod(970, cnt, 1);
                cdata(9, cnt) = -3;
            }
        }
    }
    return;
}
int exist_questtarget()
{
    int f_at_m119 = 0;
    f_at_m119 = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 1)
            {
                if (cbit(970, cnt) == 1)
                {
                    ++f_at_m119;
                }
            }
        }
    }
    stat = f_at_m119;
    return stat;
}
void check_quest()
{
    int p_at_m119 = 0;
    if (gdata(20) == 5)
    {
        if (gdata(22) == 3)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(450) < 2)
                {
                    gdata(450) = 2;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
        if (gdata(22) == 4)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(451) < 2)
                {
                    gdata(451) = 2;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
        if (gdata(22) == 5)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(452) < 3)
                {
                    gdata(452) = 3;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
    }
    if (gdata(20) == 12)
    {
        if (gdata(22) == 3)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(456) < 2)
                {
                    gdata(456) = 2;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
        if (gdata(22) == 4)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(457) < 3)
                {
                    gdata(457) = 3;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
    }
    if (gdata(20) == 36)
    {
        if (gdata(22) == 20)
        {
            if (exist_questtarget() == 0)
            {
                if (gdata(465) < 2)
                {
                    gdata(465) = 2;
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
    }
    if (gdata(70) == 0)
    {
        return;
    }
    if (gdata(73) != 3)
    {
        if (gdata(71) == 1)
        {
            p_at_m119 = 0;
            {
                int cnt = 57;
                for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        ++p_at_m119;
                    }
                }
            }
            if (p_at_m119 == 0)
            {
                evadd(8);
            }
            else
            {
                txtmore();
                txtef(4);
                txt(lang(
                    u8"[殲滅依頼]残り"s + p_at_m119 + u8"体"s + u8"] "s,
                    ""s + p_at_m119 + u8" more to go."s));
            }
        }
        if (gdata(70) == 1008)
        {
            if (findchara(qdata(12, gdata(72))) == 0)
            {
                evadd(8);
            }
        }
    }
    return;
}
void refreshspeed(int prm_771)
{
    int r_at_m120 = 0;
    if (cdata(68, prm_771) == 0)
    {
        cdata(11, prm_771) = sdata(18, prm_771);
    }
    else
    {
        cdata(11, prm_771) = sdata(18, prm_771)
            * limit((100 - cdata(68, prm_771)), 0, 100) / 100;
    }
    if (cdata(11, prm_771) < 10)
    {
        cdata(11, prm_771) = 10;
    }
    cdata(39, prm_771) = 0;
    if (prm_771 != 0)
    {
        if (gdata(183) != prm_771)
        {
            return;
        }
    }
    if (gdata(183) != 0)
    {
        cdata(11, 0) = sdata(18, gdata(183)) * 100
            / limit((100 + sdata(18, gdata(183)) - sdata(10, gdata(183)) * 3 / 2
                     - sdata(301, 0) * 2 - (cbit(22, gdata(183)) == 1) * 50),
                    100,
                    1000);
        if (cbit(25, gdata(183)))
        {
            cdata(11, 0) /= 10;
        }
        if (gdata(183) == prm_771)
        {
            cdata(11, prm_771) = limit(
                sdata(10, prm_771) + sdata(301, 0), 10, sdata(18, prm_771));
            return;
        }
    }
    gspdorg = sorg(18, 0);
    if (gdata(183) == 0)
    {
        r_at_m120 = cdata(22, 0) / 1000 * 1000;
        if (r_at_m120 < 1000)
        {
            cdata(39, 0) -= 30;
        }
        if (r_at_m120 < 2000)
        {
            cdata(39, 0) -= 10;
        }
        if (cdata(52, 0) < 0)
        {
            cdata(39, 0) -= 30;
        }
        if (cdata(52, 0) < 25)
        {
            cdata(39, 0) -= 20;
        }
        if (cdata(52, 0) < 50)
        {
            cdata(39, 0) -= 10;
        }
    }
    if (cdata(45, 0) >= 3)
    {
        cdata(39, 0) -= 50;
    }
    if (cdata(45, 0) == 2)
    {
        cdata(39, 0) -= 30;
    }
    if (cdata(45, 0) == 1)
    {
        cdata(39, 0) -= 10;
    }
    if (mdata(6) == 1 || mdata(6) == 4)
    {
        if (gdata(80) > gdata(82))
        {
            cdata(39, 0) -= 25 + 25 * (gdata(80) / (gdata(82) + 1));
        }
    }
    gspd = cdata(11, 0) * (100 + cdata(37, 0)) / 100;
    if (gspd < 10)
    {
        gspd = 10;
    }
    return;
}
void ride_begin(int prm_772)
{
    txt(lang(
        name(prm_772) + u8"に騎乗した("s + name(prm_772) + u8"の速度: "s
            + cdata(11, prm_772) + u8"→"s,
        u8"You ride "s + name(prm_772) + u8". ("s + name(prm_772)
            + u8"'s speed: "s + cdata(11, prm_772) + u8"->"s));
    cbitmod(975, prm_772, 1);
    map(cdata(1, prm_772), cdata(2, prm_772), 1) = 0;
    gdata(183) = prm_772;
    create_pcpic(0, 1);
    rowactend(gdata(183));
    refreshspeed(gdata(183));
    txt(""s + cdata(11, prm_772) + u8") "s);
    if (cbit(22, gdata(183)))
    {
        txt(lang(
            u8"この生物は乗馬用にちょうどいい！"s, u8"You feel comfortable."s));
    }
    if (cbit(25, gdata(183)))
    {
        txt(lang(
            u8"この生物はあなたを乗せるには非力すぎる。"s,
            u8"This creature is too weak to carry you."s));
    }
    return;
}
void ride_end()
{
    int p_at_m121 = 0;
    cbitmod(975, gdata(183), 0);
    rowactend(gdata(183));
    p_at_m121 = gdata(183);
    gdata(183) = 0;
    create_pcpic(0, 1);
    refreshspeed(p_at_m121);
    return;
}
void chara_vanquish(int prm_773)
{
    if (prm_773 == gdata(183))
    {
        ride_end();
    }
    else
    {
        if (cdata(0, prm_773) == 1 || cdata(0, prm_773) == 10)
        {
            map(cdata(1, prm_773), cdata(2, prm_773), 1) = 0;
        }
    }
    cdata(0, prm_773) = 0;
    cdata(150, prm_773) = 0;
    check_quest();
    return;
}
void turn_aggro(int prm_774, int prm_775, int prm_776)
{
    if (prm_775 < 16)
    {
        cdata(9, prm_774) = -3;
    }
    cdata(201, prm_774) = prm_776;
    cdata(79, prm_774) = 218;
    cdata(29, prm_774) = prm_775;
    return;
}
void make_sound(
    int prm_777,
    int prm_778,
    int prm_779,
    int prm_780,
    int prm_781,
    int prm_782)
{
    {
        int cnt = 1;
        for (int cnt_end = cnt + (244); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (dist(prm_777, prm_778, cdata(1, cnt), cdata(2, cnt)) < prm_779)
            {
                if (rnd(prm_780) == 0)
                {
                    if (cdata(251, cnt) != 0)
                    {
                        cdata(251, cnt) = 0;
                        if (synccheck(cnt, -1))
                        {
                            txt(lang(
                                name(cnt) + u8"は物音に気付き目を覚ました。"s,
                                name(cnt) + u8" notice"s + _s(cnt)
                                    + u8" the sound and wake"s + _s(cnt)
                                    + u8" up."s));
                        }
                        cdata(79, cnt) = 221;
                        if (prm_781)
                        {
                            if (rnd(500) == 0)
                            {
                                if (synccheck(cnt, -1))
                                {
                                    txtef(9);
                                    txt(lang(
                                        name(cnt) + u8"はキレた。"s,
                                        name(cnt)
                                            + u8" can no longer put up with it."s));
                                    txt(lang(
                                        u8"「もう我慢できない」"s,
                                        cnvtalk(u8"That's it."s)));
                                }
                                turn_aggro(cnt, prm_782, 80);
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}
int get_freechara()
{
    f_at_m125 = -1;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                f_at_m125 = cnt;
                break;
            }
        }
    }
    stat = f_at_m125;
    return stat;
}
int get_freeally()
{
    f_at_m125 = 0;
    {
        int cnt = 1;
        for (int cnt_end = cnt + (limit(sdata(17, 0) / 5 + 1, 2, 15));
             cnt < cnt_end;
             ++cnt)
        {
            if (cdata(0, cnt) != 0)
            {
                continue;
            }
            f_at_m125 = cnt;
            break;
        }
    }
    stat = f_at_m125;
    return stat;
}
void del_chara(int prm_783)
{
    inv_getheader(prm_783);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            inv(0, cnt) = 0;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cdatan(cnt, prm_783) = "";
        }
    }
    sdata.clear(prm_783);
    cdata.clear(prm_783);
    return;
}
int relocate_chara(int prm_784, int prm_785, int prm_786)
{
    int tc_at_m125 = 0;
    int x_at_m125 = 0;
    int y_at_m125 = 0;
    int p1_at_m125 = 0;
    int p2_at_m125 = 0;
    int p3_at_m125 = 0;
    int hp_at_m125 = 0;
    int p_at_m125 = 0;
    int invrangecc_at_m125 = 0;
    int cnt2_at_m125 = 0;
    tc_at_m125 = prm_785;
    if (prm_784 == gdata(183))
    {
        ride_end();
        cdata(1, prm_784) = cdata(1, 0);
        cdata(2, prm_784) = cdata(2, 0);
    }
    if (tc_at_m125 == -1)
    {
        f_at_m125 = 0;
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) == 0)
                {
                    f_at_m125 = 1;
                    tc_at_m125 = cnt;
                    break;
                }
            }
        }
        if (f_at_m125 == 0)
        {
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    tc_at_m125 = 57 + rnd(188);
                    if (cdata(0, cnt) == 1)
                    {
                        if (cdata(150, cnt) == 0)
                        {
                            break;
                        }
                    }
                }
            }
            chara_vanquish(tc_at_m125);
        }
    }
    if (prm_786 == 1)
    {
        x_at_m125 = cdata(1, tc_at_m125);
        y_at_m125 = cdata(2, tc_at_m125);
    }
    p1_at_m125 = cdata(9, tc_at_m125);
    p2_at_m125 = cdata(201, tc_at_m125);
    p3_at_m125 = cdata(0, tc_at_m125);
    hp_at_m125 = cdata(50, tc_at_m125);
    cdata(12, prm_784) = 0;
    cbitmod(960, prm_784, 0);
    inv_getheader(prm_784);
    p_at_m125 = invhead;
    invrangecc_at_m125 = invrange;
    inv_getheader(tc_at_m125);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            cnt2_at_m125 = cnt;
            if (cnt == invrangecc_at_m125)
            {
                break;
            }
            if (cc == prm_784)
            {
                if (ci == p_at_m125)
                {
                    ci = cnt2_at_m125;
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
                {
                    inv(cnt, cnt2_at_m125) = inv(cnt, p_at_m125);
                    inv(cnt, p_at_m125) = 0;
                }
            }
            inv(18, cnt) = 0;
            ++p_at_m125;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1200); cnt < cnt_end; ++cnt)
        {
            sdata(cnt, tc_at_m125) = sdata(cnt, prm_784);
            sdata(cnt, prm_784) = 0;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            cdata(cnt, tc_at_m125) = cdata(cnt, prm_784);
            cdata(cnt, prm_784) = 0;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cdatan(cnt, tc_at_m125) = cdatan(cnt, prm_784);
            cdatan(cnt, prm_784) = "";
        }
    }
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            cdata(cnt, tc_at_m125) = cdata(cnt, tc_at_m125) / 10000 * 10000;
        }
    }
    if (prm_786 == 1)
    {
        cdata(0, tc_at_m125) = 1;
        cdata(1, tc_at_m125) = x_at_m125;
        cdata(2, tc_at_m125) = y_at_m125;
        cdata(9, tc_at_m125) = p1_at_m125;
        cdata(201, tc_at_m125) = p2_at_m125;
        cdata(50, tc_at_m125) = hp_at_m125;
        cdata(0, tc_at_m125) = p3_at_m125;
        map(cdata(1, tc_at_m125), cdata(2, tc_at_m125), 1) = tc_at_m125 + 1;
    }
    else
    {
        if (prm_784 != 56)
        {
            map(cdata(1, tc_at_m125), cdata(2, tc_at_m125), 1) = tc_at_m125 + 1;
        }
        else
        {
            rc = tc_at_m125;
            cdata(0, tc_at_m125) = 1;
            cxinit = cdata(1, 0);
            cyinit = cdata(2, 0);
            label_1532();
        }
        cdata(29, tc_at_m125) = 0;
        cdata(201, tc_at_m125) = 0;
    }
    if (tc_at_m125 < 16)
    {
        {
            int cnt = 50;
            for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
            {
                p_at_m125 = 100;
                if (sorg(cnt, tc_at_m125) >= 500
                    || sorg(cnt, tc_at_m125) <= 100)
                {
                    p_at_m125 = sorg(cnt, tc_at_m125);
                }
                if (p_at_m125 > 500)
                {
                    p_at_m125 = 500;
                }
                sdata(cnt + 600, tc_at_m125) = p_at_m125 * 1000000;
            }
        }
    }
    rc = tc_at_m125;
    label_2666();
    r1 = tc_at_m125;
    label_1477();
    stat = prm_784;
    return stat;
}
void hostileaction(int prm_787, int prm_788)
{
    if (prm_787 >= 16 || prm_788 == 0)
    {
        return;
    }
    if (cdata(9, prm_788) != -3)
    {
        cdata(79, prm_788) = 418;
    }
    if (cdata(9, prm_788) == 10)
    {
        txtmore();
        txtef(8);
        txt(lang(
            name(prm_788) + u8"は嫌な顔をした。"s,
            name(prm_788) + u8" glares at you."s));
    }
    else
    {
        if (cdata(9, prm_788) == 0)
        {
            modkarma(0, -2);
        }
        if (cdata(27, prm_788) == 202)
        {
            if (gdata(258) == 0)
            {
                txtmore();
                txtef(8);
                txt(lang(
                    name(prm_788) + u8"は嫌な顔をした。"s,
                    name(prm_788) + u8" glares at you."s));
                return;
            }
        }
        if (cdata(9, prm_788) > -2)
        {
            txtmore();
            txtef(8);
            txt(lang(
                name(prm_788) + u8"は嫌な顔をした。"s,
                name(prm_788) + u8" glares at you."s));
            cdata(9, prm_788) = -2;
        }
        else
        {
            if (cdata(9, prm_788) != -3)
            {
                txtef(8);
                txtmore();
                txt(lang(
                    name(prm_788) + u8"は激怒した。"s,
                    name(prm_788) + u8" gets furious!"s));
            }
            cdata(9, prm_788) = -3;
            cdata(201, prm_788) = 80;
            cdata(29, prm_788) = prm_787;
        }
        customtalk(prm_788, 101);
    }
    if (cbit(960, prm_788) == 1)
    {
        if (rnd(50) == 0)
        {
            txtef(3);
            txt(lang(u8"家畜は興奮した！"s, u8"Animals get excited!"s));
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cbit(960, cnt) == 1)
                    {
                        cdata(29, cnt) = 0;
                        cdata(201, cnt) = 20;
                        cdata(79, cnt) = 318;
                    }
                }
            }
        }
    }
    rowactend(prm_788);
    return;
}
void rowact_check(int prm_789)
{
    if (cdata(140, prm_789) != 0)
    {
        if (cdata(140, prm_789) != 3)
        {
            cdata(143, prm_789) = 1;
        }
    }
    return;
}
void rowact_item(int prm_790)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(141, cnt) <= 0)
            {
                continue;
            }
            if (cdata(140, cnt) == 1 || cdata(140, cnt) == 2)
            {
                if (cdata(142, cnt) == prm_790)
                {
                    rowactend(cnt);
                    txt(lang(
                        name(cnt) + u8"は行動を中断した。"s,
                        name(cnt) + u8" cancel"s + _s(cnt) + u8" "s + his(cnt)
                            + u8" action."s));
                }
            }
        }
    }
    return;
}
void wake_up()
{
    if (gdata(13) >= 7 && gdata(13) <= 22)
    {
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(251, cnt) > 0)
                {
                    if (rnd(10))
                    {
                        cdata(251, cnt) = 0;
                    }
                }
            }
        }
    }
    return;
}
void incognitobegin()
{
    {
        int cnt = 16;
        for (int cnt_end = cnt + (229); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(150, cnt) == 1010)
            {
                continue;
            }
            if (cdata(150, cnt) == 16)
            {
                continue;
            }
            if (cdata(69, cnt) >= -2)
            {
                if (cdata(9, cnt) <= -2)
                {
                    cdata(201, cnt) = 0;
                    cdata(9, cnt) = cdata(69, cnt);
                    cdata(79, cnt) = 221;
                }
            }
        }
    }
    return;
}
void incognitoend()
{
    {
        int cnt = 16;
        for (int cnt_end = cnt + (229); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(150, cnt) == 14)
            {
                if (cdata(49, 0) < -30)
                {
                    cdata(9, cnt) = -3;
                    cdata(201, cnt) = 80;
                    cdata(79, cnt) = 218;
                }
            }
        }
    }
    return;
}
void cell_setchara(int prm_791, int prm_792, int prm_793)
{
    map(prm_792, prm_793, 1) = prm_791 + 1;
    cdata(1, prm_791) = prm_792;
    cdata(2, prm_791) = prm_793;
    return;
}
void cell_removechara(int prm_794, int prm_795)
{
    map(prm_794, prm_795, 1) = 0;
    return;
}
int cell_findspace(int prm_796, int prm_797, int prm_798)
{
    int f_at_m130 = 0;
    int dy_at_m130 = 0;
    int dx_at_m130 = 0;
    f_at_m130 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_798 * 2 + 1); cnt < cnt_end; ++cnt)
        {
            dy_at_m130 = prm_797 + cnt - 1;
            if (dy_at_m130 < 0 || dy_at_m130 >= mdata(1))
            {
                continue;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (prm_798 * 2 + 1); cnt < cnt_end;
                     ++cnt)
                {
                    dx_at_m130 = prm_796 + cnt - 1;
                    if (dx_at_m130 < 0 || dx_at_m130 >= mdata(0))
                    {
                        continue;
                    }
                    if (map(dx_at_m130, dy_at_m130, 1) != 0)
                    {
                        continue;
                    }
                    if (chipm(7, map(dx_at_m130, dy_at_m130, 0)) && 4)
                    {
                        continue;
                    }
                    if (chipm(7, map(dx_at_m130, dy_at_m130, 6) % 1000) && 4)
                    {
                        continue;
                    }
                    rtval(0) = dx_at_m130;
                    rtval(1) = dy_at_m130;
                    f_at_m130 = 1;
                }
            }
            if (f_at_m130)
            {
                break;
            }
        }
    }
    stat = f_at_m130;
    return stat;
}
int findbuff(int prm_799, int prm_800)
{
    int f_at_m131 = 0;
    f_at_m131 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(280 + cnt * 3, prm_799) == 0)
            {
                break;
            }
            if (cdata(280 + cnt * 3, prm_799) == prm_800)
            {
                f_at_m131 = cnt;
                break;
            }
        }
    }
    stat = f_at_m131;
    return stat;
}
int addbuff(int prm_801, int prm_802, int prm_803, int prm_804)
{
    int p_at_m132 = 0;
    int fixeddur_at_m132 = 0;
    int f_at_m132 = 0;
    if (prm_804 <= 0)
    {
        stat = 0;
        return stat;
    }
    p_at_m132 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(280 + cnt * 3, prm_801) == prm_802)
            {
                if (cdata(280 + cnt * 3 + 2, prm_801) < prm_804)
                {
                    p_at_m132 = cnt;
                    break;
                }
                else
                {
                    p_at_m132 = -2;
                    break;
                }
            }
            if (cdata(280 + cnt * 3, prm_801) == 0)
            {
                p_at_m132 = cnt;
                break;
            }
        }
    }
    if (p_at_m132 == -1)
    {
        p_at_m132 = rnd(16);
    }
    if (p_at_m132 == -2)
    {
        if (synccheck(prm_801, -1))
        {
            txtmore();
            txt(lang(
                u8"しかし、効果はなかった。"s,
                u8"But it produces no effect."s));
            stat = 0;
            return stat;
        }
    }
    fixeddur_at_m132 = prm_804;
    if (bdataref(0, prm_802) == 2)
    {
        f_at_m132 = 0;
        if (sdata(60, prm_801) / 2 > rnd(prm_803 * 2 + 100))
        {
            f_at_m132 = 1;
        }
        if (prm_803 * 3 < sdata(60, prm_801))
        {
            f_at_m132 = 1;
        }
        if (prm_803 / 3 > sdata(60, prm_801))
        {
            f_at_m132 = 0;
        }
        if (cdata(25, prm_801) > 3)
        {
            if (rnd(4))
            {
                f_at_m132 = 1;
            }
            else
            {
                fixeddur_at_m132 = prm_804 / 5 + 1;
            }
        }
        if (cdata(25, prm_801) >= 4)
        {
            if (prm_802 == 16)
            {
                f_at_m132 = 1;
            }
        }
        if (findbuff(prm_801, 10) != -1)
        {
            if (cdata(280 + findbuff(prm_801, 10) * 3 + 1, prm_801) + 50
                    > prm_803 * 5 / 2
                || rnd(cdata(280 + findbuff(prm_801, 10) * 3 + 1, prm_801) + 50)
                    > rnd(prm_803 + 1))
            {
                txt(lang(
                    u8"ホーリーヴェイルが呪いを防いだ。"s,
                    u8"The holy veil repels the hex."s));
                stat = 0;
                return stat;
            }
        }
        if (f_at_m132 == 1)
        {
            if (synccheck(prm_801, -1))
            {
                txtmore();
                txt(lang(
                    name(prm_801) + u8"は抵抗した。"s,
                    name(prm_801) + u8" resist"s + _s(prm_801)
                        + u8" the hex."s));
            }
            stat = 0;
            return stat;
        }
        if (cc == 0)
        {
            hostileaction(0, prm_801);
        }
    }
    if (synccheck(prm_801, -1))
    {
        txtmore();
        txt(lang(
            name(prm_801) + bufftxt(0, prm_802),
            name(prm_801) + u8" "s + bufftxt(0, prm_802) + _s(prm_801)
                + bufftxt(1, prm_802)));
    }
    cdata(280 + p_at_m132 * 3 + 0, prm_801) = prm_802;
    cdata(280 + p_at_m132 * 3 + 1, prm_801) = prm_803;
    cdata(280 + p_at_m132 * 3 + 2, prm_801) = fixeddur_at_m132;
    r1 = prm_801;
    label_1477();
    stat = 0;
    return stat;
}
void delbuff(int prm_805, int prm_806)
{
    if (prm_805 == 0)
    {
        txtef(8);
        txt(lang(
            ""s + buffname(cdata((280 + prm_806 * 3), prm_805))
                + u8"の効果が切れた。"s,
            u8"The effect of "s + buffname(cdata((280 + prm_806 * 3), prm_805))
                + u8" ends."s));
    }
    if (cdata(280 + prm_806 * 3, prm_805) == 15)
    {
        if (prm_805 == 0)
        {
            incognitoend();
        }
    }
    if (cdata(280 + prm_806 * 3, prm_805) == 16)
    {
        cbitmod(973, prm_805, 0);
    }
    if (cdata(280 + prm_806 * 3, prm_805) == 18)
    {
        cbitmod(980, prm_805, 0);
    }
    cdata(280 + prm_806 * 3, prm_805) = 0;
    {
        int cnt = prm_806;
        for (int cnt_end = cnt + (16 - prm_806 - 1); cnt < cnt_end; ++cnt)
        {
            if (cdata(280 + cnt * 3, prm_805) == 0)
            {
                if (cdata(280 + (cnt + 1) * 3, prm_805) != 0)
                {
                    cdata(280 + cnt * 3 + 0, prm_805) =
                        cdata(280 + (cnt + 1) * 3, prm_805);
                    cdata(280 + cnt * 3 + 1, prm_805) =
                        cdata(280 + (cnt + 1) * 3 + 1, prm_805);
                    cdata(280 + cnt * 3 + 2, prm_805) =
                        cdata(280 + (cnt + 1) * 3 + 2, prm_805);
                    cdata(280 + (cnt + 1) * 3 + 0, prm_805) = 0;
                    cdata(280 + (cnt + 1) * 3 + 1, prm_805) = 0;
                    cdata(280 + (cnt + 1) * 3 + 2, prm_805) = 0;
                }
                else
                {
                    break;
                }
            }
        }
    }
    r1 = prm_805;
    label_1477();
    return;
}
void animeload(int prm_807, int prm_808)
{
    elona_vector1<int> i_at_m133;
    if (mode != 0)
    {
        return;
    }
    if (synccheck(prm_808, -1) == 0)
    {
        return;
    }
    if (cfg_animewait == 0)
    {
        return;
    }
    screenupdate = -1;
    label_1419();
    dx_at_m133 = (cdata(1, prm_808) - scx) * inf_tiles + inf_screenx;
    dy_at_m133 = (cdata(2, prm_808) - scy) * inf_tiles + inf_screeny;
    gsel(7);
    picload(exedir + u8"graphic\\anime"s + prm_807 + u8".bmp"s);
    gsel(4);
    gmode(0);
    pos(0, 0);
    gcopy(0, dx_at_m133 - 24, dy_at_m133 - 40, 96, 96);
    gsel(0);
    gmode(2);
    i_at_m133(0) = 5;
    i_at_m133(1) = 50;
    r_at_m133 = 0;
    if (prm_807 == 8)
    {
        snd(65);
    }
    if (prm_807 == 10)
    {
        i_at_m133(0) = 8;
        i_at_m133(1) = 30;
        r_at_m133 = 0.2;
        snd(119);
    }
    if (prm_807 == 11)
    {
        i_at_m133(0) = 5;
        i_at_m133(1) = 50;
        r_at_m133 = 0;
        snd(118);
    }
    if (prm_807 == 14)
    {
        i_at_m133(0) = 6;
        i_at_m133(1) = 50;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (i_at_m133); cnt < cnt_end; ++cnt)
        {
            gmode(2, 96, 96);
            pos(dx_at_m133 + 24, dy_at_m133 + 8);
            grotate(7, cnt * 96, 0, r_at_m133 * cnt, 96, 96);
            gmode(0);
            redraw(1);
            redraw(0);
            pos(dx_at_m133 - 24, dy_at_m133 - 40);
            gcopy(4, 0, 0, 96, 96);
            await(cfg_animewait + i_at_m133(1));
        }
    }
    gmode(2);
    return;
}
void animeblood(int prm_809, int prm_810, int prm_811)
{
    int ele2_at_m133 = 0;
    elona_vector1<int> x_at_m133;
    elona_vector1<int> y_at_m133;
    int cnt2_at_m133 = 0;
    if (synccheck(prm_809, -1) == 0)
    {
        return;
    }
    if (cfg_animewait == 0)
    {
        return;
    }
    screenupdate = -1;
    label_1419();
    if (prm_810 == 0)
    {
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 16), chipi(3, 16) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 16), chipi(1, 16), chipi(2, 16), chipi(3, 16));
        gfini(chipi(2, 16), chipi(3, 16));
        gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
        gsel(selcur);
    }
    if (prm_810 == 1)
    {
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 18), chipi(3, 18) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 18), chipi(1, 18), chipi(2, 18), chipi(3, 18));
        gfini(chipi(2, 18), chipi(3, 18));
        gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
        gsel(selcur);
    }
    dx_at_m133 = (cdata(1, prm_809) - scx) * inf_tiles + inf_screenx;
    dy_at_m133(0) = (cdata(2, prm_809) - scy) * inf_tiles + inf_screeny;
    dy_at_m133(1) = 0;
    gsel(4);
    gmode(0);
    pos(0, 0);
    gcopy(0, dx_at_m133 - 48, dy_at_m133 - 56, 144, 160);
    ele2_at_m133 = 0;
    if (prm_811 == 52)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime18.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 51)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime19.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 50)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime20.bmp"s);
        dy_at_m133(1) = -20;
    }
    if (prm_811 == 56)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime22.bmp"s);
        dy_at_m133(1) = -24;
    }
    if (prm_811 == 53)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime21.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 54)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime23.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 57)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime24.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 59)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime25.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 58)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime26.bmp"s);
        dy_at_m133(1) = -16;
    }
    if (prm_811 == 55 || prm_811 == 63)
    {
        ele2_at_m133 = 1;
        gsel(7);
        picload(exedir + u8"graphic\\anime27.bmp"s);
        dy_at_m133(1) = -16;
    }
    gmode(2);
    gsel(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            x_at_m133(cnt) = rnd(48) - 24;
            y_at_m133(cnt) = rnd(16);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
        {
            cnt2_at_m133 = cnt * 2;
            gmode(2, inf_tiles, inf_tiles);
            if (ele2_at_m133)
            {
                pos(dx_at_m133 - 24, dy_at_m133 - 32 + dy_at_m133(1));
                gcopy(7, cnt * 96, 0, 96, 96);
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
                {
                    pos(dx_at_m133 + 24 + x_at_m133(cnt)
                            + (x_at_m133(cnt) < 3) * ((1 + (cnt % 2 == 0)) * -1)
                                * cnt2_at_m133
                            + (x_at_m133(cnt) > -4) * (1 + (cnt % 2 == 0))
                                * cnt2_at_m133,
                        dy_at_m133 + y_at_m133(cnt)
                            + cnt2_at_m133 * cnt2_at_m133 / 2 - 12 + cnt);
                    grotate(
                        1,
                        0,
                        960,
                        0.2 * cnt,
                        24 - cnt2_at_m133 * 2,
                        24 - cnt2_at_m133 * 2);
                }
            }
            gmode(0);
            redraw(1);
            redraw(0);
            pos(dx_at_m133 - 48, dy_at_m133 - 56);
            gcopy(4, 0, 0, 144, 160);
            await(cfg_animewait + 15 + (ele2_at_m133 != 0) * 20);
        }
    }
    gmode(2);
    return;
}
void resistmod(int prm_812, int prm_813, int prm_814)
{
    int lv_at_m134 = 0;
    lv_at_m134 = sorg(prm_813, prm_812) + prm_814;
    if (lv_at_m134 < 50)
    {
        lv_at_m134 = 50;
    }
    if (lv_at_m134 > 200)
    {
        lv_at_m134 = 200;
    }
    if (prm_814 >= 50)
    {
        txtef(2);
        if (prm_813 == 50)
        {
            txt(lang(
                name(prm_812) + u8"の身体は急に火照りだした。"s,
                u8"Suddenly, "s + name(prm_812) + u8" feel"s + _s(prm_812)
                    + u8" very hot."s));
        }
        if (prm_813 == 51)
        {
            txt(lang(
                name(prm_812) + u8"の身体は急に冷たくなった。"s,
                u8"Suddenly, "s + name(prm_812) + u8" feel"s + _s(prm_812)
                    + u8" cool."s));
        }
        if (prm_813 == 52)
        {
            txt(lang(
                name(prm_812) + u8"の身体に電気が走った。"s,
                name(prm_812) + u8" "s + is(prm_812)
                    + u8" struck by an electoric shock."s));
        }
        if (prm_813 == 54)
        {
            txt(lang(
                name(prm_812) + u8"は急に明晰になった。"s,
                u8"Suddenly, "s + name(prm_812) + your(prm_812)
                    + u8" mind becomes very clear."s));
        }
        if (prm_813 == 58)
        {
            txt(lang(
                name(prm_812) + u8"は急に神経が図太くなった。"s,
                name(prm_812) + your(prm_812) + u8" nerve is sharpened."s));
        }
        if (prm_813 == 53)
        {
            txt(lang(
                name(prm_812) + u8"は急に暗闇が怖くなくなった。"s,
                name(prm_812) + u8" no longer fear"s + _s(prm_812)
                    + u8" darkness."s));
        }
        if (prm_813 == 57)
        {
            txt(lang(
                name(prm_812) + u8"は騒音を気にしなくなった。"s,
                name(prm_812) + your(prm_812) + u8" eardrums get thick."s));
        }
        if (prm_813 == 59)
        {
            txt(lang(
                name(prm_812) + u8"は急にカオスを理解した。"s,
                u8"Suddenly, "s + name(prm_812) + u8" understand"s + _s(prm_812)
                    + u8" chaos."s));
        }
        if (prm_813 == 55)
        {
            txt(lang(
                name(prm_812) + u8"の毒への耐性は強くなった。"s,
                name(prm_812) + u8" now "s + have(prm_812)
                    + u8" antibodies to poisons."s));
        }
        if (prm_813 == 56)
        {
            txt(lang(
                name(prm_812) + u8"の魂は地獄に近づいた。"s,
                name(prm_812) + u8" "s + is(prm_812) + u8" no longer afraid"s
                    + _s(prm_812) + u8" of hell."s));
        }
        if (prm_813 == 60)
        {
            txt(lang(
                name(prm_812) + u8"の皮膚は魔力のオーラに包まれた。"s,
                name(prm_812) + your(prm_812)
                    + u8" body is covered by a magical aura."s));
        }
    }
    if (prm_814 <= 50 * -1)
    {
        txtef(8);
        if (prm_813 == 50)
        {
            txt(lang(
                name(prm_812) + u8"は急に汗をかきだした。"s,
                name(prm_812) + u8" sweat"s + _s(prm_812) + u8"."s));
        }
        if (prm_813 == 51)
        {
            txt(lang(
                name(prm_812) + u8"は急に寒気を感じた。"s,
                name(prm_812) + u8" shivers"s + _s(prm_812) + u8"."s));
        }
        if (prm_813 == 52)
        {
            txt(lang(
                name(prm_812) + u8"は急に電気に敏感になった。"s,
                name(prm_812) + u8" "s + is(prm_812) + u8" shocked."s));
        }
        if (prm_813 == 54)
        {
            txt(lang(
                name(prm_812) + u8"は以前ほど明晰ではなくなった。"s,
                name(prm_812) + your(prm_812) + u8" mind becomes slippery."s));
        }
        if (prm_813 == 58)
        {
            txt(lang(
                name(prm_812) + u8"の神経は急に萎縮した。"s,
                name(prm_812) + u8" become"s + _s(prm_812) + u8" dull."s));
        }
        if (prm_813 == 53)
        {
            txt(lang(
                name(prm_812) + u8"は急に暗闇が怖くなった。"s,
                u8"Suddenly, "s + name(prm_812) + u8" fear"s + _s(prm_812)
                    + u8" darkness."s));
        }
        if (prm_813 == 57)
        {
            txt(lang(
                name(prm_812) + u8"は急に辺りをうるさく感じた。"s,
                name(prm_812) + u8" become"s + _s(prm_812)
                    + u8" very sensitive to noises."s));
        }
        if (prm_813 == 59)
        {
            txt(lang(
                name(prm_812) + u8"はカオスへの理解を失った。"s,
                name(prm_812) + u8" no longer understand"s + _s(prm_812)
                    + u8" chaos."s));
        }
        if (prm_813 == 55)
        {
            txt(lang(
                name(prm_812) + u8"の毒への耐性は薄れた。"s,
                name(prm_812) + u8" lose"s + _s(prm_812, 1)
                    + u8" antibodies to poisons."s));
        }
        if (prm_813 == 56)
        {
            txt(lang(
                name(prm_812) + u8"の魂は地獄から遠ざかった。"s,
                name(prm_812) + u8" "s + is(prm_812) + u8" afraid of hell."s));
        }
        if (prm_813 == 60)
        {
            txt(lang(
                name(prm_812) + u8"の皮膚から魔力のオーラが消えた。"s,
                u8"The magical aura disappears from "s + name(prm_812)
                    + your(prm_812) + u8" body."s));
        }
    }
    sdata(prm_813 + 600, prm_812) = limit(lv_at_m134, 0, 2000) * 1000000
        + sexp(prm_813, prm_812) * 1000 + sgrowth(prm_813, prm_812);
    snd(107);
    animeload(15, prm_812);
    r1 = prm_812;
    label_1477();
    return;
}
void modcorrupt(int prm_815)
{
    int org_at_m134 = 0;
    int p_at_m134 = 0;
    int mod_at_m134 = 0;
    int cnt2_at_m134 = 0;
    int i_at_m134 = 0;
    org_at_m134 = gdata(85) / 1000;
    p_at_m134 = prm_815 + (prm_815 > 0) * gdata(800);
    if (trait(168))
    {
        if (prm_815 > 0)
        {
            p_at_m134 = p_at_m134 * 100 / 150;
        }
    }
    gdata(85) += p_at_m134;
    if (gdata(85) < 0)
    {
        gdata(85) = 0;
    }
    mod_at_m134 = gdata(85) / 1000 - org_at_m134;
    if (mod_at_m134 > 0)
    {
        if (org_at_m134 == 0)
        {
            txtef(8);
            txt(lang(
                u8"エーテルの病が発症した。"s,
                u8"The symptom of the Ether disease is shown up on you."s));
            if (cfg_extrahelp)
            {
                if (gdata(215) == 0)
                {
                    if (mode == 0)
                    {
                        if (cdata(141, 0) == 0)
                        {
                            gdata(215) = 1;
                            ghelp = 15;
                            label_2701();
                        }
                    }
                }
            }
        }
        if (org_at_m134 + mod_at_m134 >= 20)
        {
            p_at_m134 = 20 - org_at_m134;
        }
        else
        {
            p_at_m134 = mod_at_m134;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p_at_m134); cnt < cnt_end; ++cnt)
            {
                cnt2_at_m134 = cnt;
                if (org_at_m134 + cnt2_at_m134 > 20)
                {
                    break;
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (100000); cnt < cnt_end; ++cnt)
                    {
                        await();
                        tid = rnd(17) + 200;
                        traitmode = 0;
                        label_0042();
                        if (stat == 0 || traitref != 3)
                        {
                            continue;
                        }
                        if (trait(tid) <= traitref(1))
                        {
                            continue;
                        }
                        --trait(tid);
                        i_at_m134 = 700 + org_at_m134 + cnt2_at_m134;
                        gdata(i_at_m134) = tid;
                        txtef(8);
                        txt(lang(
                            u8"あなたはエーテルに侵食された。"s,
                            u8"Your disease is getting worse."s));
                        txtmore();
                        txtef(3);
                        txt(traitrefn(1));
                        if (tid == 203)
                        {
                            body = 9;
                            r1 = 0;
                            label_2196();
                        }
                        if (tid == 205)
                        {
                            body = 3;
                            r1 = 0;
                            label_2196();
                        }
                        if (tid == 206)
                        {
                            body = 2;
                            r1 = 0;
                            label_2196();
                        }
                        break;
                    }
                }
            }
        }
        animeload(8, 0);
        r1 = 0;
        label_1477();
        return;
    }
    if (mod_at_m134 < 0)
    {
        if (org_at_m134 + mod_at_m134 < 0)
        {
            p_at_m134 = org_at_m134;
        }
        else
        {
            p_at_m134 = abs(mod_at_m134);
        }
        if (p_at_m134 < 0)
        {
            p_at_m134 = 0;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p_at_m134); cnt < cnt_end; ++cnt)
            {
                cnt2_at_m134 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (100000); cnt < cnt_end; ++cnt)
                    {
                        await();
                        tid = rnd(17) + 200;
                        if (cnt == 0)
                        {
                            i_at_m134 = 700 + org_at_m134 - cnt2_at_m134 - 1;
                            if (gdata(i_at_m134) != 0)
                            {
                                tid = gdata(i_at_m134);
                            }
                        }
                        traitmode = 0;
                        label_0042();
                        if (stat == 0 || traitref != 3)
                        {
                            continue;
                        }
                        if (trait(tid) >= 0)
                        {
                            continue;
                        }
                        ++trait(tid);
                        txtef(2);
                        txt(lang(
                            u8"あなたのエーテルの侵食はやわらいだ。"s,
                            u8"The symptoms of the Ether disease seem to calm down."s));
                        txtmore();
                        txtef(2);
                        txt(traitrefn(0));
                        break;
                    }
                }
            }
        }
        animeload(10, 0);
        r1 = 0;
        label_1477();
        return;
    }
    return;
}
void wet(int prm_816, int prm_817)
{
    cdata(259, prm_816) += prm_817;
    if (synccheck(prm_816, -1))
    {
        txtmore();
        txt(lang(
            name(prm_816) + u8"は濡れた。"s,
            name(prm_816) + u8" get"s + _s(prm_816) + u8" wet."s));
        if (cbit(6, prm_816) == 1)
        {
            txtmore();
            txt(lang(
                name(prm_816) + u8"の姿があらわになった。"s,
                name(prm_816) + u8" "s + is(prm_816) + u8" revealed "s
                    + his(prm_816) + u8" shape."s));
            txtmore();
        }
    }
    return;
}
int dmgcon(int prm_818, int prm_819, int prm_820)
{
    elona::prm_818 = prm_818;
    elona::prm_820 = prm_820;
    if (prm_820 < 1)
    {
        f_at_con = 0;
    }
    else
    {
        f_at_con = 1;
    }
    if (prm_819 == 4)
    {
        if (cbit(9, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 2 + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 53;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 6;
        if (p_at_con > 0)
        {
            if (cdata(253, prm_818) == 0)
            {
                cdata(253, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は盲目になった。"s,
                        name(prm_818) + u8" "s + is(prm_818) + u8" blinded."s));
                }
            }
            else
            {
                cdata(253, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 5)
    {
        if (cbit(8, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (findbuff(prm_818, 7) != -1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 2 + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 54;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 7;
        if (p_at_con > 0)
        {
            if (cdata(254, prm_818) == 0)
            {
                cdata(254, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は混乱した。"s,
                        name(prm_818) + u8" "s + is(prm_818)
                            + u8" confused."s));
                }
            }
            else
            {
                cdata(254, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 3)
    {
        if (cbit(12, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 58;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 10;
        if (p_at_con > 0)
        {
            if (cdata(252, prm_818) == 0)
            {
                cdata(252, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は麻痺した。"s,
                        name(prm_818) + u8" "s + is(prm_818)
                            + u8" paralyzed."s));
                }
            }
            else
            {
                cdata(252, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 1)
    {
        if (cbit(13, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 3 + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 55;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 5;
        if (p_at_con > 0)
        {
            if (cdata(250, prm_818) == 0)
            {
                cdata(250, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は毒におかされた。"s,
                        name(prm_818) + u8" "s + is(prm_818)
                            + u8" poisoned."s));
                }
            }
            else
            {
                cdata(250, prm_818) += p_at_con / 3 + 3;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 2)
    {
        if (cbit(11, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 5 + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 58;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 4;
        if (p_at_con > 0)
        {
            if (cdata(251, prm_818) == 0)
            {
                cdata(251, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は眠りにおちた。"s,
                        name(prm_818) + u8" fall"s + _s(prm_818)
                            + u8" asleep."s));
                }
            }
            else
            {
                cdata(251, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 6)
    {
        if (cbit(10, prm_818) == 1)
        {
            f_at_con = 0;
        }
        if (findbuff(prm_818, 1) != -1)
        {
            f_at_con = 0;
        }
        if (findbuff(prm_818, 7) != -1)
        {
            f_at_con = 0;
        }
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 5 + 1))
            {
                f_at_con = 0;
            }
        }
        res_at_con = 54;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 7;
        if (p_at_con > 0)
        {
            if (cdata(255, prm_818) == 0)
            {
                cdata(255, prm_818) = p_at_con;
            }
            if (synccheck(prm_818, -1))
            {
                txtmore();
                txt(lang(
                    name(prm_818) + u8"は恐怖に侵された。"s,
                    name(prm_818) + u8" "s + is(prm_818) + u8" frightened."s));
            }
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 7)
    {
        if (cdata(25, prm_818) > 3)
        {
            if (rnd(cdata(38, prm_818) / 3 + 1))
            {
                f_at_con = 0;
            }
        }
        if (cdatan(2, prm_818) == u8"golem"s)
        {
            f_at_con = 0;
        }
        res_at_con = 57;
        label_1346();
        if (f_at_con == 0)
        {
            stat = 0;
            return stat;
        }
        p_at_con = p_at_con / 8;
        if (p_at_con > 0)
        {
            if (cdata(256, prm_818) == 0)
            {
                cdata(256, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は朦朧とした。"s,
                        name(prm_818) + u8" "s + is(prm_818) + u8" dimmed."s));
                }
            }
            else
            {
                cdata(256, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 9)
    {
        p_at_con = prm_820 / 25;
        if (cdata(25, prm_818) > 3)
        {
            p_at_con /= 2;
        }
        if (p_at_con > 0)
        {
            if (cdata(258, prm_818) == 0)
            {
                cdata(258, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は血を流し始めた。"s,
                        name(prm_818) + u8" begin"s + _s(prm_818)
                            + u8" to bleed."s));
                }
            }
            else
            {
                cdata(258, prm_818) += p_at_con;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 8)
    {
        p_at_con = prm_820 / 10;
        if (p_at_con > 0)
        {
            if (cdata(257, prm_818) == 0)
            {
                cdata(257, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txt(lang(
                        name(prm_818) + u8"は酔っ払った。"s,
                        name(prm_818) + u8" get"s + _s(prm_818)
                            + u8" drunk."s));
                }
            }
            else
            {
                cdata(257, prm_818) += p_at_con;
            }
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 11)
    {
        p_at_con = prm_820 / 8;
        if (p_at_con > 0)
        {
            if (cdata(260, prm_818) == 0)
            {
                cdata(260, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は気が狂った。"s,
                        name(prm_818) + u8" become"s + _s(prm_818)
                            + u8" insane."s));
                }
            }
            else
            {
                cdata(260, prm_818) += p_at_con / 3 + 1;
            }
            rowactend(prm_818);
        }
        stat = 1;
        return stat;
    }
    if (prm_819 == 12)
    {
        p_at_con = prm_820 / 10;
        if (p_at_con > 0)
        {
            if (cdata(261, prm_818) == 0)
            {
                cdata(261, prm_818) = p_at_con;
                if (synccheck(prm_818, -1))
                {
                    txtmore();
                    txtef(8);
                    txt(lang(
                        name(prm_818) + u8"は病気になった。"s,
                        name(prm_818) + u8" get"s + _s(prm_818) + u8" sick."s));
                }
            }
            else
            {
                cdata(261, prm_818) += p_at_con / 10 + 1;
            }
        }
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
void label_1346()
{
    int r_at_con = 0;
    p_at_con = rnd(prm_820 / 2 + 1) + prm_820 / 2;
    r_at_con = sdata(res_at_con, prm_818) / 50;
    p_at_con = p_at_con * 100 / (50 + r_at_con * 50);
    if (r_at_con >= 3)
    {
        if (p_at_con < 40)
        {
            f_at_con = 0;
        }
    }
    return;
}
void healhp(int prm_821, int prm_822)
{
    cdata(50, prm_821) += prm_822;
    if (cdata(50, prm_821) > cdata(51, prm_821))
    {
        cdata(50, prm_821) = cdata(51, prm_821);
    }
    return;
}
void healmp(int prm_823, int prm_824)
{
    cdata(55, prm_823) += prm_824;
    if (cdata(55, prm_823) > cdata(56, prm_823))
    {
        cdata(55, prm_823) = cdata(56, prm_823);
    }
    return;
}
void healsp(int prm_825, int prm_826)
{
    cdata(52, prm_825) += prm_826;
    if (cdata(52, prm_825) > cdata(53, prm_825))
    {
        cdata(52, prm_825) = cdata(53, prm_825);
    }
    return;
}
void healcon(int prm_827, int prm_828, int prm_829)
{
    if (prm_828 == 6)
    {
        if (cdata(255, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(255, prm_827) = 0;
            }
            else
            {
                cdata(255, prm_827) -= prm_829;
            }
            if (cdata(255, prm_827) <= 0)
            {
                cdata(255, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は恐怖から立ち直った。"s,
                        name(prm_827) + u8" shake"s + _s(prm_827) + u8" off "s
                            + his(prm_827) + u8" fear."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 4)
    {
        if (cdata(253, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(253, prm_827) = 0;
            }
            else
            {
                cdata(253, prm_827) -= prm_829;
            }
            if (cdata(253, prm_827) <= 0)
            {
                cdata(253, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は盲目から回復した。"s,
                        name(prm_827) + u8" can see again."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 5)
    {
        if (cdata(254, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(254, prm_827) = 0;
            }
            else
            {
                cdata(254, prm_827) -= prm_829;
            }
            if (cdata(254, prm_827) <= 0)
            {
                cdata(254, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は混乱から回復した。"s,
                        name(prm_827) + u8" recover"s + _s(prm_827)
                            + u8" from confusion."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 3)
    {
        if (cdata(252, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(252, prm_827) = 0;
            }
            else
            {
                cdata(252, prm_827) -= prm_829;
            }
            if (cdata(252, prm_827) <= 0)
            {
                cdata(252, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は麻痺から回復した。"s,
                        name(prm_827) + u8" recover"s + _s(prm_827)
                            + u8" from paralysis."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 1)
    {
        if (cdata(250, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(250, prm_827) = 0;
            }
            else
            {
                cdata(250, prm_827) -= prm_829;
            }
            if (cdata(250, prm_827) <= 0)
            {
                cdata(250, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は毒から回復した。"s,
                        name(prm_827) + u8" recover"s + _s(prm_827)
                            + u8" from poison."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 2)
    {
        if (cdata(251, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(251, prm_827) = 0;
            }
            else
            {
                cdata(251, prm_827) -= prm_829;
            }
            if (cdata(251, prm_827) <= 0)
            {
                cdata(251, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は心地よい眠りから覚めた。"s,
                        name(prm_827) + u8" awake"s + _s(prm_827) + u8" from "s
                            + his(prm_827) + u8" sleep."s));
                }
            }
            return;
        }
    }
    if (prm_828 == 7)
    {
        if (cdata(256, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(256, prm_827) = 0;
            }
            else
            {
                cdata(256, prm_827) -= prm_829;
            }
            if (cdata(256, prm_827) <= 0)
            {
                cdata(256, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"の意識ははっきりした。"s,
                        name(prm_827) + u8" recover"s + _s(prm_827)
                            + u8" from poison."s));
                }
            }
        }
    }
    if (prm_828 == 9)
    {
        if (cdata(258, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(258, prm_827) = 0;
            }
            else
            {
                cdata(258, prm_827) -= prm_829;
            }
            if (cdata(258, prm_827) <= 0)
            {
                cdata(258, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"の出血は止まった。"s,
                        name(prm_827) + your(prm_827) + u8" bleeding stops."s));
                }
            }
        }
    }
    if (prm_828 == 8)
    {
        if (cdata(257, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(257, prm_827) = 0;
            }
            else
            {
                cdata(257, prm_827) -= prm_829;
            }
            if (cdata(257, prm_827) <= 0)
            {
                cdata(257, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"の酔いは覚めた。"s,
                        name(prm_827) + u8" get"s + _s(prm_827)
                            + u8" sober."s));
                }
            }
        }
    }
    if (prm_828 == 11)
    {
        if (cdata(260, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(260, prm_827) = 0;
            }
            else
            {
                cdata(260, prm_827) -= prm_829;
            }
            if (cdata(260, prm_827) <= 0)
            {
                cdata(260, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"は正気に戻った。"s,
                        name(prm_827) + u8" come"s + _s(prm_827) + u8" to "s
                            + yourself(prm_827) + u8" again."s));
                }
            }
        }
    }
    if (prm_828 == 12)
    {
        if (cdata(261, prm_827) > 0)
        {
            if (prm_829 == 0)
            {
                cdata(261, prm_827) = 0;
            }
            else
            {
                cdata(261, prm_827) -= prm_829;
            }
            if (cdata(261, prm_827) <= 0)
            {
                cdata(261, prm_827) = 0;
                if (synccheck(prm_827, -1))
                {
                    txt(lang(
                        name(prm_827) + u8"の病気は治った。"s,
                        name(prm_827) + u8" recover"s + _s(prm_827)
                            + u8" from "s + his(prm_827) + u8" illness."s));
                }
            }
        }
    }
    return;
}
void spillblood(int prm_830, int prm_831, int prm_832)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_832 + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                dx_at_m136 = prm_830;
                dy_at_m136 = prm_831;
            }
            else
            {
                dx_at_m136 = prm_830 + rnd(2) - rnd(2);
                dy_at_m136 = prm_831 + rnd(2) - rnd(2);
            }
            if (dx_at_m136 < 0 || dx_at_m136 >= mdata(0) || dy_at_m136 < 0
                || dy_at_m136 >= mdata(1))
            {
                continue;
            }
            if (chipm(2, map(dx_at_m136, dy_at_m136, 0)))
            {
                continue;
            }
            if (map(dx_at_m136, dy_at_m136, 7) % 10 < 5)
            {
                ++map(dx_at_m136, dy_at_m136, 7);
            }
        }
    }
    return;
}
void spillfrag(int prm_833, int prm_834, int prm_835)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (prm_835 + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                dx_at_m136 = prm_833;
                dy_at_m136 = prm_834;
            }
            else
            {
                dx_at_m136 = prm_833 + rnd(2) - rnd(2);
                dy_at_m136 = prm_834 + rnd(2) - rnd(2);
            }
            if (dx_at_m136 < 0 || dx_at_m136 >= mdata(0) || dy_at_m136 < 0
                || dy_at_m136 >= mdata(1))
            {
                continue;
            }
            if (chipm(2, map(dx_at_m136, dy_at_m136, 0)))
            {
                continue;
            }
            if (map(dx_at_m136, dy_at_m136, 7) / 10 < 4)
            {
                map(dx_at_m136, dy_at_m136, 7) =
                    map(dx_at_m136, dy_at_m136, 7) % 10
                    + (map(dx_at_m136, dy_at_m136, 7) / 10 + 1) * 10;
            }
        }
    }
    return;
}
void check_kill(int prm_836, int prm_837)
{
    int p_at_m137 = 0;
    if (gdata(20) == 40 || gdata(20) == 35 || gdata(20) == 6)
    {
        return;
    }
    p_at_m137 = 0;
    if (prm_836 >= 0)
    {
        if (prm_836 == 0 || cdata(9, prm_836) >= 10)
        {
            if (prm_837 > 16)
            {
                ++gdata(2);
                if (cdata(27, prm_837) == gdata(268))
                {
                    if (gdata(267) > 0)
                    {
                        --gdata(267);
                    }
                }
                if (cdata(69, prm_837) >= 0)
                {
                    p_at_m137 = -2;
                }
                if (cdata(27, prm_837) == 183)
                {
                    p_at_m137 = -15;
                }
                if (cdata(27, prm_837) == 184)
                {
                    p_at_m137 = -10;
                }
                if (cdata(27, prm_837) == 185)
                {
                    p_at_m137 = -5;
                }
                if (cdata(150, prm_837) >= 1000 && cdata(150, prm_837) < 2000
                    || cdata(150, prm_837) == 2003)
                {
                    p_at_m137 = -10;
                }
                if (cdata(150, prm_837) == 13)
                {
                    modimp(prm_837, -25);
                }
            }
        }
        if (cdata(9, prm_836) >= 10)
        {
            if (prm_836 != 0)
            {
                if (cdata(17, prm_836) < 200)
                {
                    if (rnd(2))
                    {
                        modimp(prm_836, 1);
                        cdata(79, prm_836) = 317;
                    }
                }
                else
                {
                    if (rnd(10) == 0)
                    {
                        modimp(prm_836, 1);
                        cdata(79, prm_836) = 317;
                    }
                }
            }
        }
    }
    if (p_at_m137 != 0)
    {
        modkarma(0, p_at_m137);
    }
    return;
}
void item_acid(int prm_838, int prm_839)
{
    int body_at_m138 = 0;
    if (prm_839 != -1)
    {
        ci_at_m138 = prm_839;
    }
    else
    {
        ci_at_m138 = -1;
        {
            int cnt = 100;
            for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
            {
                body_at_m138 = cdata(cnt, prm_838) / 10000;
                if (body_at_m138 == 0)
                {
                    break;
                }
                p_at_m138 = cdata(cnt, prm_838) % 10000 - 1;
                if (p_at_m138 == -1)
                {
                    continue;
                }
                if (rnd(limit(30, 1, 30)) == 0)
                {
                    if (inv(20, p_at_m138) > -4)
                    {
                        ci_at_m138 = p_at_m138;
                        break;
                    }
                }
            }
        }
    }
    if (ci_at_m138 == -1)
    {
        return;
    }
    if (refitem(inv(3, ci_at_m138), 5) >= 50000)
    {
        return;
    }
    txtmore();
    if (ibit(1, ci_at_m138) == 0)
    {
        txtef(8);
        txt(lang(
            name(prm_838) + u8"の"s + itemname(ci_at_m138)
                + u8"は酸で傷ついた。"s,
            name(prm_838) + your(prm_838) + u8" "s + itemname(ci_at_m138, 0, 1)
                + u8" is damaged by acid."s));
        --inv(20, ci_at_m138);
    }
    else
    {
        txt(lang(
            name(prm_838) + u8"の"s + itemname(ci_at_m138)
                + u8"は酸では傷つかない。"s,
            name(prm_838) + your(prm_838) + u8" "s + itemname(ci_at_m138, 0, 1)
                + u8" is immune to acid."s));
    }
    return;
}
int item_fire(int prm_840, int prm_841)
{
    max_at_m138 = 0;
    ti_at_m138 = -1;
    if (prm_841 != -1)
    {
        list_at_m138(0) = prm_841;
        ++max_at_m138;
    }
    if (prm_840 != -1)
    {
        if (sdata(50, prm_840) / 50 >= 6 || cdata(25, prm_840) >= 4)
        {
            stat = 0;
            return stat;
        }
        inv_getheader(prm_840);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(3, cnt) == 567)
                {
                    if (ti_at_m138 == -1)
                    {
                        ti_at_m138 = cnt;
                        item_separate(ti_at_m138);
                    }
                    continue;
                }
                if (prm_841 == -1)
                {
                    list_at_m138(max_at_m138) = cnt;
                    ++max_at_m138;
                }
            }
        }
    }
    if (max_at_m138 == 0)
    {
        stat = 0;
        return stat;
    }
    f_at_m138 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            ci_at_m138 = list_at_m138(rnd(max_at_m138));
            if (inv(0, ci_at_m138) <= 0)
            {
                continue;
            }
            rowact_item(ci_at_m138);
            if (ibit(2, ci_at_m138) == 0)
            {
                if (ibit(5, ci_at_m138) == 0)
                {
                    a_at_m138 = refitem(inv(3, ci_at_m138), 5);
                    if (a_at_m138 == 57000)
                    {
                        if (inv(26, ci_at_m138) == 0)
                        {
                            if (prm_840 == -1)
                            {
                                if (synccheck(
                                        inv(5, ci_at_m138), inv(6, ci_at_m138)))
                                {
                                    txtef(11);
                                    txt(lang(
                                        u8"地面の"s
                                            + itemname(
                                                  ci_at_m138,
                                                  inv(0, ci_at_m138))
                                            + u8"はこんがりと焼き上がった。"s,
                                        itemname(ci_at_m138, inv(0, ci_at_m138))
                                            + u8" on the ground get"s
                                            + _s2(inv(0, ci_at_m138))
                                            + u8" perfectly broiled."s));
                                }
                            }
                            if (prm_840 != -1)
                            {
                                if (synccheck(prm_840, -1))
                                {
                                    txtef(11);
                                    txt(lang(
                                        name(prm_840) + u8"の"s
                                            + itemname(
                                                  ci_at_m138,
                                                  inv(0, ci_at_m138))
                                            + u8"はこんがりと焼き上がった。"s,
                                        name(prm_840) + your(prm_840) + u8" "s
                                            + itemname(
                                                  ci_at_m138,
                                                  inv(0, ci_at_m138),
                                                  1)
                                            + u8" get"s
                                            + _s2(inv(0, ci_at_m138))
                                            + u8" perfectly broiled."s));
                                }
                            }
                            make_dish(ci_at_m138, rnd(5) + 1);
                            f_at_m138 = 1;
                            continue;
                        }
                    }
                    if (a_at_m138 == 72000 || a_at_m138 == 59000
                        || a_at_m138 == 68000 || inv(4, ci_at_m138) >= 4)
                    {
                        continue;
                    }
                    if (inv(18, ci_at_m138) != 0)
                    {
                        if (rnd(2))
                        {
                            continue;
                        }
                    }
                    if (a_at_m138 != 56000 && a_at_m138 != 80000
                        && a_at_m138 != 55000 && a_at_m138 != 53000
                        && a_at_m138 != 54000)
                    {
                        if (rnd(4))
                        {
                            continue;
                        }
                        if (prm_840 != -1)
                        {
                            if (rnd(4))
                            {
                                continue;
                            }
                        }
                    }
                    if (ti_at_m138 != -1)
                    {
                        if (inv(0, ti_at_m138) > 0)
                        {
                            if (synccheck(prm_840, -1))
                            {
                                txt(lang(
                                    itemname(ti_at_m138, 1) + u8"が"s
                                        + name(prm_840)
                                        + u8"の持ち物を炎から守った。"s,
                                    itemname(ti_at_m138, 1) + u8" protects "s
                                        + name(prm_840) + your(prm_840)
                                        + u8" stuff from fire."s));
                            }
                            if (inv(9, ti_at_m138) > 0)
                            {
                                --inv(9, ti_at_m138);
                            }
                            else
                            {
                                if (rnd(20) == 0)
                                {
                                    --inv(0, ti_at_m138);
                                    if (synccheck(prm_840, -1))
                                    {
                                        txt(lang(
                                            itemname(ti_at_m138, 1)
                                                + u8"は灰と化した。"s,
                                            itemname(ti_at_m138, 1)
                                                + u8" turns to dust."s));
                                        break;
                                    }
                                }
                            }
                            continue;
                        }
                    }
                    p_at_m138 = rnd(inv(0, ci_at_m138)) / 2 + 1;
                    if (prm_840 != -1)
                    {
                        if (inv(18, ci_at_m138) != 0)
                        {
                            if (synccheck(prm_840, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    name(prm_840) + u8"の装備している"s
                                        + itemname(ci_at_m138, p_at_m138)
                                        + u8"は灰と化した。"s,
                                    itemname(ci_at_m138, p_at_m138) + u8" "s
                                        + name(prm_840) + u8" equip"s
                                        + _s(prm_840) + u8" turn"s
                                        + _s2(p_at_m138) + u8" to dust."s));
                            }
                            cdata(inv(18, ci_at_m138), prm_840) =
                                cdata(inv(18, ci_at_m138), prm_840) / 10000
                                * 10000;
                            inv(18, ci_at_m138) = 0;
                            r1 = prm_840;
                            label_1477();
                        }
                        else
                        {
                            if (synccheck(prm_840, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    name(prm_840) + u8"の"s
                                        + itemname(ci_at_m138, p_at_m138)
                                        + u8"は灰と化した。"s,
                                    name(prm_840) + your(prm_840) + u8" "s
                                        + itemname(ci_at_m138, p_at_m138, 1)
                                        + u8" turn"s + _s2(p_at_m138)
                                        + u8" to dust."s));
                            }
                        }
                    }
                    else
                    {
                        if (synccheck(inv(5, ci_at_m138), inv(6, ci_at_m138)))
                        {
                            txtef(8);
                            txt(lang(
                                u8"地面の"s + itemname(ci_at_m138, p_at_m138)
                                    + u8"は灰と化した。"s,
                                itemname(ci_at_m138, p_at_m138)
                                    + u8" on the ground turn"s + _s(p_at_m138)
                                    + u8" to dust."s));
                        }
                    }
                    inv(0, ci_at_m138) -= p_at_m138;
                    cell_refresh(inv(5, ci_at_m138), inv(6, ci_at_m138));
                    f_at_m138 = 1;
                }
            }
        }
    }
    label_1521();
    stat = f_at_m138;
    return stat;
}
void mapitem_fire(int prm_842, int prm_843)
{
    if (map(prm_842, prm_843, 4) == 0)
    {
        return;
    }
    inv_getheader(-1);
    ci_at_m138 = -1;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(5, cnt) == prm_842)
            {
                if (inv(6, cnt) == prm_843)
                {
                    ci_at_m138 = cnt;
                    break;
                }
            }
        }
    }
    if (ci_at_m138 != -1)
    {
        item_fire(-1, ci_at_m138);
        if (stat == 1)
        {
            if (map(prm_842, prm_843, 8) == 0)
            {
                addmef(prm_842, prm_843, 5, 24, rnd(10) + 5, 100, cc);
            }
        }
        cell_refresh(prm_842, prm_843);
    }
    return;
}
int item_cold(int prm_844, int prm_845)
{
    std::string s_at_m138;
    max_at_m138 = 0;
    ti_at_m138 = -1;
    if (prm_845 != -1)
    {
        list_at_m138(0) = prm_845;
        ++max_at_m138;
    }
    if (prm_844 != -1)
    {
        if (sdata(51, prm_844) / 50 >= 6 || cdata(25, prm_844) >= 4)
        {
            stat = 0;
            return stat;
        }
        inv_getheader(prm_844);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(3, cnt) == 568)
                {
                    if (ti_at_m138 == -1)
                    {
                        ti_at_m138 = cnt;
                        item_separate(ti_at_m138);
                    }
                    continue;
                }
                if (prm_845 == -1)
                {
                    list_at_m138(max_at_m138) = cnt;
                    ++max_at_m138;
                }
            }
        }
    }
    if (max_at_m138 == 0)
    {
        stat = 0;
        return stat;
    }
    f_at_m138 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            ci_at_m138 = list_at_m138(rnd(max_at_m138));
            if (inv(0, ci_at_m138) <= 0)
            {
                continue;
            }
            rowact_item(ci_at_m138);
            txtmore();
            if (ibit(5, ci_at_m138) == 0)
            {
                a_at_m138 = refitem(inv(3, ci_at_m138), 5);
                if (prm_844 == -1)
                {
                    s_at_m138 = "";
                }
                else
                {
                    s_at_m138 = name(prm_844) + lang(u8"の"s, your(prm_844));
                }
                if (a_at_m138 == 72000 || a_at_m138 == 59000
                    || a_at_m138 == 68000)
                {
                    continue;
                }
                if (inv(4, ci_at_m138) >= 4 || inv(18, ci_at_m138) != 0)
                {
                    continue;
                }
                if (a_at_m138 != 52000)
                {
                    if (rnd(30))
                    {
                        continue;
                    }
                }
                if (ti_at_m138 != -1)
                {
                    if (inv(0, ti_at_m138) > 0)
                    {
                        txt(lang(
                            itemname(ti_at_m138, 1) + u8"が"s + name(prm_844)
                                + u8"の持ち物を冷気から守った。"s,
                            itemname(ti_at_m138, 1) + u8" protects "s
                                + name(prm_844) + your(prm_844)
                                + u8" stuff from cold."s));
                        if (inv(9, ti_at_m138) > 0)
                        {
                            --inv(9, ti_at_m138);
                        }
                        else
                        {
                            if (rnd(20) == 0)
                            {
                                txt(lang(
                                    itemname(ti_at_m138, 1)
                                        + u8"は粉々に砕けた。"s,
                                    itemname(ti_at_m138, 1)
                                        + u8" is broken to pieces."s));
                                --inv(0, ti_at_m138);
                                break;
                            }
                        }
                        continue;
                    }
                }
                p_at_m138 = rnd(inv(0, ci_at_m138)) / 2 + 1;
                txtef(8);
                txt(lang(
                    s_at_m138 + itemname(ci_at_m138, p_at_m138)
                        + u8"は粉々に砕けた。"s,
                    s_at_m138 + itemname(ci_at_m138, p_at_m138) + u8" break"s
                        + _s2(p_at_m138) + u8" to pieces."s));
                inv(0, ci_at_m138) -= p_at_m138;
                f_at_m138 = 1;
            }
        }
    }
    label_1521();
    stat = f_at_m138;
    return stat;
}
void mapitem_cold(int prm_846, int prm_847)
{
    if (map(prm_846, prm_847, 4) == 0)
    {
        return;
    }
    inv_getheader(-1);
    ci_at_m138 = -1;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(5, cnt) == prm_846)
            {
                if (inv(6, cnt) == prm_847)
                {
                    ci_at_m138 = cnt;
                    break;
                }
            }
        }
    }
    if (ci_at_m138 != -1)
    {
        item_cold(-1, ci_at_m138);
        cell_refresh(prm_846, prm_847);
    }
    return;
}
int copy_chara(int prm_848)
{
    int c_at_m139 = 0;
    int f_at_m139 = 0;
    int y_at_m139 = 0;
    int x_at_m139 = 0;
    c_at_m139 = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                c_at_m139 = cnt;
                break;
            }
        }
    }
    if (c_at_m139 == 0)
    {
        stat = 0;
        return stat;
    }
    f_at_m139 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            y_at_m139 =
                cdata(2, prm_848) - rnd((cnt / 4 + 1)) + rnd((cnt / 4 + 1));
            if (y_at_m139 < 0 || y_at_m139 >= mdata(1))
            {
                continue;
            }
            x_at_m139 =
                cdata(1, prm_848) - rnd((cnt / 4 + 1)) + rnd((cnt / 4 + 1));
            if (x_at_m139 < 0 || x_at_m139 >= mdata(0))
            {
                continue;
            }
            if (map(x_at_m139, y_at_m139, 1) == 0)
            {
                if ((chipm(7, map(x_at_m139, y_at_m139, 0)) && 4) == 0)
                {
                    f_at_m139 = 1;
                    break;
                }
            }
        }
    }
    if (f_at_m139 == 0)
    {
        stat = 0;
        return stat;
    }
    del_chara(c_at_m139);
    memcpy(sdata, 0, c_at_m139, sdata, 0, prm_848, 4800);
    memcpy(cdata, 0, c_at_m139, cdata, 0, prm_848, 2000);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cdatan(cnt, c_at_m139) = cdatan(cnt, prm_848);
        }
    }
    map(x_at_m139, y_at_m139, 1) = c_at_m139 + 1;
    cdata(1, c_at_m139) = x_at_m139;
    cdata(2, c_at_m139) = y_at_m139;
    cdata(17, c_at_m139) = 0;
    cdata(30, c_at_m139) = 0;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            cdata(cnt, c_at_m139) = cdata(cnt, c_at_m139) / 10000 * 10000;
        }
    }
    cdata(69, c_at_m139) = -3;
    cbitmod(967, c_at_m139, 0);
    cbitmod(960, c_at_m139, 0);
    cbitmod(961, c_at_m139, 0);
    cbitmod(975, c_at_m139, 0);
    cbitmod(981, c_at_m139, 1);
    cbitmod(985, c_at_m139, 0);
    stat = 1;
    return stat;
}
void txteledmg(int prm_849, int prm_850, int prm_851, int prm_852)
{
    if (prm_852 == 50)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は燃え上がった。"s,
                    name(prm_851) + u8" "s + is(prm_851) + u8" burnt."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"燃やし尽くした。"s,
                u8"burn"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" to death."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は燃え尽きて灰になった。"s,
                name(prm_851) + u8" "s + is(prm_851) + u8" burnt to ashes."s));
        }
        return;
    }
    if (prm_852 == 51)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は凍えた。"s,
                    name(prm_851) + u8" "s + is(prm_851) + u8" frozen."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"氷の塊に変えた。"s,
                u8"transform"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" to an ice sculpture."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は氷の彫像になった。"s,
                name(prm_851) + u8" "s + is(prm_851) + u8" frozen and turn"s
                    + _s(prm_851) + u8" into an ice sculpture."s));
        }
        return;
    }
    if (prm_852 == 52)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"に電流が走った。"s,
                    name(prm_851) + u8" "s + is(prm_851) + u8" shocked."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"焦げカスにした。"s,
                u8"electrocute"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" to death."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は雷に打たれ死んだ。"s,
                name(prm_851) + u8" "s + is(prm_851)
                    + u8" struck by lightning and die"s + _s(prm_851)
                    + u8"."s));
        }
        return;
    }
    if (prm_852 == 53)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は闇の力で傷ついた。"s,
                    name(prm_851) + u8" "s + is(prm_851)
                        + u8" struck by dark force."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"闇に飲み込んだ。"s,
                u8"let"s + _s(prm_850) + u8" the depths swallow "s
                    + him(prm_851) + u8"."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は闇に蝕まれて死んだ。"s,
                name(prm_851) + u8" "s + is(prm_851)
                    + u8" consumed by darkness."s));
        }
        return;
    }
    if (prm_852 == 58)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"の神経は傷ついた。"s,
                    name(prm_851) + your(prm_851) + u8" nerves are hurt."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"神経を破壊した。"s,
                u8"destroy"s + _s(prm_850) + u8" "s + his(prm_851)
                    + u8" nerves."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は神経を蝕まれて死んだ。"s,
                name(prm_851) + u8" die"s + _s(prm_851)
                    + u8" from neurofibroma."s));
        }
        return;
    }
    if (prm_852 == 54)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は狂気に襲われた。"s,
                    name(prm_851) + u8" suffer"s + _s(prm_851)
                        + u8" a splitting headache."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"再起不能にした。"s,
                u8"completely disable"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8"."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は発狂して死んだ。"s,
                name(prm_851) + u8" lose"s + _s(prm_851) + u8" "s + his(prm_851)
                    + u8" mind and commit"s + _s(prm_851) + u8" a suicde."s));
        }
        return;
    }
    if (prm_852 == 59)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は混沌の渦で傷ついた。"s,
                    name(prm_851) + u8" "s + is(prm_851)
                        + u8" hurt by chaotic force."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"混沌の渦に吸い込んだ。"s,
                u8"let"s + _s(prm_850) + u8" the chaos consume "s + him(prm_851)
                    + u8"."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は混沌の渦に吸収された。"s,
                name(prm_851) + u8" "s + is(prm_851)
                    + u8" drawn into a chaotic vortex."s));
        }
        return;
    }
    if (prm_852 == 56)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は冥界の冷気で傷ついた。"s,
                    name(prm_851) + u8" "s + is(prm_851)
                        + u8" chilled by infernal squall."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"冥界に墜とした。"s,
                u8"entrap"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" into the inferno."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は冥界に墜ちた。"s,
                name(prm_851) + u8" go"s + _s(prm_851, 1) + u8" to hell."s));
        }
        return;
    }
    if (prm_852 == 55)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は吐き気を催した。"s,
                    name(prm_851) + u8" suffer"s + _s(prm_851)
                        + u8" from venom."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"毒殺した。"s,
                u8"kill"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" with poison."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は毒に蝕まれて死んだ。"s,
                name(prm_851) + u8" "s + is(prm_851)
                    + u8" poisoned to death."s));
        }
        return;
    }
    if (prm_852 == 57)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は轟音の衝撃を受けた。"s,
                    name(prm_851) + u8" "s + is(prm_851)
                        + u8" shocked by a shrill sound"s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"聴覚を破壊し殺した。"s,
                u8"shatter"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" to atoms."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は朦朧となって死んだ。"s,
                name(prm_851) + u8" resonate"s + _s(prm_851)
                    + u8" and break up."s));
        }
        return;
    }
    if (prm_852 == 63)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は酸に焼かれた。"s,
                    name(prm_851) + u8" "s + is(prm_851)
                        + u8" burnt by acid."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"ドロドロに溶かした。"s,
                u8"melt"s + _s(prm_850) + u8" "s + him(prm_851) + u8" away."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は酸に焼かれ溶けた。"s,
                name(prm_851) + u8" melt"s + _s(prm_851) + u8"."s));
        }
        return;
    }
    if (prm_852 == 61)
    {
        if (prm_849 == 0)
        {
            if (synccheck(prm_851, -1))
            {
                txt(lang(
                    name(prm_851) + u8"は切り傷を負った。"s,
                    name(prm_851) + u8" get"s + _s(prm_851) + u8" a cut."s));
            }
        }
        if (prm_849 == 1)
        {
            txt(lang(
                u8"千切りにした。"s,
                u8"cut"s + _s(prm_850) + u8" "s + him(prm_851)
                    + u8" into thin strips."s));
        }
        if (prm_849 == 2)
        {
            txt(lang(
                name(prm_851) + u8"は千切りになった。"s,
                name(prm_851) + u8" "s + is(prm_851)
                    + u8" cut into thin strips."s));
        }
        return;
    }
    if (prm_849 == 0)
    {
        if (synccheck(prm_851, -1))
        {
            txt(lang(
                name(prm_851) + u8"は傷ついた。"s,
                name(prm_851) + u8" "s + is(prm_851) + u8" wounded."s));
        }
    }
    if (prm_849 == 1)
    {
        txt(lang(
            u8"殺した。"s,
            u8"kill"s + _s(prm_850) + u8" "s + him(prm_851) + u8"."s));
    }
    if (prm_849 == 2)
    {
        txt(lang(
            name(prm_851) + u8"は死んだ。"s,
            name(prm_851) + u8" "s + is(prm_851) + u8" killed."s));
    }
    return;
}
int dmghp(int prm_853, int prm_854, int prm_855, int prm_856, int prm_857)
{
    int ele_at_m141 = 0;
    int c3_at_m141 = 0;
    int r_at_m141 = 0;
    int dmglevel_at_m141 = 0;
    int f_at_m141 = 0;
    int pcnoise_at_m141 = 0;
    int se_at_m141 = 0;
    elona_vector1<int> p_at_m141;
    int exp_at_m141 = 0;
    int cc_at_m141 = 0;
    elona::prm_853 = prm_853;
    ele_at_m141 = prm_856;
    if (txt3rd == 0)
    {
        c3_at_m141 = prm_855;
    }
    else
    {
        c3_at_m141 = -1;
    }
    if (cdata(0, prm_853) != 1)
    {
        label_1370();
        stat = 0;
        return stat;
    }
    dmg_at_m141 = prm_854 * (1 + (cdata(264, prm_853) > 0));
    if (prm_855 >= 0)
    {
        if (cdata(264, prm_855) > 0)
        {
            dmg_at_m141 *= 2;
        }
    }
    if (ele_at_m141 == 0 || ele_at_m141 >= 61)
    {
    }
    else
    {
        r_at_m141 = sdata(ele_at_m141, prm_853) / 50;
        if (r_at_m141 < 3)
        {
            dmg_at_m141 =
                dmg_at_m141 * 150 / limit((r_at_m141 * 50 + 50), 40, 150);
        }
        else
        {
            if (r_at_m141 < 10)
            {
                dmg_at_m141 = dmg_at_m141 * 100 / (r_at_m141 * 50 + 50);
            }
            else
            {
                dmg_at_m141 = 0;
            }
        }
        dmg_at_m141 = dmg_at_m141 * 100 / (sdata(60, prm_853) / 2 + 50);
    }
    if (prm_855 == 0)
    {
        if (critical)
        {
            snd(3);
        }
        else
        {
            snd(2);
        }
    }
    if (cdata(259, prm_853) > 0)
    {
        if (ele_at_m141 == 50 || prm_855 == -9)
        {
            dmg_at_m141 = dmg_at_m141 / 3;
            ele_at_m141 = 0;
        }
        if (ele_at_m141 == 52)
        {
            dmg_at_m141 = dmg_at_m141 * 3 / 2;
        }
    }
    if (ele_at_m141)
    {
        if (ele_at_m141 != 60)
        {
            if (cbit(26, prm_853))
            {
                dmg_at_m141 = 0;
            }
        }
    }
    if (cbit(28, prm_853))
    {
        dmg_at_m141 = rnd(dmg_at_m141 / 10 + 2);
    }
    if (cbit(980, prm_853))
    {
        if (cdata(50, prm_853) - dmg_at_m141 <= 0)
        {
            if (limit(
                    25
                        + cdata((280 + findbuff(prm_853, 18) * 3 + 1), prm_853)
                            / 17,
                    25,
                    80)
                >= rnd(100))
            {
                dmg_at_m141 *= -1;
            }
        }
    }
    if (cdata(91, prm_853) > 0)
    {
        if (cdata(91, prm_853) > rnd(100))
        {
            dmg_at_m141 = 0;
        }
    }
    if (ele_at_m141 == 658)
    {
        dmg_at_m141 = prm_854;
    }
    rtdmg = dmg_at_m141;
    cdata(50, prm_853) -= dmg_at_m141;
    if (ele_at_m141 == 56)
    {
        if (prm_855 >= 0)
        {
            if (dmg_at_m141 > 0)
            {
                healhp(
                    prm_855,
                    limit(
                        rnd(dmg_at_m141 * (150 + prm_857 * 2) / 1000 + 10),
                        1,
                        cdata(51, prm_855) / 10 + rnd(5)));
            }
        }
    }
    if (prm_853 == 0)
    {
        if (cdata(61, 0) == 5)
        {
            dmg_at_m141 = dmg_at_m141 * 90 / 100;
        }
        if (prm_855 == 0)
        {
            lasttc = prm_853;
        }
        gdata(30) = 0;
        if (cdata(50, prm_853) < 0)
        {
            if (evid() != -1)
            {
                if (evid() != 21)
                {
                    cdata(50, prm_853) = 1;
                }
            }
            if (gdata(20) == 40)
            {
                cdata(50, prm_853) = 1;
            }
        }
    }
    if (dmg_at_m141 <= 0)
    {
        dmglevel_at_m141 = -1;
    }
    else
    {
        dmglevel_at_m141 = dmg_at_m141 * 6 / cdata(51, prm_853);
    }
    if (cdata(50, prm_853) < 0)
    {
        if (prm_853 < 16)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (prm_853 == cnt)
                    {
                        continue;
                    }
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cbit(21, cnt) == 0)
                    {
                        continue;
                    }
                    if (cbit(974, cnt) == 0)
                    {
                        continue;
                    }
                    cbitmod(974, cnt, 0);
                    txtef(9);
                    txt(lang(
                        name(cnt)
                            + u8"は叫んだ。「この者にジュアの加護を。レイハンド！」"s,
                        name(cnt) + u8" shout"s + _s(cnt) + u8", "s
                            + cnvtalk(u8"Lay hand!"s)));
                    txtmore();
                    txt(lang(
                        name(prm_853) + u8"は回復した。"s,
                        name(prm_853) + u8" "s + is(prm_853) + u8" healed."s));
                    cdata(50, prm_853) = cdata(51, prm_853) / 2;
                    animeid = 19;
                    animode = 100 + prm_853;
                    label_1426();
                    snd(120);
                    break;
                }
            }
        }
        else
        {
            if (cbit(985, prm_853))
            {
                cdata(50, prm_853) = cdata(51, prm_853);
            }
        }
    }
    if (cdata(50, prm_853) >= 0)
    {
        if (dmglevel_at_m141 > 1)
        {
            spillblood(cdata(1, prm_853), cdata(2, prm_853), 1 + rnd(2));
        }
        if (gdata(809) == 1)
        {
            if (dmglevel_at_m141 >= 1)
            {
            }
            txteledmg(0, c3_at_m141, prm_853, ele_at_m141);
            goto label_1369_internal;
        }
        if (dmglevel_at_m141 > 0)
        {
            if (cdata(51, prm_853) / 2 > cdata(50, prm_853))
            {
                ++dmglevel_at_m141;
                if (cdata(51, prm_853) / 4 > cdata(50, prm_853))
                {
                    ++dmglevel_at_m141;
                    if (cdata(51, prm_853) / 10 > cdata(50, prm_853))
                    {
                        ++dmglevel_at_m141;
                    }
                }
            }
        }
        if (gdata(809) == 2)
        {
            txtcontinue();
            if (dmglevel_at_m141 == -1)
            {
                txt(lang(
                    u8"かすり傷をつけた。"s,
                    u8"make"s + _s(c3_at_m141) + u8" a scratch."s));
            }
            if (dmglevel_at_m141 == 0)
            {
                txtef(5);
                txt(lang(
                    u8"軽い傷を負わせた。"s,
                    u8"slightly wound"s + _s(c3_at_m141) + u8" "s + him(prm_853)
                        + u8"."s));
            }
            if (dmglevel_at_m141 == 1)
            {
                txtef(11);
                txt(lang(
                    u8"傷つけた。"s,
                    u8"moderately wound"s + _s(c3_at_m141) + u8" "s
                        + him(prm_853) + u8"."s));
            }
            if (dmglevel_at_m141 == 2)
            {
                txtef(10);
                txt(lang(
                    u8"深い傷を負わせた。"s,
                    u8"severely wound"s + _s(c3_at_m141) + u8" "s + him(prm_853)
                        + u8"."s));
            }
            if (dmglevel_at_m141 >= 3)
            {
                txtef(3);
                txt(lang(
                    u8"致命傷を与えた。"s,
                    u8"critically wound"s + _s(c3_at_m141) + u8" "s
                        + him(prm_853) + u8"!"s));
            }
            rowact_check(prm_853);
            goto label_1369_internal;
        }
        if (dmglevel_at_m141 == 1)
        {
            if (synccheck(prm_853, -1))
            {
                txtmore();
                txtef(11);
                txt(lang(
                    name(prm_853) + u8"は痛手を負った。"s,
                    name(prm_853) + u8" scream"s + _s(prm_853) + u8"."s));
            }
        }
        if (dmglevel_at_m141 == 2)
        {
            if (synccheck(prm_853, -1))
            {
                txtmore();
                txtef(10);
                txt(lang(
                    name(prm_853) + u8"は苦痛にもだえた。"s,
                    name(prm_853) + u8" writhe"s + _s(prm_853)
                        + u8" in pain."s));
            }
        }
        if (dmglevel_at_m141 >= 3)
        {
            if (synccheck(prm_853, -1))
            {
                txtmore();
                txtef(3);
                txt(lang(
                    name(prm_853) + u8"は悲痛な叫び声をあげた。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" severely hurt!"s));
            }
        }
        if (dmg_at_m141 < 0)
        {
            if (cdata(50, prm_853) > cdata(51, prm_853))
            {
                cdata(50, prm_853) = cdata(51, prm_853);
            }
            if (synccheck(prm_853, -1))
            {
                txtef(4);
                txt(lang(
                    name(prm_853) + u8"は回復した。"s,
                    name(prm_853) + u8" "s + is(prm_853) + u8" healed."s));
            }
        }
    label_1369_internal:
        rowact_check(prm_853);
        if (cdata(50, prm_853) < cdata(51, prm_853) / 5)
        {
            if (prm_853 != 0)
            {
                if (cdata(255, prm_853) == 0)
                {
                    if (cbit(10, prm_853) == 0)
                    {
                        if (dmg_at_m141 * 100 / cdata(51, prm_853) + 10
                            > rnd(200))
                        {
                            f_at_m141 = 1;
                        }
                        else
                        {
                            f_at_m141 = 0;
                        }
                        if (prm_855 == 0)
                        {
                            if (trait(44))
                            {
                                f_at_m141 = 0;
                            }
                        }
                        if (f_at_m141)
                        {
                            cdata(255, prm_853) = rnd(20) + 5;
                            if (synccheck(prm_853, -1))
                            {
                                txtmore();
                                txtef(4);
                                txt(lang(
                                    name(prm_853) + u8"は恐怖して逃げ出した。"s,
                                    name(prm_853) + u8" run"s + _s(prm_853)
                                        + u8" away in terror."s));
                            }
                        }
                    }
                }
            }
        }
        if (ele_at_m141)
        {
            if (ele_at_m141 == 59)
            {
                if (rnd(10) < prm_857 / 75 + 4)
                {
                    dmgcon(prm_853, 4, rnd(prm_857 / 3 * 2 + 1));
                }
                if (rnd(20) < prm_857 / 50 + 4)
                {
                    dmgcon(prm_853, 3, rnd(prm_857 / 3 * 2 + 1));
                }
                if (rnd(20) < prm_857 / 50 + 4)
                {
                    dmgcon(prm_853, 5, rnd(prm_857 / 3 * 2 + 1));
                }
                if (rnd(20) < prm_857 / 50 + 4)
                {
                    dmgcon(prm_853, 1, rnd(prm_857 / 3 * 2 + 1));
                }
                if (rnd(20) < prm_857 / 50 + 4)
                {
                    dmgcon(prm_853, 2, rnd(prm_857 / 3 * 2 + 1));
                }
            }
            if (ele_at_m141 == 52)
            {
                if (rnd(3 + (cdata(25, prm_853) >= 4) * 3) == 0)
                {
                    ++cdata(252, prm_853);
                }
            }
            if (ele_at_m141 == 53)
            {
                dmgcon(prm_853, 4, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 58)
            {
                dmgcon(prm_853, 3, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 54)
            {
                dmgcon(prm_853, 5, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 57)
            {
                dmgcon(prm_853, 5, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 55)
            {
                dmgcon(prm_853, 1, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 61)
            {
                dmgcon(prm_853, 9, rnd(prm_857 + 1));
            }
            if (ele_at_m141 == 62)
            {
                if (prm_853 == 0)
                {
                    modcorrupt(rnd(prm_857 + 1));
                }
            }
            if (ele_at_m141 == 63)
            {
                if (prm_853 == 0 || rnd(3) == 0)
                {
                    item_acid(prm_853, -1);
                }
            }
        }
        if (ele_at_m141 == 50 || prm_855 == -9)
        {
            item_fire(prm_853, -1);
        }
        if (ele_at_m141 == 51)
        {
            item_cold(prm_853, -1);
        }
        if (cdata(251, prm_853) != 0)
        {
            if (ele_at_m141 != 54 && ele_at_m141 != 58 && ele_at_m141 != 59)
            {
                cdata(251, prm_853) = 0;
                txtmore();
                txt(lang(
                    name(prm_853) + u8"は眠りを妨げられた。"s,
                    name(prm_853) + your(prm_853) + u8" sleep "s + is(prm_853)
                        + u8" disturbed."s));
            }
        }
        if (prm_855 == 0)
        {
            pcnoise_at_m141 = 100;
            hostileaction(0, prm_853);
            gdata(94) = prm_853;
        }
        if (prm_853 == 0)
        {
            if (cdata(51, prm_853) / 4 > cdata(50, prm_853))
            {
                if (cfg_sound == 1)
                {
                    if (cfg_heart == 1)
                    {
                        CHECKPLAY(32);
                        if (stat == 0)
                        {
                            snd(32);
                        }
                    }
                }
            }
        }
        if (cbit(18, prm_853))
        {
            if (rnd(3) == 0)
            {
                cbitmod(972, prm_853, 1);
                txtef(9);
                txtmore();
                txt(lang(u8" *カチッ* "s, u8"*click*"s));
            }
        }
        if (cbit(23, prm_853))
        {
            if (gdata(809) != 1)
            {
                if (dmg_at_m141 > cdata(51, prm_853) / 20 || rnd(10) == 0)
                {
                    if (mdata(6) != 1)
                    {
                        copy_chara(prm_853);
                        if (stat == 1)
                        {
                            txt(lang(
                                name(prm_853) + u8"は分裂した！"s,
                                name(prm_853) + u8" split"s + _s(prm_853)
                                    + u8"!"s));
                        }
                    }
                }
            }
        }
        if (cbit(27, prm_853))
        {
            if (gdata(809) != 1)
            {
                if (rnd(3) == 0)
                {
                    if (cdata(254, prm_853) == 0 && cdata(256, prm_853) == 0
                        && cdata(250, prm_853) == 0 && cdata(252, prm_853) == 0
                        && cdata(253, prm_853) == 0)
                    {
                        if (mdata(6) != 1)
                        {
                            copy_chara(prm_853);
                            if (stat == 1)
                            {
                                txt(lang(
                                    name(prm_853) + u8"は分裂した！"s,
                                    name(prm_853) + u8" split"s + _s(prm_853)
                                        + u8"!"s));
                            }
                        }
                    }
                }
            }
        }
        if (cbit(32, prm_853))
        {
            if (gdata(809) != 1)
            {
                if (cdata(264, prm_853) == 0)
                {
                    if (rnd(20) == 0)
                    {
                        if (synccheck(prm_853, -1))
                        {
                            txtef(4);
                            txt(lang(
                                name(prm_853) + u8"は怒りに体を奮わせた！"s,
                                name(prm_853) + u8" "s + is(prm_853)
                                    + u8" engulfed in fury!"s));
                        }
                        cdata(264, prm_853) += rnd(30) + 15;
                    }
                }
            }
        }
        if (prm_855 >= 0)
        {
            f_at_m141 = 0;
            if (cdata(9, prm_853) <= -3)
            {
                if (cdata(69, prm_855) > -3)
                {
                    if (cdata(201, prm_853) == 0 || rnd(4) == 0)
                    {
                        f_at_m141 = 1;
                    }
                }
            }
            else
            {
                if (cdata(69, prm_855) <= -3)
                {
                    if (cdata(201, prm_853) == 0 || rnd(4) == 0)
                    {
                        f_at_m141 = 1;
                    }
                }
            }
            if (prm_855 != 0)
            {
                if (cdata(29, prm_855) == prm_853)
                {
                    if (rnd(3) == 0)
                    {
                        f_at_m141 = 1;
                    }
                }
            }
            if (f_at_m141)
            {
                if (prm_853 != 0)
                {
                    cdata(29, prm_853) = prm_855;
                    if (cdata(201, prm_853) == 0)
                    {
                        cdata(79, prm_853) = 218;
                        cdata(201, prm_853) = 20;
                    }
                    else
                    {
                        cdata(201, prm_853) += 2;
                    }
                }
            }
        }
    }
    if (cdata(50, prm_853) < 0)
    {
        se_at_m141 = eleinfo(ele_at_m141, 1);
        if (se_at_m141)
        {
            snd(se_at_m141, 0, 1);
        }
        txtmore();
        txtef(3);
        if (prm_855 >= 0)
        {
            if (ele_at_m141)
            {
                if (prm_853 >= 16 && gdata(809) == 2)
                {
                    txtcontinue();
                    txteledmg(1, c3_at_m141, prm_853, ele_at_m141);
                }
                else
                {
                    txteledmg(2, c3_at_m141, prm_853, ele_at_m141);
                }
            }
            else
            {
                p_at_m141 = rnd(4);
                if (p_at_m141 == 0)
                {
                    if (prm_853 >= 16 && gdata(809) == 2)
                    {
                        txtcontinue();
                        txt(lang(
                            u8"粉々の肉片に変えた。"s,
                            u8"transform"s + _s(c3_at_m141) + u8" "s
                                + him(prm_853)
                                + u8" into several pieces of meat."s));
                    }
                    else
                    {
                        txt(lang(
                            name(prm_853) + u8"は粉々の肉片に変えられた。"s,
                            name(prm_853) + u8" "s + is(prm_853)
                                + u8" transformed into several pieces of meat."s));
                    }
                }
                if (p_at_m141 == 1)
                {
                    if (prm_853 >= 16 && gdata(809) == 2)
                    {
                        txtcontinue();
                        txt(lang(
                            u8"破壊した。"s,
                            u8"destroy"s + _s(c3_at_m141) + u8" "s
                                + him(prm_853) + u8"."s));
                    }
                    else
                    {
                        txt(lang(
                            name(prm_853) + u8"は破壊された。"s,
                            name(prm_853) + u8" "s + is(prm_853)
                                + u8" killed."s));
                    }
                }
                if (p_at_m141 == 2)
                {
                    if (prm_853 >= 16 && gdata(809) == 2)
                    {
                        txtcontinue();
                        txt(lang(
                            u8"ミンチにした。"s,
                            u8"mince"s + _s(c3_at_m141) + u8" "s + him(prm_853)
                                + u8"."s));
                    }
                    else
                    {
                        txt(lang(
                            name(prm_853) + u8"はミンチにされた。"s,
                            name(prm_853) + u8" "s + is(prm_853)
                                + u8" minced."s));
                    }
                }
                if (p_at_m141 == 3)
                {
                    if (prm_853 >= 16 && gdata(809) == 2)
                    {
                        txtcontinue();
                        txt(lang(
                            u8"殺した。"s,
                            u8"kill"s + _s(c3_at_m141) + u8" "s + him(prm_853)
                                + u8"."s));
                    }
                    else
                    {
                        txt(lang(
                            name(prm_853) + u8"は殺された。"s,
                            name(prm_853) + u8" "s + is(prm_853)
                                + u8" slain."s));
                    }
                }
            }
            ndeathcause = lang(
                cdatan(0, cc) + u8"に殺された。"s,
                u8"was killed by "s + cdatan(0, cc));
        }
        else
        {
            if (prm_855 == -11)
            {
                txt(lang(
                    name(prm_853) + u8"は見えざる手に葬られた。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" assassinated by the unseen hand."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"見えざる手に葬られた。"s,
                        u8"got assassinated by the unseen hand"s);
                }
            }
            if (prm_855 == -1)
            {
                txt(lang(
                    name(prm_853) + u8"は罠にかかって死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" caught in a trap and die"s + _s(prm_853)
                        + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"罠にかかって死んだ。"s,
                        u8"got caught in a trap and died"s);
                }
            }
            if (prm_855 == -2)
            {
                txt(lang(
                    name(prm_853) + u8"はマナの反動で死んだ。"s,
                    name(prm_853) + u8" die"s + _s(prm_853)
                        + u8" from over-casting."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"マナの反動で消滅した。"s,
                        u8"was completely wiped by magic reaction"s);
                }
            }
            if (prm_855 == -3)
            {
                txt(lang(
                    name(prm_853) + u8"は餓死した。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" starved to death."s));
                if (prm_853 == 0)
                {
                    ndeathcause =
                        lang(u8"飢え死にした。"s, u8"was starved to death"s);
                }
            }
            if (prm_855 == -4)
            {
                txt(lang(
                    name(prm_853) + u8"は毒に蝕まれ死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" killed with poison."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"毒にもがき苦しみながら死んだ。"s,
                        u8"miserably died from poison"s);
                }
            }
            if (prm_855 == -13)
            {
                txt(lang(
                    name(prm_853) + u8"は出血多量で死んだ。"s,
                    name(prm_853) + u8" die"s + _s(prm_853)
                        + u8" from loss of blood"s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"血を流しすぎて死んだ。"s,
                        u8"died from loss of blood"s);
                }
            }
            if (prm_855 == -5)
            {
                txt(lang(
                    name(prm_853) + u8"は呪いの力で死んだ。"s,
                    name(prm_853) + u8" die"s + _s(prm_853)
                        + u8" from curse."s));
                if (prm_853 == 0)
                {
                    ndeathcause =
                        lang(u8"呪い殺された。"s, u8"died from curse"s);
                }
            }
            if (prm_855 == -7)
            {
                txt(lang(
                    name(prm_853) + u8"は階段から転げ落ちて死んだ。"s,
                    name(prm_853) + u8" trumble"s + _s(prm_853)
                        + u8" from stairs and die"s + _s(prm_853) + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"階段から転げ落ちて亡くなった。"s,
                        u8"trumbled from stairs and died"s);
                }
            }
            if (prm_855 == -8)
            {
                txt(lang(
                    name(prm_853) + u8"は聴衆に殺された。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" killed by an audience."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"演奏中に激怒した聴衆に殺された。"s,
                        u8"was killed by an audience"s);
                }
            }
            if (prm_855 == -9)
            {
                txt(lang(
                    name(prm_853) + u8"は焼け死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" burnt and turned into ash."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"焼けて消滅した。"s,
                        u8"was burnt and turned into ash"s);
                }
            }
            if (prm_855 == -12)
            {
                txt(lang(
                    name(prm_853) + u8"は食中毒で死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" killed by food poisoning."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"食中毒で倒れた。"s,
                        u8"got killed by food poisoning"s);
                }
            }
            if (prm_855 == -14)
            {
                txt(lang(
                    name(prm_853) + u8"はエーテルに侵食され死んだ。"s,
                    name(prm_853) + u8" die"s + _s(prm_853)
                        + u8" of the Ether disease."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"エーテルの病に倒れた。"s,
                        u8"died of the Ether disease"s);
                }
            }
            if (prm_855 == -15)
            {
                txt(lang(
                    name(prm_853) + u8"は溶けて液体になった。"s,
                    name(prm_853) + u8" melt"s + _s(prm_853) + u8" down."s));
                if (prm_853 == 0)
                {
                    ndeathcause =
                        lang(u8"溶けて液体になった。"s, u8"melted down"s);
                }
            }
            if (prm_855 == -16)
            {
                txt(lang(
                    name(prm_853) + u8"はバラバラになった。"s,
                    name(prm_853) + u8" shatter"s + _s(prm_853) + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(u8"自殺した。"s, u8"committed suicide"s);
                }
            }
            if (prm_855 == -17)
            {
                txt(lang(
                    name(prm_853) + u8"は核爆発に巻き込まれて塵となった。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" turned into atoms."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"核爆発に巻き込まれて死んだ。"s,
                        u8"was killed by an atomic bomb"s);
                }
            }
            if (prm_855 == -18)
            {
                txt(lang(
                    name(prm_853)
                        + u8"はアイアンメイデンの中で串刺しになって果てた。"s,
                    name(prm_853) + u8" step"s + _s(prm_853)
                        + u8" in an iron maiden and die"s + _s(prm_853)
                        + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"アイアンメイデンにはさまれて死んだ。"s,
                        u8"stepped in an iron maiden and died"s);
                }
            }
            if (prm_855 == -19)
            {
                txt(lang(
                    name(prm_853) + u8"はギロチンで首をちょんぎられて死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853)
                        + u8" guillotined and die"s + _s(prm_853) + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"ギロチンで首を落とされて死んだ。"s,
                        u8"was guillotined"s);
                }
            }
            if (prm_855 == -20)
            {
                txt(lang(
                    name(prm_853) + u8"は首を吊った。"s,
                    name(prm_853) + u8" hang"s + _s(prm_853) + u8" "s
                        + his(prm_853) + u8"self."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"首を吊った。"s, u8"commited suicide by hanging"s);
                }
            }
            if (prm_855 == -21)
            {
                txt(lang(
                    name(prm_853) + u8"はもちを喉に詰まらせて死んだ。"s,
                    name(prm_853) + u8" choke"s + _s(prm_853)
                        + u8" on mochi and die."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        u8"もちを喉に詰まらせて死んだ。"s,
                        u8"ate mochi and died"s);
                }
            }
            if (prm_855 == -6)
            {
                inv_getheader(0);
                p_at_m141(0) = -1;
                p_at_m141(1) = 0;
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) == 0)
                        {
                            continue;
                        }
                        if (inv(7, cnt) > p_at_m141(1))
                        {
                            p_at_m141(0) = cnt;
                            p_at_m141(1) = inv(7, cnt);
                        }
                    }
                }
                if (p_at_m141 == -1)
                {
                    rtvaln = lang(u8"荷物"s, u8"backpack"s);
                }
                else
                {
                    rtvaln = itemname(p_at_m141);
                }
                txt(lang(
                    name(prm_853) + u8"は"s + rtvaln
                        + u8"の重さに耐え切れず死んだ。"s,
                    name(prm_853) + u8" "s + is(prm_853) + u8" squashed by "s
                        + rtvaln + u8"."s));
                if (prm_853 == 0)
                {
                    ndeathcause = lang(
                        rtvaln + u8"の重さに耐え切れず潰れた。"s,
                        u8"was squashed by "s + rtvaln);
                }
            }
        }
        if (prm_855 == -9 || ele_at_m141 == 50)
        {
            addmef(
                cdata(1, prm_853),
                cdata(2, prm_853),
                5,
                24,
                rnd(10) + 5,
                100,
                prm_855);
        }
        if (ele_at_m141 == 56)
        {
            if (prm_855 >= 0)
            {
                if (dmg_at_m141 > 0)
                {
                    healhp(cc, rnd(dmg_at_m141 * (200 + prm_857) / 1000 + 5));
                }
            }
        }
        if (gdata(183) != prm_853 || prm_853 == 0)
        {
            cell_removechara(cdata(1, prm_853), cdata(2, prm_853));
        }
        if (cbit(983, prm_853))
        {
            if (synccheck(prm_853, -1))
            {
                x = cdata(1, prm_853);
                y = cdata(2, prm_853);
                snd(45, 0, 1);
                animeblood(prm_853, 1, ele_at_m141);
            }
            spillfrag(cdata(1, prm_853), cdata(2, prm_853), 3);
        }
        else
        {
            snd(8 + rnd(2), 0, 1);
            animeblood(prm_853, 0, ele_at_m141);
            spillblood(cdata(1, prm_853), cdata(2, prm_853), 4);
        }
        if (cdata(150, prm_853) == 0)
        {
            cdata(0, prm_853) = 0;
        }
        else
        {
            if (cdata(150, prm_853) == 13)
            {
                cdata(0, prm_853) = 4;
                cdata(5, prm_853) = gdata(13) + gdata(12) * 24
                    + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12 + 24
                    + rnd(12);
            }
            else
            {
                cdata(0, prm_853) = 2;
                cdata(5, prm_853) = gdata(13) + gdata(12) * 24
                    + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12 + 48;
            }
        }
        if (prm_853 != 0)
        {
            if (prm_853 < 16)
            {
                modimp(prm_853, -10);
                cdata(0, prm_853) = 6;
                cdata(80, prm_853) = 0;
                if (cbit(963, prm_853) == 1)
                {
                    evadd(15, cdata(27, prm_853));
                    cdata(0, prm_853) = 0;
                }
                if (cbit(971, prm_853) == 1)
                {
                    cdata(0, prm_853) = 0;
                }
            }
        }
        if (prm_853 == 0)
        {
            ++gdata(0);
        }
        if (prm_853 == gdata(94))
        {
            gdata(94) = 0;
        }
        if (prm_855 >= 0)
        {
            if (prm_855 != 0)
            {
                customtalk(prm_855, 103);
            }
            exp_at_m141 = limit(cdata(38, prm_853), 1, 200)
                    * limit((cdata(38, prm_853) + 1), 1, 200)
                    * limit((cdata(38, prm_853) + 2), 1, 200) / 20
                + 8;
            if (cdata(38, prm_853) > cdata(38, prm_855))
            {
                exp_at_m141 /= 4;
            }
            if (cbit(23, prm_853) || cbit(27, prm_853))
            {
                exp_at_m141 /= 20;
            }
            cdata(35, prm_855) += exp_at_m141;
            if (prm_855 == 0)
            {
                gdata(92) += exp_at_m141;
            }
            cdata(201, prm_855) = 0;
        }
        if (prm_853 != 0)
        {
            if (gdata(20) != 35)
            {
                if (gdata(20) != 42)
                {
                    if (cdata(27, prm_853) == 2)
                    {
                        evadd(1);
                    }
                    if (cdata(27, prm_853) == 141)
                    {
                        txtef(2);
                        txt(lang(
                            u8"愚者の魔石を手に入れた！"s,
                            u8"You obtain the fool's magic stone!"s));
                        snd(51);
                        gdata(253) = 1;
                    }
                    if (cdata(27, prm_853) == 143)
                    {
                        txtef(2);
                        txt(lang(
                            u8"覇者の魔石を手に入れた！"s,
                            u8"You obtain the king's magic stone!"s));
                        snd(51);
                        gdata(255) = 1;
                    }
                    if (cdata(27, prm_853) == 144)
                    {
                        txtef(2);
                        txt(lang(
                            u8"賢者の魔石を手に入れた！"s,
                            u8"You obtain the sage's magic stone!"s));
                        snd(51);
                        gdata(254) = 1;
                    }
                    if (cdata(27, prm_853) == 242)
                    {
                        if (gdata(458) < 1000)
                        {
                            gdata(458) = 2;
                            snd(44);
                            txtef(2);
                            txt(lang(
                                u8"ジャーナルが更新された。"s,
                                u8"Your journal has been updated."s));
                        }
                    }
                    if (cdata(27, prm_853) == 257)
                    {
                        if (gdata(462) < 1000)
                        {
                            gdata(462) = 1000;
                            snd(44);
                            txtef(2);
                            txt(lang(
                                u8"ジャーナルが更新された。"s,
                                u8"Your journal has been updated."s));
                            txt(lang(
                                u8"クエストを達成した！"s,
                                u8"You have completed the quest!"s));
                            snd(51);
                        }
                    }
                    if (cdata(27, prm_853) == 300)
                    {
                        if (gdata(472) < 1000)
                        {
                            gdata(472) = 2;
                            snd(44);
                            txtef(2);
                            txt(lang(
                                u8"ジャーナルが更新された。"s,
                                u8"Your journal has been updated."s));
                        }
                    }
                    if (cdata(27, prm_853) == 318)
                    {
                        evadd(27, cdata(1, prm_853), cdata(2, prm_853));
                    }
                    if (cdata(27, prm_853) == 319)
                    {
                        ++gdata(810);
                        txtef(3);
                        txt(lang(
                            u8"リトルシスター殺害"s + gdata(810) + u8"回、救出"s
                                + gdata(811) + u8"回。"s,
                            u8"You have saved little sister "s + gdata(811)
                                + u8" times and killed "s + gdata(810)
                                + u8" times."s));
                    }
                    if (gdata(22) == adata(10, gdata(20)) || gdata(20) == 42)
                    {
                        if (adata(20, gdata(20)) == prm_853)
                        {
                            evadd(5);
                        }
                    }
                    if (cdata(27, prm_853) == 331)
                    {
                        if (rnd(4) == 0)
                        {
                            evadd(28, cdata(1, prm_853), cdata(2, prm_853));
                        }
                    }
                    check_quest();
                }
                else
                {
                    if (gdata(20) == 42)
                    {
                        if (adata(20, gdata(20)) == prm_853)
                        {
                            evadd(5);
                        }
                    }
                }
            }
        }
        if (prm_853 != 0)
        {
            ++npcmemory(0, cdata(27, prm_853));
            customtalk(prm_853, 102);
            if (prm_853 < 16)
            {
                txt(lang(
                    u8"あなたは悲しくなった。"s,
                    u8"You feel sad for a moment."s));
            }
        }
        --gdata(3);
        if (gdata(183))
        {
            if (prm_853 == gdata(183))
            {
                txtmore();
                txt(lang(
                    name(0) + u8"は"s + name(prm_853) + u8"の死体から降りた。"s,
                    name(0) + u8" get off the corpse of "s + name(prm_853)
                        + u8"."s));
                ride_end();
            }
        }
        check_kill(prm_855, prm_853);
        catitem = 0;
        rollanatomy = 0;
        if (rnd(60) == 0)
        {
            rollanatomy = 1;
        }
        if (prm_855 >= 0)
        {
            if (cdata(27, prm_855) == 260)
            {
                catitem = prm_855;
            }
            if (elona_int(sqrt(sdata(161, prm_855))) > rnd(150))
            {
                rollanatomy = 1;
            }
            skillexp(161, prm_855, 10 + rollanatomy * 4);
        }
        rc = prm_853;
        label_1573();
        if (gdata(20) == 40)
        {
            if (rnd(5) == 0)
            {
                snd(69);
            }
        }
        if (cbit(19, prm_853) == 1)
        {
            txtmore();
            txt(lang(
                u8"死の宣告は無効になった。"s, u8"The death word breaks."s));
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    p_at_m141 = cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                        {
                            if (cdata(280 + cnt * 3, p_at_m141) == 0)
                            {
                                break;
                            }
                            if (cdata(280 + cnt * 3, p_at_m141) == 16)
                            {
                                delbuff(p_at_m141, cnt);
                                --cnt;
                                continue;
                            }
                        }
                    }
                }
            }
        }
        if (cc_at_m141 == 0)
        {
            if (gdata(185))
            {
                if (rnd(20) == 0)
                {
                    txtgod(cdata(61, 0), 9);
                }
            }
        }
        label_1370();
        stat = 0;
        return stat;
    }
    label_1370();
    stat = 1;
    return stat;
}
void label_1370()
{
    if (cbit(985, prm_853))
    {
        if (synccheck(prm_853, -1))
        {
            txt(u8"("s + dmg_at_m141 + u8")"s + lang(u8" "s, ""s));
            if (rnd(20) == 0)
            {
                txt(lang(u8"「くっ！」"s, cnvtalk(u8"Kill me already!"s)),
                    lang(u8"「まだまだ！」"s, cnvtalk(u8"No..not yet...!"s)),
                    lang(
                        u8"「もう限界…」"s,
                        cnvtalk(u8"I can't take it anymore..."s)),
                    lang(u8"「うぐぐ」"s, cnvtalk(u8"Argh!"s)),
                    lang(u8"「あう」"s, cnvtalk(u8"Uhhh"s)),
                    lang(u8"「ああんっ」"s, cnvtalk(u8"Ugggg"s)));
            }
        }
    }
    gdata(809) = 0;
    txt3rd = 0;
    return;
}
int dmgmp(int prm_858, int prm_859)
{
    int d_at_m142 = 0;
    cdata(55, prm_858) -= prm_859;
    if (cdata(55, prm_858) < -999999)
    {
        cdata(55, prm_858) = -999999;
    }
    if (cdata(55, prm_858) < 0)
    {
        r1 = prm_858;
        label_1463();
        d_at_m142 =
            -cdata(55, prm_858) * 400 / (100 + sdata(164, prm_858) * 10);
        if (prm_858 == 0)
        {
            if (trait(156) == 1)
            {
                d_at_m142 = d_at_m142 / 2;
            }
        }
        else
        {
            d_at_m142 = d_at_m142 / 5;
            if (d_at_m142 < 10)
            {
                stat = 1;
                return stat;
            }
        }
        txt(lang(
            u8"マナの反動が"s + name(prm_858) + u8"の精神を蝕んだ！"s,
            u8"Magic reaction hurts "s + name(prm_858) + u8"!"s));
        dmghp(prm_858, d_at_m142, -2);
    }
    stat = 1;
    return stat;
}
int dmgsp(int prm_860, int prm_861)
{
    if (prm_860 != 0)
    {
        stat = 0;
        return stat;
    }
    if (cdata(52, prm_860) >= -100)
    {
        cdata(52, prm_860) -= prm_861;
    }
    stat = 1;
    return stat;
}
void healsan(int prm_862, int prm_863)
{
    cdata(86, prm_862) -= prm_863;
    if (cdata(86, prm_862) < 0)
    {
        cdata(86, prm_862) = 0;
    }
    return;
}
int dmgsan(int prm_864, int prm_865)
{
    int r_at_m143 = 0;
    int dmg_at_m143 = 0;
    if (cdata(25, prm_864) >= 4)
    {
        stat = 0;
        return stat;
    }
    r_at_m143 = sdata(54, prm_864) / 50;
    if (r_at_m143 <= 0)
    {
        r_at_m143 = 1;
    }
    if (r_at_m143 > 10)
    {
        stat = 0;
        return stat;
    }
    dmg_at_m143 = prm_865 / r_at_m143;
    if (prm_864 < 16)
    {
        if (trait(166))
        {
            dmg_at_m143 = dmg_at_m143 - rnd(4);
        }
    }
    if (dmg_at_m143 > 0)
    {
        cdata(86, prm_864) += dmg_at_m143;
    }
    else
    {
        dmg_at_m143 = 0;
    }
    if (rnd(10) == 0 || rnd(dmg_at_m143 + 1) > 5
        || rnd(cdata(86, prm_864) + 1) > 50)
    {
        dmgcon(prm_864, 11, 100);
    }
    stat = 1;
    return stat;
}
int actionsp(int prm_866, int prm_867)
{
    if (prm_866 != 0)
    {
        stat = 1;
        return stat;
    }
    if (cdata(52, prm_866) < 50)
    {
        if (cdata(52, prm_866) < rnd(75))
        {
            dmgsp(prm_866, prm_867);
            stat = 0;
            return stat;
        }
    }
    dmgsp(prm_866, prm_867);
    stat = 1;
    return stat;
}
int advfavoriteskill(int prm_868)
{
    randomize(prm_868);
    rtval = 0;
    i_at_m145 = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            rtval(i_at_m145) = rnd(300) + 100;
            if (sdataref(0, rtval(i_at_m145)) == 0)
            {
                continue;
            }
            ++i_at_m145;
            if (i_at_m145 >= 2)
            {
                break;
            }
        }
    }
    randomize();
    stat = i_at_m145;
    return stat;
}
int advfavoritestat(int prm_869)
{
    randomize(prm_869);
    i_at_m145 = rnd(8) + 10;
    randomize();
    stat = i_at_m145;
    return stat;
}
void modweight(int prm_870, int prm_871, int prm_872)
{
    int mini_at_m146 = 0;
    int max_at_m146 = 0;
    mini_at_m146 = cdata(19, prm_870) * cdata(19, prm_870) * 18 / 25000;
    max_at_m146 = cdata(19, prm_870) * cdata(19, prm_870) * 24 / 10000;
    if (cdata(20, prm_870) < mini_at_m146)
    {
        cdata(20, prm_870) = mini_at_m146;
        return;
    }
    if (prm_872 == 0)
    {
        if (cdata(20, prm_870) > max_at_m146)
        {
            return;
        }
    }
    cdata(20, prm_870) = cdata(20, prm_870) * (100 + prm_871) / 100
        + (prm_871 > 0) - (prm_871 < 0);
    if (cdata(20, prm_870) <= 0)
    {
        cdata(20, prm_870) = 1;
    }
    if (synccheck(prm_870, -1))
    {
        if (prm_871 > 2)
        {
            txt(lang(
                name(prm_870) + u8"は太った。"s,
                name(prm_870) + u8" gain"s + _s(prm_870) + u8" weight."s));
        }
        if (prm_871 < -2)
        {
            txt(lang(
                name(prm_870) + u8"は痩せた。"s,
                name(prm_870) + u8" lose"s + _s(prm_870) + u8" weight."s));
        }
    }
    return;
}
void modheight(int prm_873, int prm_874)
{
    cdata(19, prm_873) = cdata(19, prm_873) * (100 + prm_874) / 100
        + (prm_874 > 0) - (prm_874 < 0);
    if (cdata(19, prm_873) <= 1)
    {
        cdata(19, prm_873) = 1;
    }
    if (synccheck(prm_873, -1))
    {
        if (prm_874 > 0)
        {
            txt(lang(
                name(prm_873) + u8"の身長は少し伸びた。"s,
                name(prm_873) + u8" grow"s + _s(prm_873) + u8" taller."s));
        }
        if (prm_874 < 0)
        {
            txt(lang(
                name(prm_873) + u8"の身長は少し縮んだ。"s,
                name(prm_873) + u8" grow"s + _s(prm_873) + u8" smaller."s));
        }
    }
    return;
}
void cure_anorexia(int prm_875)
{
    if (cbit(986, prm_875) == 0)
    {
        return;
    }
    cbitmod(986, prm_875, 0);
    if (synccheck(prm_875, -1) || prm_875 < 16)
    {
        txt(lang(
            name(prm_875) + u8"の拒食症は治った。"s,
            name(prm_875) + u8" manage"s + _s(prm_875)
                + u8" to recover from anorexia."s));
        snd(65);
    }
    return;
}
void chara_vomit(int prm_876)
{
    int p_at_m146 = 0;
    ++cdata(93, prm_876);
    if (synccheck(prm_876, -1))
    {
        snd(104);
        txt(lang(
            name(prm_876) + u8"は吐いた。"s,
            name(prm_876) + u8" vomit"s + _s(prm_876) + u8"."s));
    }
    if (cbit(978, prm_876))
    {
        cbitmod(978, prm_876, 0);
        if (synccheck(prm_876, -1))
        {
            txt(lang(
                name(prm_876) + u8"は体内のエイリアンを吐き出した！"s,
                name(prm_876) + u8" spit"s + _s(prm_876)
                    + u8" alien children from "s + his(prm_876) + u8" body!"s));
        }
    }
    if (cdata(280, prm_876) != 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (cdata(280 + cnt * 3, prm_876) == 0)
                {
                    break;
                }
                if (bdataref(0, cdata(280 + cnt * 3, prm_876)) == 3)
                {
                    delbuff(prm_876, cnt);
                    --cnt;
                    continue;
                }
            }
        }
    }
    if (mdata(6) != 1)
    {
        inv_getheader(-1);
        p_at_m146 = 2;
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) > 0)
                {
                    if (inv(3, cnt) == 704)
                    {
                        ++p_at_m146;
                    }
                }
            }
        }
        if (rnd(p_at_m146 * p_at_m146 * p_at_m146) == 0 || prm_876 == 0)
        {
            flt();
            itemcreate(-1, 704, cdata(1, prm_876), cdata(2, prm_876), 0);
            if (stat != 0)
            {
                if (prm_876 != 0)
                {
                    inv(23, ci) = cdata(27, prm_876);
                }
            }
        }
    }
    if (cbit(986, prm_876) == 0)
    {
        if (prm_876 < 16 && cdata(93, prm_876) > 10
            || prm_876 >= 16 && rnd(4) == 0)
        {
            if (rnd(5) == 0)
            {
                cbitmod(986, prm_876, 1);
                if (synccheck(prm_876, -1))
                {
                    txt(lang(
                        name(prm_876) + u8"は拒食症になった。"s,
                        name(prm_876) + u8" develop"s + _s(prm_876)
                            + u8" anorexia."s));
                    snd(65);
                }
            }
        }
    }
    else
    {
        skillmod(10, prm_876, -50);
        skillmod(11, prm_876, -75);
        skillmod(17, prm_876, -100);
    }
    dmgcon(prm_876, 7, 100);
    modweight(prm_876, (1 + rnd(5)) * -1);
    if (cdata(22, prm_876) <= 0)
    {
        dmghp(prm_876, 9999, -3);
    }
    cdata(22, prm_876) -= 3000;
    return;
}
void eatstatus(int prm_877, int prm_878)
{
    if (cdata(0, prm_878) != 1)
    {
        return;
    }
    if (prm_877 <= -1)
    {
        cdata(22, prm_878) -= 1500;
        if (synccheck(prm_878, -1))
        {
            txt(lang(
                name(prm_878) + u8"は嫌な感じがした。"s,
                name(prm_878) + u8" feel"s + _s(prm_878) + u8" bad."s));
        }
        chara_vomit(prm_878);
    }
    if (prm_877 >= 1)
    {
        if (synccheck(prm_878, -1))
        {
            txt(lang(
                name(prm_878) + u8"は良い予感がした。"s,
                name(prm_878) + u8" feel"s + _s(prm_878) + u8" good."s));
        }
        if (rnd(5) == 0)
        {
            addbuff(prm_878, 19, 100, 500 + rnd(500));
        }
        healsan(prm_878, 2);
    }
    return;
}
int chara_anorexia(int prm_879)
{
    if (cbit(986, prm_879) == 0)
    {
        stat = 0;
        return stat;
    }
    chara_vomit(prm_879);
    stat = 1;
    return stat;
}
void sickifcursed(int prm_880, int prm_881, int prm_882)
{
    if (prm_880 <= -1)
    {
        if (rnd(prm_882 + (prm_882 == 0)) == 0)
        {
            if (synccheck(prm_881, -1))
            {
                txt(lang(
                    name(prm_881) + u8"は気分が悪くなった。"s,
                    name(prm_881) + u8" feel"s + _s(prm_881) + u8" grumpy."s));
            }
            dmgcon(prm_881, 12, 200);
        }
    }
    return;
}
int net_send(const std::string& prm_883, int prm_884)
{
    std::string msg_at_m147;
    if (cfg_net == 0)
    {
        stat = 0;
        return stat;
    }
    chattemp = prm_883;
    if (prm_884 == 0)
    {
        fix_input_chat2(chattemp);
    }
    fix_input_chat(chattemp);
    if (prm_884 == 0)
    {
        url_at_m147 = chatsendurl;
        msg_at_m147 = u8"&comment="s + chattemp;
    }
    else
    {
        if (gdata(828))
        {
            stat = 1;
            return stat;
        }
    }
    conurl_at_m147 = u8"hpcgi3.nifty.com"s;
    if (prm_884 == 1)
    {
        conurl_at_m147 = cgiurl3;
        url_at_m147 = votesendurl;
        msg_at_m147 = u8"&vote="s + chattemp;
    }
    if (prm_884 == 2)
    {
        conurl_at_m147 = cgiurl3;
        url_at_m147 = votesendurl;
        msg_at_m147 = u8"&namber="s + chattemp;
    }
    if (prm_884 == 0)
    {
        conurl_at_m147 = cgiurl2;
    }
    sockopen(0, conurl_at_m147, 80);
    if (stat)
    {
        sockclose();
        txt(u8"["s + stat + u8"]"s
            + lang(
                  u8"ネットに繋がっていない。"s,
                  u8"You need an internet connection."s));
        stat = 0;
        return stat;
    }
    sockput(u8"GET "s + url_at_m147 + msg_at_m147 +
        u8" HTTP/1.0\nHost:www.nifty.com???\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Win 9x 4.90)\n\n"s);
    if (stat)
    {
        sockclose();
        txt(lang(u8"送信に失敗した。"s, u8"Failed to send a message."s));
        stat = 0;
        return stat;
    }
    sockclose();
    stat = 1;
    return stat;
}
int net_read(int prm_885)
{
    std::string a_at_m147;
    int sz_at_m147 = 0;
    int t_at_m147 = 0;
    int c_at_m147 = 0;
    int b_at_m147 = 0;
    int header_at_m147 = 0;
    int tail_at_m147 = 0;
    int chat_count_at_m147 = 0;
    int count_latest_at_m147 = 0;
    std::string chat_date_at_m147;
    std::string chat_msg_at_m147;
    std::string chat_ip_at_m147;
    chatnew = "";
    netbuf = "";
    if (cfg_net == 0)
    {
        stat = 0;
        return stat;
    }
    if (prm_885 == 5)
    {
        url_at_m147 = textreadurl;
        conurl_at_m147 = cgiurl3;
    }
    if (prm_885 == 0)
    {
        url_at_m147 = chatreadurl;
        conurl_at_m147 = cgiurl2;
    }
    if (prm_885 == 1)
    {
        url_at_m147 = votereadurl;
        conurl_at_m147 = cgiurl3;
    }
    if (prm_885 == 2)
    {
        url_at_m147 = u8"/rfish/userfile/cliplog.txt"s;
        conurl_at_m147 = u8"homepage3.nifty.com"s;
    }
    if (prm_885 == 3)
    {
        url_at_m147 = u8"/rfish/file/welcome.txt"s;
        conurl_at_m147 = u8"homepage3.nifty.com"s;
    }
    if (prm_885 == 4)
    {
        url_at_m147 = u8"http://homepage3.nifty.com/rfish/file/server.txt"s;
        conurl_at_m147 = u8"homepage3.nifty.com"s;
    }
    sockopen(0, conurl_at_m147, 80);
    if (stat)
    {
        sockclose();
        stat = 0;
        return stat;
    }
    sockput(
        u8"GET "s + url_at_m147
        + u8" HTTP/1.0\nHost:???\nUser-Agent: HSP ver3.0\n\n"s);
    if (stat)
    {
        sockclose();
        stat = 0;
        return stat;
    }
    a_at_m147 = "";
    sz_at_m147 = 0;
    t_at_m147 = 0;
label_1393_internal:
    await(0);
    ++t_at_m147;
    if (t_at_m147 > 10000)
    {
        getkey(c_at_m147, 27);
        if (c_at_m147)
        {
            txt(u8"[Chat Skipped]"s);
            sockclose();
            stat = 0;
            return stat;
        }
    }
    sockget(a_at_m147, 64);
    if (stat)
    {
        sockclose();
        stat = 0;
        return stat;
    }
    b_at_m147 = peek(a_at_m147, 0);
    if (b_at_m147 == 0)
    {
        goto label_1394_internal;
        stat = 0;
        return stat;
    }
    netbuf += a_at_m147;
    sz_at_m147 += 64;
    if (sz_at_m147 > 30000)
    {
        goto label_1394_internal;
        stat = 0;
        return stat;
    }
    goto label_1393_internal;
label_1394_internal:
    sockclose();
    if (prm_885 == 1 || prm_885 == 4)
    {
        header_at_m147 = instr(netbuf, 0, u8"\n\n"s) + 4;
    }
    else
    {
        header_at_m147 = instr(netbuf, 0, u8"<!--START-->"s) + 13;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            if (prm_885 == 4)
            {
                netbuf = strmid(netbuf, header_at_m147, 2000);
                break;
            }
            if (prm_885 == 5)
            {
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                if (tail_at_m147 == -1)
                {
                    break;
                }
                listn(0, listmax) =
                    strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 1;
                ++listmax;
            }
            if (prm_885 == 1)
            {
                tail_at_m147 = instr(netbuf, header_at_m147, u8"<>"s);
                if (tail_at_m147 == -1)
                {
                    break;
                }
                if (listmax > 100)
                {
                    break;
                }
                list(0, listmax) =
                    elona_int(strmid(netbuf, header_at_m147, tail_at_m147));
                header_at_m147 += tail_at_m147 + 2;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"<>"s);
                listn(0, listmax) =
                    ""s + strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 2;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"<>"s);
                list(1, listmax) =
                    elona_int(strmid(netbuf, header_at_m147, tail_at_m147));
                header_at_m147 += tail_at_m147 + 2;
                listn(1, listmax) = ""s + list(1, listmax);
                tail_at_m147 = instr(netbuf, header_at_m147, u8"<>"s);
                header_at_m147 += tail_at_m147 + 2;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"<>"s);
                header_at_m147 += tail_at_m147 + 3;
                ++listmax;
            }
            if (prm_885 == 0)
            {
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                if (tail_at_m147 == -1)
                {
                    break;
                }
                chat_count_at_m147 =
                    elona_int(strmid(netbuf, header_at_m147, tail_at_m147));
                header_at_m147 += tail_at_m147 + 1;
                if (cnt == 0)
                {
                    if (chat_count_at_m147 > count_latest_at_m147)
                    {
                        count_latest_at_m147 = chat_count_at_m147;
                    }
                }
                if (cnt == 1)
                {
                    if (lastchat == 0)
                    {
                        break;
                    }
                }
                if (chat_count_at_m147 <= lastchat)
                {
                    break;
                }
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                chat_date_at_m147 =
                    strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 1;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                chat_msg_at_m147 = strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 1;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                chat_ip_at_m147 = strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 2;
                chatnew += ""s + chat_msg_at_m147 + u8"\n"s;
            }
            if (prm_885 == 3)
            {
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                if (tail_at_m147 == -1)
                {
                    break;
                }
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                s = strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 1;
                tail_at_m147 = instr(netbuf, header_at_m147, u8"%"s);
                s(1) = strmid(netbuf, header_at_m147, tail_at_m147);
                header_at_m147 += tail_at_m147 + 1;
                break;
            }
        }
    }
    if (prm_885 == 0)
    {
        lastchat = count_latest_at_m147;
    }
    stat = 1;
    return stat;
}
int net_dllist(const std::string& prm_886, int prm_887)
{
    std::string file_at_m147;
    int size_at_m147 = 0;
    int p_at_m147 = 0;
    int f_at_m147 = 0;
    int nxt_at_m147 = 0;
    std::string s_at_m147;
    netinit();
    neturl(u8"http://homepage3.nifty.com/rfish/userfile/"s);
    file_at_m147 = exedir + u8"user\\net.tmp"s;
    exist(file_at_m147);
    if (strsize != -1)
    {
        elona_delete(file_at_m147);
    }
    netdlname(file_at_m147);
    netload(u8"cliplog.txt"s);
    exist(file_at_m147);
    if (strsize == -1)
    {
        stat = 0;
        return stat;
    }
    notesel(netbuf);
    noteload(file_at_m147);
    exist(file_at_m147);
    size_at_m147 = strsize;
    p_at_m147 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10000); cnt < cnt_end; ++cnt)
        {
            if (instr(netbuf, p_at_m147, u8"<"s) == -1
                || p_at_m147 + 1 >= size_at_m147)
            {
                break;
            }
            f_at_m147 = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (14); cnt < cnt_end; ++cnt)
                {
                    nxt_at_m147 = instr(netbuf, p_at_m147, u8"<"s);
                    if (nxt_at_m147 == -1)
                    {
                        break;
                    }
                    s_at_m147 = strmid(netbuf, p_at_m147, nxt_at_m147);
                    p_at_m147 += nxt_at_m147 + 2;
                    if (cnt == 0)
                    {
                        list(0, listmax) = listmax;
                        list(1, listmax) = elona_int(s_at_m147);
                    }
                    if (cnt == 2)
                    {
                        listn(0, listmax) = ""s + s_at_m147;
                        listn(1, listmax) = u8"net"s;
                    }
                    if (cnt == 3)
                    {
                        list(2, listmax) = elona_int(s_at_m147);
                        if (elona_int(s_at_m147) != 100001)
                        {
                            if (prm_887 == 0)
                            {
                                f_at_m147 = 1;
                            }
                        }
                    }
                    if (cnt == 5)
                    {
                        listn(0, listmax) += u8" "s + s_at_m147;
                    }
                    if (cnt == 9)
                    {
                        if (s_at_m147 != prm_886)
                        {
                            f_at_m147 = 1;
                        }
                    }
                }
            }
            if (f_at_m147 == 0)
            {
                ++listmax;
            }
            ++p_at_m147;
        }
    }
    stat = 1;
    return stat;
}
int net_dl(const std::string& prm_888, const std::string& prm_889)
{
    exist(exedir + u8"user\\"s + prm_889);
    if (strsize != -1)
    {
        elona_delete(exedir + u8"user\\"s + prm_889);
    }
    neturl(u8"http://homepage3.nifty.com/rfish/userfile/"s);
    netdlname(exedir + u8"user\\"s + prm_889);
    netload(prm_888);
    exist(exedir + u8"user\\"s + prm_889);
    if (strsize == -1)
    {
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
void label_1398()
{
    SDIM1(cgiurl2);
    SDIM1(cgiurl3);
    SDIM2(serverlist, 200);
    notesel(serverlist);
    net_read(4);
    if (stat == 1 && cfg_serverlist == 0)
    {
        serverlist = netbuf;
    }
    else
    {
        noteload(exedir + u8"server.txt"s);
        netbuf = serverlist;
        dialog(""s + serverlist);
    }
    p = instr(netbuf, 0, u8"%"s);
    cgiurl2 = strmid(netbuf, 0, p);
    cgiurl3 = strmid(netbuf, p + 1, instr(netbuf, p + 1, u8"%"s));
    notesave(exedir + u8"server.txt"s);
    if (jp)
    {
        chatreadurl = u8"http://www."s + cgiurl2 + u8"/log.txt"s;
        chatsendurl = u8"http://www."s + cgiurl2
            + u8"/cgi-bin/wtalk/wtalk2.cgi?mode=regist"s;
        votesendurl = u8"http://www."s + cgiurl3
            + u8"/cgi-bin/vote/votec.cgi?no=1&mode=wri"s;
        votereadurl = u8"http://www."s + cgiurl3 + u8"/vote.txt"s;
    }
    else
    {
        chatreadurl = u8"http://www."s + cgiurl2 + u8"/logen.txt"s;
        chatsendurl = u8"http://www."s + cgiurl2
            + u8"/cgi-bin/wtalken/wtalk2.cgi?mode=regist"s;
        votesendurl = u8"http://www."s + cgiurl3
            + u8"/cgi-bin/vote/votec.cgi?no=0&mode=wri"s;
        votereadurl = u8"http://www."s + cgiurl3 + u8"/voteen.txt"s;
    }
    textreadurl = u8"http://www."s + cgiurl3 + u8"/text.txt"s;
    return;
}
void label_1399()
{
    if (chatdeny == 1)
    {
        if (chatturn > 20)
        {
            chatdeny = 0;
        }
        else
        {
            txt(lang(
                u8"もう少し待った方がいい気がする。"s,
                u8"You think you should wait a little more."s));
            return;
        }
    }
    if (jp)
    {
        imeset(1);
    }
    val(0) = 80;
    val(1) = windowh - inf_verh - 70;
    val(2) = 38;
    val(3) = 1;
    val(4) = 0;
    inputlog = "";
    label_21262();
    imeset(0);
    if (inputlog == ""s)
    {
        return;
    }
    if (jp)
    {
        inputlog = u8"「"s + inputlog + u8"」"s;
    }
    else
    {
        inputlog = u8"\""s + inputlog + u8"\""s;
    }
    txtmore();
    txt(inputlog);
    net_send(
        u8"chat"s + cdatan(1, 0) + lang(""s, u8" "s) + cdatan(0, 0)
        + lang(""s, u8" says, "s) + inputlog);
    chatturn = 0;
    chatdeny = 1;
    return;
}
int label_14002()
{
label_14001_internal:
    gsel(4);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            pos(cnt % 4 * 180, cnt / 4 * 300);
            picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
        }
    }
    gsel(0);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
        {
            listn(0, cnt) = u8"Could not connect to the server."s;
        }
    }
    listmax = 0;
    net_read(5);
    txt(lang(listn(0, 1), listn(0, 2)));
    listmax = 0;
    list(0, listmax) = -999;
    list(1, listmax) = 0;
    listn(0, listmax) =
        lang(u8"あなたの異名を登録する"s, u8"Submit your alias."s);
    ++listmax;
    net_read(1);
    if (gdata(99) > gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12)
    {
        comctrl = 0;
        txt(lang(
            u8"あなたの投票権はまだ復活していない("s + cnvdate(gdata(99), 1)
                + u8"まで)"s,
            u8"You can't vote until "s + cnvdate(gdata(99), 1) + u8"."s));
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (cnt == 0)
                {
                    continue;
                }
                list(1, cnt) = 1000000 - list(1, cnt);
            }
        }
        label_2057();
    }
    else
    {
        comctrl = 1;
        txt(lang(
            u8"どの候補に投票する？"s, u8"Which one do you want to vote?"s));
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (cnt == 0)
                {
                    continue;
                }
                list(1, cnt) = rnd(10000);
            }
        }
        label_2057();
        if (listmax > pagesize)
        {
            listmax = pagesize;
        }
    }
    windowshadow = 1;
label_1401_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1402_internal:
    redraw(0);
    s(0) = lang(u8"投票箱"s, u8"Voting Box"s);
    s(1) = lang(u8"決定 [投票する項目を選択]  "s, u8"Enter [Vote] "s) + strhint2
        + strhint3;
    display_window((windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448);
    x = ww / 5 * 3;
    y = wh - 80;
    gmode(4, 180, 300, 50);
    pos(wx + ww / 3 * 2, wy + wh / 2);
    grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
    gmode(2);
    s(0) = lang(u8"投票項目"s, u8"Choice"s);
    s(1) = "";
    s(2) = lang(u8"備考"s, u8"Vote"s);
    display_topic(s, wx + 28, wy + 36);
    display_topic(s(2), wx + 440, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(540, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s(0) = ""s + listn(0, p);
            s(1) = ""s + listn(1, p);
            if (p != 0)
            {
                pos(wx + 90, wy + 66 + cnt * 19 + 2);
                if (comctrl == 0)
                {
                    mes(lang(u8"第"s + p + u8"位"s, cnvrank(p)));
                }
                else
                {
                    mes(lang(u8"候補"s, ""s));
                }
            }
            cs_list(cnt, s, wx + 138, wy + 66 + cnt * 19 - 1, 19);
            if (i != -999)
            {
                pos(wx + 462, wy + 66 + cnt * 19 + 2);
                mes(s(1));
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                cs = cnt;
                break;
            }
        }
    }
    if (p != -1)
    {
        if (p == -999)
        {
            net_send(""s + cdatan(1, 0) + lang(""s, u8" "s) + cdatan(0, 0), 1);
            promptl(0, 0) = lang(u8"オッケー"s, u8"Ok"s);
            promptl(1, 0) = u8"y"s;
            promptl(2, 0) = u8"0"s;
            promptmax = 1;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 200;
            val(3) = 1;
            label_2131();
            goto label_14001_internal;
        }
        if (gdata(99) > gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12)
        {
            snd(27);
            txt(lang(
                u8"まだ投票権が復活していない。"s,
                u8"You need to wait before submitting a new vote."s));
            goto label_1401_internal;
        }
        gdata(99) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12 + 168;
        txt(lang(
            u8"「"s + listn(0, (cs + pagesize * page)) + u8"は素敵！」"s,
            cnvtalk(u8"I like "s + listn(0, (cs + pagesize * page)) + u8"!"s)));
        txtmore();
        txt(lang(u8"投票した。"s, u8"You vote."s));
        net_send(""s + p, 2);
        modrank(6, 100, 5);
        promptl(0, 0) = lang(u8"オッケー"s, u8"Ok"s);
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptmax = 1;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 200;
        val(3) = 1;
        label_2131();
        goto label_14001_internal;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1401_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1401_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_1402_internal;
}
void label_1415()
{
    selcur = 0;
    inf_clockarrowx = inf_clockx + 62;
    inf_clockarrowy = inf_clocky + 48;
    inf_barh = 16;
    inf_msgh = 72;
    inf_verh = inf_barh + inf_msgh;
    inf_msgline = 4;
    inf_raderx = 1;
    inf_raderw = 136;
    inf_screenw = windoww / inf_tiles + (windoww % inf_tiles != 0);
    if (windowh > 768)
    {
        windowh = 768;
    }
    inf_screenh = (windowh - inf_verh) / inf_tiles;
    if ((windowh - inf_verh) % inf_tiles != 0)
    {
        ++inf_screenh;
    }
    if (inf_vertype == 0)
    {
        inf_ver = 0;
        inf_bary = 0;
        inf_msgy = inf_ver + inf_barh;
        inf_screeny = inf_verh;
        inf_clocky = windowh - inf_clockh;
        inf_radery = 1;
    }
    else
    {
        inf_screeny = 0;
        if ((windowh - inf_verh) % inf_tiles != 0)
        {
            inf_screeny = 0 - inf_tiles + (windowh - inf_verh) % inf_tiles;
        }
        inf_ver = windowh - inf_verh;
        inf_bary = windowh - inf_barh;
        inf_msgy = inf_ver;
        inf_clocky = 0;
        inf_radery = windowh - 86;
    }
    scposy = inf_screenh / 2 - 1;
    inf_hpx = (windoww - 84) / 2 - 100;
    inf_hpy = inf_ver - 12;
    inf_mpx = (windoww - 84) / 2 + 40;
    inf_mpy = inf_ver - 12;
    inf_msgx = inf_raderw;
    inf_msgspace = 15;
    inf_maxmsglen = (windoww - inf_msgx - 28) / inf_mesfont * 2 - 1;
    inf_maxlog = (inf_msgy - 100) / inf_msgspace + 3;
    inf_very = windowh - inf_verh;
    screenmsgy = inf_screeny + inf_tiles * 2;
    prompty = (windowh - inf_verh - 30) / 2 - 4;
    promptx = (windoww - 10) / 2 + 3;
    return;
}
void label_1416()
{
    redraw(0);
    gmode(2);
    label_1419();
    return;
}
void label_1417()
{
    label_14170();
    label_14180();
    label_14190();
    return;
}
void label_1418()
{
    label_14180();
    label_14190();
    return;
}
void label_1419()
{
    label_14190();
    return;
}
void label_14170()
{
    redraw(0);
    gmode(2);
    ap = windoww / 192;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (ap + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt == ap)
            {
                sx = windoww % 192;
            }
            else
            {
                sx = 192;
            }
            pos(cnt * 192, inf_bary);
            gcopy(3, 0, 464 - inf_barh, sx, inf_barh);
            pos(cnt * 192, inf_msgy);
            gcopy(3, 496, 528, sx, inf_msgh);
        }
    }
    pos(0, inf_msgy);
    gcopy(3, 120, 504, inf_msgx, inf_verh);
    pos(inf_raderw + 6, inf_bary);
    gcopy(3, 208, 376, 16, 16);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            sx = 0;
            if (cnt == 8)
            {
                sx = 8;
            }
            if (cnt == 9)
            {
                sx = 14;
            }
            pos(inf_raderw + cnt * 47 + 148 + sx, inf_bary + 1);
            gcopy(3, cnt * 16, 376, 16, 16);
        }
    }
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    color(0, 0, 0);
    pos(inf_raderw + 24, inf_bary + 3 + vfix - en);
    if (strlen_u(mdatan(0)) > 16 - (maplevel() != ""s) * 4)
    {
        mes(cnven(strmid(mdatan(0), 0, 16 - (maplevel() != ""s) * 4)));
    }
    else
    {
        mes(cnven(mdatan(0)));
    }
    pos(inf_raderw + 114, inf_bary + 3 + vfix - en);
    mes(maplevel());
    return;
}
void label_14180()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            sy = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    sx = cnt;
                    if (map(sx, sy, 2) == map(sx, sy, 0))
                    {
                        label_1440();
                    }
                }
            }
        }
    }
    return;
}
void label_14190()
{
    screendrawhack = 1;
    gmode(2);
    redraw(0);
    if (mode == 9)
    {
    }
    else
    {
        sxfix = 0;
        syfix = 0;
        label_1428();
        label_1429();
        label_1433();
    }
    screendrawhack = 10;
    label_1421();
    if (autoturn == 1)
    {
        label_1423();
    }
    else
    {
        firstautoturn = 1;
        racount = 0;
    }
    if (screenupdate != -1)
    {
        redraw(1);
    }
    screenupdate = 0;
    screendrawhack = 0;
    return;
}
void label_1420()
{
    gmode(2);
    redraw(0);
    label_1433();
    label_1421();
    redraw(1);
    screenupdate = 0;
    return;
}
void label_1421()
{
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
    pos(inf_hpx, inf_hpy);
    gcopy(3, 312, 504, 104, 15);
    pos(inf_mpx, inf_mpy);
    gcopy(3, 312, 504, 104, 15);
    if (cdata(50, 0) > 0)
    {
        ap = cdata(50, 0) * 84 / cdata(51, 0);
        if (ap > 100)
        {
            ap = 100;
        }
        pos(inf_hpx + 16, inf_hpy + 5);
        gcopy(3, 412 - ap, 520, ap, 6);
    }
    if (cdata(55, 0) > 0)
    {
        ap = cdata(55, 0) * 84 / cdata(56, 0);
        if (ap > 100)
        {
            ap = 100;
        }
        pos(inf_mpx + 16, inf_mpy + 5);
        gcopy(3, 532 - ap, 520, ap, 6);
    }
    if (gdata(183) != 0)
    {
        if (cdata(0, gdata(183)) == 1)
        {
            pos(inf_hpx - 120, inf_hpy);
            gcopy(3, 312, 504, 104, 15);
            ap = cdata(50, gdata(183)) * 84 / cdata(51, gdata(183));
            if (ap > 100)
            {
                ap = 100;
            }
            pos(inf_hpx - 120 + 16, inf_hpy + 5);
            gcopy(3, 412 - ap, 520, ap, 6);
        }
    }
    sx = inf_hpx + 16;
    sy = inf_hpy - 8;
    color(0, 0, 0);
    pos(sx + 4, sy);
    bmes(""s + cdata(50, 0) + u8"("s + cdata(51, 0) + u8")"s, 255, 255, 255);
    sx = inf_mpx + 16;
    sy = inf_mpy - 8;
    color(0, 0, 0);
    pos(sx + 4, sy);
    bmes(""s + cdata(55, 0) + u8"("s + cdata(56, 0) + u8")"s, 255, 255, 255);
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(0, 0, 0);
    sy = inf_bary + 2 + vfix;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            sx = inf_raderw + cnt * 47 + 168;
            if (cnt < 8)
            {
                if (cdata(240 + cnt, 0) < 0)
                {
                    color(200, 0, 0);
                }
                else
                {
                    color(0, 0, 0);
                }
                pos(sx, sy);
                gcopy(3, 0, 440, 24, 16);
                mes(sdata(10 + cnt, 0));
            }
            else
            {
                if (cnt == 8)
                {
                    pos(sx + 8, sy);
                    gcopy(3, 0, 440, 34, 16);
                    if (gspdorg > gspd)
                    {
                        color(200, 0, 0);
                    }
                    else
                    {
                        if (gspdorg < gspd)
                        {
                            color(0, 120, 0);
                        }
                        else
                        {
                            color(0, 0, 0);
                        }
                    }
                    mes(""s + gspd);
                }
                else
                {
                    color(0, 0, 0);
                    pos(sx + 14, sy);
                    gcopy(3, 0, 440, 64, 16);
                    mes(""s + cdata(71, 0) + u8"/"s + cdata(70, 0));
                }
            }
        }
    }
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    sy = inf_ver - 16;
    sx = windoww - 240;
    pos(sx, sy);
    gcopy(3, 0, 392, 24, 24);
    color(0);
    pos(sx + 28, sy + 2);
    bmes(""s + cdata(30, 0) + u8" gp"s, 255, 255, 255);
    sx = windoww - 120;
    pos(sx, sy);
    gcopy(3, 24, 392, 24, 24);
    color(0);
    pos(sx + 28, sy + 2);
    bmes(""s + cdata(31, 0) + u8" pp"s, 255, 255, 255);
    color(0, 0, 0);
    pos(4, inf_ver - 16);
    gcopy(3, 48, 392, 24, 24);
    pos(32, inf_ver - 14);
    bmes(
        u8"Lv"s + cdata(38, 0) + u8"/"s + (cdata(36, 0) - cdata(35, 0)),
        255,
        255,
        255);
    if (cdata(1, 0) < 6)
    {
        if (mode != 9)
        {
            if (mdata(6) != 1)
            {
                if (cdata(140, 0) == 0)
                {
                    gmode(4 - 1, -1, 150);
                }
            }
        }
    }
    sx = 8;
    sy = inf_ver - 50;
    if (cdata(22, 0) >= 12000)
    {
        color(0, 0, 0);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_hunger(12));
        sy -= 20;
    }
    else
    {
        if (cdata(22, 0) >= 1000)
        {
            if (cdata(22, 0) <= 4000)
            {
                color(200, 0, 0);
            }
            else
            {
                color(0, 0, 0);
            }
            if (_hunger(cdata(22, 0) / 1000) != ""s)
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_hunger(cdata(22, 0) / 1000));
                sy -= 20;
            }
        }
        else
        {
            color(250, 0, 0);
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_hunger(0));
            sy -= 20;
        }
    }
    if (cdata(261, 0) != 0)
    {
        color(80, 120, 0);
        if (cdata(261, 0) >= 30)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_consick(1));
            sy -= 20;
        }
        else
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_consick);
            sy -= 20;
        }
    }
    if (cdata(250, 0) != 0)
    {
        color(0, 150, 0);
        if (cdata(250, 0) >= 30)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_conpoison(1));
            sy -= 20;
        }
        else
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_conpoison);
            sy -= 20;
        }
    }
    if (cdata(251, 0) != 0)
    {
        color(0, 50, 50);
        if (cdata(251, 0) >= 30)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_consleep(1));
            sy -= 20;
        }
        else
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_consleep);
            sy -= 20;
        }
    }
    if (cdata(253, 0) != 0)
    {
        color(100, 100, 0);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_conblind);
        sy -= 20;
    }
    if (cdata(252, 0) != 0)
    {
        color(0, 100, 100);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_conparalyze);
        sy -= 20;
    }
    if (cdata(263, 0) != 0)
    {
        color(0, 100, 100);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_conmochi);
        sy -= 20;
    }
    if (cdata(254, 0) != 0)
    {
        color(100, 0, 100);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_conconfuse);
        sy -= 20;
    }
    if (cdata(255, 0) != 0)
    {
        color(100, 0, 100);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_confear);
        sy -= 20;
    }
    if (cdata(256, 0) != 0)
    {
        color(0, 100, 100);
        if (cdata(256, 0) >= 60)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_condim(2));
            sy -= 20;
        }
        else
        {
            if (cdata(256, 0) >= 30)
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_condim(1));
                sy -= 20;
            }
            else
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_condim);
                sy -= 20;
            }
        }
    }
    if (cdata(264, 0) != 0)
    {
        color(150, 0, 0);
        if (cdata(264, 0) >= 30)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_conangry(1));
            sy -= 20;
        }
        else
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_conangry);
            sy -= 20;
        }
    }
    if (cdata(258, 0) != 0)
    {
        color(150, 0, 0);
        if (cdata(258, 0) >= 20)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_conbleed(2));
            sy -= 20;
        }
        else
        {
            if (cdata(258, 0) >= 10)
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_conbleed(1));
                sy -= 20;
            }
            else
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_conbleed);
                sy -= 20;
            }
        }
    }
    if (cdata(260, 0) != 0)
    {
        color(150, 100, 0);
        if (cdata(260, 0) >= 50)
        {
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_coninsane(2));
            sy -= 20;
        }
        else
        {
            if (cdata(260, 0) >= 25)
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_coninsane(1));
                sy -= 20;
            }
            else
            {
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_coninsane);
                sy -= 20;
            }
        }
    }
    if (cdata(257, 0) != 0)
    {
        color(100, 0, 100);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_condrunk);
        sy -= 20;
    }
    if (cdata(259, 0) != 0)
    {
        color(0, 0, 160);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_conwet);
        sy -= 20;
    }
    if (cdata(262, 0) != 0)
    {
        color(0, 80, 80);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_congravity);
        sy -= 20;
    }
    if (gdata(90) >= 15)
    {
        if (gdata(90) >= 50)
        {
            color(255, 0, 0);
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_sleep(2));
            sy -= 20;
        }
        else
        {
            if (gdata(90) >= 30)
            {
                color(100, 100, 0);
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_sleep(1));
                sy -= 20;
            }
            else
            {
                color(0, 0, 0);
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_sleep);
                sy -= 20;
            }
        }
    }
    if (cdata(52, 0) < 50)
    {
        if (cdata(52, 0) < 0)
        {
            color(120, 120, 0);
            pos(sx, sy);
            gcopy(3, 0, 416, 50 + en * 30, 15);
            pos(sx + 6, sy + 1);
            mes(_confatigue(2));
            sy -= 20;
        }
        else
        {
            if (cdata(52, 0) < 25)
            {
                color(80, 80, 0);
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_confatigue(1));
                sy -= 20;
            }
            else
            {
                color(60, 60, 0);
                pos(sx, sy);
                gcopy(3, 0, 416, 50 + en * 30, 15);
                pos(sx + 6, sy + 1);
                mes(_confatigue);
                sy -= 20;
            }
        }
    }
    if (cdata(45, 0) != 0)
    {
        color(0, cdata(45, 0) * 40, cdata(45, 0) * 40);
        pos(sx, sy);
        gcopy(3, 0, 416, 50 + en * 30, 15);
        pos(sx + 6, sy + 1);
        mes(_burden(cdata(45, 0)));
        sy -= 20;
    }
    color(0);
    pos(inf_clockx, inf_clocky);
    gcopy(3, 448, 408, inf_clockw, inf_clockh);
    pos(inf_clockx + 78, inf_clocky + 8);
    gcopy(3, 448, 376, 128, 24);
    gmode(4 - 1, -1, 180);
    sx = windoww - 40;
    sy = inf_ver - 40;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(280 + cnt * 3, 0) == 0)
            {
                break;
            }
            pos(sx, sy);
            gcopy(5, cdata((280 + cnt * 3), 0) * 32, 1120, 32, 32);
            color(0, 0, 0);
            pos(sx + 3, sy + 19);
            mes(cdata(280 + cnt * 3 + 2, 0));
            color(255, 255, 255);
            pos(sx + 2, sy + 18);
            mes(cdata(280 + cnt * 3 + 2, 0));
            sy -= 32;
        }
    }
    color(0);
    pos(inf_clockarrowx, inf_clockarrowy);
    gmode(2, 48, 48);
    grotate(3, 0, 288, 0.0174532925199433 * (gdata(13) * 30), 48, 48);
    pos(inf_clockw - 3, inf_clocky + 17 + vfix);
    mes(""s + gdata(10) + u8"/"s + gdata(11) + u8"/"s + gdata(12));
    pos(inf_clockw + 6, inf_clocky + 35);
    bmes(_time(gdata(13) / 4) + u8" "s + _weather(gdata(17)), 255, 255, 255);
    ap3 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            ap = gdata((750 + cnt)) % 10000;
            if (ap == 0)
            {
                continue;
            }
            ap2 = gdata((750 + cnt)) / 10000;
            if (cdata(0, ap2) != 1)
            {
                if (ap2 != 0)
                {
                    gdata(750 + cnt) = 0;
                }
                continue;
            }
            pos(16, inf_clocky + 155 - ap3 * 16);
            color(0, 0, 0);
            bmes(""s + strmid(skillname(ap), 0, 6), 255, 255, 255);
            skilltmps = ""s + sdata((600 + ap), ap2) / 1000;
            pos(66, inf_clocky + 155 - ap3 * 16);
            color(0, 0, 0);
            bmes(
                ""s + sorg(ap, ap2) + u8"."s + strmid(skilltmps, -1, 3),
                255,
                255,
                255);
            ++ap3;
        }
    }
    return;
}
void label_1422()
{
    gsel(9);
    pos(0, 0);
    if (cdata(140, 0) == 5)
    {
        picload(exedir + u8"\\graphic\\anime1.bmp"s);
    }
    if (cdata(140, 0) == 7)
    {
        if (rowactre)
        {
            picload(exedir + u8"\\graphic\\anime2.bmp"s);
        }
    }
    if (cdata(140, 0) == 8)
    {
        picload(exedir + u8"\\graphic\\anime3.bmp"s);
    }
    if (cdata(140, 0) == 9)
    {
        picload(exedir + u8"\\graphic\\anime4.bmp"s);
    }
    gsel(0);
    return;
}
void label_1423()
{
    if (racount == 0)
    {
        label_1422();
    }
    if (msgtemp != ""s || cdata(140, 0) == 7 && rowactre == 0 && fishanime == 0)
    {
        label_1433();
        msgtemp = "";
    }
    label_1421();
    if (cdata(140, 0) == 7)
    {
        if (rowactre == 0)
        {
            label_1446();
        }
    }
    sx = windoww - 156;
    sy = inf_ver - 30;
    w = 148;
    h = 25;
    window2(sx, sy, w, h, 0, 5);
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(sx + 43, sy + 6);
    color(0, 0, 0);
    bmes(u8"AUTO TURN"s, 235, 235, 235);
    pos(sx + 18, sy + 12);
    gmode(2, 24, 24);
    grotate(3, 72, 392, 0.0174532925199433 * (gdata(14) / 4 % 2 * 90));
    if (cdata(140, 0) == 9 || cdata(140, 0) == 5 || cdata(140, 0) == 8
        || cdata(140, 0) == 7 && rowactre != 0)
    {
        window2(sx, sy - 104, 148, 101, 0, 5);
        if (racount % 15 == 0)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    redraw(0);
                    gmode(0);
                    pos(sx + 2, sy - 102);
                    if (cdata(140, 0) == 5)
                    {
                        if (cnt == 2)
                        {
                            snd(52);
                        }
                        gcopy(9, cnt / 2 % 5 * 144, 0, 144, 96);
                        await(40);
                    }
                    if (cdata(140, 0) == 7)
                    {
                        if (racount == 0)
                        {
                            if (cnt == 0)
                            {
                                snd(57);
                            }
                        }
                        gcopy(9, cnt / 3 % 3 * 144, 0, 144, 96);
                        await(50);
                    }
                    if (cdata(140, 0) == 8)
                    {
                        if (cnt == 4)
                        {
                            snd(55);
                        }
                        gcopy(9, cnt / 2 % 3 * 144, 0, 144, 96);
                        await(55);
                    }
                    if (cdata(140, 0) == 9)
                    {
                        if (cnt == 2)
                        {
                            snd(54);
                        }
                        gcopy(9, cnt / 2 % 4 * 144, 0, 144, 96);
                        await(60);
                    }
                    redraw(1);
                }
            }
        }
        else
        {
            gcopy(9, 0, 0, 144, 96);
        }
        ++racount;
        redraw(1);
    }
    if (firstautoturn == 1)
    {
        redraw(1);
        firstautoturn = 0;
    }
    gmode(2);
    return;
}
void label_1424()
{
    return;
}
void label_1425()
{
    gmode(0);
    font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
    color(245, 245, 245);
    msgx = 20;
    msgy = 30;
    sx = 760;
    sx = strlen(s) * 8 + 45;
    if (sx > 760)
    {
        sx = 760;
    }
    ap = sx / 128 + 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (ap); cnt < cnt_end; ++cnt)
        {
            if (cnt == sx / 128)
            {
                ap = sx % 128;
            }
            else
            {
                ap = 128;
            }
            pos(cnt * 128 + msgx, msgy);
            gcopy(3, 672, 477, ap, 3);
            pos(cnt * 128 + msgx, msgy + 2);
            gcopy(3, 672, 480, ap, 22);
            pos(cnt * 128 + msgx, msgy + 22);
            gcopy(3, 672, 477, ap, 2);
        }
    }
    pos(msgx + 18, msgy + 4);
    mes(s);
    gmode(2);
    return;
}
void label_1426()
{
    if (mode == 9)
    {
        return;
    }
    if (cfg_animewait == 0)
    {
        return;
    }
    if (animeid != 21)
    {
        label_1419();
    }
    redraw(0);
    gmode(2, inf_tiles, inf_tiles);
    anicol = 0;
    anisound = 0;
    if (animeid < 4)
    {
        anicol = eleinfo(ele, 0);
        anisound = eleinfo(ele, 1);
    }
    switch (animeid)
    {
    case 8:
        if (synccheck(cc, -1) == 0)
        {
            goto label_1427_internal;
        }
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 10), chipi(3, 10) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 10), chipi(1, 10), chipi(2, 10), chipi(3, 10));
        gfini(chipi(2, 10), chipi(3, 10));
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(selcur);
        anidx = (cdata(1, cc) - scx) * inf_tiles + inf_screenx;
        anidy = (cdata(2, cc) - scy) * inf_tiles + inf_screeny;
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(
            0,
            anidx - inf_tiles / 2,
            anidy - inf_tiles / 2,
            inf_tiles * 2,
            inf_tiles * 2);
        gmode(2);
        gsel(0);
        snd(66);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                redraw(0);
                pos(anidx - inf_tiles / 2, anidy - inf_tiles / 2);
                gcopy(4, 0, 0, inf_tiles * 2, inf_tiles * 2);
                pos(anidx + inf_tiles / 2, anidy + 16);
                grotate(1, 0, 960, 5 * cnt, cnt + 40, cnt + 40);
                redraw(1);
                await(cfg_animewait);
            }
        }
        goto label_1427_internal;
    case 6:
    case 5:
    case 7:
    case 11:
        if (synccheck(tc, -1) == 0)
        {
            goto label_1427_internal;
        }
        if (animeid == 6)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 8), chipi(3, 8) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 8), chipi(1, 8), chipi(2, 8), chipi(3, 8));
            gfini(chipi(2, 8), chipi(3, 8));
            gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
            gsel(selcur);
            snd(38);
        }
        if (animeid == 5 || animeid == 11)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 7), chipi(3, 7) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 7), chipi(1, 7), chipi(2, 7), chipi(3, 7));
            gfini(chipi(2, 7), chipi(3, 7));
            gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
            gsel(selcur);
            snd(33);
        }
        if (animeid == 7)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 9), chipi(3, 9) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 9), chipi(1, 9), chipi(2, 9), chipi(3, 9));
            gfini(chipi(2, 9), chipi(3, 9));
            gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
            gsel(selcur);
        }
        ax = (cdata(1, tc) - scx) * inf_tiles + inf_screenx;
        ay = (cdata(2, tc) - scy) * inf_tiles + inf_screeny;
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(
            0,
            ax - inf_tiles / 2,
            ay - inf_tiles / 2,
            inf_tiles * 2,
            inf_tiles * 2);
        gmode(2);
        gsel(0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
            {
                ax2(cnt) = rnd(inf_tiles);
                ay2(cnt) = rnd(inf_tiles) - 8;
                ap(cnt) = (rnd(4) + 1) * -1;
                if (animeid == 6)
                {
                    ap(cnt) *= -1;
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                if (animeid == 11)
                {
                    await(5);
                }
                else
                {
                    await(cfg_animewait);
                }
                acnt2 = cnt * 2;
                redraw(0);
                pos(ax - inf_tiles / 2, ay - inf_tiles / 2);
                gcopy(4, 0, 0, inf_tiles * 2, inf_tiles * 2);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                    {
                        pos(ax + ax2(cnt), ay + ay2(cnt) + acnt2 / ap(cnt));
                        grotate(
                            1,
                            0,
                            960,
                            acnt2 * ap(cnt),
                            inf_tiles - acnt2 * 2,
                            inf_tiles - acnt2 * 2);
                    }
                }
                redraw(1);
            }
        }
        goto label_1427_internal;
    case 3:
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 5), chipi(3, 5) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 5), chipi(1, 5), chipi(2, 5), chipi(3, 5));
        gfini(chipi(2, 5), chipi(3, 5));
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(selcur);
        snd(35);
        gsel(7);
        picload(exedir + u8"graphic\\anime7.bmp"s);
        pos(0, 0);
        gfini(480, 48);
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(4);
        pos(0, 0);
        gmode(0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                redraw(0);
                pos(0, 0);
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (maxbreath); cnt < cnt_end; ++cnt)
                    {
                        anidx = breathlist(0, cnt);
                        anidy = breathlist(1, cnt);
                        if (fov_los(cdata(1, cc), cdata(2, cc), anidx, anidy)
                            == 0)
                        {
                            continue;
                        }
                        if ((anidx - scx) * inf_tiles + inf_screenx
                                + inf_tiles / 2
                            < windoww)
                        {
                            if ((anidy - scy) * inf_tiles + inf_screeny + 16
                                < inf_screenh * inf_tiles + inf_screeny
                                    - inf_tiles / 2)
                            {
                                pos((anidx - scx) * inf_tiles + inf_screenx
                                        + inf_tiles / 2,
                                    (anidy - scy) * inf_tiles + inf_screeny
                                        + 16);
                                gmode(2, inf_tiles, inf_tiles);
                                grotate(
                                    7,
                                    cnt2 * 48,
                                    0,
                                    atan(
                                        tlocx - cdata(1, cc),
                                        cdata(2, cc) - tlocy),
                                    inf_tiles,
                                    inf_tiles);
                            }
                        }
                    }
                }
                await(cfg_animewait);
                redraw(1);
            }
        }
        if (anisound)
        {
            snd(anisound, 0, 1);
        }
        goto label_1427_internal;
    case 17:
    case 2:
        snd(34);
        gsel(7);
        picload(exedir + u8"graphic\\anime5.bmp"s);
        pos(0, 96);
        gfini(480, 48);
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        aniw = 360;
        anih = 360;
        anidx = (anix - scx) * inf_tiles + inf_screenx + 24;
        anidy = (aniy - scy) * inf_tiles + inf_screeny + 24;
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, 0, 0, windoww, windowh);
        gmode(2);
        gsel(0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                anip = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (aniref * 2 + 1); cnt < cnt_end;
                         ++cnt)
                    {
                        anidy = aniy - aniref + cnt;
                        sy = anidy - scy;
                        if (sy < 0 || sy >= inf_screenh)
                        {
                            continue;
                        }
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (aniref * 2 + 1);
                                 cnt < cnt_end;
                                 ++cnt)
                            {
                                anidx = anix - aniref + cnt;
                                sx = anidx - scx;
                                if (sx < 0 || sx >= inf_screenw)
                                {
                                    continue;
                                }
                                anip(1) = dist(anix, aniy, anidx, anidy);
                                if (anip(1) > aniref)
                                {
                                    continue;
                                }
                                anip(1) = 48 - (anip - 4) * (anip - 4) * 2;
                                if (animeid == 2)
                                {
                                    if (fov_los(anix, aniy, anidx, anidy) == 0)
                                    {
                                        continue;
                                    }
                                }
                                if (sx * inf_tiles + inf_screenx < windoww)
                                {
                                    if (sy * inf_tiles + inf_screeny
                                        < inf_screenh * inf_tiles + inf_screeny
                                            - inf_tiles / 2)
                                    {
                                        pos(sx * inf_tiles + inf_screenx,
                                            sy * inf_tiles + inf_screeny);
                                        gmode(2, 48, 48);
                                        gcopy(7, anip * 48, 96, 48, 48);
                                    }
                                }
                            }
                        }
                    }
                }
                anidx = (anix - scx) * inf_tiles + inf_screenx + 24;
                anidy = (aniy - scy) * inf_tiles + inf_screeny + 24;
                if (anidx < windoww)
                {
                    if (anidy
                        < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2)
                    {
                        pos(anidx, anidy);
                        gmode(4, 96, 96, 250 - cnt * cnt * 2);
                        grotate(7, cnt * 96, 0, 0, 96, 96);
                    }
                }
                redraw(1);
                redraw(0);
                gmode(0);
                pos(0, 0);
                gcopy(4, 0, 0, windoww, windowh);
                await(cfg_animewait);
            }
        }
        if (anisound)
        {
            snd(anisound, 0, 1);
        }
        goto label_1427_internal;
    case 0:
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 3), chipi(3, 3) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 3), chipi(1, 3), chipi(2, 3), chipi(3, 3));
        gfini(chipi(2, 3), chipi(3, 3));
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(selcur);
        snd(37);
        anidx = cdata(1, cc);
        anidy = cdata(2, cc);
        gsel(7);
        picload(exedir + u8"graphic\\anime6.bmp"s);
        pos(0, 0);
        gfini(480, 48);
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        ap(20) = -1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                if (ap(20) == -1)
                {
                    route_info(anidx, anidy, cnt);
                    if (stat == -1)
                    {
                        ap(cnt) = -1;
                        continue;
                    }
                    else
                    {
                        if (stat == 0)
                        {
                            ap(cnt) = -2;
                            ap(20) = 4;
                            continue;
                        }
                    }
                    if (dist(anidx, anidy, cdata(1, cc), cdata(2, cc))
                        > sdataref(3, efid) % 1000 + 1)
                    {
                        ap(cnt) = -2;
                        ap(20) = 4;
                        continue;
                    }
                    ax(cnt) =
                        (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2;
                    ay(cnt) = (anidy - scy) * inf_tiles + inf_screeny + 8;
                    ap(cnt) = 0;
                }
                else
                {
                    --ap(20);
                    if (ap(20) == 0)
                    {
                        break;
                    }
                }
                redraw(0);
                pos(0, 0);
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (cnt2 + 1); cnt < cnt_end; ++cnt)
                    {
                        if (ap(cnt) == -1)
                        {
                            continue;
                        }
                        if (ap(cnt) == -2)
                        {
                            break;
                        }
                        if (ap(cnt) < 5)
                        {
                            if (ax(cnt) < windoww)
                            {
                                if (ay(cnt) < inf_screenh * inf_tiles
                                        + inf_screeny - inf_tiles / 2)
                                {
                                    pos(ax(cnt), ay(cnt));
                                    gmode(2, inf_tiles, inf_tiles);
                                    grotate(
                                        7,
                                        ap(cnt) * 48,
                                        0,
                                        atan(
                                            tlocx - cdata(1, cc),
                                            cdata(2, cc) - tlocy),
                                        48,
                                        48);
                                }
                            }
                        }
                        ++ap(cnt);
                    }
                }
                await(cfg_animewait + 15);
                redraw(1);
            }
        }
        if (anisound)
        {
            snd(anisound, 0, 1);
        }
        goto label_1427_internal;
    case 15:
        if (synccheck(cc, -1) == 0)
        {
            goto label_1427_internal;
        }
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, aniref), chipi(3, aniref) + 960);
        if (aniref == 528)
        {
            gmode(2);
            pos(0, 960);
            gcopy(1, 0, 768, inf_tiles, inf_tiles);
            pos(0, 1008);
            gzoom(
                22,
                20,
                5,
                chipc(0, aniref(1)) + 8,
                chipc(1, aniref(1)) + 4 + (chipc(3, aniref(1)) > inf_tiles) * 8,
                chipc(2, aniref(1)) - 16,
                chipc(3, aniref(1)) - 8
                    - (chipc(3, aniref(1)) > inf_tiles) * 10,
                1);
            pos(6, 974);
            gcopy(1, 0, 1008, 22, 20);
            gsel(selcur);
        }
        else
        {
            if (aniref == 531)
            {
                pos(8, 1058 - chipc(3, aniref(1)));
                gcopy(
                    5,
                    chipc(0, aniref(1)) + 8,
                    chipc(1, aniref(1)) + 2,
                    chipc(2, aniref(1)) - 16,
                    chipc(3, aniref(1)) - 8);
                gmode(4 - 1, -1, 150);
                color(0, 0, 0);
                pos(0, 960 + (chipc(3, aniref(1)) == inf_tiles) * 48);
                gcopy(
                    1,
                    144,
                    768 + (chipc(3, aniref(1)) > inf_tiles) * 48,
                    inf_tiles,
                    chipc(3, aniref(1))
                        + (chipc(3, aniref(1)) > inf_tiles) * 48);
                gmode(2);
                gsel(selcur);
            }
            else
            {
                pos(0, 960);
                gcopy(
                    1,
                    chipi(0, aniref),
                    chipi(1, aniref),
                    chipi(2, aniref),
                    chipi(3, aniref));
                gfini(chipi(2, aniref), chipi(3, aniref));
                gfdec2(
                    c_col(0, aniref(1)),
                    c_col(1, aniref(1)),
                    c_col(2, aniref(1)));
                gsel(selcur);
            }
        }
        ax = (cdata(1, cc) - scx) * inf_tiles;
        ay = (cdata(2, cc) - scy) * inf_tiles;
        ap = dist(cdata(1, cc), cdata(2, cc), anix, aniy) / 2 + 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (ap); cnt < cnt_end; ++cnt)
            {
                ax -= (cdata(1, cc) - anix) * inf_tiles / ap;
                ay -= (cdata(2, cc) - aniy) * inf_tiles / ap;
                gsel(4);
                gmode(0);
                pos(0, 0);
                gcopy(0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles);
                gmode(2);
                gsel(0);
                gmode(2, inf_tiles, inf_tiles);
                if (ax + inf_tiles / 2 < windoww)
                {
                    if (ay
                        < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2)
                    {
                        pos(ax + inf_tiles / 2, ay);
                        grotate(
                            1,
                            0,
                            960,
                            atan(anix - cdata(1, cc), cdata(2, cc) - aniy),
                            inf_tiles,
                            inf_tiles);
                    }
                }
                redraw(1);
                redraw(0);
                gmode(0);
                pos(ax, ay - inf_tiles / 2);
                gcopy(4, 0, 0, inf_tiles, inf_tiles);
                gmode(2);
                await(cfg_animewait);
            }
        }
        goto label_1427_internal;
    case 111:
    case 110:
    case 108:
    case 109:
    case 1:
    case 18:
        if (synccheck(cc, -1) == 0)
        {
            goto label_1427_internal;
        }
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 6), chipi(3, 6) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 6), chipi(1, 6), chipi(2, 6), chipi(3, 6));
        gfini(chipi(2, 6), chipi(3, 6));
        gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
        gsel(selcur);
        if (animeid == 18)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 23), chipi(3, 23) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 23), chipi(1, 23), chipi(2, 23), chipi(3, 23));
            gfini(chipi(2, 23), chipi(3, 23));
            gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
            gsel(selcur);
            snd(29);
        }
        if (animeid == 108)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 1), chipi(3, 1) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 1), chipi(1, 1), chipi(2, 1), chipi(3, 1));
            gfini(chipi(2, 1), chipi(3, 1));
            gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
            gsel(selcur);
            snd(29);
        }
        if (animeid == 109)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 1), chipi(3, 1) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 1), chipi(1, 1), chipi(2, 1), chipi(3, 1));
            gfini(chipi(2, 1), chipi(3, 1));
            gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
            gsel(selcur);
            snd(29);
        }
        if (animeid == 110)
        {
            ap = refitem(inv(3, aniref), 9);
            if (ap == 24021)
            {
                gsel(1);
                color(0);
                boxf(0, 960, chipi(2, 13), chipi(3, 13) + 960);
                pos(0, 960);
                gcopy(
                    1, chipi(0, 13), chipi(1, 13), chipi(2, 13), chipi(3, 13));
                gfini(chipi(2, 13), chipi(3, 13));
                gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
                gsel(selcur);
                snd(42);
            }
            if (ap == 24020)
            {
                gsel(1);
                color(0);
                boxf(0, 960, chipi(2, 2), chipi(3, 2) + 960);
                pos(0, 960);
                gcopy(1, chipi(0, 2), chipi(1, 2), chipi(2, 2), chipi(3, 2));
                gfini(chipi(2, 2), chipi(3, 2));
                gfdec2(c_col(0, anicol), c_col(1, anicol), c_col(2, anicol));
                gsel(selcur);
                snd(30);
            }
        }
        if (animeid == 111)
        {
            gsel(1);
            color(0);
            boxf(
                0,
                960,
                chipi(2, inv(2, aniref) % 1000),
                chipi(3, inv(2, aniref) % 1000) + 960);
            if (inv(2, aniref) % 1000 == 528)
            {
                gmode(2);
                pos(0, 960);
                gcopy(1, 0, 768, inf_tiles, inf_tiles);
                pos(0, 1008);
                gzoom(
                    22,
                    20,
                    5,
                    chipc(0, inv(2, aniref) / 1000) + 8,
                    chipc(1, inv(2, aniref) / 1000) + 4
                        + (chipc(3, inv(2, aniref) / 1000) > inf_tiles) * 8,
                    chipc(2, inv(2, aniref) / 1000) - 16,
                    chipc(3, inv(2, aniref) / 1000) - 8
                        - (chipc(3, inv(2, aniref) / 1000) > inf_tiles) * 10,
                    1);
                pos(6, 974);
                gcopy(1, 0, 1008, 22, 20);
                gsel(selcur);
            }
            else
            {
                if (inv(2, aniref) % 1000 == 531)
                {
                    pos(8, 1058 - chipc(3, inv(2, aniref) / 1000));
                    gcopy(
                        5,
                        chipc(0, inv(2, aniref) / 1000) + 8,
                        chipc(1, inv(2, aniref) / 1000) + 2,
                        chipc(2, inv(2, aniref) / 1000) - 16,
                        chipc(3, inv(2, aniref) / 1000) - 8);
                    gmode(4 - 1, -1, 150);
                    color(0, 0, 0);
                    pos(0,
                        960
                            + (chipc(3, inv(2, aniref) / 1000) == inf_tiles)
                                * 48);
                    gcopy(
                        1,
                        144,
                        768
                            + (chipc(3, inv(2, aniref) / 1000) > inf_tiles)
                                * 48,
                        inf_tiles,
                        chipc(3, inv(2, aniref) / 1000)
                            + (chipc(3, inv(2, aniref) / 1000) > inf_tiles)
                                * 48);
                    gmode(2);
                    gsel(selcur);
                }
                else
                {
                    pos(0, 960);
                    gcopy(
                        1,
                        chipi(0, inv(2, aniref) % 1000),
                        chipi(1, inv(2, aniref) % 1000),
                        chipi(2, inv(2, aniref) % 1000),
                        chipi(3, inv(2, aniref) % 1000));
                    gfini(
                        chipi(2, inv(2, aniref) % 1000),
                        chipi(3, inv(2, aniref) % 1000));
                    gfdec2(
                        c_col(0, inv(2, aniref) / 1000),
                        c_col(1, inv(2, aniref) / 1000),
                        c_col(2, inv(2, aniref) / 1000));
                    gsel(selcur);
                    snd(31);
                }
            }
        }
        if (animeid == 1)
        {
            snd(36);
        }
        ax = (cdata(1, cc) - scx) * inf_tiles;
        ay = (cdata(2, cc) - scy) * inf_tiles - 12;
        ap = dist(cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc)) / 2
            + 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (ap); cnt < cnt_end; ++cnt)
            {
                ax -= (cdata(1, cc) - cdata(1, tc)) * inf_tiles / ap;
                ay -= (cdata(2, cc) - cdata(2, tc)) * inf_tiles / ap;
                gsel(4);
                gmode(0);
                pos(0, 0);
                gcopy(0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles);
                gmode(2);
                gsel(0);
                gmode(2, inf_tiles, inf_tiles);
                pos(ax + inf_tiles / 2, ay);
                grotate(
                    1,
                    0,
                    960,
                    atan(
                        cdata(1, tc) - cdata(1, cc),
                        cdata(2, cc) - cdata(2, tc)),
                    inf_tiles,
                    inf_tiles);
                redraw(1);
                redraw(0);
                gmode(0);
                pos(ax, ay - inf_tiles / 2);
                gcopy(4, 0, 0, inf_tiles, inf_tiles);
                gmode(2);
                await(cfg_animewait);
            }
        }
        if (anisound)
        {
            snd(anisound, 0, 1);
        }
        goto label_1427_internal;
    case 9:
        snd(2);
        gsel(1);
        color(0);
        boxf(0, 960, chipi(2, 17), chipi(3, 17) + 960);
        pos(0, 960);
        gcopy(1, chipi(0, 17), chipi(1, 17), chipi(2, 17), chipi(3, 17));
        gfini(chipi(2, 17), chipi(3, 17));
        gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
        gsel(selcur);
        anidx = (cdata(1, tc) - scx) * inf_tiles + inf_screenx;
        anidy = (cdata(2, tc) - scy) * inf_tiles + inf_screeny;
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, anidx - 16, anidy - 16, 64, 64);
        gmode(2);
        gsel(0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
            {
                redraw(0);
                pos(anidx - 16, anidy - 16);
                gcopy(4, 0, 0, 64, 64);
                pos(anidx + 16, anidy + 16);
                grotate(1, 0, 960, 0.5 * cnt - 0.8, cnt * 8 + 18, cnt * 8 + 18);
                redraw(1);
                await(cfg_animewait);
            }
        }
        goto label_1427_internal;
    case 12:
        ap = 0;
        if (attackskill == 108)
        {
            ap = 2;
        }
        if (attackskill == 109)
        {
            ap = 2;
        }
        if (attackskill == 110)
        {
            ap = 2;
        }
        if (attackskill == 111)
        {
            ap = 2;
        }
        if (attackskill == 100)
        {
            ap = 1;
        }
        if (attackskill == 104)
        {
            ap = 1;
        }
        if (attackskill == 105)
        {
            ap = 0;
        }
        if (attackskill == 101)
        {
            ap = 1;
        }
        if (attackskill == 103)
        {
            ap = 0;
        }
        if (attackskill == 102)
        {
            ap = 1;
        }
        if (attackskill == 107)
        {
            ap = 1;
        }
        aniref = aniref / 4 + 1;
        if (aniref > 20)
        {
            aniref = 20;
        }
        if (cbit(983, tc))
        {
            anix(1) = 1104;
        }
        else
        {
            anix(1) = 720;
        }
        if (ap == 0)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 17), chipi(3, 17) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 17), chipi(1, 17), chipi(2, 17), chipi(3, 17));
            gfini(chipi(2, 17), chipi(3, 17));
            gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
            gsel(selcur);
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (aniref); cnt < cnt_end; ++cnt)
            {
                sx(cnt) = rnd(24) - 12;
                sy(cnt) = rnd(8);
            }
        }
        anidx = (cdata(1, tc) - scx) * inf_tiles + inf_screenx;
        anix = anidx + rnd(12) - rnd(12);
        anidy = (cdata(2, tc) - scy) * inf_tiles + inf_screeny;
        aniy = anidy - 16 + rnd(12) - rnd(12);
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, anidx - 24, anidy - 48, 96, 144);
        if (critical)
        {
            gsel(7);
            picload(exedir + u8"graphic\\anime28.bmp"s);
        }
        gmode(2);
        gsel(0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4 + (critical != 0)); cnt < cnt_end;
                 ++cnt)
            {
                redraw(0);
                gmode(2);
                cnt2 = cnt * 2;
                gmode(2, inf_tiles, inf_tiles);
                if (critical)
                {
                    pos(anidx - 24, anidy - 32);
                    gcopy(7, cnt * 96, 0, 96, 96);
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (aniref); cnt < cnt_end; ++cnt)
                    {
                        pos(anidx + 24 + sx(cnt)
                                + (sx(cnt) < 4) * ((1 + (cnt % 2 == 0)) * -1)
                                    * cnt2
                                + (sx(cnt) > -4) * (1 + (cnt % 2 == 0)) * cnt2,
                            anidy + sy(cnt) + cnt2 * cnt2 / 3);
                        grotate(1, anix(1), 0, 0.4 * cnt, 6, 6);
                    }
                }
                if (ap == 0)
                {
                    pos(anidx + sx + 24, anidy + sy + 10);
                    grotate(
                        1,
                        0,
                        960,
                        0.5 * cnt - 0.8,
                        cnt * 10 + aniref,
                        cnt * 10 + aniref);
                }
                if (ap == 1)
                {
                    pos(anidx, anidy);
                    gcopy(3, 1008 + cnt * 48, 432, 48, 48);
                }
                if (ap == 2)
                {
                    pos(anidx, anidy);
                    gcopy(3, 816 + cnt * 48, 432, 48, 48);
                }
                redraw(1);
                redraw(0);
                gmode(0);
                pos(anidx - 24, anidy - 48);
                gcopy(4, 0, 0, 96, 144);
                gmode(2);
                await(cfg_animewait);
            }
        }
        goto label_1427_internal;
    case 20:
        snd(107);
        if (synccheck(anic, -1) == 0)
        {
            goto label_1427_internal;
        }
        gsel(7);
        picload(exedir + u8"graphic\\anime13.bmp"s);
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        anidx = (cdata(1, anic) - scx) * inf_tiles + inf_screenx - 24;
        anidy = (cdata(2, anic) - scy) * inf_tiles + inf_screeny - 60;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                redraw(0);
                pos(0, 0);
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                cnt2 = cnt;
                gmode(2);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (anidy / 96 + 2); cnt < cnt_end;
                         ++cnt)
                    {
                        pos(anidx, anidy - cnt * 96);
                        gcopy(7, cnt2 / 2 * 96, (cnt == 0) * 96, 96, 96);
                    }
                }
                await(cfg_animewait + 25);
                redraw(1);
            }
        }
        goto label_1427_internal;
    case 19:
        gsel(7);
        picload(exedir + u8"graphic\\anime12.bmp"s);
        gsel(4);
        pos(0, 0);
        gmode(0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        am = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
                if (animode == 0)
                {
                    if (cnt == cc)
                    {
                        continue;
                    }
                }
                if (animode >= 100)
                {
                    if (cnt != animode - 100)
                    {
                        continue;
                    }
                }
                ax(am) = (cdata(1, cnt) - scx) * inf_tiles + inf_screenx - 24;
                if (am != 0)
                {
                    ax(am) += 4 - rnd(8);
                }
                ay(am) = (cdata(2, cnt) - scy) * inf_tiles + inf_screeny + 32;
                if (ay(am) < 0
                    || ay(am) > inf_screenh * inf_tiles + inf_screeny)
                {
                    continue;
                }
                if (ax(am) < -20 || ax(am) > windoww + 20)
                {
                    continue;
                }
                ap(am) = 20 + (am != 0) * rnd(5);
                ++am;
            }
        }
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                redraw(0);
                pos(0, 0);
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                af = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (am); cnt < cnt_end; ++cnt)
                    {
                        if (ap(cnt) <= 0)
                        {
                            continue;
                        }
                        af = 1;
                        cnt2 = cnt;
                        anidy = ay(cnt) * limit((20 - ap(cnt)), 0, 6) / 6 - 96;
                        gmode(2, 96, 96);
                        pos(ax(cnt), anidy);
                        gcopy(
                            7,
                            limit((8 - ap(cnt)), 0, 8) * 96
                                + 96 * (ap(cnt) < 15),
                            0,
                            96,
                            96);
                        if (ap(cnt) <= 14)
                        {
                            if (ap(cnt) >= 6)
                            {
                                pos(ax(cnt), anidy + 16);
                                gcopy(7, (14 - ap(cnt)) / 2 * 96, 96, 96, 96);
                            }
                        }
                        anidx = limit(
                            anidy / 55 + 1,
                            0,
                            7 - limit((11 - ap(cnt)) * 2, 0, 7));
                        {
                            int cnt = 1;
                            for (int cnt_end = cnt + (anidx); cnt < cnt_end;
                                 ++cnt)
                            {
                                pos(ax(cnt2), anidy - cnt * 55);
                                gcopy(7, 96 * (ap(cnt2) < 15), 0, 96, 55);
                                if (cnt == anidx)
                                {
                                    pos(ax(cnt2), anidy - cnt * 55 - 40);
                                    gcopy(7, 288, 0, 96, 40);
                                }
                            }
                        }
                        if (ap(cnt) >= 20)
                        {
                            ap(cnt) -= rnd(2);
                        }
                        else
                        {
                            --ap(cnt);
                        }
                    }
                }
                if (cnt % 2 == 0)
                {
                    if (cnt < 30)
                    {
                        if (cnt / 3 < am)
                        {
                            if (animode == 0)
                            {
                                snd(37);
                            }
                            if (animode >= 100)
                            {
                                snd(33);
                            }
                        }
                    }
                }
                if (af == 0)
                {
                    break;
                }
                await(cfg_animewait + 25);
                redraw(1);
            }
        }
        goto label_1427_internal;
    case 22:
        gsel(7);
        picload(exedir + u8"graphic\\anime17.bmp"s);
        gsel(4);
        pos(0, 0);
        gmode(0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        am = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (75); cnt < cnt_end; ++cnt)
            {
                ax(am) = 240 + rnd(windoww);
                ay(am) = -96;
                ap(am) = rnd(8);
                ++am;
            }
        }
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                redraw(0);
                if (cnt < 4)
                {
                    pos(0, 0);
                }
                else
                {
                    pos(5 - rnd(10), 5 - rnd(10));
                }
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                af = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (am); cnt < cnt_end; ++cnt)
                    {
                        if (ap(cnt) >= 16)
                        {
                            continue;
                        }
                        af = 1;
                        anidy = ay(cnt) * limit((20 - ap(cnt)), 0, 6) / 6 - 96;
                        gmode(2, 96, 96);
                        if (ap(cnt) < 9)
                        {
                            ax(cnt) -= 16 + cnt % (windoww / 30);
                            ay(cnt) += 24 + cnt % (windowh / 10);
                        }
                        if (ap(cnt) >= 10)
                        {
                            pos(ax(cnt) - 48, ay(cnt));
                            gcopy(7, (ap(cnt) - 10) * 192, 96, 192, 96);
                        }
                        if (ap(cnt) < 16)
                        {
                            pos(ax(cnt), ay(cnt));
                            gcopy(
                                7, limit((ap(cnt) - 8), 0, 8) * 96, 0, 96, 96);
                        }
                        ++ap(cnt);
                    }
                }
                if (cnt % 2 == 0)
                {
                    if (cnt < 8)
                    {
                        if (cnt / 3 < am)
                        {
                            snd(108);
                        }
                    }
                }
                if (af == 0)
                {
                    break;
                }
                await(cfg_animewait + 40);
                redraw(1);
            }
        }
        await(cfg_animewait);
        redraw(0);
        pos(0, 0);
        gmode(0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        redraw(1);
        goto label_1427_internal;
    case 21:
        gsel(7);
        picload(exedir + u8"graphic\\anime16.bmp"s);
        gsel(4);
        pos(0, 0);
        gmode(0);
        gcopy(0, 0, 0, windoww, windowh);
        gsel(0);
        am = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
            {
                ax(am) = rnd(windoww);
                ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24;
                ap(am) = 0 - rnd(3);
                ++am;
            }
        }
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                redraw(0);
                pos(5 - rnd(10), 5 - rnd(10));
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                af = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (am); cnt < cnt_end; ++cnt)
                    {
                        if (ap(cnt) >= 10)
                        {
                            continue;
                        }
                        af = 1;
                        cnt2 = cnt;
                        anidy = ay(cnt) * limit((20 - ap(cnt)), 0, 6) / 6 - 96;
                        gmode(2, 96, 96);
                        if (ap(cnt) < 10)
                        {
                            pos(ax(cnt), ay(cnt));
                            gcopy(7, ap(cnt) * 96, 96, 96, 96);
                            pos(ax(cnt), ay(cnt) - 96);
                            gcopy(7, ap(cnt) * 96, 0, 96, 96);
                        }
                        if (ap(cnt) < 0)
                        {
                            ap(cnt) += rnd(2);
                        }
                        else
                        {
                            ++ap(cnt);
                        }
                    }
                }
                if (cnt % 2 == 0)
                {
                    if (cnt < 8)
                    {
                        if (cnt / 3 < am)
                        {
                            snd(108);
                        }
                    }
                }
                if (af == 0)
                {
                    break;
                }
                await(cfg_animewait + 40);
                redraw(1);
            }
        }
        await(cfg_animewait);
        redraw(0);
        pos(0, 0);
        gmode(0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        redraw(1);
        goto label_1427_internal;
    case 14:
    case 16:
        aniref = 4;
        ax = (sx - scx) * inf_tiles + inf_screenx;
        ay = (sy - scy) * inf_tiles + inf_screeny;
        if (animeid == 14)
        {
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 17), chipi(3, 17) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 17), chipi(1, 17), chipi(2, 17), chipi(3, 17));
            gfini(chipi(2, 17), chipi(3, 17));
            gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
            gsel(selcur);
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 17), chipi(3, 17) + 960);
            pos(0, 960);
            gcopy(1, chipi(0, 17), chipi(1, 17), chipi(2, 17), chipi(3, 17));
            gfini(chipi(2, 17), chipi(3, 17));
            gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
            gsel(selcur);
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (aniref); cnt < cnt_end; ++cnt)
            {
                sx(cnt) = rnd(24) - 12;
                sy(cnt) = rnd(8);
            }
        }
        gsel(4);
        gmode(0);
        pos(0, 0);
        gcopy(0, ax - 16, ay - 16, 64, 64);
        gmode(2);
        gsel(0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                redraw(0);
                gmode(2);
                cnt2 = cnt * 2;
                gmode(2, inf_tiles, inf_tiles);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (aniref); cnt < cnt_end; ++cnt)
                    {
                        pos(ax + 24 + sx(cnt)
                                + (sx(cnt) < 4) * ((1 + (cnt % 2 == 0)) * -1)
                                    * cnt2
                                + (sx(cnt) > -4) * (1 + (cnt % 2 == 0)) * cnt2,
                            ay + sy(cnt) + cnt2 * cnt2 / 3);
                        grotate(1, 864, 0, 0.4 * cnt, 24, 24);
                    }
                }
                pos(ax + sx + 24, ay + sy + 10);
                grotate(
                    1,
                    0,
                    960,
                    0.5 * cnt - 0.8,
                    cnt * 10 + aniref * 3,
                    cnt * 10 + aniref * 3);
                redraw(1);
                redraw(0);
                gmode(0);
                pos(ax - 16, ay - 16);
                pos(ax - 16, ay - 16);
                gcopy(4, 0, 0, 64, 64);
                gmode(2);
                await(cfg_animewait);
            }
        }
        goto label_1427_internal;
    }
label_1427_internal:
    gmode(2);
    anicol = 0;
    return;
}
void label_1428()
{
    if (scposval == 0)
    {
        if (scroll)
        {
            sx(0) = cdata(3, 0) - scx;
            sx(1) = cdata(3, 0);
            sy(0) = cdata(4, 0) - scy;
            sy(1) = cdata(4, 0);
        }
        else
        {
            sx(0) = cdata(1, 0) - scx;
            sx(1) = cdata(1, 0);
            sy(0) = cdata(2, 0) - scy;
            sy(1) = cdata(2, 0);
        }
    }
    else
    {
        sx(0) = tlocx - scx;
        sx(1) = tlocx;
        sy(0) = tlocy - scy;
        sy(1) = tlocy;
    }
    if (gdata(20) == 40)
    {
        sx(0) = cdata(1, camera) - scx;
        sx(1) = cdata(1, camera);
        sy(0) = cdata(2, camera) - scy;
        sy(1) = cdata(2, camera);
    }
    if (cfg_alwayscenter)
    {
        scx = sx + scx - inf_screenw / 2;
        scy = sy + scy - inf_screenh / 2;
    }
    else
    {
        if (sy < scposy)
        {
            scy = sy(1) - scposy;
        }
        if (sx < 6)
        {
            scx = sx(1) - 6;
        }
        if (sx > inf_screenw - 7)
        {
            scx = sx(1) - (inf_screenw - 7);
        }
        if (sy > inf_screenh - scposy - 1)
        {
            scy = sy(1) - (inf_screenh - scposy - 1);
        }
    }
    if (scx + inf_screenw >= mdata(0))
    {
        scx = mdata(0) - inf_screenw;
    }
    if (scy + inf_screenh >= mdata(1))
    {
        scy = mdata(1) - inf_screenh;
    }
    if (scy < 0)
    {
        scy = 0;
    }
    if (scx < 0)
    {
        scx = 0;
    }
    return;
}
void label_1429()
{
    slight.clear();
    ++msync;
    sy(2) = cdata(2, 0) - 7;
    sy(3) = cdata(2, 0) + 7;
    sy(4) = 7 - cdata(2, 0);
    sx(3) = cdata(1, 0) - 7 - 2;
    if (cfg_scroll)
    {
        repw(0) = inf_screenw + 2;
        repw(1) = scx - 1;
        reph(0) = inf_screenh + 2;
        reph(1) = scy - 1;
    }
    else
    {
        repw(0) = inf_screenw;
        repw(1) = scx;
        reph(0) = inf_screenh;
        reph(1) = scy;
    }
    ly = 1 + (cfg_scroll == 0);
    {
        int cnt = reph(1);
        for (int cnt_end = cnt + (reph); cnt < cnt_end; ++cnt)
        {
            sy = cnt;
            lx = 1 + (cfg_scroll == 0);
            if (sy < 0 || sy >= mdata(1))
            {
                {
                    int cnt = repw(1);
                    for (int cnt_end = cnt + (repw); cnt < cnt_end; ++cnt)
                    {
                        slight(lx + 1, ly) += 1;
                        slight(lx - 1, ly) += 8;
                        slight(lx, ly - 1) += 2;
                        slight(lx, ly + 1) += 4;
                        slight(lx + 1, ly + 1) += 16;
                        slight(lx - 1, ly - 1) += 32;
                        slight(lx + 1, ly - 1) += 64;
                        slight(lx - 1, ly + 1) += 128;
                        ++lx;
                    }
                }
                ++ly;
                continue;
            }
            {
                int cnt = repw(1);
                for (int cnt_end = cnt + (repw); cnt < cnt_end; ++cnt)
                {
                    sx = cnt;
                    if (sx < 0 || sx >= mdata(0))
                    {
                        slight(lx + 1, ly) += 1;
                        slight(lx - 1, ly) += 8;
                        slight(lx, ly - 1) += 2;
                        slight(lx, ly + 1) += 4;
                        slight(lx + 1, ly + 1) += 16;
                        slight(lx - 1, ly - 1) += 32;
                        slight(lx + 1, ly - 1) += 64;
                        slight(lx - 1, ly + 1) += 128;
                        ++lx;
                        continue;
                    }
                    if (gdata(20) == 40)
                    {
                        goto label_1430_internal;
                    }
                    if (cdata(253, 0) != 0)
                    {
                        if (sx != cdata(1, 0) || sy != cdata(2, 0))
                        {
                            goto label_1431_internal;
                        }
                    }
                    if (sy > sy(2))
                    {
                        if (sy < sy(3))
                        {
                            sx(2) = fovlist(0, sy + sy(4)) + sx(3);
                            if (sx >= sx(2))
                            {
                                if (sx < fovlist(1, sy + sy(4)) + sx(3))
                                {
                                    if (fov_los(
                                            cdata(1, 0), cdata(2, 0), sx, sy))
                                    {
                                    label_1430_internal:
                                        mapsync(sx, sy) = msync;
                                        if (map(sx, sy, 1) != 0)
                                        {
                                            cdata(6, map(sx, sy, 1) - 1) =
                                                msync;
                                        }
                                        if (map(sx, sy, 2) != map(sx, sy, 0))
                                        {
                                            map(sx, sy, 2) = map(sx, sy, 0);
                                            label_1440();
                                        }
                                        map(sx, sy, 5) = map(sx, sy, 4);
                                        ++lx;
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                label_1431_internal:
                    slight(lx, ly) += 1000;
                    slight(lx + 1, ly) += 1;
                    slight(lx - 1, ly) += 8;
                    slight(lx, ly - 1) += 2;
                    slight(lx, ly + 1) += 4;
                    slight(lx + 1, ly + 1) += 16;
                    slight(lx - 1, ly - 1) += 32;
                    slight(lx + 1, ly - 1) += 64;
                    slight(lx - 1, ly + 1) += 128;
                    ++lx;
                }
            }
            ++ly;
        }
    }
    return;
}
void label_1433()
{
    screendrawhack = 2;
    cell_draw();
    screendrawhack = 3;
    if (gdata(20) == 40)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
                ap = 0;
                if (cdata(9, cnt) == 10)
                {
                    ap(0) = 1;
                    ap(1) = 1;
                    ap(2) = 25;
                }
                if (cdata(9, cnt) == -3)
                {
                    ap(0) = 25;
                    ap(1) = 1;
                    ap(2) = 1;
                }
                if (cnt == 0)
                {
                    ap = 0;
                }
                if (ap != 0)
                {
                    sx = (cdata(1, cnt) - scx) * inf_tiles + inf_screenx;
                    sy = (cdata(2, cnt) - scy) * inf_tiles + inf_screeny;
                    if (sx >= 0)
                    {
                        if (sy >= 0)
                        {
                            if (sx - inf_screenx
                                < (inf_screenw - 1) * inf_tiles)
                            {
                                if (sy < (inf_screenh - 1) * inf_tiles)
                                {
                                    pos(sx, sy * (sy > 0));
                                    gfini(
                                        inf_tiles,
                                        inf_tiles + (sy < 0) * inf_screeny);
                                    gfinc(ap, ap(1), ap(2));
                                    if (cnt == camera)
                                    {
                                        gmode(4 - 1, -1, 120);
                                        color(0, 0, 0);
                                        pos(sx + 36, sy + 32);
                                        gcopy(3, 240, 410, 24, 16);
                                        gmode(2);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    screendrawhack = 4;
    sy = 84 * cdata(2, 0) / mdata(1);
    if (sy < 2)
    {
        sy = 2;
    }
    else
    {
        if (sy > 76)
        {
            sy = 76;
        }
    }
    sx = 120 * cdata(1, 0) / mdata(0);
    if (sx < 2)
    {
        sx = 2;
    }
    else
    {
        if (sx > 112)
        {
            sx = 112;
        }
    }
    if (raderx != -1)
    {
        pos(inf_raderx + raderx, inf_radery + radery);
        gcopy(3, 688 + raderx, 528 + radery, 6, 6);
    }
    raderx = sx;
    radery = sy;
    pos(inf_raderx + sx, inf_radery + sy);
    gcopy(3, 15, 338, 6, 6);
    losmode = 0;
    screendrawhack = 5;
    if (cfg_env)
    {
        if (gdata(17) == 3)
        {
            label_1434();
        }
        if (gdata(17) == 4)
        {
            label_1435();
        }
        if (gdata(17) == 2)
        {
            label_1436();
        }
        if (gdata(17) == 1)
        {
            label_1437();
        }
    }
    return;
}
void label_1434()
{
    if (mdata(14) != 2)
    {
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxrain * (1 + (mdata(6) == 1)));
             cnt < cnt_end;
             ++cnt)
        {
            s_p = rnd(100);
            color(170 - s_p, 200 - s_p, 250 - s_p);
            line(
                rainx(cnt) - 40,
                rainy(cnt) - cnt % 3 - 1,
                rainx(cnt) - 39 + cnt % 2,
                rainy(cnt));
            if (rainx(cnt) == 0)
            {
                rainx(cnt) = rnd(windoww) + 40;
            }
            else
            {
                rainx(cnt) += 2;
            }
            if (rainy(cnt) == 0)
            {
                rainy(cnt) = rnd(windowh - inf_verh) - 6;
            }
            else
            {
                rainy(cnt) += 16 + cnt % 8;
                if (rainy(cnt) > windowh - inf_verh - 6)
                {
                    rainy(cnt) = 0;
                    rainx(cnt) = 0;
                }
            }
        }
    }
    weatherbk = gdata(17);
    return;
}
void label_1435()
{
    if (mdata(14) != 2)
    {
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxrain * (1 + (mdata(6) == 1)));
             cnt < cnt_end;
             ++cnt)
        {
            s_p = rnd(100);
            color(170 - s_p, 200 - s_p, 250 - s_p);
            line(
                rainx(cnt) - 40,
                rainy(cnt) - cnt % 5 - 4,
                rainx(cnt) - 39 + cnt % 2,
                rainy(cnt));
            if (rainx(cnt) == 0)
            {
                rainx(cnt) = rnd(windoww) + 40;
            }
            else
            {
                rainx(cnt) += 1;
            }
            if (rainy(cnt) == 0)
            {
                rainy(cnt) = rnd(windowh - inf_verh) - 6;
            }
            else
            {
                rainy(cnt) += 24 + cnt % 8;
                if (rainy(cnt) > windowh - inf_verh - 10)
                {
                    rainy(cnt) = 0;
                    rainx(cnt) = 0;
                }
            }
        }
    }
    weatherbk = gdata(17);
    return;
}
void label_1436()
{
    if (mdata(14) != 2)
    {
        return;
    }
    color(0, 0, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxrain * 2); cnt < cnt_end; ++cnt)
        {
            if (cnt % 30 == 0)
            {
                gmode(4, 8, 8, 100 + cnt % 150);
            }
            if (rainy(cnt) == 0 || weatherbk != gdata(17))
            {
                rainy(cnt) = rnd(windowh / 2) * -1;
                rainx(cnt) = rnd(windoww);
            }
            else
            {
                rainx(cnt) += rnd(3) - 1;
                rainy(cnt) += rnd(2) + cnt % 5;
                if (rainy(cnt) > windowh - inf_verh - 10 || rnd(500) == 0)
                {
                    rainy(cnt) = 0;
                    rainx(cnt) = 0;
                }
            }
            pos(rainx(cnt), rainy(cnt));
            gcopy(3, rainx(cnt) % 2 * 8, 600 + cnt % 6 * 8);
        }
    }
    weatherbk = gdata(17);
    gmode(2);
    return;
}
void label_1437()
{
    if (mdata(14) != 2)
    {
        return;
    }
    color(0, 0, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxrain); cnt < cnt_end; ++cnt)
        {
            if (cnt % 20 == 0)
            {
                gmode(4, 8, 8, 100 + cnt % 150);
            }
            if (rainy(cnt) <= 0 || weatherbk != gdata(17))
            {
                rainy(cnt) = windowh - inf_verh - 8 - rnd(100);
                rainx(cnt) = rnd(windoww);
            }
            else
            {
                pos(rainx(cnt), rainy(cnt));
                gcopy(3, 16 + rainx(cnt) % 2 * 8, 600 + cnt % 6 * 8);
                rainx(cnt) += rnd(3) - 1;
                rainy(cnt) -= rnd(2) + cnt % 5;
            }
        }
    }
    weatherbk = gdata(17);
    gmode(2);
    return;
}
void label_1438()
{
    if (abs(cdata(3, 0) - cdata(1, 0)) > 1)
    {
        return;
    }
    if (abs(cdata(4, 0) - cdata(2, 0)) > 1)
    {
        return;
    }
    scrollp = cfg_walkwait;
    if (mdata(6) == 1)
    {
        scrollp = 6;
        keybd_wait = 1000;
        if (chipm(0, map(cdata(1, 0), cdata(2, 0), 0)) == 4)
        {
            scrollp = 9;
        }
    }
    else
    {
        if (keybd_wait > cfg_startrun)
        {
            scrollp = 3;
            if (cfg_runscroll == 0)
            {
                return;
            }
            if (keybd_wait >= 100000)
            {
                scrollp = 1;
            }
        }
    }
    scxbk2 = scx;
    scybk2 = scy;
    scroll = 1;
    label_1428();
    scroll = 0;
    scxbk = scx;
    scybk = scy;
    scx = scxbk2;
    scy = scybk2;
    scrollanime = 1;
    {
        int cnt = 1;
        for (int cnt_end = cnt + (scrollp - 1); cnt < cnt_end; ++cnt)
        {
            if (cnt % 2 == 1)
            {
                ++scrturn;
            }
            redraw(0);
            sxfix =
                (cdata(3, 0) - cdata(1, 0)) * cnt * inf_tiles / scrollp * -1;
            syfix =
                (cdata(4, 0) - cdata(2, 0)) * cnt * inf_tiles / scrollp * -1;
            gsel(4);
            pos(0, 0);
            gmode(0);
            gcopy(0, 0, windowh - inf_verh, windoww, inf_tiles);
            gsel(0);
            gmode(2);
            label_1433();
            gmode(0);
            pos(0, windowh - inf_verh);
            gcopy(4, 0, 0, windoww, inf_tiles);
            gmode(2);
            label_1421();
            gmode(2);
            redraw(1);
            await(40);
        }
    }
    scrollanime = 0;
    return;
}
void label_1439()
{
    gsel(3);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            sy = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    sx = cnt;
                    sy(1) = 84 * sy / mdata(1);
                    sx(1) = 120 * sx / mdata(0);
                    pos(688 + sx(1), 528 + sy(1));
                    gcopy(
                        2,
                        map(sx, sy, 0) % 33 * inf_tiles + sx % 16,
                        map(sx, sy, 0) / 33 * inf_tiles + sy % 12,
                        raderw,
                        raderh);
                    pos(688 + sx(1), 528 + sy(1));
                    gfini(raderw, raderh);
                    if (chipm(7, map(sx, sy, 0)) && 4)
                    {
                        gfdec2(100, 100, 100);
                    }
                }
            }
        }
    }
    pos(688, 528);
    gfini(raderw * mdata(0), raderh * mdata(1));
    gfinc(10, 10, 10);
    gsel(0);
    return;
}
void label_1440()
{
    sy(1) = 84 * sy / mdata(1);
    sx(1) = 120 * sx / mdata(0);
    pos(inf_raderx + sx(1), inf_radery + sy(1));
    gcopy(3, 688 + sx(1), 528 + sy(1), raderw, raderh);
    return;
}
void label_1441()
{
    gsel(4);
    gmode(0);
    pos(0, 0);
    gcopy(0, 0, 0, windoww, windowh);
    gsel(0);
    gmode(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            await(20);
            redraw(0);
            pos(0, 0);
            gfini(windoww, windowh);
            gfdec2(5, 5, 5);
            redraw(1);
        }
    }
    color(500, 500, 500);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            gmode(4, 0, 0, 10 + cnt * 5);
            await(20);
            redraw(0);
            pos(0, 0);
            gcopy(4, 0, 0, windoww, windowh);
            redraw(1);
        }
    }
    redraw(0);
    gmode(2);
    return;
}
void label_1442()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            await(20);
            redraw(0);
            pos(0, 0);
            gfini(windoww, windowh);
            gfdec2(5, 5, 5);
            redraw(1);
        }
    }
    redraw(0);
    return;
}
void label_1443()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            gmode(4, 0, 0, 10 + cnt * 5);
            await(20);
            redraw(0);
            pos(0, 0);
            gcopy(4, 0, 0, windoww, windowh);
            redraw(1);
        }
    }
    redraw(0);
    gmode(2);
    return;
}
void label_1444()
{
    redraw(0);
    color(0, 0, 0);
    boxf();
    evx = 12;
    evy = 14;
    evscry = 40;
    evtiles = 48;
    evscrh = windowh / evtiles - 1;
    evscrw = windoww / evtiles + 2;
    label_1445();
    redraw(1);
    return;
}
void label_1445()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (evscrh); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            dy = cnt + evy;
            if (dy >= mdata(1))
            {
                dy = mdata(1);
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (evscrw); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    dx = cnt + evx;
                    if (dx >= mdata(0))
                    {
                        dx = mdata(0);
                    }
                    pos(x * evtiles, y * evtiles);
                    gmode(0, inf_tiles, inf_tiles);
                    ap = map(dx, dy, 0);
                    grotate(
                        2,
                        ap % 33 * inf_tiles,
                        ap / 33 * inf_tiles,
                        0,
                        evtiles,
                        evtiles);
                }
            }
        }
    }
    return;
}
void label_1446()
{
    fishdir(0) = 0;
    fishdir(1) = 1;
    fishdir(2) = 3;
    fishdir(3) = 2;
    fishdir = fishdir(cdata(83, 0));
    randomize(cdata(26, 0) / 3);
    gmode(2);
    if (fishanime == 4)
    {
        sx = (fishx - scx) * inf_tiles + inf_screenx;
        sy = (fishy - scy) * inf_tiles + inf_screeny;
        if (fishanime(1) > 15)
        {
            sx += (cdata(1, 0) - fishx) * 8 * (fishanime(1) - 15);
            sy +=
                (cdata(2, 0) - fishy) * 8 * (fishanime(1) - 15) + fishanime(1);
            pos(sx, sy - 44);
            gcopy(9, 144 + fishanime(1) / 2 % 2 * 48, 0, 48, 48);
        }
        else
        {
            pos(sx, sy - fishanime(1) * 3 + 14);
            gcopy(
                9,
                144 + fishanime(1) % 2 * 48,
                0,
                48,
                limit(fishanime(1) * 5, 1, 48));
        }
        return;
    }
    sx = (cdata(1, 0) - scx) * inf_tiles + inf_screenx + 20;
    if (fishdir == 1)
    {
        sx -= 48;
    }
    if (fishdir == 3)
    {
        sx += 48;
    }
    sy = (cdata(2, 0) - scy) * inf_tiles + inf_screeny + 20;
    if (fishdir == 0)
    {
        sy += 48;
    }
    if (fishdir == 2)
    {
        sy -= 48;
    }
    ap = rnd(2);
    if (fishanime == 1)
    {
        ap = fishanime(1);
    }
    else
    {
        if (fishanime >= 2)
        {
            ap = 10;
        }
    }
    pos(sx, sy - 5 + ap);
    gcopy(9, 116, 18, 14, 10 - ap);
    sx = (cdata(1, 0) - scx) * inf_tiles + inf_screenx;
    sy = (cdata(2, 0) - scy) * inf_tiles + inf_screeny;
    gmode(2, 48, 48);
    if (fishdir == 0)
    {
        sx2 = inf_tiles / 2 + rnd(3) - 1;
        sy2 = inf_tiles / 2 + 12;
        gmode(2, 48, 48);
        pos(sx + sx2 + 1, sy + sy2 + 40);
        grotate(9, 48, 0, 0, 48, 48);
    }
    if (fishdir == 1)
    {
        sx2 = inf_tiles / 2 - 26;
        sy2 = inf_tiles / 2 - 12 + rnd(3) - 3;
        pos(sx + sx2 - 16, sy + sy2 + 25);
        grotate(9, 48, 0, 0, 48, 48);
    }
    if (fishdir == 2)
    {
        sx2 = inf_tiles / 2 + rnd(3) + 1;
        sy2 = inf_tiles / 2 - 46;
    }
    if (fishdir == 3)
    {
        sx2 = inf_tiles / 2 + 26;
        sy2 = inf_tiles / 2 - 12 + rnd(3) - 3;
        pos(sx + sx2 + 14, sy + sy2 + 25);
        grotate(9, 48, 0, 0, 48, 48);
    }
    if (fishdir == 2)
    {
        gmode(2, 48, 24);
        pos(sx + sx2, sy + sy2);
        grotate(9, 0, 24, 0.5 * fishdir * 3.14, 48, 24);
    }
    else
    {
        gmode(2, 48, 48);
        pos(sx + sx2, sy + sy2);
        grotate(9, 0, 0, 0.5 * fishdir * 3.14, 48, 48);
    }
    randomize();
    return;
}
int carmor(int prm_890)
{
    if (cdata(64, prm_890) >= 35000)
    {
        stat = 169;
        return stat;
    }
    else
    {
        if (cdata(64, prm_890) >= 15000)
        {
            stat = 170;
            return stat;
        }
        else
        {
            stat = 171;
            return stat;
        }
    }
}
std::string cnveqweight(int prm_891)
{
    if (cdata(64, prm_891) >= 35000)
    {
        return lang(u8"(重装備)"s, u8"(Heavy)"s);
    }
    else
    {
        if (cdata(64, prm_891) >= 15000)
        {
            return lang(u8"(中装備)"s, u8"(Medium)"s);
        }
        else
        {
            return lang(u8"(軽装備)"s, u8"(Light)"s);
        }
    }
}
int calcexpalive(int prm_892)
{
    stat = prm_892 * 100;
    return stat;
}
void label_1452()
{
    cdata(68, r1) = 0;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, r1) != 0)
            {
                ++cdata(68, r1);
            }
        }
    }
    if (cdata(68, r1) > 13)
    {
        cdata(68, r1) = (cdata(68, r1) - 13) * 5;
    }
    else
    {
        cdata(68, r1) = 0;
    }
    return;
}
void label_1453()
{
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, r1) != 0)
            {
                continue;
            }
            if (rnd(7) == 0)
            {
                cdata(cnt, r1) = 20000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(2)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(2)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(9) == 0)
            {
                cdata(cnt, r1) = 30000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(3)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(3)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(8) == 0)
            {
                cdata(cnt, r1) = 50000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(5)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(5)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(4) == 0)
            {
                cdata(cnt, r1) = 60000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(6)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(6)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(6) == 0)
            {
                cdata(cnt, r1) = 70000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(7)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(7)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(5) == 0)
            {
                cdata(cnt, r1) = 80000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(8)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(8)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(5) == 0)
            {
                cdata(cnt, r1) = 90000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(9)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(9)
                            + u8"!"s));
                    break;
                }
            }
            if (rnd(1) == 0)
            {
                cdata(cnt, r1) = 10000;
                if (cm)
                {
                    break;
                }
                else
                {
                    txt(lang(
                        name(r1) + u8"の身体から新たな"s + bodyn(1)
                            + u8"が生えてきた！"s,
                        name(r1) + u8" grow"s + _s(r1) + u8" a new "s + bodyn(1)
                            + u8"!"s));
                    break;
                }
            }
            break;
        }
    }
    label_1452();
    return;
}
void label_1454()
{
    cdata(35, r1) -= cdata(36, r1);
    if (cdata(35, r1) < 0)
    {
        cdata(35, r1) = 0;
    }
    ++cdata(38, r1);
    if (cdata(150, r1) != 13)
    {
        if (r2 == 0)
        {
            txtef(2);
            if (r1 == 0)
            {
                txt(lang(
                    name(r1) + u8"はレベル"s + cdata(38, r1) + u8"になった！"s,
                    name(r1) + u8" have gained a level."s));
            }
            else
            {
                txt(lang(
                    name(r1) + u8"は成長した。"s,
                    name(r1) + u8" "s + have(r1) + u8" grown up."s));
            }
        }
    }
    else
    {
        addnews(2, r1);
    }
    p = 5 * (100 + sorg(14, r1) * 10) / (300 + cdata(38, r1) * 15) + 1;
    if (r1 == 0)
    {
        if (cdata(38, r1) % 5 == 0)
        {
            if (cdata(48, r1) < cdata(38, r1))
            {
                if (cdata(38, r1) <= 50)
                {
                    ++gdata(93);
                }
            }
        }
        label_1525();
        p += trait(154);
    }
    cdata(41, r1) += p;
    cdata(42, r1) += p;
    if (cdatan(2, r1) == u8"mutant"s || r1 == 0 && trait(0) == 1)
    {
        if (cdata(38, r1) < 37)
        {
            if (cdata(38, r1) % 3 == 0)
            {
                if (cdata(48, r1) < cdata(38, r1))
                {
                    label_1453();
                }
            }
        }
    }
    if (cdata(48, r1) < cdata(38, r1))
    {
        cdata(48, r1) = cdata(38, r1);
    }
    if (r1 >= 16)
    {
        label_1455();
    }
    label_1456();
    label_1477();
    return;
}
void label_1455()
{
    {
        int cnt = 10;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            sdata(cnt + 600, r1) =
                limit(sdata(cnt + 600, r1) + 1000000 * rnd(3), 1, 2000000000);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (length(mainskill)); cnt < cnt_end; ++cnt)
        {
            sdata(mainskill(cnt) + 600, r1) = limit(
                sdata(mainskill(cnt) + 600, r1) + 1000000 * rnd(3),
                1,
                2000000000);
        }
    }
    return;
}
void label_1456()
{
    cdata(36, r1) = limit(cdata(38, r1), 1, 200)
            * (limit(cdata(38, r1), 1, 200) + 1)
            * (limit(cdata(38, r1), 1, 200) + 2)
            * (limit(cdata(38, r1), 1, 200) + 3)
        + 3000;
    if (cdata(36, r1) > 100000000 || cdata(36, r1) < 0)
    {
        cdata(36, r1) = 100000000;
    }
    return;
}
void label_1457()
{
    skillexp(163, 0, 100);
    return;
}
void label_1458()
{
    skillexp(150, 0, 15, 10, 100);
    return;
}
void label_1459()
{
    if (r2 >= (sdata(156, r1) + 10) * (sdata(156, r1) + 10))
    {
        skillexp(
            156, r1, limit(r2 * r2 / (sdata(156, r1) * 5 + 10), 10, 1000), 10);
    }
    return;
}
void label_1460()
{
    skillexp(158, r1, 100);
    return;
}
void label_1461()
{
    skillexp(159, cc, gdata(22) * 2 + 20);
    return;
}
void label_1462()
{
    if (r1 == 0)
    {
        skillexp(r2, r1, sdataref(2, r2) * 4 + 20, 4, 5);
        skillexp(172, r1, sdataref(2, r2) + 10, 5);
    }
    else
    {
        skillexp(172, r1, sdataref(2, r2) + 10, 5);
    }
    return;
}
void label_1463()
{
    skillexp(164, r1, abs(cdata(55, r1)) * 200 / (cdata(56, r1) + 1));
    return;
}
void label_1464()
{
    if (cdata(50, r1) != cdata(51, r1))
    {
        if (sdata(154, r1) < sdata(11, r1))
        {
            skillexp(154, r1, 5 + sdata(154, r1) / 5, 1000);
        }
    }
    if (cdata(55, r1) != cdata(56, r1))
    {
        if (sdata(155, r1) < sdata(16, r1))
        {
            skillexp(155, r1, 5 + sdata(155, r1) / 5, 1000);
        }
    }
    return;
}
void label_1465()
{
    if (mdata(6) == 1)
    {
        if (rnd(20))
        {
            return;
        }
    }
    skillexp(157, 0, 2, 0, 1000);
    return;
}
void label_1466()
{
    skillexp(160, 0, 600);
    return;
}
void label_1467()
{
    skillexp(183, cc, r1, 0, 0);
    return;
}
void label_1468()
{
    if (cdata(45, 0) == 0)
    {
        return;
    }
    if (mdata(6) == 1)
    {
        if (rnd(20))
        {
            return;
        }
    }
    skillexp(153, 0, 4, 0, 1000);
    return;
}
void label_1469()
{
    if (cc == 0)
    {
        skillexp(174, 0, 40);
    }
    return;
}
void label_1470()
{
    skillexp(185, 0, 100);
    return;
}
void label_1471()
{
    skillexp(165, 0, 10 + sdataref(4, efid) / 5);
    return;
}
void label_1472()
{
    skillexp(r1, 0, 50 + r2 * 20);
    return;
}
int calcattackhit(int prm_893)
{
    critical = 0;
    if (attackskill == 106)
    {
        tohitorg =
            sdata(12, cc) / 5 + sdata(10, cc) / 2 + sdata(attackskill, cc) + 50;
        tohitfix = sdata(12, cc) / 5 + sdata(10, cc) / 10 + cdata(72, cc);
        pierce = limit(sdata(attackskill, cc) / 5, 5, 50);
        if (cdata(32, cc) && 1)
        {
            tohitorg = tohitorg * 100 / 130;
        }
    }
    else
    {
        tohitorg = sdata(12, cc) / 4 + sdata(inv(16, cw), cc) / 3
            + sdata(attackskill, cc) + 50;
        tohitfix = cdata(72, cc) + inv(13, cw);
        if (ammo != -1)
        {
            tohitfix += inv(13, ammo);
        }
        calcweaponfix(inv(3, cw));
    }
    tohit = tohitorg + tohitfix;
    if (attackskill != 106)
    {
        if (attackrange)
        {
            if (prm_893 == 0)
            {
                rangedist = limit(
                    dist(cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc))
                        - 1,
                    0,
                    9);
                tohi = tohit * rangemap(rangedist) / 100;
            }
        }
        else
        {
            if (cdata(32, cc) && 2)
            {
                tohit += 25;
                if (inv(7, cw) >= 4000)
                {
                    tohit += sdata(167, cc);
                }
            }
            if (cdata(32, cc) && 4)
            {
                if (attacknum == 1)
                {
                    if (inv(7, cw) >= 4000)
                    {
                        tohit -= (inv(7, cw) - 4000 + 400)
                            / (10 + sdata(166, cc) / 5);
                    }
                }
                else
                {
                    if (inv(7, cw) > 1500)
                    {
                        tohit -= (inv(7, cw) - 1500 + 100)
                            / (10 + sdata(166, cc) / 5);
                    }
                }
            }
        }
    }
    if (gdata(183) != 0)
    {
        if (cc == 0)
        {
            tohit = tohit * 100 / limit((150 - sdata(301, cc) / 2), 115, 150);
            if (attackskill != 106)
            {
                if (attackrange == 0)
                {
                    if (inv(7, cw) >= 4000)
                    {
                        tohit -= (inv(7, cw) - 4000 + 400)
                            / (10 + sdata(301, cc) / 5);
                    }
                }
            }
        }
        if (cc == gdata(183))
        {
            tohit = tohit * 100 / limit((150 - sdata(10, cc) / 2), 115, 150);
            if (attackskill != 106)
            {
                if (attackrange == 0)
                {
                    if (inv(7, cw) >= 4000)
                    {
                        tohit -= (inv(7, cw) - 4000 + 400)
                            / (10 + sdata(10, cc) / 10);
                    }
                }
            }
        }
    }
    if (attacknum > 1)
    {
        twohit = 100 - (attacknum - 1) * (10000 / (100 + sdata(166, cc) * 10));
        if (tohit > 0)
        {
            tohit = tohit * twohit / 100;
        }
    }
    if (prm_893 == 1)
    {
        stat = tohit;
        return stat;
    }
    evade = sdata(13, tc) / 3 + sdata(173, tc) + cdata(71, tc) + 25;
    if (prm_893 == 2)
    {
        stat = evade;
        return stat;
    }
    if (cdata(256, tc) != 0)
    {
        if (rnd(4) == 0)
        {
            critical = 1;
            stat = 1;
            return stat;
        }
        evade /= 2;
    }
    if (cdata(253, cc) != 0)
    {
        tohit /= 2;
    }
    if (cdata(253, tc) != 0)
    {
        evade /= 2;
    }
    if (cdata(251, tc) != 0)
    {
        stat = 1;
        return stat;
    }
    if (cdata(254, cc) != 0 || cdata(256, cc) != 0)
    {
        if (attackrange)
        {
            tohit /= 5;
        }
        else
        {
            tohit = tohit / 3 * 2;
        }
    }
    if (sdata(187, tc) != 0)
    {
        if (tohit < sdata(187, tc) * 10)
        {
            evaderef = evade * 100 / limit(tohit, 1, tohit);
            if (evaderef > 300)
            {
                if (rnd(sdata(187, tc) + 250) > 100)
                {
                    stat = -2;
                    return stat;
                }
            }
            if (evaderef > 200)
            {
                if (rnd(sdata(187, tc) + 250) > 150)
                {
                    stat = -2;
                    return stat;
                }
            }
            if (evaderef > 150)
            {
                if (rnd(sdata(187, tc) + 250) > 200)
                {
                    stat = -2;
                    return stat;
                }
            }
        }
    }
    if (rnd(5000) < sdata(13, cc) + 50)
    {
        critical = 1;
        stat = 1;
        return stat;
    }
    if (cdata(67, cc) > rnd(200))
    {
        critical = 1;
        stat = 1;
        return stat;
    }
    if (rnd(20) == 1)
    {
        stat = -1;
        return stat;
    }
    if (rnd(20) == 0)
    {
        stat = 1;
        return stat;
    }
    if (tohit < 1)
    {
        stat = -1;
        return stat;
    }
    if (evade < 1)
    {
        stat = 1;
        return stat;
    }
    if (rnd(tohit) > rnd(evade * 3 / 2))
    {
        stat = 1;
        return stat;
    }
    stat = -1;
    return stat;
}
int calcattackdmg(int prm_894)
{
    if (attackskill == 106)
    {
        dmgfix = sdata(10, cc) / 8 + sdata(106, cc) / 8 + cdata(73, cc);
        dice1 = 2;
        dice2 = sdata(106, cc) / 8 + 5;
        dmgmulti = 0.5
            + elona_double(
                  (sdata(10, cc) + sdata(attackskill, cc) / 5
                   + sdata(152, cc) * 2))
                / 40;
    }
    else
    {
        dmgfix = cdata(73, cc) + inv(12, cw) + inv(20, cw) + (inv(17, cw) == 1);
        dice1 = inv(10, cw);
        dice2 = inv(11, cw);
        if (ammo != -1)
        {
            dmgfix += inv(12, ammo) + inv(10, ammo) * inv(11, ammo) / 2;
            dmgmulti = 0.5
                + elona_double(
                      (sdata(13, cc) + sdata(inv(16, cw), cc) / 5
                       + sdata(attackskill, cc) / 5 + sdata(189, cc) * 3 / 2))
                    / 40;
        }
        else
        {
            dmgmulti = 0.6
                + elona_double(
                      (sdata(10, cc) + sdata(inv(16, cw), cc) / 5
                       + sdata(attackskill, cc) / 5 + sdata(152, cc) * 2))
                    / 45;
        }
    }
    if (attackrange)
    {
        if (prm_894 == 0)
        {
            dmgmulti = dmgmulti * rangemap(rangedist) / 100;
        }
    }
    else
    {
        if (cdata(32, cc) && 2)
        {
            if (inv(7, cw) >= 4000)
            {
                dmgmulti *= 1.5;
            }
            else
            {
                dmgmulti *= 1.2;
            }
            dmgmulti += 0.03 * sdata(167, cc);
        }
    }
    if (cc == 0)
    {
        if (trait(207))
        {
            dmgfix += 5 + cdata(38, 0) * 2 / 3;
        }
    }
    if (prm_894 == 1)
    {
        stat = damage;
        return stat;
    }
    prot = cdata(70, tc) + sdata(carmor(tc), tc) + sdata(12, tc) / 10;
    if (prot > 0)
    {
        prot2 = prot / 4;
        protdice1 = prot2 / 10 + 1;
        if (protdice1 < 0)
        {
            protdice1 = 1;
        }
        protdice2 = prot2 / protdice1 + 2;
        protfix = 0;
    }
    else
    {
        prot2 = 0;
        protdice1 = 1;
        protdice2 = 1;
        protfix = 0;
        prot = 0;
    }
    if (prm_894 == 2)
    {
        stat = prot;
        return stat;
    }
    if (dmgfix < -100)
    {
        dmgfix = -100;
    }
    dmgmulti = elona_int(dmgmulti * 100);
    damage = role(dice1, dice2, dmgfix);
    if (critical)
    {
        damage = rolemax(dice1, dice2, dmgfix);
        if (attackskill == 106)
        {
            dmgmulti *= 1.25;
        }
        else
        {
            if (ammo != -1)
            {
                dmgmulti = dmgmulti
                    * limit((inv(7, ammo) / 100 + 100), 100, 150) / 100;
            }
            else
            {
                dmgmulti =
                    dmgmulti * limit((inv(7, cw) / 200 + 100), 100, 150) / 100;
            }
        }
    }
    damage = damage * dmgmulti / 100;
    orgdmg = damage;
    if (prot > 0)
    {
        damage = damage * 100 / (100 + prot);
    }
    if (attackrange == 0)
    {
        if (cdata(66, cc) > rnd(100))
        {
            pierce = 100;
            if (synccheck(cc, -1))
            {
                txtef(5);
                txt(lang(u8" *シャキーン* "s, u8"*vopal*"s));
                txtmore();
            }
        }
    }
    else
    {
        if (ammoproc == 2)
        {
            pierce = 60;
            if (synccheck(cc, -1))
            {
                txtef(5);
                txt(lang(u8" *ズバシュッ* "s, u8"*vopal*"s));
                txtmore();
            }
        }
        if (ammoproc == 0)
        {
            damage /= 2;
        }
        if (ammoproc == 5)
        {
            damage /= 3;
        }
        if (ammoproc == 3)
        {
            damage /= 10;
        }
    }
    damagepierce = damage * pierce / 100;
    damagenormal = damage - damagepierce;
    if (prot > 0)
    {
        damagenormal -= role(protdice1, protdice2, protfix);
        if (damagenormal < 0)
        {
            damagenormal = 0;
        }
    }
    damage = damagenormal + damagepierce;
    if (tc == 0)
    {
        if (trait(164) != 0)
        {
            --damage;
        }
    }
    if (cdata(90, tc) != 0)
    {
        damage = damage * 100 / limit((100 + cdata(90, tc)), 25, 1000);
    }
    if (damage < 0)
    {
        damage = 0;
    }
    stat = damage;
    return stat;
}
void cnvbonus(int prm_895, int prm_896)
{
    if (prm_895 >= 50 && prm_895 < 61)
    {
        if (prm_896 > 0)
        {
            buff += u8"　　"s + skillname(prm_895) + u8"耐性に <green>クラス"s
                + prm_896 / 50 + u8"<col>("s + prm_896 + u8") のボーナス\n"s;
        }
        if (prm_896 < 0)
        {
            buff += u8"　　"s + skillname(prm_895) + u8"耐性に <red>クラス"s
                + prm_896 / 50 + u8"<col>("s + prm_896
                + u8") のマイナス修正\n"s;
        }
    }
    else
    {
        if (prm_896 > 0)
        {
            buff += u8"　　"s + skillname(prm_895) + u8"に <green>+"s + prm_896
                + u8"<col> のボーナス\n"s;
        }
        if (prm_896 < 0)
        {
            buff += u8"　　"s + skillname(prm_895) + u8"に <red>"s + prm_896
                + u8"<col> のマイナス修正\n"s;
        }
    }
    return;
}
void label_1477()
{
    chararefreshhack = 1;
    if (r1 == 0)
    {
        gdata(28) = 0;
        gdata(800) = 0;
        gdata(29) = 0;
        gdata(83) = 0;
        gdata(89) = 70;
        gdata(185) = 0;
        gdata(187) = 0;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
        {
            sdata(cnt, r1) = sdata((cnt + 600), r1) / 1000000;
        }
    }
    if (cdata(158, r1) == 0)
    {
        label_2295();
    }
    if (r1 == 0)
    {
        cdata.clear(r1, 450, (120) / sizeof(int));
        if (trait(161) != 0)
        {
            {
                int cnt = 100;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    if (cdata(cnt, r1) % 10000 == 0)
                    {
                        continue;
                    }
                    rp = cdata(cnt, r1) % 10000 - 1;
                    if (inv(7, rp) >= 1000)
                    {
                        cdata(cnt, r1) = cdata(cnt, r1) / 10000 * 10000;
                        inv(18, rp) = 0;
                    }
                }
            }
        }
    }
    else
    {
        if (cdata(27, r1) == 343)
        {
            memcpy(cdata, 450, r1, userdata, 40, cdata(157, r1), 120);
        }
        else
        {
            memcpy(cdata, 450, r1, cbitorg, 0, cdata(27, r1), 120);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (racebit(cnt, cdata(158, r1)) == 0)
            {
                break;
            }
            cbitmod(racebit(cnt, cdata(158, r1)), r1, 1);
        }
    }
    {
        int cnt = 10;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cdata(270 + cnt - 10, r1) = 0;
        }
    }
    cdata(71, r1) = 0;
    cdata(70, r1) = 0;
    cdata(72, r1) = 0;
    cdata(73, r1) = 0;
    cdata(32, r1) = 0;
    attacknum = 0;
    cdata(66, r1) = 0;
    if (sdata(186, r1))
    {
        cdata(67, r1) = elona_int(sqrt(sdata(186, r1))) + 2;
    }
    else
    {
        cdata(67, r1) = 0;
    }
    cdata(87, r1) = 0;
    cdata(88, r1) = 0;
    cdata(89, r1) = 0;
    cdata(64, r1) = 0;
    cdata(90, r1) = 0;
    cdata(91, r1) = 0;
    cdata(92, r1) = 0;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, r1) % 10000 == 0)
            {
                continue;
            }
            rp = cdata(cnt, r1) % 10000 - 1;
            cdata(64, r1) += inv(7, rp);
            if (inv(16, rp) == 168)
            {
                if (cdata(32, r1) && 1)
                {
                }
                else
                {
                    cdata(32, r1) += 1;
                }
            }
            cdata(71, r1) += inv(14, rp);
            cdata(70, r1) += inv(15, rp);
            if (inv(10, rp) == 0)
            {
                cdata(72, r1) += inv(13, rp);
                cdata(73, r1) += inv(12, rp);
                cdata(70, r1) += inv(20, rp) * 2 + (inv(17, rp) == 1) * 2;
            }
            else
            {
                if (cdata(cnt, r1) / 10000 == 5)
                {
                    ++attacknum;
                }
            }
            if (inv(17, rp) == -1)
            {
                cdata(87, r1) += 20;
            }
            if (inv(17, rp) == -2)
            {
                cdata(87, r1) += 100;
            }
            if (inv(24, rp) == 8)
            {
                if (r1 == 0)
                {
                    gdata(800) += 5;
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (inv(40 + cnt * 2, rp) == 0)
                    {
                        break;
                    }
                    rp2 = inv(40 + cnt * 2, rp);
                    if (rp2 >= 10000)
                    {
                        rp3 = rp2 % 10000;
                        rp2 = rp2 / 10000;
                        if (rp2 == 1)
                        {
                            sdata(rp3, r1) +=
                                inv((40 + cnt * 2 + 1), rp) / 50 + 1;
                            continue;
                        }
                        if (rp2 == 2)
                        {
                            sdata(rp3, r1) += inv((40 + cnt * 2 + 1), rp) / 2;
                            if (sdata(rp3, r1) < 0)
                            {
                                sdata(rp3, r1) = 1;
                            }
                            continue;
                        }
                        if (rp2 == 3)
                        {
                            if (sorg(rp3, r1) != 0)
                            {
                                sdata(rp3, r1) +=
                                    inv((40 + cnt * 2 + 1), rp) / 50 + 1;
                                if (sdata(rp3, r1) < 1)
                                {
                                    sdata(rp3, r1) = 1;
                                }
                            }
                            continue;
                        }
                    }
                    else
                    {
                        if (rp2 == 56)
                        {
                            if (r1 == 0)
                            {
                                gdata(185) = 1;
                                continue;
                            }
                        }
                        if (rp2 == 59)
                        {
                            if (r1 == 0)
                            {
                                gdata(187) = 1;
                                continue;
                            }
                        }
                        if (rp2 == 29)
                        {
                            sdata(18, r1) +=
                                inv((40 + cnt * 2 + 1), rp) / 50 + 1;
                            if (r1 == 0)
                            {
                                gdata(28) += inv((40 + cnt * 2 + 1), rp) / 8;
                                continue;
                            }
                        }
                        if (rp2 == 32)
                        {
                            cbitmod(5, r1, 1);
                            continue;
                        }
                        if (rp2 == 35)
                        {
                            cbitmod(7, r1, 1);
                            continue;
                        }
                        if (rp2 == 23)
                        {
                            cbitmod(9, r1, 1);
                            continue;
                        }
                        if (rp2 == 24)
                        {
                            cbitmod(12, r1, 1);
                            continue;
                        }
                        if (rp2 == 25)
                        {
                            cbitmod(8, r1, 1);
                            continue;
                        }
                        if (rp2 == 26)
                        {
                            cbitmod(10, r1, 1);
                            continue;
                        }
                        if (rp2 == 27)
                        {
                            cbitmod(11, r1, 1);
                            continue;
                        }
                        if (rp2 == 28)
                        {
                            cbitmod(13, r1, 1);
                            continue;
                        }
                        if (rp2 == 42)
                        {
                            cbitmod(14, r1, 1);
                            continue;
                        }
                        if (rp2 == 41)
                        {
                            cbitmod(15, r1, 1);
                            continue;
                        }
                        if (rp2 == 55)
                        {
                            cbitmod(29, r1, 1);
                            continue;
                        }
                        if (rp2 == 52)
                        {
                            cdata(90, r1) +=
                                inv((40 + cnt * 2 + 1), rp) / 40 + 5;
                            continue;
                        }
                        if (rp2 == 53)
                        {
                            cdata(91, r1) +=
                                inv((40 + cnt * 2 + 1), rp) / 60 + 3;
                            continue;
                        }
                        if (rp2 == 54)
                        {
                            cdata(92, r1) += inv((40 + cnt * 2 + 1), rp) / 5;
                            continue;
                        }
                        if (rp2 == 44)
                        {
                            cdata(67, r1) += inv((40 + cnt * 2 + 1), rp) / 50;
                            continue;
                        }
                        if (rp2 == 39)
                        {
                            cdata(66, r1) += inv((40 + cnt * 2 + 1), rp) / 50;
                            continue;
                        }
                        if (rp2 == 50)
                        {
                            cdata(88, r1) += inv((40 + cnt * 2 + 1), rp) / 15;
                            continue;
                        }
                        if (rp2 == 51)
                        {
                            cdata(89, r1) += inv((40 + cnt * 2 + 1), rp) / 15;
                            continue;
                        }
                        if (rp2 == 21 || rp2 == 45 || rp2 == 46 || rp2 == 47)
                        {
                            cbitmod(24, r1, 1);
                            continue;
                        }
                        if (r1 == 0)
                        {
                            if (rp2 == 30)
                            {
                                gdata(29) = 1;
                                continue;
                            }
                            if (rp2 == 31)
                            {
                                gdata(83) = 1;
                                continue;
                            }
                        }
                    }
                }
            }
        }
    }
    if (refreshmode == 1)
    {
        buff += u8"\n"s;
        buff += u8"<title1>◆ 装備による能力の修正<def>\n"s;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
            {
                sdata(cnt, 56) = sdata((cnt + 600), r1) / 1000000;
                if (sdata(cnt, 56) != sdata(cnt, r1))
                {
                    rp = sdata(cnt, r1) - sdata(cnt, 56);
                    cnvbonus(cnt, rp);
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (cdata(240 + cnt, r1) != 0)
            {
                if (cdata(25, r1) >= 4)
                {
                    if (cdata(240 + cnt, r1) < sorg((10 + cnt), r1) / 5)
                    {
                        cdata(240 + cnt, r1) = sorg((10 + cnt), r1) / 5;
                    }
                }
                sdata(10 + cnt, r1) += cdata(240 + cnt, r1);
            }
            if (sdata(10 + cnt, r1) < 1)
            {
                sdata(10 + cnt, r1) = 1;
            }
        }
    }
    if (r1 == 0)
    {
        label_1884();
        traitmode = 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (217); cnt < cnt_end; ++cnt)
            {
                if (trait(cnt) != 0)
                {
                    tid = cnt;
                    label_0042();
                }
            }
        }
    }
    if (cdata(32, r1) && 1)
    {
        if (cdata(70, r1) > 0)
        {
            cdata(70, r1) = cdata(70, r1)
                * (120 + elona_int(sqrt(sdata(168, r1))) * 2) / 100;
        }
    }
    else
    {
        if (attacknum == 1)
        {
            cdata(32, r1) += 2;
        }
        else
        {
            if (attacknum != 0)
            {
                cdata(32, r1) += 4;
            }
        }
    }
    cdata(56, r1) = limit(
                        ((sdata(16, r1) * 2 + sdata(15, r1) + sdata(14, r1) / 3)
                             * cdata(38, r1) / 25
                         + sdata(16, r1)),
                        1,
                        1000000)
        * sdata(3, r1) / 100;
    cdata(51, r1) = limit(
                        ((sdata(11, r1) * 2 + sdata(10, r1) + sdata(15, r1) / 3)
                             * cdata(38, r1) / 25
                         + sdata(11, r1)),
                        1,
                        1000000)
            * sdata(2, r1) / 100
        + 5;
    cdata(53, r1) = 100 + (sdata(15, r1) + sdata(11, r1)) / 5 + trait(24) * 8;
    if (cdata(56, r1) < 1)
    {
        cdata(56, r1) = 1;
    }
    if (cdata(51, r1) < 1)
    {
        cdata(51, r1) = 1;
    }
    if (r1 >= 57 || 0)
    {
        cdata(71, r1) = cdata(38, r1) / 2 + cdata(71, r1) * cdata(77, r1) / 100
            + cdata(77, r1) - 100;
        cdata(70, r1) = cdata(38, r1)
            + (cdata(70, r1) + cdata(38, r1) / 2 + cdata(76, r1) / 25)
                * cdata(76, r1) / 100;
        if (cdata(25, r1) == 3)
        {
            cdata(51, r1) = cdata(51, r1) * 3 / 2;
        }
        if (cdata(25, r1) >= 4)
        {
            cdata(51, r1) = cdata(51, r1) * 5;
        }
    }
    else
    {
        cdata(51, r1) += 10;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            rp = cdata(280 + cnt * 3, r1);
            if (rp == 0)
            {
                break;
            }
            calcbuff(r1, rp, cdata(280 + cnt * 3 + 1, r1));
        }
    }
    if (cdata(32, r1) && 4)
    {
        cdata(88, r1) += elona_int(sqrt(sdata(166, r1))) * 3 / 2 + 4;
    }
    if (cdata(67, r1) > 30)
    {
        cdata(72, r1) += (cdata(67, r1) - 30) * 2;
        cdata(67, r1) = 30;
    }
    label_1521();
    refreshspeed(r1);
    cbitmod(981, r1, 0);
    chararefreshhack = 0;
    return;
}
int calcmedalvalue(int prm_897)
{
    if (inv(3, prm_897) == 430)
    {
        stat = 5;
        return stat;
    }
    if (inv(3, prm_897) == 431)
    {
        stat = 8;
        return stat;
    }
    if (inv(3, prm_897) == 502)
    {
        stat = 7;
        return stat;
    }
    if (inv(3, prm_897) == 480)
    {
        stat = 20;
        return stat;
    }
    if (inv(3, prm_897) == 421)
    {
        stat = 15;
        return stat;
    }
    if (inv(3, prm_897) == 603)
    {
        stat = 20;
        return stat;
    }
    if (inv(3, prm_897) == 615)
    {
        stat = 5;
        return stat;
    }
    if (inv(3, prm_897) == 559)
    {
        stat = 10;
        return stat;
    }
    if (inv(3, prm_897) == 516)
    {
        stat = 3;
        return stat;
    }
    if (inv(3, prm_897) == 616)
    {
        stat = 18;
        return stat;
    }
    if (inv(3, prm_897) == 623)
    {
        stat = 85;
        return stat;
    }
    if (inv(3, prm_897) == 624)
    {
        stat = 25;
        return stat;
    }
    if (inv(3, prm_897) == 505)
    {
        stat = 12;
        return stat;
    }
    if (inv(3, prm_897) == 625)
    {
        stat = 11;
        return stat;
    }
    if (inv(3, prm_897) == 626)
    {
        stat = 30;
        return stat;
    }
    if (inv(3, prm_897) == 627)
    {
        stat = 55;
        return stat;
    }
    if (inv(3, prm_897) == 56)
    {
        stat = 65;
        return stat;
    }
    if (inv(3, prm_897) == 742)
    {
        stat = 72;
        return stat;
    }
    if (inv(3, prm_897) == 760)
    {
        stat = 94;
        return stat;
    }
    stat = 1;
    return stat;
}
int calcitemvalue(int prm_898, int prm_899)
{
    int reftype_at_m153 = 0;
    int limitvalue_at_m153 = 0;
    reftype_at_m153 = refitem(inv(3, prm_898), 5);
    if (inv(8, prm_898) == 0)
    {
        if (prm_899 == 2)
        {
            value_at_m153 = inv(1, prm_898) * 4 / 10;
        }
        else
        {
            value_at_m153 = cdata(38, 0) / 5
                    * ((gdata(8) + prm_898 * 31) % cdata(38, 0) + 4)
                + 10;
        }
    }
    else
    {
        if (reftype_at_m153 >= 50000)
        {
            value_at_m153 = inv(1, prm_898);
        }
        else
        {
            if (inv(8, prm_898) == 1)
            {
                value_at_m153 = inv(1, prm_898) * 2 / 10;
            }
            if (inv(8, prm_898) == 2)
            {
                value_at_m153 = inv(1, prm_898) * 5 / 10;
            }
            if (inv(8, prm_898) >= 3)
            {
                value_at_m153 = inv(1, prm_898);
            }
        }
    }
    if (inv(8, prm_898) >= 3)
    {
        if (inv(17, prm_898) == 1)
        {
            value_at_m153 = value_at_m153 * 120 / 100;
        }
        if (inv(17, prm_898) == -1)
        {
            value_at_m153 = value_at_m153 / 2;
        }
        if (inv(17, prm_898) == -2)
        {
            value_at_m153 = value_at_m153 / 5;
        }
    }
    if (reftype_at_m153 == 57000)
    {
        if (inv(26, prm_898) > 0)
        {
            value_at_m153 =
                value_at_m153 * inv(26, prm_898) * inv(26, prm_898) / 10;
        }
    }
    if (inv(3, prm_898) == 333)
    {
        if (prm_899 == 0)
        {
            value_at_m153 += limit(
                cdata(34, 0) / 40 + value_at_m153 * (cdata(34, 0) / 80) / 100,
                0,
                800);
        }
    }
    if (inv(7, prm_898) < 0)
    {
        if (mode == 6)
        {
            if (reftype_at_m153 == 92000)
            {
                value_at_m153 = value_at_m153 * trate(inv(25, prm_898)) / 100;
                if (prm_899 == 1)
                {
                    value_at_m153 = value_at_m153 * 65 / 100;
                }
                stat = value_at_m153;
                return stat;
            }
        }
    }
    if (ibit(4, prm_898) == 1)
    {
        dbid = inv(3, prm_898);
        dbmode = 2;
        label_0481();
        if (inv(9, prm_898) < 0)
        {
            value_at_m153 = value_at_m153 / 10;
        }
        else
        {
            if (reftype_at_m153 == 54000)
            {
                value_at_m153 = value_at_m153 / 5
                    + value_at_m153 * inv(9, prm_898) / (ichargelevel * 2 + 1);
            }
            else
            {
                value_at_m153 = value_at_m153 / 2
                    + value_at_m153 * inv(9, prm_898) / (ichargelevel * 3 + 1);
            }
        }
    }
    if (reftype_at_m153 == 72000)
    {
        if (inv(25, prm_898) == 0)
        {
            value_at_m153 = value_at_m153 / 100 + 1;
        }
    }
    if (prm_899 == 0)
    {
        limitvalue_at_m153 = value_at_m153 / 2;
        value_at_m153 = value_at_m153 * 100 / (100 + sdata(156, 0));
        if (gdata(263) != 0)
        {
            if (reftype_at_m153 == 54000)
            {
                value_at_m153 = value_at_m153 * 80 / 100;
            }
        }
        if (value_at_m153 <= limitvalue_at_m153)
        {
            value_at_m153 = limitvalue_at_m153;
        }
    }
    if (prm_899 == 1)
    {
        limitvalue_at_m153 = sdata(156, 0) * 250 + 5000;
        if (value_at_m153 / 3 < limitvalue_at_m153)
        {
            limitvalue_at_m153 = value_at_m153 / 3;
        }
        value_at_m153 = value_at_m153 * (100 + sdata(156, 0) * 5) / 1000;
        if (reftype_at_m153 < 50000)
        {
            value_at_m153 /= 20;
        }
        if (ibit(9, prm_898))
        {
            if (gdata(265) == 0)
            {
                value_at_m153 /= 10;
            }
            else
            {
                value_at_m153 = value_at_m153 / 3 * 2;
            }
        }
        if (value_at_m153 >= limitvalue_at_m153)
        {
            value_at_m153 = limitvalue_at_m153;
        }
    }
    if (prm_899 == 2)
    {
        value_at_m153 = value_at_m153 / 5;
        if (reftype_at_m153 < 50000)
        {
            value_at_m153 /= 3;
        }
        if (value_at_m153 > 15000)
        {
            value_at_m153 = 15000;
        }
        if (ibit(9, prm_898))
        {
            value_at_m153 = 1;
        }
    }
    if (value_at_m153 <= 0)
    {
        value_at_m153 = 1;
    }
    stat = value_at_m153;
    return stat;
}
int calcinvestvalue(int)
{
    value_at_m153 =
        limit(cdata(151, tc), 1, 200) * limit(cdata(151, tc), 1, 200) * 15
        + 200;
    if (value_at_m153 > 500000)
    {
        value_at_m153 = 500000;
    }
    value_at_m153 = value_at_m153 * 100 / (100 + sdata(160, 0) * 10) + 200;
    stat = value_at_m153;
    return stat;
}
int calcguiltvalue(int)
{
    value_at_m153 =
        (-cdata(49, 0) + -30) * (cdata(34, 0) / 2 + cdata(38, 0) * 200);
    stat = value_at_m153;
    return stat;
}
int calchireadv(int prm_902)
{
    stat = 250 + cdata(38, prm_902) * cdata(38, prm_902) * 30;
    return stat;
}
int calchirecost(int prm_903)
{
    value_at_m153 = 0;
    if (cdata(150, prm_903) == 18)
    {
        value_at_m153 = 450;
    }
    if (cdata(150, prm_903) == 7)
    {
        value_at_m153 = 250;
    }
    if (cdata(150, prm_903) == 9)
    {
        value_at_m153 = 350;
    }
    if (cdata(150, prm_903) == 12)
    {
        value_at_m153 = 500;
    }
    if (cdata(150, prm_903) == 5)
    {
        value_at_m153 = 750;
    }
    if (cdata(150, prm_903) == 8)
    {
        value_at_m153 = 250;
    }
    if (cdata(150, prm_903) == 14)
    {
        value_at_m153 = 50;
    }
    if (cdata(150, prm_903) >= 1000 && cdata(150, prm_903) < 2000
        || cdata(150, prm_903) == 2003)
    {
        value_at_m153 = 1000;
        if (cdata(150, prm_903) == 1007)
        {
            value_at_m153 *= 4;
        }
        if (cdata(150, prm_903) == 2003)
        {
            value_at_m153 = 0;
        }
    }
    stat = value_at_m153;
    return stat;
}
void generatemoney(int prm_904)
{
    p_at_m153 = rnd(100) + rnd((cdata(38, prm_904) * 50 + 1));
    if (cdata(150, prm_904) >= 1000 && cdata(150, prm_904) < 2000
        || cdata(150, prm_904) == 2003)
    {
        p_at_m153 += 2500 + cdata(151, prm_904) * 250;
    }
    if (cdata(30, prm_904) < p_at_m153 / 2)
    {
        cdata(30, prm_904) = p_at_m153;
    }
    return;
}
void calccosthire()
{
    cost_at_m153 = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(150, cnt) == 0)
            {
                continue;
            }
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            cost_at_m153 += calchirecost(cnt);
        }
    }
    cost_at_m153 = cost_at_m153
        * limit((100 - limit(cdata(49, 0) / 2, 0, 50) - 7 * trait(38)
                 - (cdata(49, 0) >= 20) * 5),
                25,
                200)
        / 100;
    gdata(170) = cost_at_m153;
    return;
}
int calccostbuilding()
{
    cost_at_m153 = 0;
    cost_at_m153 += gdata(24) * gdata(24) * 200;
    {
        int cnt = 300;
        for (int cnt_end = cnt + (150); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 101)
            {
                cost_at_m153 += 1500;
            }
            if (adata(16, cnt) == 31)
            {
                cost_at_m153 += 1000;
            }
            if (adata(16, cnt) == 103)
            {
                cost_at_m153 += 750;
            }
            if (adata(16, cnt) == 102)
            {
                cost_at_m153 += 5000;
            }
            if (adata(16, cnt) == 104)
            {
                cost_at_m153 += 750;
            }
        }
    }
    cost_at_m153 = cost_at_m153
        * limit((100 - limit(cdata(49, 0) / 2, 0, 50) - 7 * trait(38)
                 - (cdata(49, 0) >= 20) * 5),
                25,
                200)
        / 100;
    stat = cost_at_m153;
    return stat;
}
int calccosttax()
{
    cost_at_m153 = 0;
    cost_at_m153 += cdata(30, 0) / 1000;
    cost_at_m153 += cdata(34, 0);
    cost_at_m153 += cdata(38, 0) * 200;
    cost_at_m153 = cost_at_m153
        * limit((100 - limit(cdata(49, 0) / 2, 0, 50) - 7 * trait(38)
                 - (cdata(49, 0) >= 20) * 5),
                25,
                200)
        / 100;
    stat = cost_at_m153;
    return stat;
}
int calcmealvalue()
{
    value_at_m153 = 140;
    stat = value_at_m153;
    return stat;
}
int calccostreload(int prm_905, int prm_906)
{
    int ci_at_m153 = 0;
    int enc_at_m153 = 0;
    elona_vector1<int> i_at_m153;
    cost_at_m153 = 0;
    inv_getheader(prm_905);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (refitem(inv(3, cnt), 5) != 25000)
            {
                continue;
            }
            ci_at_m153 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (inv(40 + cnt * 2, ci_at_m153) == 0)
                    {
                        break;
                    }
                    enc_at_m153 = inv(40 + cnt * 2, ci_at_m153);
                    i_at_m153 = enc_at_m153 / 10000;
                    if (i_at_m153 != 0)
                    {
                        enc_at_m153 = enc_at_m153 % 10000;
                        if (i_at_m153 == 9)
                        {
                            i_at_m153(0) =
                                inv((40 + cnt * 2 + 1), ci_at_m153) % 1000;
                            i_at_m153(1) =
                                inv((40 + cnt * 2 + 1), ci_at_m153) / 1000;
                            cost_at_m153 += (i_at_m153(1) - i_at_m153)
                                * (50 + enc_at_m153 * enc_at_m153 * 10);
                            if (prm_906 == 1)
                            {
                                inv(40 + cnt * 2 + 1, ci_at_m153) =
                                    i_at_m153(1) * 1000 + i_at_m153(1);
                            }
                        }
                    }
                }
            }
        }
    }
    stat = cost_at_m153;
    return stat;
}
int calccargoupdate()
{
    stat = 10000;
    return stat;
}
int calccargoupdatecost()
{
    stat = (gdata(82) - gdata(81)) / 10000 + 1;
    return stat;
}
int calcidentifyvalue(int prm_907)
{
    value_at_m153 = 300;
    if (prm_907 == 2)
    {
        value_at_m153 = 5000;
    }
    if (prm_907 == 1)
    {
        inv_getheader(0);
        p_at_m153 = 0;
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(8, cnt) < 3)
                {
                    ++p_at_m153;
                }
            }
        }
        if (p_at_m153 >= 2)
        {
            value_at_m153 = value_at_m153 * p_at_m153 * 70 / 100;
        }
    }
    value_at_m153 = value_at_m153 * 100 / (100 + sdata(156, 0) * 2);
    if (gdata(264))
    {
        value_at_m153 /= 2;
    }
    stat = value_at_m153;
    return stat;
}
int calctraincost(int prm_908, int prm_909, int prm_910)
{
    value_at_m153 = sorg(prm_908, prm_909) / 5 + 2;
    if (prm_910)
    {
        value_at_m153 /= 2;
    }
    stat = value_at_m153;
    return stat;
}
int calclearncost(int, int, int prm_913)
{
    value_at_m153 = 15 + 3 * gdata(39);
    if (prm_913)
    {
        value_at_m153 = value_at_m153 * 2 / 3;
    }
    stat = value_at_m153;
    return stat;
}
int calcresurrectvalue(int prm_914)
{
    if (cdata(0, prm_914) != 6)
    {
        stat = 100;
        return stat;
    }
    value_at_m153 = cdata(38, prm_914) * cdata(38, prm_914) * 15;
    stat = value_at_m153;
    return stat;
}
int calcslavevalue(int prm_915)
{
    value_at_m153 = sdata(10, prm_915) * sdata(11, prm_915)
        + cdata(38, prm_915) * cdata(38, prm_915) + 1000;
    if (value_at_m153 > 50000)
    {
        value_at_m153 = 50000;
    }
    if (cbit(23, prm_915) || cbit(27, prm_915))
    {
        value_at_m153 = 10;
    }
    stat = value_at_m153;
    return stat;
}
int calcrestorecost()
{
    value_at_m153 = 500;
    if (gdata(264))
    {
        value_at_m153 /= 2;
    }
    stat = value_at_m153;
    return stat;
}
int calcinitgold(int prm_917)
{
    int lootrich_at_m155 = 0;
    if (prm_917 < 0)
    {
        stat = rnd(gdata(22) * 25 * (gdata(20) != 30) + 10) + 1;
        return stat;
    }
    lootrich_at_m155 = -1;
    if (cdata(27, prm_917) == 183)
    {
        lootrich_at_m155 = 10;
    }
    if (cdata(27, prm_917) == 184)
    {
        lootrich_at_m155 = 4;
    }
    if (cdata(27, prm_917) == 185)
    {
        lootrich_at_m155 = 2;
    }
    if (lootrich_at_m155 != -1)
    {
        stat = lootrich_at_m155 * 500 + rnd((1000 + lootrich_at_m155 * 1000));
        return stat;
    }
    stat = rnd(cdata(38, prm_917) * 25 + 10) + 1;
    return stat;
}
int calcspellpower(int prm_918, int prm_919)
{
    if (prm_918 >= 600)
    {
        if (sdataref(0, prm_918) != 0)
        {
            stat = sdataref(0, prm_918) * 6 + 10;
            return stat;
        }
        stat = 100;
        return stat;
    }
    if (prm_919 == 0)
    {
        stat = sdata(prm_918, prm_919) * 10 + 50;
        return stat;
    }
    if (sdata(172, prm_919) == 0)
    {
        if (prm_919 >= 16)
        {
            stat = cdata(38, prm_919) * 6 + 10;
            return stat;
        }
    }
    stat = sdata(172, prm_919) * 6 + 10;
    return stat;
}
int calcspellfail(int prm_920, int prm_921)
{
    int i_at_m157 = 0;
    int f_at_m157 = 0;
    int p_at_m157 = 0;
    if (prm_921 != 0)
    {
        if (gdata(183) == prm_921)
        {
            stat = 95 - limit((30 - sdata(301, 0) / 2), 0, 30);
            return stat;
        }
        else
        {
            stat = 95;
            return stat;
        }
    }
    i_at_m157 = 4;
    f_at_m157 = carmor(prm_921);
    if (f_at_m157 == 169)
    {
        i_at_m157 = 17 - sdata(169, prm_921) / 5;
    }
    if (f_at_m157 == 170)
    {
        i_at_m157 = 12 - sdata(170, prm_921) / 5;
    }
    if (i_at_m157 < 4)
    {
        i_at_m157 = 4;
    }
    if (gdata(183) != 0)
    {
        i_at_m157 += 4;
    }
    if (prm_920 == 441)
    {
        i_at_m157 += sdata(prm_920, prm_921);
    }
    if (prm_920 == 464)
    {
        i_at_m157 += sdata(prm_920, prm_921) / 3;
    }
    p_at_m157 = 90 + sdata(prm_920, prm_921)
        - sdataref(4, prm_920) * i_at_m157 / (5 + sdata(172, prm_921) * 4);
    if (f_at_m157 == 169)
    {
        if (p_at_m157 > 80)
        {
            p_at_m157 = 80;
        }
    }
    else
    {
        if (f_at_m157 == 170)
        {
            if (p_at_m157 > 92)
            {
                p_at_m157 = 92;
            }
        }
        else
        {
            if (p_at_m157 > 100)
            {
                p_at_m157 = 100;
            }
        }
    }
    if (cdata(32, prm_921) && 4)
    {
        p_at_m157 -= 6;
    }
    if (cdata(32, prm_921) && 1)
    {
        p_at_m157 -= 12;
    }
    if (p_at_m157 < 0)
    {
        p_at_m157 = 0;
    }
    stat = p_at_m157;
    return stat;
}
int calcspellcostmp(int prm_922, int prm_923)
{
    int cost_at_m158 = 0;
    if (prm_923 == 0)
    {
        if (prm_922 == 413 || prm_922 == 461 || prm_922 == 457 || prm_922 == 438
            || prm_922 == 409 || prm_922 == 408 || prm_922 == 410
            || prm_922 == 466)
        {
            cost_at_m158 = sdataref(2, prm_922);
            stat = cost_at_m158;
            return stat;
        }
        cost_at_m158 =
            sdataref(2, prm_922) * (100 + sdata(prm_922, prm_923) * 3) / 100
            + sdata(prm_922, prm_923) / 8;
    }
    else
    {
        cost_at_m158 =
            sdataref(2, prm_922) * (50 + cdata(38, prm_923) * 3) / 100;
    }
    stat = cost_at_m158;
    return stat;
}
int calcspellcoststock(int prm_924, int prm_925)
{
    int cost_at_m159 = 0;
    cost_at_m159 =
        sdataref(2, prm_924) * 200 / (sdata(prm_924, prm_925) * 3 + 100);
    if (cost_at_m159 < sdataref(2, prm_924) / 5)
    {
        cost_at_m159 = sdataref(2, prm_924) / 5;
    }
    cost_at_m159 = rnd(cost_at_m159 / 2 + 1) + cost_at_m159 / 2;
    if (cost_at_m159 < 1)
    {
        cost_at_m159 = 1;
    }
    stat = cost_at_m159;
    return stat;
}
void skillinit(int prm_926, int prm_927, int prm_928)
{
    elona_vector1<int> p_at_m161;
    int sdata_at_m161 = sdata(prm_926 + 600, prm_927);
    if (prm_926 >= 100)
    {
        p_at_m161 = prm_928 * 5;
        if (sdata_at_m161 / 1000000 == 0)
        {
            p_at_m161 += 100;
        }
        else
        {
            p_at_m161 += 50;
        }
    }
    else
    {
        p_at_m161 = prm_928 * 20;
        if (p_at_m161 > 400)
        {
            p_at_m161 = 400;
        }
    }
    if (prm_926 == 18)
    {
        p_at_m161(1) = prm_928 * (100 + cdata(38, prm_927) * 2) / 100;
    }
    else
    {
        p_at_m161(1) = p_at_m161 * p_at_m161 * cdata(38, prm_927) / 45000
            + prm_928 + cdata(38, prm_927) / 3;
    }
    if (cdata(38, prm_927) > 1)
    {
        p_at_m161 = elona_int(expf(logf(0.9) * cdata(38, prm_927)) * p_at_m161);
    }
    if (p_at_m161 < 1)
    {
        p_at_m161 = 1;
    }
    if (prm_926 == 2 || prm_926 == 19 || prm_926 == 3)
    {
        p_at_m161(1) = prm_928;
        p_at_m161 = 100;
    }
    if (sdata_at_m161 / 1000000 + p_at_m161(1) > 2000)
    {
        p_at_m161(1) = 2000 - sdata_at_m161 / 1000000;
    }
    sdata(prm_926 + 600, prm_927) +=
        limit(p_at_m161(1), 0, 2000) * 1000000 + p_at_m161;
    return;
}
void label_1512()
{
    {
        int cnt = 50;
        for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
        {
            p = cdata(38, r1) * 4 + 96;
            if (p > 300)
            {
                p = 300;
            }
            if (sdata(cnt, r1) != 0)
            {
                if (sdata(cnt, r1) < 100 || sdata(cnt, r1) >= 500)
                {
                    p = sdata(cnt, r1);
                }
                else
                {
                    p += sdata(cnt, r1);
                }
            }
            if (cnt == 60 && p < 500 || cdata(38, r1) == 1)
            {
                p = 100;
            }
            sdata(cnt + 600, r1) = limit(p, 1, 2000) * 1000000;
        }
    }
    i = 4;
    skillinit(100, r1, i);
    skillinit(101, r1, i);
    skillinit(103, r1, i);
    skillinit(102, r1, i);
    skillinit(104, r1, i);
    skillinit(105, r1, i);
    skillinit(107, r1, i);
    skillinit(108, r1, i);
    skillinit(111, r1, i);
    skillinit(109, r1, i);
    skillinit(173, r1, 4);
    skillinit(154, r1, 4);
    skillinit(155, r1, 4);
    skillinit(106, r1, 4);
    skillinit(157, r1, 4);
    skillinit(181, r1, 4);
    skillinit(171, r1, 4);
    skillinit(170, r1, 4);
    skillinit(169, r1, 4);
    skillinit(168, r1, 3);
    skillinit(19, r1, 50);
    return;
}
int label_1513()
{
    f = 1;
    tc = cc;
    if (cdata(253, cc) != 0)
    {
        f = 0;
    }
    if (cdata(254, cc) != 0 || cdata(256, cc) != 0)
    {
        if (rnd(4) != 0)
        {
            f = 0;
        }
    }
    else
    {
        if (r3 == 0)
        {
            r4 = sdata(16, cc);
        }
        else
        {
            r4 = sdata(sdataref(0, r3), cc);
        }
        if (rnd(sdata(150, cc) * r4 * 4 + 250) < rnd(r2 + 1))
        {
            if (rnd(7) == 0)
            {
                f = 0;
            }
            if (r4 * 10 < r2)
            {
                if (rnd(r4 * 10 + 1) < rnd(r2 + 1))
                {
                    f = 0;
                }
            }
            if (r4 * 20 < r2)
            {
                if (rnd(r4 * 20 + 1) < rnd(r2 + 1))
                {
                    f = 0;
                }
            }
            if (r4 * 30 < r2)
            {
                if (rnd(r4 * 30 + 1) < rnd(r2 + 1))
                {
                    f = 0;
                }
            }
        }
    }
    if (f == 1)
    {
        stat = 1;
        return stat;
    }
    if (rnd(4) == 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"はマナを吸い取られた！"s,
                name(cc) + your(cc) + u8" mana is absored."s));
        }
        if (cc == 0)
        {
            dmgmp(cc, cdata(56, cc));
        }
        else
        {
            dmgmp(cc, cdata(56, cc) / 3);
        }
        stat = 0;
        return stat;
    }
    if (rnd(4) == 0)
    {
        if (synccheck(cc, -1))
        {
            if (cdata(254, cc) != 0)
            {
                txt(lang(
                    name(cc) + u8"は余計に混乱した。"s,
                    name(cc) + u8" "s + is(cc) + u8" confused more."s));
            }
            else
            {
                txt(lang(u8"難解だ！"s, u8"It's too difficult!"s));
            }
        }
        dmgcon(cc, 5, 100);
        stat = 0;
        return stat;
    }
    if (rnd(4) == 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"魔力の渦が何かを召喚した！"s,
                u8"Several creatures are summoned from a vortex of magic."s));
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2 + rnd(3)); cnt < cnt_end; ++cnt)
            {
                flt(calcobjlv(cdata(38, 0) * 3 / 2 + 3), calcfixlv(2));
                characreate(-1, 0, cdata(1, cc), cdata(2, cc));
                if (stat != 0)
                {
                    if (cdata(9, cc) <= -3)
                    {
                        cdata(9, rc) = -1;
                        cdata(69, rc) = -1;
                    }
                }
            }
        }
        stat = 0;
        return stat;
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            name(cc) + u8"は奇妙な力に捻じ曲げられた！"s,
            u8"A dimension door opens in front of you."s));
    }
    tc = cc;
    efid = 408;
    label_2176();
    stat = 0;
    return stat;
}
int label_1514()
{
    if (rnd(sdata(159, cc) * 15 + 20 + sdata(13, cc)) > rnd(gdata(22) * 8 + 60))
    {
        label_1461();
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int label_1515()
{
    if (feat(2) == 7)
    {
        stat = 0;
        return stat;
    }
    if (cc < 16)
    {
        if (rnd(refdiff + 1) < sdata(13, cc) + sdata(159, cc) * 4)
        {
            stat = 1;
            return stat;
        }
    }
    else
    {
        if (rnd(4) != 0)
        {
            stat = 1;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
void label_1516()
{
    skillexp(175, cc, 50);
    return;
}
int label_1517()
{
    if (rnd(sdata(175, cc) * 15 + 20 + sdata(12, cc))
        > rnd(gdata(22) * 12 + 100))
    {
        label_1516();
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int label_1518()
{
    cv = 8;
    if (cdata(1, r1) > cdata(1, r2) - cv && cdata(1, r1) < cdata(1, r2) + cv)
    {
        if (cdata(2, r1) > cdata(2, r2) - cv
            && cdata(2, r1) < cdata(2, r2) + cv)
        {
            if (cdata(201, r2) > 0)
            {
                stat = 1;
                return stat;
            }
            p = dist(cdata(1, r1), cdata(2, r1), cdata(1, r2), cdata(2, r2))
                    * 150
                + (sdata(157, r1) * 100 + 150) + 1;
            if (rnd(p) < rnd(sdata(13, r2) * 60 + 150))
            {
                stat = 1;
                return stat;
            }
        }
    }
    if (pcnoise != 0)
    {
        if (rnd(150) < pcnoise)
        {
            stat = 1;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
void label_1519()
{
    if (trait(158))
    {
        if (rnd(3) == 0)
        {
            return;
        }
    }
    p = cdata(22, r1) / 1000;
    cdata(22, r1) -= 8;
    if (cdata(22, r1) / 1000 != p)
    {
        if (p == 1)
        {
            msgalert = 1;
            txt(lang(u8"このままだと餓死してしまう！"s, u8"You are starving!"s),
                lang(
                    u8"腹が減ってほとんど死にかけている。"s,
                    u8"You are almost dead from hunger."s));
        }
        if (p == 2)
        {
            msgalert = 1;
            txt(lang(
                    u8"空腹で目が回りだした…"s,
                    u8"Your hunger makes you dizzy."s),
                lang(
                    u8"すぐに何かを食べなくては…"s,
                    u8"You have to eat something NOW."s));
        }
        if (p == 5)
        {
            msgalert = 1;
            txt(lang(u8"腹がすいてきた。"s, u8"You are getting hungry."s),
                lang(u8"空腹になった。"s, u8"You feel hungry."s),
                lang(u8"さて何を食べようか。"s, u8"Now what shall I eat?"s));
        }
        refreshspeed(r1);
    }
    return;
}
void label_1520()
{
    regen = 1;
    if (cdata(251, r1) > 0)
    {
        healcon(r1, 2, 1);
        if (cdata(251, r1) > 0)
        {
            cdata(79, r1) = 114;
        }
        healhp(r1, 1);
        healmp(r1, 1);
    }
    if (cdata(250, r1) > 0)
    {
        dmghp(r1, rnd(2 + sdata(11, r1) / 10), -4);
        healcon(r1, 1, 1);
        if (cdata(250, r1) > 0)
        {
            cdata(79, r1) = 108;
        }
        regen = 0;
    }
    if (cdata(263, r1) > 0)
    {
        if (cdata(263, r1) % 3 == 0)
        {
            if (synccheck(r1, -1))
            {
                txt(lang(u8"「うぐぐ…！」"s, cnvtalk(u8"Ughh...!"s)));
            }
        }
        ++cdata(263, r1);
        if (cdata(263, r1) > 15)
        {
            dmghp(r1, 500, -21);
        }
        regen = 0;
    }
    if (cdata(262, r1) > 0)
    {
        --cdata(262, r1);
        if (cdata(262, r1) == 0)
        {
            if (synccheck(r1, -1))
            {
                txt(lang(
                    name(r1) + u8"は重力から抜け出した。"s,
                    name(r1) + u8" break"s + _s(r1)
                        + u8" away from gravity."s));
            }
        }
    }
    if (cdata(264, r1) > 0)
    {
        --cdata(264, r1);
        if (cdata(264, r1) == 0)
        {
            if (synccheck(r1, -1))
            {
                txt(lang(
                    name(r1) + u8"はやや落ち着いた。"s,
                    name(r1) + u8" calm"s + _s(r1) + u8" down."s));
            }
        }
    }
    if (cdata(261, r1) > 0)
    {
        if (rnd(80) == 0)
        {
            p = rnd(10);
            if (encfind(r1, 60010 + p) == -1)
            {
                cdata(240 + p, r1) -= sorg((10 + p), r1) / 25 + 1;
                label_1477();
            }
        }
        if (rnd(5))
        {
            regen = 0;
        }
        if (r1 >= 16)
        {
            if (cdata(25, r1) >= 4)
            {
                if (rnd(200) == 0)
                {
                    healcon(r1, 12);
                }
            }
        }
    }
    if (cdata(253, r1) > 0)
    {
        healcon(r1, 4, 1);
        if (cdata(253, r1) > 0)
        {
            cdata(79, r1) = 110;
        }
    }
    if (cdata(252, r1) > 0)
    {
        regen = 0;
        healcon(r1, 3, 1);
        if (cdata(252, r1) > 0)
        {
            cdata(79, r1) = 115;
        }
    }
    if (cdata(254, r1) > 0)
    {
        healcon(r1, 5, 1);
        if (cdata(254, r1) > 0)
        {
            cdata(79, r1) = 111;
        }
    }
    if (cdata(255, r1) > 0)
    {
        healcon(r1, 6, 1);
        if (cdata(255, r1) > 0)
        {
            cdata(79, r1) = 113;
        }
    }
    if (cdata(256, r1) > 0)
    {
        healcon(r1, 7, 1);
        if (cdata(256, r1) > 0)
        {
            cdata(79, r1) = 112;
        }
    }
    if (cdata(257, r1) > 0)
    {
        healcon(r1, 8, 1);
        if (cdata(257, r1) > 0)
        {
            cdata(79, r1) = 106;
        }
    }
    if (cdata(258, r1) > 0)
    {
        dmghp(
            r1,
            rnd(cdata(50, r1) * (1 + cdata(258, r1) / 4) / 100 + 3) + 1,
            -13);
        healcon(r1, 9, 1 + cbit(29, r1) * 3);
        if (cdata(258, r1) > 0)
        {
            cdata(79, r1) = 109;
        }
        regen = 0;
        spillblood(cdata(1, r1), cdata(2, r1));
    }
    if (cdata(259, r1) > 0)
    {
        --cdata(259, r1);
    }
    if (cdata(260, r1) > 0)
    {
        if (synccheck(r1, -1))
        {
            if (rnd(3) == 0)
            {
                txtmore();
                txtef(9);
                if (jp)
                {
                    r2 = rnd(5);
                    if (r2 == 0)
                    {
                        txt(name(r1) + u8"「キョキョキョ」"s,
                            name(r1) + u8"「クワッ」"s,
                            name(r1) + u8"「シャアァァ」"s,
                            name(r1) + u8"「ばぶっふ！」"s,
                            name(r1) + u8"「煮殺せ！」"s,
                            name(r1) + u8"「許しなさい許しなさい！！」"s);
                    }
                    if (r2 == 1)
                    {
                        txt(name(r1) + u8"「フゥハハハー！」"s,
                            name(r1) + u8"「あ、あ、あ、あ」"s,
                            name(r1) + u8"「ぴ…ぴ…ぴか…」"s,
                            name(r1) + u8"「お兄ちゃん！」"s,
                            name(r1) + u8"「うみみやぁ」"s);
                    }
                    if (r2 == 2)
                    {
                        txt(name(r1) + u8"は突然踊りだした。"s,
                            name(r1) + u8"は着ていたものを脱ぎだした。"s,
                            name(r1) + u8"はぐるぐる回りだした。"s,
                            name(r1) + u8"は奇声を発した。"s,
                            name(r1) + u8"「ねうねう♪ねうねう♪」"s);
                    }
                    if (r2 == 3)
                    {
                        txt(name(r1) + u8"「ウージッムシ♪ウージッムシ♪」"s,
                            name(r1) + u8"「じゃあ殺さなきゃ。うん♪」"s,
                            name(r1) + u8"「このナメクジがっ」"s,
                            name(r1) + u8"「おすわり！」"s,
                            name(r1) +
                                u8"「フーーーーン フーーーーン･･･ フーーーンフ」"s);
                    }
                    if (r2 == 4)
                    {
                        txt(name(r1) + u8"「このかたつむり野郎がっ」"s,
                            name(r1) + u8"「うにゅみゅあ！」"s,
                            name(r1) + u8"「ごめんなさいごめんなさい！」"s,
                            name(r1) + u8"「もうすぐ生まれるよ♪」"s,
                            name(r1) + u8"「フーーーーン フー…クワッ！」"s);
                    }
                }
                else
                {
                    r2 = rnd(2);
                    if (r2 == 0)
                    {
                        txt(name(r1) + u8" start"s + _s(r1) + u8" to take "s
                                + his(r1) + u8" cloths off."s,
                            name(r1) + u8" shout"s + _s(r1) + u8"."s,
                            name(r1) + u8" dance"s + _s(r1) + u8"."s);
                    }
                    if (r2 == 1)
                    {
                        txt(cnvtalk(u8"Weeeeeee!"s),
                            cnvtalk(u8"Forgive me! Forgive me!"s),
                            cnvtalk(u8"P-P-Pika!"s),
                            cnvtalk(u8"Shhhhhh!"s),
                            cnvtalk(u8"So I have to kill."s),
                            cnvtalk(u8"You snail!"s));
                    }
                }
            }
        }
        if (rnd(5) == 0)
        {
            cdata(254, r1) += rnd(10);
        }
        if (rnd(5) == 0)
        {
            cdata(256, r1) += rnd(10);
        }
        if (rnd(5) == 0)
        {
            cdata(251, r1) += rnd(5);
        }
        if (rnd(5) == 0)
        {
            cdata(255, r1) += rnd(10);
        }
        healcon(r1, 11, 1);
        if (cdata(260, r1) > 0)
        {
            cdata(79, r1) = 124;
        }
    }
    if (r1 == 0)
    {
        if (cdata(22, r1) < 2000)
        {
            if (cdata(22, r1) < 1000)
            {
                if (cdata(140, r1) != 1)
                {
                    dmghp(r1, rnd(2) + cdata(51, 0) / 50, -3);
                    if (gdata(4) % 10 == 0)
                    {
                        rowact_check(r1);
                        if (rnd(50) == 0)
                        {
                            modweight(r1, -1);
                        }
                    }
                }
            }
            regen = 0;
        }
        if (gdata(90) >= 30)
        {
            if (gdata(4) % 100 == 0)
            {
                txt(lang(
                    u8"あなたは眠りを必要としている。"s,
                    u8"You need to sleep."s));
            }
            if (rnd(2))
            {
                regen = 0;
            }
            if (gdata(90) >= 50)
            {
                regen = 0;
                dmgsp(r1, 1);
            }
        }
    }
    else
    {
        if (cdata(82, r1) != 0)
        {
            p = cdata(82, r1) - 1;
            if (qdata(15, p) > 0)
            {
                cdata(79, r1) = 122;
            }
            if (qdata(8, p) != 0)
            {
                if (cdata(26, r1) % 2 == 1)
                {
                    cdata(79, r1) = 123;
                }
            }
        }
    }
    if (gdata(70) == 1009)
    {
        if (r1 >= 57)
        {
            if (cdata(17, r1) >= 53)
            {
                cdata(79, r1) = 225;
            }
        }
    }
    if (regen == 1)
    {
        if (rnd(6) == 0)
        {
            healhp(r1, rnd(sdata(154, r1) / 3 + 1) + 1);
        }
        if (rnd(5) == 0)
        {
            healmp(r1, rnd(sdata(155, r1) / 2 + 1) + 1);
        }
    }
    return;
}
void label_1521()
{
    cdata(43, 0) = limit(inv_weight(0), 0, 20000000)
        * (100 - trait(201) * 10 + trait(205) * 20) / 100;
    cdata(44, 0) =
        sdata(10, 0) * 500 + sdata(11, 0) * 250 + sdata(153, 0) * 2000 + 45000;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (cdata(43, 0) > cdata(44, 0) * 2)
            {
                cdata(45, 0) = 4;
                break;
            }
            if (cdata(43, 0) > cdata(44, 0))
            {
                cdata(45, 0) = 3;
                break;
            }
            if (cdata(43, 0) > cdata(44, 0) / 4 * 3)
            {
                cdata(45, 0) = 2;
                break;
            }
            if (cdata(43, 0) > cdata(44, 0) / 2)
            {
                cdata(45, 0) = 1;
                break;
            }
            cdata(45, 0) = 0;
        }
    }
    refreshspeed(0);
    return;
}
int calcscore()
{
    p = cdata(38, 0) * cdata(38, 0) + gdata(1) * gdata(1) + gdata(2);
    if (gdata(0) > 1)
    {
        p = p / 10 + 1;
    }
    if (gdata(828))
    {
        p = 0;
    }
    stat = p;
    return stat;
}
void calcpartyscore()
{
    p = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(17, cnt) >= 53)
            {
                p += cdata(38, cnt) + 5;
            }
            if (cdata(17, cnt) < 50)
            {
                p -= 20;
            }
        }
    }
    if (p > qdata(13, gdata(72)))
    {
        txtef(4);
        txt(u8"(+"s + (p - qdata(13, gdata(72))) + u8") "s);
    }
    if (p < qdata(13, gdata(72)))
    {
        txtef(3);
        txt(u8"("s + (p - qdata(13, gdata(72))) + u8") "s);
    }
    qdata(13, gdata(72)) = p;
    return;
}
void calcpartyscore2()
{
    p = 0;
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cdata(17, cnt) >= 53)
            {
                if (cdata(25, cnt) >= 4)
                {
                    p += 20 + cdata(38, cnt) / 2;
                    txt(lang(
                        cdatan(0, cnt) + u8"は満足した。"s,
                        cdatan(0, cnt) + u8" "s + is(cnt) + u8" satisfied."s));
                }
            }
        }
    }
    if (p != 0)
    {
        txt(lang(
            u8"(合計ボーナス:"s + p + u8"%) "s,
            u8"(Total Bonus:"s + p + u8"%)"s));
    }
    qdata(13, gdata(72)) = qdata(13, gdata(72)) * (100 + p) / 100;
    return;
}
void label_1525()
{
    if (sorg(174, 0) > 15)
    {
        if (spact(29) == 0)
        {
            spact(29) = 1;
            txtmore();
            txtef(5);
            txt(lang(
                u8"あなたは「"s + skillname(629) + u8"」の能力を得た。"s,
                u8"You have learned new ability, "s + skillname(629) + u8"."s));
        }
        if (spact(30) == 0)
        {
            spact(30) = 1;
            txtmore();
            txtef(5);
            txt(lang(
                u8"あなたは「"s + skillname(630) + u8"」の能力を得た。"s,
                u8"You have learned new ability, "s + skillname(630) + u8"."s));
        }
    }
    if (sorg(152, 0) > 15)
    {
        if (spact(31) == 0)
        {
            spact(31) = 1;
            txtmore();
            txtef(5);
            txt(lang(
                u8"あなたは「"s + skillname(631) + u8"」の能力を得た。"s,
                u8"You have learned new ability, "s + skillname(631) + u8"."s));
        }
    }
    return;
}
int eqweaponlight()
{
    if (rnd(2))
    {
        stat = 10003;
        return stat;
    }
    if (rnd(2))
    {
        stat = 10009;
        return stat;
    }
    stat = 10004;
    return stat;
}
int eqweaponheavy()
{
    if (rnd(3) == 0)
    {
        stat = 10001;
        return stat;
    }
    if (rnd(3) == 0)
    {
        stat = 10010;
        return stat;
    }
    if (rnd(3) == 0)
    {
        stat = 10008;
        return stat;
    }
    stat = 10005;
    return stat;
}
void eqrandweaponmage(int prm_929)
{
    int p_at_m162 = 0;
    p_at_m162 = rnd(2);
    if (p_at_m162 == 0)
    {
        eqweapon1(0) = 10003;
        eqweapon1(1) = prm_929;
    }
    if (p_at_m162 == 1)
    {
        eqweapon1(0) = 10006;
        eqweapon1(1) = prm_929;
    }
    return;
}
void label_1530()
{
    if (cdatan(2, rc) == u8"mutant"s)
    {
        r1 = rc;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (cdata(38, r1) / 3); cnt < cnt_end; ++cnt)
            {
                label_1453();
            }
        }
    }

    eqhelm.clear();
    eqweapon1.clear();
    eqshield.clear();
    eqrange.clear();
    eqammo.clear();
    eqweapon2.clear();
    eqarmor.clear();
    eqglove.clear();
    eqboots.clear();
    eqcloack.clear();
    eqgirdle.clear();
    eqring1.clear();
    eqring2.clear();
    eqamulet1.clear();
    eqamulet2.clear();

    if (mode == 1)
    {
        fixeq = 0;
        probeq = 10;
    }
    else
    {
        if (cdata(25, rc) <= 2)
        {
            probeq = 3;
            fixeq = 0;
        }
        else
        {
            if (cdata(25, rc) == 3)
            {
                probeq = 6;
                fixeq = 0;
            }
            else
            {
                if (cdata(25, rc) == 4)
                {
                    probeq = 8;
                    fixeq = 1;
                }
                else
                {
                    probeq = 10;
                    fixeq = 1;
                }
            }
        }
    }
    if (cequipment == 1)
    {
        generatemoney(rc);
        eqweapon1(0) = eqweaponheavy();
        eqweapon1(1) = 2;
        eqshield(0) = 14003;
        eqshield(1) = 1;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqhelm(0) = 12001;
            eqhelm(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqgirdle(0) = 19001;
            eqgirdle(1) = 1;
        }
        eqrange(0) = 24030;
        eqrange(1) = 1;
    }
    if (cequipment == 8)
    {
        generatemoney(rc);
        eqweapon1(0) = 232;
        eqweapon1(1) = 3;
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqgirdle(0) = 19001;
            eqgirdle(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqcloack(0) = 20001;
            eqcloack(1) = 2;
        }
        eqrange(0) = 24030;
        eqrange(1) = 1;
        eqtwohand = 1;
    }
    if (cequipment == 7)
    {
        generatemoney(rc);
        eqweapon1(0) = eqweaponlight();
        eqweapon1(1) = 2;
        eqweapon2(0) = eqweaponlight();
        eqweapon2(1) = 2;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqhelm(0) = 12001;
            eqhelm(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqgirdle(0) = 19001;
            eqgirdle(1) = 1;
        }
        eqrange(0) = 24030;
        eqrange(1) = 1;
        eqtwowield = 1;
    }
    if (cequipment == 6)
    {
        generatemoney(rc);
        eqweapon1(0) = 10004;
        eqweapon1(1) = 1;
        if (rnd(10) < probeq)
        {
            eqshield(0) = 14003;
            eqshield(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqhelm(0) = 12001;
            eqhelm(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
    }
    if (cequipment == 3)
    {
        generatemoney(rc);
        eqweapon1(0) = 10002;
        eqweapon1(1) = 1;
        eqrange(0) = 24001;
        eqrange(1) = 1;
        eqammo(0) = 25001;
        eqammo(1) = 1;
        eqcloack(0) = 20001;
        eqcloack(1) = 1;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqglove(0) = 22001;
            eqglove(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
    }
    if (cequipment == 2)
    {
        generatemoney(rc);
        eqrandweaponmage(2);
        eqamulet1(0) = 34001;
        eqamulet1(1) = 1;
        eqring1(0) = 32001;
        eqring1(1) = 2;
        eqring2(0) = 32001;
        eqring2(1) = 1;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16003;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqcloack(0) = 20001;
            eqcloack(1) = 1;
        }
    }
    if (cequipment == 4)
    {
        generatemoney(rc);
        eqweapon1(0) = 10002;
        eqweapon1(1) = 1;
        if (rnd(4) != 0)
        {
            eqrange(0) = 24020;
            eqrange(1) = 2;
            eqammo(0) = 25020;
            eqammo(1) = 1;
        }
        else
        {
            eqrange(0) = 24021;
            eqrange(1) = 2;
            eqammo(0) = 25030;
            eqammo(1) = 1;
        }
        eqcloack(0) = 20001;
        eqcloack(1) = 1;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqglove(0) = 22001;
            eqglove(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqboots(0) = 18001;
            eqboots(1) = 1;
        }
    }
    if (cequipment == 5)
    {
        generatemoney(rc);
        eqrandweaponmage(2);
        eqamulet1(0) = 34001;
        eqamulet1(1) = 1;
        eqring1(0) = 32001;
        eqring1(1) = 2;
        eqring2(0) = 32001;
        eqring2(1) = 1;
        if (rnd(10) < probeq)
        {
            eqarmor(0) = 16001;
            eqarmor(1) = 1;
        }
        if (rnd(10) < probeq)
        {
            eqcloack(0) = 20001;
            eqcloack(1) = 1;
        }
    }
    if (cdata(25, rc) >= 4)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
            {
                if (rnd(2) == 0)
                {
                    switch (rnd(20))
                    {
                    case 0: eqhelm(1) = 3; break;
                    case 1: eqweapon1(1) = 3; break;
                    case 2: eqshield(1) = 3; break;
                    case 3: eqrange(1) = 3; break;
                    case 4: eqammo(1) = 3; break;
                    case 5: eqweapon2(1) = 3; break;
                    case 6: eqarmor(1) = 3; break;
                    case 7: eqglove(1) = 3; break;
                    case 8: eqboots(1) = 3; break;
                    case 9: eqcloack(1) = 3; break;
                    case 10: eqgirdle(1) = 3; break;
                    case 11: eqring1(1) = 3; break;
                    case 12: eqring2(1) = 3; break;
                    case 13: eqamulet1(1) = 3; break;
                    case 14: eqamulet2(1) = 3; break;
                    default: break;
                    }
                }
                if (rnd(2) == 0)
                {
                    --cnt;
                    continue;
                }
            }
        }
    }
    if (cspecialeq)
    {
        dbmode = 4;
        dbid = cdata(27, rc);
        label_2299();
    }
    if (eqtwohand)
    {
        eqshield = 0;
    }
    if (cdata(27, rc) == 9)
    {
        if (rnd(120) == 0)
        {
            eqamulet1 = 705;
        }
    }
    if (cdata(27, rc) == 274)
    {
        if (rnd(100) == 0)
        {
            eqrange = 718;
        }
    }
    if (cdata(27, rc) == 163)
    {
        if (rnd(200) == 0)
        {
            eqrange = 716;
        }
    }
    if (cdata(27, rc) == 186 || cdata(27, rc) == 187 || cdata(27, rc) == 188)
    {
        if (rnd(800) == 0)
        {
            eqgirdle = 728;
        }
    }
    if (cdata(27, rc) == 317)
    {
        if (rnd(150) == 0)
        {
            eqweapon1 = 719;
        }
    }
    if (cdata(27, rc) == 309 || cdata(27, rc) == 310 || cdata(27, rc) == 311)
    {
        if (rnd(600) == 0)
        {
            eqamulet1 = 723;
        }
    }
    if (cdata(27, rc) == 304)
    {
        if (rnd(250) == 0)
        {
            eqamulet1 = 722;
        }
    }
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            p = cdata(cnt, rc) / 10000;
            if (p == 0)
            {
                break;
            }
            if (p == 2)
            {
                if (eqamulet1)
                {
                    if (eqamulet1 >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqamulet1(1)));
                        flttypeminor = eqamulet1;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqamulet1;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqamulet1 = 0;
                    continue;
                }
                if (eqamulet2)
                {
                    if (eqamulet2 >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqamulet2(1)));
                        flttypeminor = eqamulet2;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqamulet2;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqamulet2 = 0;
                    continue;
                }
            }
            if (p == 6)
            {
                if (eqring1)
                {
                    if (eqring1 >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqring1(1)));
                        flttypeminor = eqring1;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqring1;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqring1 = 0;
                    continue;
                }
                if (eqring2)
                {
                    if (eqring2 >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqring2(1)));
                        flttypeminor = eqring2;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqring2;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqring2 = 0;
                    continue;
                }
            }
            if (p == 3)
            {
                if (eqcloack)
                {
                    if (eqcloack >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqcloack(1)));
                        flttypeminor = eqcloack;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqcloack;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqcloack = 0;
                    continue;
                }
                continue;
            }
            if (p == 8)
            {
                if (eqgirdle)
                {
                    if (eqgirdle >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqgirdle(1)));
                        flttypeminor = eqgirdle;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqgirdle;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqgirdle = 0;
                    continue;
                }
                continue;
            }
            if (p == 1)
            {
                if (eqhelm)
                {
                    if (eqhelm >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqhelm(1)));
                        flttypeminor = eqhelm;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqhelm;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqhelm = 0;
                    continue;
                }
                continue;
            }
            if (p == 4)
            {
                if (eqarmor)
                {
                    if (eqarmor >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqarmor(1)));
                        flttypeminor = eqarmor;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqarmor;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqarmor = 0;
                    continue;
                }
                continue;
            }
            if (p == 7)
            {
                if (eqglove)
                {
                    if (eqglove >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqglove(1)));
                        flttypeminor = eqglove;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqglove;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqglove = 0;
                    continue;
                }
                continue;
            }
            if (p == 9)
            {
                if (eqboots)
                {
                    if (eqboots >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqboots(1)));
                        flttypeminor = eqboots;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqboots;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqboots = 0;
                    continue;
                }
                continue;
            }
            if (p == 5)
            {
                if (eqmultiweapon)
                {
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                        {
                            flt(calcobjlv(cdata(38, rc)), calcfixlv(2 + fixeq));
                            itemcreate(rc, eqmultiweapon, -1, -1, 0);
                            if (inv(7, ci) > 1500)
                            {
                                if (cnt < 14)
                                {
                                    inv(0, ci) = 0;
                                    continue;
                                }
                            }
                            break;
                        }
                    }
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqweapon1 = 0;
                    continue;
                }
                if (eqweapon1)
                {
                    if (eqweapon1 >= 10000)
                    {
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                            {
                                flt(calcobjlv(cdata(38, rc)),
                                    calcfixlv(fixeq + eqweapon1(1)));
                                flttypeminor = eqweapon1;
                                dbid = -1;
                                itemcreate(rc, dbid, -1, -1, 0);
                                if (eqtwohand)
                                {
                                    if (inv(7, ci) < 4000)
                                    {
                                        if (cnt < 14)
                                        {
                                            inv(0, ci) = 0;
                                            continue;
                                        }
                                    }
                                }
                                if (eqtwowield)
                                {
                                    if (inv(7, ci) > 1500)
                                    {
                                        if (cnt < 14)
                                        {
                                            inv(0, ci) = 0;
                                            continue;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    }
                    else
                    {
                        flt();
                        dbid = eqweapon1;
                        itemcreate(rc, dbid, -1, -1, 0);
                    }
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqweapon1 = 0;
                    continue;
                }
                if (eqweapon2)
                {
                    if (eqweapon2 >= 10000)
                    {
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                            {
                                flt(calcobjlv(cdata(38, rc)),
                                    calcfixlv(fixeq + eqweapon2(1)));
                                flttypeminor = eqweapon2;
                                dbid = -1;
                                itemcreate(rc, dbid, -1, -1, 0);
                                if (eqtwowield)
                                {
                                    if (inv(7, ci) > 1500)
                                    {
                                        if (cnt < 14)
                                        {
                                            inv(0, ci) = 0;
                                            continue;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    }
                    else
                    {
                        flt();
                        dbid = eqweapon2;
                        itemcreate(rc, dbid, -1, -1, 0);
                    }
                    eqweapon2 = 0;
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    continue;
                }
                if (eqshield)
                {
                    if (eqshield >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqshield(1)));
                        flttypeminor = eqshield;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqshield;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqshield = 0;
                    continue;
                }
                continue;
            }
            if (p == 10)
            {
                if (eqrange)
                {
                    if (eqrange >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqrange(1)));
                        flttypeminor = eqrange;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqrange;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqrange = 0;
                    continue;
                }
                continue;
            }
            if (p == 11)
            {
                if (eqammo)
                {
                    if (eqammo >= 10000)
                    {
                        flt(calcobjlv(cdata(38, rc)),
                            calcfixlv(fixeq + eqammo(1)));
                        flttypeminor = eqammo;
                        dbid = -1;
                    }
                    else
                    {
                        flt();
                        dbid = eqammo;
                    }
                    itemcreate(rc, dbid, -1, -1, 0);
                    r1 = rc;
                    body = cnt;
                    label_2194();
                    eqammo = 0;
                    continue;
                }
                continue;
            }
        }
    }
    if (cdata(27, rc) == 326)
    {
        if (rnd(150) == 0)
        {
            flt();
            itemcreate(rc, 707, -1, -1, 0);
        }
        else
        {
            flt(calcobjlv(cdata(38, rc)), calcfixlv());
            flttypeminor = 60005;
            itemcreate(rc, 0, -1, -1, 0);
        }
    }
    if (cdata(27, rc) == 351 || cdata(27, rc) == 352)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
            {
                flt();
                nostack = 1;
                itemcreate(rc, 772, -1, -1, 0);
                if (stat != 0)
                {
                    inv(0, ci) += rnd(4);
                    if (rnd(2))
                    {
                        inv(27, ci) = -1;
                        inv(2, ci) = 336;
                    }
                }
            }
        }
    }
    eqtwohand = 0;
    eqtwowield = 0;
    eqmultiweapon = 0;
    return;
}
void label_1531()
{
    p = 100;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            getstr(s, s(1), cnt * 3, 124);
            if (strsize == 0)
            {
                break;
            }
            if (s == u8"HD"s)
            {
                cdata(p, rc) = 10000;
                ++p;
                continue;
            }
            if (s == u8"N_"s)
            {
                cdata(p, rc) = 20000;
                ++p;
                continue;
            }
            if (s == u8"BK"s)
            {
                cdata(p, rc) = 30000;
                ++p;
                continue;
            }
            if (s == u8"BD"s)
            {
                cdata(p, rc) = 40000;
                ++p;
                continue;
            }
            if (s == u8"HA"s)
            {
                cdata(p, rc) = 50000;
                ++p;
                continue;
            }
            if (s == u8"R_"s)
            {
                cdata(p, rc) = 60000;
                ++p;
                continue;
            }
            if (s == u8"A_"s)
            {
                cdata(p, rc) = 70000;
                ++p;
                continue;
            }
            if (s == u8"W_"s)
            {
                cdata(p, rc) = 80000;
                ++p;
                continue;
            }
            if (s == u8"L_"s)
            {
                cdata(p, rc) = 90000;
                ++p;
                continue;
            }
        }
    }
    cdata(p, rc) = 100000;
    ++p;
    cdata(p, rc) = 110000;
    ++p;
    return;
}
void label_1532()
{
    if (rc == -1)
    {
        return;
    }
    if (rc == 56)
    {
        cdata(0, rc) = 0;
        return;
    }
    placefail = 0;
    if (gdata(183) == rc)
    {
        if (rc != 0)
        {
            cdata(1, rc) = cdata(1, 0);
            cdata(2, rc) = cdata(2, 0);
            return;
        }
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            if (cnt == 99)
            {
                if (rc >= 57)
                {
                    placefail = 1;
                    break;
                }
            }
            if (cnt > 99)
            {
                if (mdata(0) == 0)
                {
                    placefail = 1;
                    break;
                }
                y = (cnt - 100) / mdata(0);
                x = (cnt - 100) % mdata(0);
                if (y >= mdata(1))
                {
                    if (rc != 0)
                    {
                        placefail = 1;
                        break;
                    }
                    else
                    {
                        x = rnd(mdata(0));
                        y = rnd(mdata(1));
                        if (map(x, y, 1) != 0)
                        {
                            map(x, y, 1) = 0;
                        }
                    }
                }
            }
            else
            {
                x = rnd(mdata(0) - 4) + 2;
                y = rnd(mdata(1) - 4) + 2;
                if (cxinit >= 0)
                {
                    if (cnt == 0)
                    {
                        x = cxinit;
                        y = cyinit;
                    }
                    else
                    {
                        x = cxinit + rnd((cnt + 1)) - rnd((cnt + 1));
                        y = cyinit + rnd((cnt + 1)) - rnd((cnt + 1));
                    }
                }
                if (cnt < 20)
                {
                    if (cxinit == -2)
                    {
                        p = cdata(28, 0) / 2;
                        if (x >= cdata(1, 0) - p && x <= cdata(1, 0) + p)
                        {
                            if (y >= cdata(2, 0) - p && y <= cdata(2, 0) + p)
                            {
                                continue;
                            }
                        }
                    }
                }
            }
            if (x < 0 || y < 0 || x >= mdata(0) || y >= mdata(1))
            {
                continue;
            }
            if (chipm(7, map(x, y, 0)) && 4)
            {
                continue;
            }
            if (map(x, y, 1) != 0)
            {
                continue;
            }
            if (map(x, y, 6) != 0)
            {
                if (chipm(7, map(x, y, 6) % 1000) && 4)
                {
                    continue;
                }
                cell_featread(x, y);
                if (feat(1) == 11)
                {
                    if (rc != 0)
                    {
                        if (cxinit < 0)
                        {
                            continue;
                        }
                    }
                }
                if (feat(1) == 10)
                {
                    if (rc != 0)
                    {
                        if (cxinit < 0)
                        {
                            continue;
                        }
                    }
                }
            }
            cdata(171, rc) = x;
            cdata(172, rc) = y;
            map(x, y, 1) = rc + 1;
            cdata(1, rc) = x;
            cdata(2, rc) = y;
            p = 1;
            break;
        }
    }
    if (placefail == 1)
    {
        if (rc < 16)
        {
            cdata(0, rc) = 8;
            txt(lang(
                name(rc) + u8"とはぐれた。"s,
                name(rc) + u8" loses "s + his(rc) + u8" way."s));
        }
        else
        {
            txt(lang(
                name(rc) + u8"は何かに潰されて息絶えた。"s,
                name(rc) + u8" is killed."s));
            cdata(0, rc) = 0;
        }
        if (cdata(150, rc) != 0)
        {
            cdata(0, rc) = 2;
        }
        if (cdata(150, rc) == 13)
        {
            cdata(0, rc) = 4;
        }
    }
    return;
}
int label_1533()
{
    if (rc == -1)
    {
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) == 0)
                {
                    rc = cnt;
                    break;
                }
            }
        }
        if (rc == -1)
        {
            rc = 56;
            stat = 0;
            return stat;
        }
    }
    del_chara(rc);
    cequipment = 0;
    if (rc == 0)
    {
        p = 10;
    }
    else
    {
        p = 4;
    }
    if (dbid == -1)
    {
        if (fltselect == 0)
        {
            if (fixlv == 3)
            {
                if (rnd(20) == 0)
                {
                    fltselect = 2;
                }
            }
            if (fixlv == 4)
            {
                if (rnd(10) == 0)
                {
                    fltselect = 2;
                }
            }
        }
        dbmode = 1;
        label_2299();
        if (dbid == 0)
        {
            if (fltselect == 2 || fixlv == 6)
            {
                fixlv = 4;
            }
            flt(objlv + 10, fixlv);
            dbmode = 1;
            label_2299();
        }
    }
    else
    {
        if (dbid == 343)
        {
            if (usernpcmax > 0)
            {
                cdata(157, rc) = rnd(usernpcmax);
            }
        }
    }
    characreatehack = dbid + 1;
    cm = 1;
    cmshade = 0;
    ++npcmemory(1, dbid);
    if (dbid == 323)
    {
        if (rnd(5))
        {
            objlv *= 2;
            if (fixlv >= 4)
            {
                fixlv = 3;
            }
            cmshade = 1;
            flt(objlv, fixlv);
            dbmode = 1;
            label_2299();
        }
    }
    if (gdata(20) == 42)
    {
        if (novoidlv)
        {
            novoidlv = 0;
        }
        else
        {
            voidlv = gdata(22) / 50 * 50;
        }
    }
    if (dbid == 343)
    {
        label_2104();
    }
    else
    {
        dbmode = 3;
        label_2299();
    }
    if (cmshade)
    {
        cdatan(0, rc) = lang(u8"シェイド"s, u8"shade"s);
        cdata(7, rc) = 280;
    }
    cdata(25, rc) = fixlv;
    label_1535();
    rtval = rc;
    stat = 1;
    return stat;
}
void label_1534()
{
    if (fixlv == 4)
    {
        cdatan(0, rc) = strbracketleft + cdatan(0, rc) + strbracketright;
        cdata(38, rc) = cdata(38, rc) * 10 / 8;
    }
    if (fixlv == 5)
    {
        cdatan(0, rc) =
            lang(u8"《"s, u8"{"s) + cdatan(0, rc) + lang(u8"》"s, u8"}"s);
        cdata(38, rc) = cdata(38, rc) * 10 / 6;
    }
    return;
}
void label_1535()
{
    if (mode != 1)
    {
        label_1534();
    }
    cdata(0, rc) = 1;
    cdata(14, rc) = 100;
    cdata(17, rc) = 50;
    cdata(28, rc) = 14;
    if (cdata(27, rc) == 205)
    {
        cdata(7, rc) = rnd(33) * 2 + cdata(8, rc) + 1;
    }
    if (rc == 0)
    {
        cdata(22, rc) = 9000;
    }
    else
    {
        cdata(22, rc) = 5000 + rnd(4000);
    }
    cdata(19, rc) = cdata(19, rc) + rnd((cdata(19, rc) / 5 + 1))
        - rnd((cdata(19, rc) / 5 + 1));
    cdata(20, rc) = cdata(19, rc) * cdata(19, rc) * (rnd(6) + 18) / 10000;
    r1 = rc;
    label_1456();
    r1 = rc;
    label_1512();
    if (cdata(13, rc) == 0)
    {
        cdata(13, rc) = rnd(32);
    }
    cdata(16, rc) = rnd(4);
    cdata(18, rc) = rnd(7);
    label_1530();
    r1 = rc;
    label_1477();
    ++gdata(3);
    cdata(50, rc) = cdata(51, rc);
    cdata(55, rc) = cdata(56, rc);
    cdata(52, rc) = cdata(53, rc);
    if (rc == 0)
    {
        label_2124();
        gdata(81) = 80000;
        gdata(82) = gdata(81);
    }
    if (cbit(21, rc))
    {
        cbitmod(974, rc, 1);
    }
    cm = 0;
    return;
}
void label_1536()
{
    cdata(25, rc) = 2;
    cdata(9, rc) = 10;
    cdata(69, rc) = 10;
    cbitmod(967, rc, 1);
    flt();
    itemcreate(0, 333, -1, -1, 0);
    inv(0, ci) = 8;
    flt();
    itemcreate(0, 233, -1, -1, 0);
    inv(0, ci) = 4;
    flt();
    itemcreate(0, 31, -1, -1, 0);
    inv(0, ci) = 2;
    if (sdata(150, 0) == 0)
    {
        flt();
        itemcreate(0, 68, -1, -1, 0);
        inv(0, ci) = 3;
    }
    if (cdatan(3, 0) == u8"pianist"s)
    {
        flt();
        itemcreate(0, 88, -1, -1, 0);
    }
    if (cdatan(3, 0) == u8"farmer"s)
    {
        flt();
        itemcreate(0, 256, -1, -1, 0);
    }
    if (cdatan(3, 0) == u8"wizard"s || cdatan(3, 0) == u8"warmage"s)
    {
        flt();
        itemcreate(0, 116, -1, -1, 0);
        flt();
        itemcreate(0, 257, -1, -1, 0);
        inv(0, ci) = 3;
    }
    if (cdatan(3, 0) == u8"priest"s)
    {
        flt();
        itemcreate(0, 249, -1, -1, 0);
        inv(0, ci) = 3;
        flt();
        itemcreate(0, 378, -1, -1, 0);
    }
    label_0043();
    cdata(41, r1) = 5 + trait(154);
    cdata(42, r1) = 5 + trait(154);
    inv_getheader(0);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            inv(8, cnt) = 3;
        }
    }
    r1 = 0;
    label_1477();
    return;
}
void label_1537()
{
    label_1538();
    cxinit = cdata(1, 0);
    cyinit = cdata(2, 0);
    label_1532();
    cdata(80, rc) = 0;
    snd(64);
    txtef(5);
    txt(cnven(cdatan(0, rc))
        + lang(
              u8"は復活した！"s,
              (u8" "s + have(rc) + u8" been resurrected!"s)));
    return;
}
void label_1538()
{
    label_15380();
    label_15390();
    return;
}
void label_1539()
{
    label_15390();
    return;
}
void label_15380()
{
    cbitmod(972, rc, 0);
    cbitmod(973, rc, 0);
    cbitmod(978, rc, 0);
    cbitmod(980, rc, 0);
    cbitmod(986, rc, 0);
    cdata(50, rc) = cdata(51, rc) / 3;
    cdata(55, rc) = cdata(56, rc) / 3;
    cdata(52, rc) = cdata(53, rc) / 3;
    cdata(86, rc) = 0;
    cdata(0, rc) = 1;
    cdata(80, rc) = 0;
    cdata(9, rc) = cdata(69, rc);
    cdata(22, rc) = 8000;
    return;
}
void label_15390()
{
    cbitmod(980, rc, 0);
    rowactend(rc);
    cdata(250, rc) = 0;
    cdata(251, rc) = 0;
    cdata(254, rc) = 0;
    cdata(253, rc) = 0;
    cdata(252, rc) = 0;
    cdata(263, rc) = 0;
    cdata(264, rc) = 0;
    cdata(256, rc) = 0;
    cdata(257, rc) = 0;
    cdata(258, rc) = 0;
    cdata(262, rc) = 0;
    cdata(12, rc) = 0;
    cdata(201, rc) = 0;
    cdata(29, rc) = 0;
    cdata(261, rc) = 0;
    cdata(79, rc) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            cdata(240 + cnt, rc) = 0;
        }
    }
    if (cdata(280, rc) != 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (cdata(280 + cnt * 3, rc) == 0)
                {
                    break;
                }
                if (cdata(280 + cnt * 3, rc) == 13)
                {
                    continue;
                }
                delbuff(rc, cnt);
                --cnt;
                continue;
            }
        }
    }
    r1 = rc;
    label_1477();
    return;
}
void label_1540()
{
    label_1538();
    if (rc == 0)
    {
        gdata(63) = 0;
        traveldone = 0;
        if (gdata(70) == 0)
        {
            evadd(6);
        }
    }
    if (cdata(150, rc) == 1)
    {
        cdata(9, rc) = 0;
    }
    if (cdata(150, rc) == 14)
    {
        p = rnd(5) + 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
            {
                r1 = rc;
                r2 = 1;
                label_1454();
            }
        }
    }
    if (cdata(27, rc) == 326)
    {
        skillmod(183, rc, 1000);
    }
    r1 = rc;
    label_1477();
    return;
}
void label_1541()
{
    if (cfg_wizard)
    {
        gdata(828) = 1;
    }
    if (geneuse != ""s)
    {
        label_2092();
    }
    redraw(0);
    rc = 0;
    mode = 1;
    cm = 1;
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\void.bmp"s, 1);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gsel(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            pos(cnt % 4 * 180, cnt / 4 * 300);
            picload(exedir + u8"graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
        }
    }
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_cm.bmp"s, 1);
    gsel(0);
    dirlist(buff, exedir + u8"save\\*"s, 5);
    notesel(buff);
    if (noteinfo() >= 5)
    {
        redraw(0);
        keyrange = 0;
        gmode(0);
        pos(0, 0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        s = lang(
            u8"これ以上は冒険者を保存できない。"s,
            u8"Save slots are full. You have to delete some of your adventurers."s);
        label_1425();
        redraw(1);
    label_1542_internal:
        key_check();
        cursor_check();
        await(cfg_wait1);
        if (key != ""s)
        {
            label_2115();
            return;
        }
        goto label_1542_internal;
        label_2115();
        return;
    }
    label_1544();
    return;
}
void label_1544()
{
    redraw(0);
    cs = 0;
    cs_bk = -1;
    pagesize = 16;
    page = 0;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"やあ、待っていたよ。早速旅の支度をしようか。"s,
        u8"Welcome traveler, I've been looking for you."s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    listmax = 0;
    val = 0;
    dbmode = 1;
    label_2297();
    if (cfg_extrarace)
    {
        val = 1;
        dbmode = 1;
        label_2297();
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            dbidn = listn(1, cnt);
            dbmode = 2;
            label_2297();
            listn(0, cnt) = racename;
            if (list(0, cnt) == 1)
            {
                listn(0, cnt) = u8"(extra)"s + listn(0, cnt);
            }
        }
    }
    windowshadow = 1;
label_1545_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1546_internal:
    redraw(0);
    if (cs != cs_bk)
    {
        s(0) = lang(u8"種族の選択"s, u8"Race Selection"s);
        s(1) = strhint3b;
        display_window(
            (windoww - 680) / 2 + inf_screenx, winposy(500, 1) + 20, 680, 500);
        ++cmbg;
        x = ww / 5 * 2;
        y = wh - 80;
        gmode(4, 180, 300, 50);
        pos(wx + ww / 4, wy + wh / 2);
        grotate(2, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
        gmode(2);
        display_topic(lang(u8"選択できる種族"s, u8"Race"s), wx + 28, wy + 30);
        display_topic(lang(u8"種族の説明"s, u8"Detail"s), wx + 188, wy + 30);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
            {
                p = page * pagesize + cnt;
                if (p >= listmax)
                {
                    break;
                }
                key_list(cnt) = key_select(cnt);
                keyrange = cnt + 1;
                display_key(wx + 38, wy + 66 + cnt * 19 - 2, cnt);
                cs_list(cnt, listn(0, p), wx + 64, wy + 66 + cnt * 19 - 1, 19);
            }
        }
        cs_bk = cs;
        color(0, 0, 0);
        pos(wx + 200, wy + 66);
        del_chara(0);
        dbidn = listn(1, page * pagesize + cs);
        dbmode = 3;
        label_2297();
        dbmode = 11;
        label_2297();
        val = 0;
        label_1567(cnt);
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = page * pagesize + cnt;
                break;
            }
            else
            {
                p = -1;
            }
        }
    }
    if (p != -1)
    {
        cmrace(0) = listn(1, p);
        cmrace(1) = listn(0, p);
        dbidn = cmrace;
        dbmode = 11;
        label_2297();
        label_1547();
        return;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1545_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1545_internal;
        }
    }
    if (key == key_cancel)
    {
        label_2115();
        return;
    }
    getkey(p, 112);
    if (p)
    {
        label_2703();
        label_1544();
        return;
    }
    goto label_1546_internal;
}
void label_1547(bool label_1548_flg)
{
    if (label_1548_flg)
    {
        snd(102);
    }
label_1548:
    redraw(0);
    cs = 0;
    cs_bk = -1;
    pagesize = 0;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(u8"男性と女性に能力の違いはない。"s, u8"What's your gender?"s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    windowshadow = 1;
label_1549_internal:
    redraw(0);
    s(0) = lang(u8"性別の選択"s, u8"Gender Selection"s);
    s(1) = strhint3b;
    display_window(
        (windoww - 370) / 2 + inf_screenx, winposy(168, 1) - 20, 370, 168);
    x = ww / 2;
    y = wh - 60;
    gmode(4, 180, 300, 30);
    pos(wx + ww / 2, wy + wh / 2);
    grotate(2, 0, 0, 0, x, y);
    gmode(2);
    display_topic(lang(u8"性別の候補"s, u8"Gender"s), wx + 28, wy + 30);
    listn(0, 0) = cnven(strmale);
    listn(0, 1) = cnven(strfemale);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            key_list(cnt) = key_select(cnt);
            keyrange = cnt + 1;
            pos(wx + 38, wy + 66 + cnt * 19 - 2);
            gcopy(3, cnt * 24 + 72, 30, 24, 18);
            cs_list(cnt, listn(0, cnt), wx + 64, wy + 66 + cnt * 19 - 1, 19);
        }
    }
    cs_bk = cs;
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == key_select(0))
    {
        cmsex = 0;
        label_1550();
        return;
    }
    if (key == key_select(1))
    {
        cmsex = 1;
        label_1550();
        return;
    }
    if (key == key_cancel)
    {
        label_1541();
        return;
    }
    getkey(p, 112);
    if (p)
    {
        label_2703();
        label_1547(false);
    }
    goto label_1549_internal;
}
void label_1550(bool label_1551_flg)
{
    if (label_1551_flg)
    {
        snd(20);
    }
label_1551:
    redraw(0);
    cs = 0;
    cs_bk = -1;
    page = 0;
    pagesize = 0;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"職業や種族は、初期の能力だけでなく、成長の方向性に影響するんだ。"s,
        u8"Your class and race determine growth rate of your skills and attributes."s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    dbmode = 1;
    label_2298();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            dbidn = listn(1, cnt);
            dbmode = 2;
            label_2298();
            listn(0, cnt) = classname;
        }
    }
    windowshadow = 1;
label_1552_internal:
    if (cs != cs_bk)
    {
        redraw(0);
        s(0) = lang(u8"職業の選択"s, u8"Class Selection"s);
        s(1) = strhint3b;
        display_window(
            (windoww - 680) / 2 + inf_screenx, winposy(500, 1) + 20, 680, 500);
        ++cmbg;
        x = ww / 5 * 2;
        y = wh - 80;
        gmode(4, 180, 300, 50);
        pos(wx + ww / 4, wy + wh / 2);
        grotate(2, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
        gmode(2);
        display_topic(lang(u8"選択できる職業"s, u8"Class"s), wx + 28, wy + 30);
        display_topic(lang(u8"職業の説明"s, u8"Detail"s), wx + 188, wy + 30);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                key_list(cnt) = key_select(cnt);
                keyrange = cnt + 1;
                display_key(wx + 38, wy + 66 + cnt * 19 - 2, cnt);
                if (jp)
                {
                    s = listn(0, cnt);
                }
                else
                {
                    s = cnven(listn(1, cnt));
                }
                cs_list(cnt, s, wx + 64, wy + 66 + cnt * 19 - 1, 19);
            }
        }
        cs_bk = cs;
        color(0, 0, 0);
        pos(wx + 200, wy + 66);
        del_chara(0);
        dbidn = listn(1, cs);
        dbmode = 3;
        label_2298();
        dbmode = 11;
        label_2298();
        val = 1;
        label_1567(cnt);
        redraw(1);
    }
    await(cfg_wait1);
    key_check();
    cursor_check();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = page * pagesize + cnt;
                break;
            }
            else
            {
                p = -1;
            }
        }
    }
    if (p != -1)
    {
        cmclass = listn(1, p);
        label_1553();
        return;
    }
    if (key == key_cancel)
    {
        label_1547(false);
    }
    getkey(p, 112);
    if (p)
    {
        label_2703();
        label_1550(false);
    }
    goto label_1552_internal;
}
void label_1553(bool label_1554_flg)
{
    if (label_1554_flg)
    {
        snd(101);
        DIM2(cmlock, 10);
        cmlock(8) = 2;
    }
label_1554:
    redraw(0);
    cs = 0;
    cs_bk = -1;
    pagesize = 0;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"死にたくないなら、ある程度の能力は必要だね。"s,
        u8"You should prepare well, if you want to survive long enough in Irva."s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    del_chara(0);
    dbidn = cmrace;
    dbmode = 3;
    label_2297();
    dbidn = cmclass;
    dbmode = 3;
    label_2298();
    cdata(38, rc) = 1;
    {
        int cnt = 10;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            if (cmlock(cnt - 10) == 0)
            {
                sdata(cnt + 600, rc) -=
                    rnd((sdata((cnt + 600), rc) / 2000000 + 1)) * 1000000;
                cmstats(cnt - 10) = sdata(cnt + 600, rc);
            }
        }
    }
    listmax = 0;
    list(0, 0) = 0;
    listn(0, 0) = lang(u8"リロール"s, u8"Reroll"s);
    ++listmax;
    list(0, 1) = 0;
    listn(0, 1) = lang(u8"決定"s, u8"Proceed"s);
    ++listmax;
    {
        int cnt = 10;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            list(0, listmax) = cmstats(cnt - 10);
            listn(0, listmax) = skillname(cnt);
            ++listmax;
        }
    }
    windowshadow = 1;
label_1555_internal:
    redraw(0);
    s(0) = lang(u8"能力のロール"s, u8"Attb Reroll"s);
    s(1) = strhint3b;
    display_window(
        (windoww - 360) / 2 + inf_screenx, winposy(352, 1) - 20, 360, 352);
    x = 150;
    y = 240;
    gmode(4, 180, 300, 30);
    pos(wx + 85, wy + wh / 2);
    grotate(2, 0, 0, 0, x, y);
    gmode(2);
    display_topic(lang(u8"能力"s, u8"Attributes"s), wx + 28, wy + 30);
    color(0, 0, 0);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    pos(wx + 175, wy + 52);
    mes(lang(
        u8"ロックされた能力は\n変化しません"s,
        u8"Locked items will\nnot change."s));
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(wx + 180, wy + 84);
    mes(lang(u8"残りロック: "s, u8"Locks left: "s) + cmlock(8));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            key_list(cnt) = key_select(cnt);
            keyrange = cnt + 1;
            pos(wx + 38, wy + 66 + cnt * 23 - 2);
            gcopy(3, cnt * 24 + 72, 30, 24, 18);
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            cs_list(cnt, listn(0, cnt), wx + 64, wy + 66 + cnt * 23 - 1, 19);
            font(lang(cfg_font1, cfg_font2), 15 - en * 2, 1);
            color(0, 0, 0);
            if (cnt >= 2)
            {
                pos(wx + 198, wy + 76 + cnt * 23);
                gmode(2, inf_tiles, inf_tiles);
                grotate(1, (cnt - 2) * inf_tiles, 672, 0, inf_tiles, inf_tiles);
                pos(wx + 210, wy + 66 + cnt * 23);
                mes(""s + list(0, cnt) / 1000000);
                if (cmlock(cnt - 2) == 1)
                {
                    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
                    pos(wx + 240, wy + 66 + cnt * 23 + 2);
                    color(20, 20, 140);
                    mes(u8"Locked!"s);
                }
            }
        }
    }
    cs_bk = cs;
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = cnt;
                break;
            }
            else
            {
                p = -1;
            }
        }
    }
    if (p != -1)
    {
        if (p == 0)
        {
            snd(103);
            goto label_1554;
        }
        if (p == 1)
        {
            label_1557();
            return;
        }
        if (cmlock(p - 2) != 0)
        {
            ++cmlock(8);
            cmlock(p - 2) = 0;
        }
        else
        {
            if (cmlock(8) > 0)
            {
                cmlock(p - 2) = 1;
                --cmlock(8);
            }
        }
        snd(20);
    }
    if (key == key_cancel)
    {
        label_1550(false);
    }
    getkey(p, 112);
    if (p)
    {
        label_2703();
        label_1553(false);
    }
    goto label_1555_internal;
}
void label_1557(bool label_1558_flg)
{
    if (label_1558_flg)
    {
        gdata(93) = 3;
        DIM2(trait, 500);
        DIM2(spact, 500);
        label_0043();
        redraw(0);
        gmode(0);
        pos(0, 0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        s = lang(
            u8"フィートとは、君の持っている有益な特徴だ。3つまで選べるよ。"s,
            u8"Choose your feats wisely."s);
        label_1425();
        font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
        pos(20, windowh - 20);
        color(0, 0, 0);
        mes(u8"Press F1 to show help."s);
        if (geneuse != ""s)
        {
            pos(20, windowh - 36);
            mes(u8"Gene from "s + geneuse);
        }
        label_19672();
        label_1566();
        if (stat == -1)
        {
            label_1557();
            return;
        }
        if (stat == 0)
        {
            label_1553(false);
        }
    }
label_1558:
    redraw(0);
    pagemax = 0;
    page = 0;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"有名になると、名前とは別の通り名で呼ばれることがあるらしい。"s,
        u8"Choose your Alias."s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    windowshadow = 1;
    cs = 0;
    cs_bk = -1;
    list(0, 0) = -1;
label_1559_internal:
    redraw(0);
    if (cs != cs_bk)
    {
        s(0) = lang(u8"異名の選択"s, u8"Alias Selection"s);
        s(1) = strhint3b;
        display_window(
            (windoww - 400) / 2 + inf_screenx, winposy(458, 1) + 20, 400, 458);
        ++cmbg;
        x = ww / 3 * 2;
        y = wh - 80;
        gmode(4, 180, 300, 40);
        pos(wx + ww / 2, wy + wh / 2);
        grotate(2, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
        gmode(2);
        display_topic(lang(u8"異名の候補"s, u8"Alias List"s), wx + 28, wy + 30);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (17); cnt < cnt_end; ++cnt)
            {
                key_list(cnt) = key_select(cnt);
                keyrange = cnt + 1;
                if (list(0, 0) == -1)
                {
                    if (gdata(828) == 1)
                    {
                        listn(0, cnt) = u8"*Debug*"s;
                    }
                    else
                    {
                        listn(0, cnt) = random_title();
                    }
                }
                if (cnt == 0)
                {
                    listn(0, cnt) = lang(u8"リロール"s, u8"Reroll"s);
                }
                pos(wx + 38, wy + 66 + cnt * 19 - 2);
                gcopy(3, cnt * 24 + 72, 30, 24, 18);
                cs_list(
                    cnt, listn(0, cnt), wx + 64, wy + 66 + cnt * 19 - 1, 19);
            }
        }
        cs_bk = cs;
        list(0, 0) = 0;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = cnt;
                break;
            }
            else
            {
                p = -1;
            }
        }
    }
    if (p != -1)
    {
        if (key == key_select(0))
        {
            list(0, 0) = -1;
            snd(103);
            cs_bk = -1;
        }
        else
        {
            cmaka = listn(0, p);
            label_1560();
            return;
        }
    }
    if (key == key_cancel)
    {
        label_1557();
        return;
    }
    getkey(p, 112);
    if (p)
    {
        label_2703();
        label_1557(false);
    }
    goto label_1559_internal;
}
void label_1560()
{
    pcc(15, 0) = 0;
label_1561_internal:
    redraw(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"君の見た目を知っておきたいな。まあ、後からいつでも変えられるけどね。"s,
        u8"What you look like? Don't worry, you can change them later."s);
    label_1425();
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 1);
    pos(20, windowh - 20);
    color(0, 0, 0);
    mes(u8"Press F1 to show help."s);
    if (geneuse != ""s)
    {
        pos(20, windowh - 36);
        mes(u8"Gene from "s + geneuse);
    }
    cbitmod(967, 0, 1);
    label_2039();
    if (stat == 0)
    {
        label_1566();
        label_1557(false);
    }
    if (stat == -1)
    {
        label_2703();
        label_1566();
        goto label_1561_internal;
    }
    label_1566();
    cmportrait = cdata(13, rc);
label_1562_internal:
    snd(94);
label_1563_internal:
    redraw(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    s = lang(
        u8"決定ｷｰを押すことで、生い立ちをリロールできる。"s,
        u8"Hit the enter key to reroll your personal history."s);
    label_1425();
    del_chara(0);
    dbidn = cmrace;
    dbmode = 3;
    label_2297();
    dbidn = cmclass;
    dbmode = 3;
    label_2298();
    cdatan(0, rc) = u8"????"s;
    cdatan(1, rc) = cmaka;
    cdata(38, rc) = 1;
    {
        int cnt = 10;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            sdata(cnt + 600, rc) = cmstats(cnt - 10);
        }
    }
    label_1535();
    label_1536();
    cdata(13, rc) = cmportrait;
    create_pcpic(0, 1);
    mode = 1;
    csctrl = 1;
    menucycle = 0;
    label_20332();
    if (stat == 0)
    {
        nowindowanime = 1;
        label_1566();
        goto label_1563_internal;
    }
    redraw(0);
    gsel(2);
    pos(0, 0);
    gmode(0);
    gcopy(0, 0, 100, windoww, windowh - 100);
    gsel(0);
    label_1566();
    s = lang(u8"満足できたかな？"s, u8"Are you satisfied now?"s);
    label_1425();
    promptl(0, promptmax) = lang(u8"はい"s, u8"Yes"s);
    promptl(1, promptmax) = u8"a"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"いいえ"s, u8"No"s);
    promptl(1, promptmax) = u8"b"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"最初から"s, u8"Restart"s);
    promptl(1, promptmax) = u8"c"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    val(0) = promptx;
    val(1) = 240;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    snd(20);
    if (rtval == 1 || rtval == -1)
    {
        goto label_1562_internal;
    }
    if (rtval == 2)
    {
        nowindowanime = 0;
        label_1541();
        return;
    }
    redraw(0);
    gmode(0);
    pos(0, 100);
    gcopy(2, 0, 0, windoww, windowh - 100);
    gmode(2);
    s = lang(
        u8"最後の質問だ。君の名前は？"s, u8"Last question. What's your name?"s);
    label_1425();
label_1565_internal:
    val(0) = (windoww - 230) / 2 + inf_screenx;
    val(1) = winposy(120);
    val(2) = 10;
    val(3) = 0;
    val(4) = 0;
    inputlog = "";
    input_mode = 1;
    label_21262();
    cmname = ""s + inputlog;
    if (cmname == ""s || cmname == u8" "s)
    {
        cmname = randomname();
    }
    playerid = u8"sav_"s + cmname;
    dirlist(buff, exedir + u8"save\\*"s, 5);
    notesel(buff);
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (getpath(s, 16) == getpath(playerid, 16))
            {
                f = 1;
                break;
            }
        }
    }
    if (f == 1)
    {
        redraw(0);
        gmode(0);
        pos(0, 100);
        gcopy(2, 0, 0, windoww, windowh - 100);
        gmode(2);
        msgconfirm = 1;
        s = lang(
            u8"あいにく、その名前の冒険者はすでに存在する。"s,
            u8"Sorry, but the name is already taken."s);
        label_1425();
        goto label_1565_internal;
    }
    snd(101);
    cdatan(0, rc) = cmname;
    cdata(30, 0) = 400 + rnd(200);
    if (geneuse != ""s)
    {
        label_2091();
    }
    await(250);
    mode = 5;
    label_2732();
    return;
}
void label_1566()
{
    redraw(0);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\void.bmp"s, 1);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gsel(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, 64);
    gmode(2);
    return;
}
void label_1567(int CNT)
{
    if (val == 1)
    {
        chara_preparepic(ref1, CNT);
        pos(wx + 380, wy - chipc(3, ref1) + 60);
        gcopy(5, 0, 960, inf_tiles, chipc(3, ref1));
        chara_preparepic(ref2, CNT);
        pos(wx + 350, wy - chipc(3, ref1) + 60);
        gcopy(5, 0, 960, inf_tiles, chipc(3, ref1));
        pos(wx + 460, wy + 38);
        mes(lang(u8"種族: "s, u8"Race: "s) + cmrace(1));
    }
    else
    {
        gmode(4, chipc(2, ref1), chipc(3, ref1), 40);
        chara_preparepic(ref1, CNT);
        pos(wx + 480, wy + 96);
        grotate(5, 0, 960, 0, chipc(2, ref1) * 2, chipc(3, ref1) * 2);
        chara_preparepic(ref2, CNT);
        pos(wx + 350, wy + 96);
        grotate(5, 0, 960, 0, chipc(2, ref1) * 2, chipc(3, ref1) * 2);
        gmode(2);
    }
    color(0, 0, 0);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    tx = wx + 230;
    ty = wy + 62;
    talk_conv(buff, 60 + en * 2);
    color(0, 0, 0);
    pos(tx - 20, ty);
    mes(buff);
    color(0, 0, 0);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    tx = wx + 200;
    ty = wy + 166;
    display_topic(lang(u8"能力ボーナス"s, u8"Attribute Bonus"s), tx, ty);
    ty += 34;
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    if (jp)
    {
        s(0) = u8"皆無"s;
        s(1) = u8"最高"s;
        s(2) = u8"理想的"s;
        s(3) = u8"高い"s;
        s(4) = u8"やや高い"s;
        s(5) = u8"普通"s;
        s(6) = u8"少し"s;
        s(7) = u8"微々"s;
    }
    if (en)
    {
        s(0) = u8"None"s;
        s(1) = u8"Best"s;
        s(2) = u8"Great"s;
        s(3) = u8"Good"s;
        s(4) = u8"Not bad"s;
        s(5) = u8"Normal"s;
        s(6) = u8"Little"s;
        s(7) = u8"Slight"s;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    if (cnt2 == 2)
                    {
                        if (cnt == 2)
                        {
                            break;
                        }
                    }
                    r = cnt2 * 3 + cnt + 10;
                    p = 0;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                        {
                            if (sorg(r, 0) > 13)
                            {
                                p = 1;
                                color(0, 0, 200);
                                break;
                            }
                            if (sorg(r, 0) > 11)
                            {
                                p = 2;
                                color(0, 0, 200);
                                break;
                            }
                            if (sorg(r, 0) > 9)
                            {
                                p = 3;
                                color(0, 0, 150);
                                break;
                            }
                            if (sorg(r, 0) > 7)
                            {
                                p = 4;
                                color(0, 0, 150);
                                break;
                            }
                            if (sorg(r, 0) > 5)
                            {
                                p = 5;
                                color(0, 0, 0);
                                break;
                            }
                            if (sorg(r, 0) > 3)
                            {
                                p = 6;
                                color(150, 0, 0);
                                break;
                            }
                            if (sorg(r, 0) > 0)
                            {
                                p = 7;
                                color(200, 0, 0);
                                break;
                            }
                            color(120, 120, 120);
                        }
                    }
                    pos(cnt * 150 + tx + 13, ty + 7);
                    gmode(2, inf_tiles, inf_tiles);
                    grotate(
                        1,
                        (cnt2 * 3 + cnt) * inf_tiles,
                        672,
                        0,
                        inf_tiles,
                        inf_tiles);
                    pos(cnt * 150 + tx + 32, ty);
                    mes(strmid(skillname(r), 0, jp ? 6 : 3) + u8": "s + s(p));
                }
            }
            ty += 16;
        }
    }
    ty = wy + 260;
    display_topic(lang(u8"獲得技能"s, u8"Trained Skill"s), tx, ty);
    ty += 34;
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    r = 0;
    s = lang(u8"武器の専門  "s, u8"Proficient in "s);
    {
        int cnt = 100;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            if (sorg(cnt, 0) != 0)
            {
                if (r != 0)
                {
                    s += u8","s;
                }
                s += skillname(cnt);
                ++r;
            }
        }
    }
    if (r != 0)
    {
        pos(tx + 13, ty + 6);
        gmode(2, inf_tiles, inf_tiles);
        grotate(1, 0, 672, 0, inf_tiles, inf_tiles);
        pos(tx + 32, ty);
        mes(s);
        ty += 14;
    }
    {
        int cnt = 150;
        for (int cnt_end = cnt + (450); cnt < cnt_end; ++cnt)
        {
            if (sorg(cnt, 0) != 0)
            {
                s = skillname(cnt);
                if (jp)
                {
                    lenfix(s, 12);
                }
                else
                {
                    lenfix(s, 16);
                }
                pos(tx + 13, ty + 6);
                gmode(2, inf_tiles, inf_tiles);
                grotate(
                    1,
                    (sdataref(0, cnt) - 10) * inf_tiles,
                    672,
                    0,
                    inf_tiles,
                    inf_tiles);
                s(1) = skilldesc(cnt);
                if (en)
                {
                    if (strlen_u(s(1)) > 45)
                    {
                        s(1) = strmid(s(1), 0, 42) + u8"..."s;
                    }
                }
                pos(tx + 32, ty);
                mes(s + s(1));
                ty += 14;
            }
        }
    }
    return;
}
int convertartifact(int prm_930, int prm_931)
{
    int f_at_m163 = 0;
    int tc_at_m163 = 0;
    std::string n_at_m163;
    if (refitem(inv(3, prm_930), 5) >= 50000)
    {
        stat = prm_930;
        return stat;
    }
    if (inv(4, prm_930) != 6)
    {
        stat = prm_930;
        return stat;
    }
    if (inv(18, prm_930) != 0)
    {
        stat = prm_930;
        return stat;
    }
    f_at_m163 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5480); cnt < cnt_end; ++cnt)
        {
            if (prm_931)
            {
                if (cnt >= 5080)
                {
                    break;
                }
            }
            if (cnt >= 520 && cnt < 5060)
            {
                continue;
            }
            tc_at_m163 = inv_getowner(cnt);
            if (tc_at_m163 != -1)
            {
                if (cdata(0, tc_at_m163) == 0 || cdata(150, tc_at_m163) == 13)
                {
                    continue;
                }
            }
            if (inv(0, cnt) > 0)
            {
                if (inv(3, cnt) == inv(3, prm_930))
                {
                    if (cnt != prm_930)
                    {
                        f_at_m163 = 1;
                        break;
                    }
                }
            }
        }
    }
    if (f_at_m163 == 0)
    {
        stat = prm_930;
        return stat;
    }
    n_at_m163 = ""s + itemname(prm_930);
label_1569_internal:
    flt(refitem(inv(3, prm_930), 7), 4);
    flttypeminor = refitem(inv(3, prm_930), 9);
    inv(0, prm_930) = 0;
    itemcreate(inv_getowner(prm_930), 0, inv(5, prm_930), inv(6, prm_930), 0);
    if (inv(4, prm_930) != 6)
    {
        goto label_1570_internal;
        stat = 0;
        return stat;
    }
    goto label_1569_internal;
label_1570_internal:
    txt(lang(
        n_at_m163 + u8"は"s + itemname(ci) + u8"に形を変えた。"s,
        n_at_m163 + u8" turns its shape into "s + itemname(ci) + u8"."s));
    stat = prm_930;
    return stat;
}
void label_1572()
{
    fsetincome(0) = 52000;
    fsetincome(1) = 52000;
    fsetincome(2) = 52000;
    fsetincome(3) = 53000;
    fsetincome(4) = 53000;
    fsetincome(5) = 56000;
    fsetincome(6) = 54000;
    fsetincome(7) = 77000;
    fsetincome(8) = 57000;
    fsetincome(9) = 57000;
    fsetchest(0) = 10000;
    fsetchest(1) = 24000;
    fsetchest(2) = 12000;
    fsetchest(3) = 16000;
    fsetchest(4) = 20000;
    fsetchest(5) = 19000;
    fsetchest(6) = 18000;
    fsetchest(7) = 22000;
    fsetchest(8) = 14000;
    fsetchest(9) = 32000;
    fsetchest(10) = 34000;
    fsetchest(11) = 54000;
    fsetchest(12) = 59000;
    fsetwear(0) = 10000;
    fsetwear(1) = 10000;
    fsetwear(2) = 24000;
    fsetwear(3) = 24000;
    fsetwear(4) = 25000;
    fsetwear(5) = 12000;
    fsetwear(6) = 16000;
    fsetwear(7) = 20000;
    fsetwear(8) = 19000;
    fsetwear(9) = 18000;
    fsetwear(10) = 22000;
    fsetwear(11) = 14000;
    fsetwear(12) = 32000;
    fsetwear(13) = 34000;
    fsetitem(0) = 52000;
    fsetitem(1) = 52000;
    fsetitem(2) = 53000;
    fsetitem(3) = 53000;
    fsetitem(4) = 56000;
    fsetitem(5) = 68000;
    fsetitem(6) = 54000;
    fsetitem(7) = 64000;
    fsetitem(8) = 59000;
    fsetitem(9) = 55000;
    fsetrewardsupply(0) = 52000;
    fsetrewardsupply(1) = 53000;
    fsetrewardsupply(2) = 56000;
    fsetrewardsupply(3) = 54000;
    fsetrewardsupply(4) = 57000;
    fsetrare(0) = 60000;
    fsetrare(1) = 72000;
    fsetrare(2) = 77000;
    fsetrare(3) = 55000;
    fsetrare(4) = 57000;
    fsetperform(0) = 77000;
    fsetperform(1) = 57000;
    fsetperform(2) = 57000;
    fsetperform(3) = 57000;
    fsetperform(4) = 60000;
    fsetperform(5) = 18000;
    fsetperform(6) = 20000;
    fsetperform(7) = 32000;
    fsetperform(8) = 34000;
    fsetperform(9) = 52000;
    fsetperform(10) = 64000;
    fsetperform(11) = 64000;
    fsetdeliver(0) = 60000;
    fsetdeliver(1) = 77000;
    fsetdeliver(2) = 54000;
    fsetdeliver(3) = 64000;
    fsetsupply(0) = 60000;
    fsetsupply(1) = 77000;
    fsetsupply(2) = 56000;
    fsetsupply(3) = 54000;
    fsetsupply(4) = 64000;
    fsetmagic(0) = 53000;
    fsetmagic(1) = 56000;
    fsetmagic(2) = 54000;
    fsetarmor(0) = 12000;
    fsetarmor(1) = 16000;
    fsetarmor(2) = 20000;
    fsetarmor(3) = 19000;
    fsetarmor(4) = 18000;
    fsetarmor(5) = 22000;
    fsetarmor(6) = 14000;
    fsetweapon(0) = 10000;
    fsetweapon(1) = 24000;
    fsetweapon(2) = 25000;
    fsetplantartifact(0) = 32000;
    fsetplantartifact(1) = 34000;
    fsetplantunknown(0) = 57000;
    fsetplantunknown(1) = 57000;
    fsetplantunknown(2) = 54000;
    fsetplantunknown(3) = 64000;
    fsetplantunknown(4) = 77000;
    fsetremain(0) = 25000;
    fsetremain(1) = 57000;
    fsetremain(2) = 57000;
    fsetremain(3) = 77000;
    fsetremain(4) = 53000;
    fsetremain(5) = 52000;
    fsetremain(6) = 57000;
    fsetbarrel(0) = 25000;
    fsetbarrel(1) = 57000;
    fsetbarrel(2) = 53000;
    fsetbarrel(3) = 52000;
    fsetbarrel(4) = 77000;
    fsetbarrel(5) = 64000;
    fsetcollect(0) = 64000;
    fsetcollect(1) = 60000;
    fsetcollect(2) = 57000;
    fsetcollect(3) = 77000;
    isetdeed(0) = 344;
    isetdeed(1) = 521;
    isetdeed(2) = 522;
    isetdeed(3) = 542;
    isetdeed(4) = 543;
    isetdeed(5) = 555;
    isetdeed(6) = 572;
    isetfruit(0) = 180;
    isetfruit(1) = 181;
    isetfruit(2) = 196;
    isetfruit(3) = 197;
    isetfruit(4) = 192;
    isetfruit(5) = 183;
    isetthrowpotionminor(0) = 27;
    isetthrowpotionminor(1) = 28;
    isetthrowpotionminor(2) = 376;
    isetthrowpotionminor(3) = 30;
    isetthrowpotionminor(4) = 262;
    isetthrowpotionminor(5) = 253;
    isetthrowpotionminor(6) = 379;
    isetthrowpotionminor(7) = 392;
    isetthrowpotionmajor(0) = 28;
    isetthrowpotionmajor(1) = 376;
    isetthrowpotionmajor(2) = 205;
    isetthrowpotionmajor(3) = 368;
    isetthrowpotionmajor(4) = 433;
    isetthrowpotionmajor(5) = 382;
    isetthrowpotionmajor(6) = 577;
    isetthrowpotionmajor(7) = 577;
    isetthrowpotiongreater(0) = 28;
    isetthrowpotiongreater(1) = 205;
    isetthrowpotiongreater(2) = 368;
    isetthrowpotiongreater(3) = 432;
    isetthrowpotiongreater(4) = 429;
    isetthrowpotiongreater(5) = 29;
    isetthrowpotiongreater(6) = 577;
    isethire(0) = 205;
    isethire(1) = 70;
    isethire(2) = 74;
    isethire(3) = 41;
    isethire(4) = 69;
    isethire(5) = 76;
    isethire(6) = 1;
    isethire(7) = 1;
    isethire(8) = 1;
    isetgiftminor(0) = 753;
    isetgiftminor(1) = 754;
    isetgiftminor(2) = 754;
    isetgiftminor(3) = 756;
    isetgiftminor(4) = 756;
    isetgiftminor(5) = 540;
    isetgiftminor(6) = 541;
    isetgiftminor(7) = 537;
    isetgiftminor(8) = 538;
    isetgiftminor(9) = 526;
    isetgiftminor(10) = 415;
    isetgiftminor(11) = 511;
    isetgiftminor(12) = 343;
    isetgiftminor(13) = 340;
    isetgiftminor(14) = 338;
    isetgiftminor(15) = 328;
    isetgiftminor(16) = 220;
    isetgiftminor(17) = 575;
    isetgiftminor(18) = 622;
    isetgiftminor(19) = 167;
    isetgiftmajor(0) = 755;
    isetgiftmajor(1) = 755;
    isetgiftmajor(2) = 633;
    isetgiftmajor(3) = 626;
    isetgiftmajor(4) = 502;
    isetgiftmajor(5) = 632;
    isetgiftmajor(6) = 667;
    isetgiftmajor(7) = 555;
    isetgiftmajor(8) = 748;
    isetgiftmajor(9) = 640;
    isetgiftgrand(0) = 757;
    isetgiftgrand(1) = 558;
    isetgiftgrand(2) = 664;
    isetgiftgrand(3) = 758;
    isetgiftgrand(4) = 759;
    isetgiftgrand(5) = 761;
    isethirerole(0) = 18;
    isethirerole(1) = 9;
    isethirerole(2) = 12;
    isethirerole(3) = 5;
    isethirerole(4) = 8;
    isethirerole(5) = 14;
    isethirerole(6) = 1008;
    isethirerole(7) = 1008;
    isethirerole(8) = 1008;
    isetcrop(0) = 180;
    isetcrop(1) = 181;
    isetcrop(2) = 197;
    isetcrop(3) = 192;
    isetcrop(4) = 183;
    isetcrop(5) = 188;
    isetcrop(6) = 200;
    isetgod(0) = 0;
    isetgod(1) = 1;
    isetgod(2) = 2;
    isetgod(3) = 3;
    isetgod(4) = 4;
    isetgod(5) = 5;
    isetgod(6) = 6;
    isetgod(7) = 7;
    asettown(0) = 5;
    asettown(1) = 11;
    asettown(2) = 14;
    asettown(3) = 15;
    asettown(4) = 12;
    moneybox(0) = 500;
    moneybox(1) = 2000;
    moneybox(2) = 10000;
    moneybox(3) = 50000;
    moneybox(4) = 500000;
    moneybox(5) = 5000000;
    moneybox(6) = 100000000;
    giftvalue(0) = 10;
    giftvalue(1) = 20;
    giftvalue(2) = 30;
    giftvalue(3) = 50;
    giftvalue(4) = 75;
    giftvalue(5) = 100;
    giftn(0) = lang(u8"つまらない"s, u8"cheap"s);
    giftn(1) = lang(u8"普通の"s, u8"so so"s);
    giftn(2) = lang(u8"ちょっとドキドキする"s, u8"exciting"s);
    giftn(3) = lang(u8"高価な"s, u8"expensive"s);
    giftn(4) = lang(u8"気絶しそうなほど素晴らしい"s, u8"hot and gorgeous"s);
    giftn(5) = lang(u8"王様が羨むほどの"s, u8"crazy epic"s);
    giftn(6) = u8"bug"s;
    moneyboxn(0) = lang(u8"5百金貨"s, u8"500 GP"s);
    moneyboxn(1) = lang(u8"2千金貨"s, u8"2k GP"s);
    moneyboxn(2) = lang(u8"1万金貨"s, u8"10K GP"s);
    moneyboxn(3) = lang(u8"5万金貨"s, u8"50K GP"s);
    moneyboxn(4) = lang(u8"50万金貨"s, u8"500K GP"s);
    moneyboxn(5) = lang(u8"500万金貨"s, u8"5M GP"s);
    moneyboxn(6) = lang(u8"1億金貨"s, u8"500M GP"s);
    biten(0) = lang(u8"ミジンコ"s, u8"water flea"s);
    biten(1) = lang(u8"バッタ"s, u8"grasshopper"s);
    biten(2) = lang(u8"テントウ"s, u8"ladybug"s);
    biten(3) = lang(u8"トンボ"s, u8"dragonfly"s);
    biten(4) = lang(u8"セミ"s, u8"locust"s);
    biten(5) = lang(u8"ヘラクレス"s, u8"beetle"s);
    notesel(buff);
    noteload(exedir + u8"data\\book.txt"s);
    p = instr(buff, 0, u8"%DEFINE"s);
    buff = strmid(buff, p, instr(buff, p, u8"%END"s));
    notedel(0);
    SDIM3(booktitle, noteinfo(0), 25);
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(msgtemp, cnt);
            csvsort(s, msgtemp, 44);
            booktitle(elona_int(s)) = lang(s(1), s(2));
            if (elona_int(s(3)) == 1)
            {
                isetbook(p) = elona_int(s);
                ++p;
            }
        }
    }
    magebookn(0) = lang(u8"ヴォイニッチ写本"s, u8"Voynich Manuscript"s);
    magebookn(1) = lang(u8"ドール賛歌"s, u8"Dhol Chants"s);
    magebookn(2) = lang(u8"ポナペ教教典"s, u8"Ponape Scripture"s);
    magebookn(3) = lang(u8"グラーキ黙示録"s, u8"Revelations of Glaaki"s);
    magebookn(4) = lang(u8"グ＝ハーン断章"s, u8"G'harne Fragments"s);
    magebookn(5) = lang(u8"断罪の書"s, u8"Liber Damnatus"s);
    magebookn(6) = lang(u8"ドジアンの書"s, u8"Book of Dzyan"s);
    magebookn(7) = lang(u8"エイボンの書"s, u8"Book of Eibon"s);
    magebookn(8) = lang(u8"大いなる教書"s, u8"Grand Grimoire"s);
    magebookn(9) = lang(u8"セラエノ断章"s, u8"Celaeno Fragments"s);
    magebookn(10) = lang(u8"ネクロノミコン"s, u8"Necronomicon"s);
    magebookn(11) = lang(u8"ルルイエ異本"s, u8"The R'lyeh Text"s);
    magebookn(12) = lang(u8"エルトダウン・シャールズ"s, u8"Eltdown Shards"s);
    magebookn(13) = lang(u8"金枝篇"s, u8"The Golden Bough"s);
    magebookn(14) = lang(u8"終焉の書"s, u8"Apocalypse"s);
    return;
}
void label_1573()
{
    if (rc == 0)
    {
        if (gdata(70) != 0)
        {
            return;
        }
        inv_getheader(rc);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                ci = cnt;
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (mdata(7) == 0)
                {
                    if (inv(18, cnt) != 0)
                    {
                        continue;
                    }
                    if (ibit(5, ci))
                    {
                        continue;
                    }
                    if (rnd(3))
                    {
                        continue;
                    }
                }
                else
                {
                    if (rnd(5))
                    {
                        continue;
                    }
                }
                if (refitem(inv(3, ci), 10) == 1)
                {
                    if (mdata(6) != 1 && mdata(6) != 5 && mdata(6) != 3
                        && mdata(6) != 4 && mdata(6) != 6 && mdata(6) != 2)
                    {
                        continue;
                    }
                    else
                    {
                        if (rnd(2))
                        {
                            continue;
                        }
                    }
                }
                f = 0;
                if (inv(18, ci) != 0)
                {
                    if (rnd(10))
                    {
                        f = 1;
                    }
                    if (inv(17, ci) >= 1)
                    {
                        if (rnd(2))
                        {
                            f = 1;
                        }
                    }
                    if (inv(17, ci) <= -1)
                    {
                        if (rnd(2))
                        {
                            f = 0;
                        }
                    }
                    if (inv(17, ci) <= -2)
                    {
                        if (rnd(2))
                        {
                            f = 0;
                        }
                    }
                }
                else
                {
                    if (inv(8, ci) >= 3)
                    {
                        if (rnd(4))
                        {
                            f = 1;
                        }
                    }
                }
                if (f)
                {
                    continue;
                }
                if (inv(18, ci) != 0)
                {
                    cdata(inv(18, ci), rc) =
                        cdata(inv(18, ci), rc) / 10000 * 10000;
                    inv(18, ci) = 0;
                }
                f = 0;
                if (ibit(5, ci) == 0)
                {
                    if (rnd(4) == 0)
                    {
                        f = 1;
                    }
                    if (inv(17, ci) >= 1)
                    {
                        if (rnd(3) == 0)
                        {
                            f = 0;
                        }
                    }
                    if (inv(17, ci) <= -1)
                    {
                        if (rnd(3) == 0)
                        {
                            f = 1;
                        }
                    }
                    if (inv(17, ci) <= -2)
                    {
                        if (rnd(3) == 0)
                        {
                            f = 1;
                        }
                    }
                }
                if (f)
                {
                    inv(0, ci) = 0;
                    continue;
                }
                inv(5, ci) = cdata(1, rc);
                inv(6, ci) = cdata(2, rc);
                item_stack(-1, ci);
                if (stat == 0)
                {
                    ti = inv_getfreeid(-1);
                    if (ti == -1)
                    {
                        break;
                    }
                    item_copy(ci, ti);
                    inv(21, ti) = -2;
                }
                inv(0, ci) = 0;
            }
        }
        cell_refresh(cdata(1, rc), cdata(2, rc));
        create_pcpic(0, 1);
        return;
    }
    else
    {
        if (rc < 16)
        {
            if (cbit(967, rc) == 1)
            {
                create_pcpic(rc, 1);
            }
        }
        if (cdata(9, rc) == 10)
        {
            return;
        }
    }
    if (gdata(20) == 33)
    {
        if (cdata(27, rc) == 185)
        {
            return;
        }
        if (cdata(27, rc) == 204)
        {
            return;
        }
    }
    if (cbit(969, rc))
    {
        return;
    }
    if (cbit(23, rc) || cbit(27, rc))
    {
        if (rnd(6))
        {
            return;
        }
    }
    inv_getheader(rc);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            ci = cnt;
            f = 0;
            if (cdata(150, rc) == 20)
            {
                break;
            }
            if (inv(4, ci) > 4 || inv(3, ci) == 55)
            {
                f = 1;
            }
            if (rnd(30) == 0)
            {
                f = 1;
            }
            if (cdata(25, rc) >= 4)
            {
                if (rnd(2) == 0)
                {
                    f = 1;
                }
            }
            if (cdata(150, rc) == 13)
            {
                if (rnd(5))
                {
                    f = 0;
                }
            }
            if (gdata(20) == 6)
            {
                if (rnd(4))
                {
                    f = 0;
                }
            }
            if (inv(4, ci) == 6)
            {
                f = 1;
            }
            if (ibit(12, ci))
            {
                f = 1;
            }
            if (f == 0)
            {
                continue;
            }
            if (catitem != 0)
            {
                if (ibit(8, ci) == 0)
                {
                    if (refitem(inv(3, ci), 5) < 50000)
                    {
                        if (inv(4, ci) >= 3)
                        {
                            if (rnd(3))
                            {
                                txtef(9);
                                txt(name(catitem) + u8"は"s + itemname(ci)
                                    + u8"をぺろぺろと舐めた。"s);
                                ibitmod(8, ci, 1);
                                reftype = refitem(inv(3, ci), 5);
                                encadd(
                                    ci,
                                    randomenc(randomenclv(rnd(4))),
                                    randomencp());
                                animeload(8, rc);
                            }
                        }
                    }
                }
            }
            if (inv(18, ci) != 0)
            {
                cdata(inv(18, ci), rc) = cdata(inv(18, ci), rc) / 10000 * 10000;
                inv(18, ci) = 0;
            }
            inv(5, ci) = cdata(1, rc);
            inv(6, ci) = cdata(2, rc);
            itemturn(ci);
            item_stack(-1, ci);
            if (stat == 0)
            {
                ti = inv_getfreeid(-1);
                if (ti == -1)
                {
                    break;
                }
                item_copy(ci, ti);
            }
            inv(0, ci) = 0;
        }
    }
    if (cdata(25, rc) >= 4 || rnd(20) == 0 || cbit(17, rc) == 1 || rc < 16)
    {
        if (cdata(30, rc) > 0)
        {
            flt();
            itemcreate(
                -1,
                54,
                cdata(1, rc),
                cdata(2, rc),
                cdata(30, rc) / (1 + 3 * (cbit(17, rc) == 0)));
            cdata(30, rc) -= cdata(30, rc) / (1 + 3 * (cbit(17, rc) == 0));
        }
    }
    switch (refclass(rc, 4))
    {
    case 1:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    case 7:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    case 3:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    case 2:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 53000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(40) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 54000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    case 4:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    case 5:
        if (rnd(50) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 54000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1574_internal;
    }
label_1574_internal:
    switch (refchara(cdata(27, rc), 3))
    {
    case 3:
        if (rnd(40) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(40) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 53000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(40) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetwear(rnd(length(fsetwear)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(40) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetweapon(rnd(length(fsetweapon)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 68000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1575_internal;
    case 1:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 62000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
            remain_make(ci, rc);
        }
        goto label_1575_internal;
    case 2:
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 62000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
            remain_make(ci, rc);
        }
        goto label_1575_internal;
    case 6:
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 32000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 34000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 54000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 53000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 72000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 68000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 77000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1575_internal;
    case 4:
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetwear(rnd(length(fsetwear)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetweapon(rnd(length(fsetweapon)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(20) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 72000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(4) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 68000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1575_internal;
    case 5:
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetwear(rnd(length(fsetwear)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = fsetweapon(rnd(length(fsetweapon)));
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(15) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 54000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 52000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(5) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 53000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(10) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 72000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(4) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 68000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        if (rnd(4) == 0)
        {
            p = 0;
            flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
            flttypemajor = 77000;
            flttypeminor = 0;
            itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        }
        goto label_1575_internal;
    }
label_1575_internal:
    if (rnd(40) == 0)
    {
        p = 0;
        flt(calcobjlv(cdata(38, tc)), calcfixlv(2));
        flttypemajor = 62000;
        flttypeminor = 0;
        itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
        remain_make(ci, rc);
    }
    if (gdata(20) == 35)
    {
        cell_refresh(cdata(1, rc), cdata(2, rc));
        return;
    }
    if (gdata(20) != 6 && cdata(150, rc) != 20)
    {
        if (rnd(175) == 0 || cdata(25, rc) == 6 || 0
            || cdata(25, rc) == 4 && rnd(2) == 0
            || cdata(25, rc) == 5 && rnd(3) == 0)
        {
            flt();
            itemcreate(-1, 504, cdata(1, rc), cdata(2, rc), 0);
            inv(22, ci) = cdata(7, rc) % 1000;
            inv(23, ci) = cdata(27, rc);
            cell_refresh(inv(5, ci), inv(6, ci));
        }
        if (rnd(175) == 0 || cdata(25, rc) == 6 || 0
            || cdata(25, rc) == 4 && rnd(2) == 0
            || cdata(25, rc) == 5 && rnd(3) == 0)
        {
            flt();
            itemcreate(-1, 503, cdata(1, rc), cdata(2, rc), 0);
            inv(22, ci) = cdata(7, rc) % 1000;
            inv(23, ci) = cdata(27, rc);
            cell_refresh(inv(5, ci), inv(6, ci));
        }
    }
    if (cdata(150, rc) == 1010)
    {
        flt();
        itemcreate(-1, 361, cdata(1, rc), cdata(2, rc), 0);
        inv(25, ci) = cdata(153, rc);
        inv(21, ci) = 2;
    }
    if (rollanatomy == 1 || cdata(25, rc) >= 4 || 0 || cbit(960, rc) == 1 || 0)
    {
        flt();
        itemcreate(-1, 204, cdata(1, rc), cdata(2, rc), 0);
        if (stat != 0)
        {
            remain_make(ci, rc);
            if (cbit(960, rc) == 1)
            {
                if (sdata(161, 0) != 0)
                {
                    inv(0, ci) += rnd(1 + (sdata(161, 0) > cdata(38, rc)));
                }
            }
        }
    }
    lootrich = -1;
    if (cdata(27, rc) == 183)
    {
        lootrich = 8;
    }
    if (cdata(27, rc) == 184)
    {
        lootrich = 4;
    }
    if (cdata(27, rc) == 185)
    {
        lootrich = 2;
    }
    if (lootrich != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (lootrich); cnt < cnt_end; ++cnt)
            {
                flt(calcobjlv(cdata(38, rc)));
                flttypeminor = 77001;
                itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
            }
        }
        if (rnd(3) == 0)
        {
            flt();
            itemcreate(-1, 284, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    drop(0) = -1;
    drop(1) = -1;
    drop(2) = -1;
    drop(3) = -1;
    drop(4) = -1;
    drop(5) = -1;
    drop(6) = -1;
    drop(7) = -1;
    drop(8) = -1;
    drop(9) = -1;
    drop(10) = -1;
    if (cdata(27, rc) == 140)
    {
        drop(0) = 355;
        drop(1) = -1;
    }
    if (cdata(27, rc) == 175 || cdata(27, rc) == 177 || cdata(27, rc) == 178)
    {
        if (npcmemory(0, cdata(27, rc)) == 0)
        {
            drop(0) = 290;
            drop(1) = 421;
            drop(2) = -1;
        }
        else
        {
            drop(0) = 421;
            drop(1) = 421;
            drop(2) = -1;
        }
    }
    if (gdata(20) == 37)
    {
        if (cdata(27, rc) == 257)
        {
            drop(0) = 665;
            drop(1) = 55;
            drop(2) = 55;
            drop(3) = 55;
            drop(4) = 55;
            drop(5) = 621;
            drop(6) = -1;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (drop(cnt) == -1)
            {
                break;
            }
            flt();
            itemcreate(-1, drop(cnt), cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 5)
    {
        if (rnd(200) == 0)
        {
            flt();
            itemcreate(-1, 702, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 21)
    {
        if (rnd(100) == 0)
        {
            flt();
            itemcreate(-1, 706, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 34)
    {
        if (rnd(4) == 0)
        {
            flt();
            itemcreate(-1, 717, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 99 || cdata(27, rc) == 100 || cdata(27, rc) == 101)
    {
        if (rnd(300) == 0)
        {
            flt();
            itemcreate(-1, 708, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 117)
    {
        if (rnd(140) == 0)
        {
            flt();
            itemcreate(-1, 720, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 168)
    {
        if (rnd(100) == 0)
        {
            flt();
            itemcreate(-1, 740, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) >= 302 && cdata(27, rc) <= 305)
    {
        if (rnd(90) == 0)
        {
            flt();
            itemcreate(-1, idcupsule, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 307 || cdata(27, rc) == 308)
    {
        if (rnd(150) == 0)
        {
            flt();
            itemcreate(-1, 709, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 189 || cdata(27, rc) == 190)
    {
        if (rnd(150) == 0)
        {
            flt();
            itemcreate(-1, 711, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 213)
    {
        if (rnd(50) == 0)
        {
            flt();
            itemcreate(-1, 672, cdata(1, rc), cdata(2, rc), 0);
            if (stat != 0)
            {
                inv(25, ci) = 169;
            }
        }
    }
    if (cdata(27, rc) == 250)
    {
        if (rnd(200) == 0)
        {
            flt();
            itemcreate(-1, 715, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 341)
    {
        if (rnd(3) == 0)
        {
            flt();
            itemcreate(-1, 635, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 85 || cdata(27, rc) == 86 || cdata(27, rc) == 87)
    {
        if (rnd(600) == 0)
        {
            flt();
            itemcreate(-1, 737, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 302)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2 + rnd(4)); cnt < cnt_end; ++cnt)
            {
                flt(cdata(38, rc), 2);
                flttypemajor = 92000;
                itemcreate(-1, 0, cdata(1, rc), cdata(2, rc), 0);
                if (inv(1, ci) < 800)
                {
                    inv(0, ci) = rnd(5) + 1;
                }
            }
        }
    }
    if (cdata(27, rc) == 328)
    {
        flt();
        itemcreate(-1, 55, cdata(1, rc), cdata(2, rc), 1 + rnd(3));
        if (rnd(2))
        {
            flt();
            itemcreate(-1, 622, cdata(1, rc), cdata(2, rc), 0);
        }
    }
    if (cdata(27, rc) == 329)
    {
        flt();
        itemcreate(
            -1,
            54,
            cdata(1, rc),
            cdata(2, rc),
            2500 + rnd((cdata(34, 0) + 1000)));
    }
    if (cdata(27, rc) == 351 || cdata(27, rc) == 352)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                flt();
                nostack = 1;
                itemcreate(-1, 772, cdata(1, rc), cdata(2, rc), 0);
                if (rnd(2))
                {
                    if (stat != 0)
                    {
                        inv(27, ci) = -1;
                        inv(2, ci) = 336;
                    }
                }
            }
        }
    }
    cell_refresh(cdata(1, rc), cdata(2, rc));
    if (cdata(150, rc) == 13)
    {
        label_2668();
    }
    return;
}
void label_1576()
{
    i = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
        + gdata(10) * 24 * 30 * 12;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (246); cnt < cnt_end; ++cnt)
        {
            if (cnt == 245)
            {
                p = -1;
            }
            else
            {
                p = cnt;
                if (cdata(0, p) == 0)
                {
                    continue;
                }
            }
            inv_getheader(p);
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (inv(0, cnt) == 0)
                    {
                        continue;
                    }
                    if (inv(24, cnt) == 35)
                    {
                        if (inv(27, cnt) > 0)
                        {
                            if (inv(27, cnt) <= i)
                            {
                                if (inv(21, cnt) <= 0)
                                {
                                    if (p == -1)
                                    {
                                        if (inv(3, cnt) == 204)
                                        {
                                            if (chipm(
                                                    0,
                                                    map(inv(5, cnt),
                                                        inv(6, cnt),
                                                        0))
                                                == 1)
                                            {
                                                if (gdata(17) != 0)
                                                {
                                                    continue;
                                                }
                                                txtmore();
                                                txt(lang(
                                                    itemname(cnt)
                                                        + u8"は上手い具合に干された。"s,
                                                    itemname(cnt)
                                                        + is2(inv(0, cnt))
                                                        + u8" dried up in the sun."s));
                                                inv(27, cnt) = gdata(13)
                                                    + gdata(12) * 24
                                                    + gdata(11) * 24 * 30
                                                    + gdata(10) * 24 * 30 * 12
                                                    + 2160;
                                                inv(2, cnt) = 337;
                                                inv(3, cnt) = 571;
                                                inv(25, cnt) = 0;
                                                inv(26, cnt) = 5;
                                                cell_refresh(
                                                    inv(5, cnt), inv(6, cnt));
                                                continue;
                                            }
                                        }
                                    }
                                    if (p != -1)
                                    {
                                        if (p < 16)
                                        {
                                            txt(lang(
                                                itemname(cnt) + u8"は腐った。"s,
                                                itemname(cnt) + u8" rot"s
                                                    + _s2(inv(0, cnt))
                                                    + u8"."s));
                                        }
                                    }
                                    inv(27, cnt) = -1;
                                    inv(2, cnt) = 336;
                                    if (p == -1)
                                    {
                                        cell_refresh(inv(5, cnt), inv(6, cnt));
                                    }
                                    if (p == 0)
                                    {
                                        if (cdata(61, 0) == 7)
                                        {
                                            i = refitem(inv(3, cnt), 9);
                                            if (rnd(3) == 0)
                                            {
                                                txtmore();
                                                txt(lang(
                                                    u8"あなたは"s
                                                        + itemname(cnt)
                                                        + u8"から種を取り出した。"s,
                                                    u8"You extract plant seeds from "s
                                                        + itemname(cnt)
                                                        + u8"."s));
                                                p = rnd(inv(0, cnt)) + 1;
                                                removeitem(cnt, inv(0, cnt));
                                                flt(calcobjlv(cdata(38, 0)));
                                                flttypeminor = 58500;
                                                itemcreate(0, 0, -1, -1, p);
                                                p = 0;
                                                i = gdata(13) + gdata(12) * 24
                                                    + gdata(11) * 24 * 30
                                                    + gdata(10) * 24 * 30 * 12;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}
void label_1577()
{
    if (rnd(4) == 0)
    {
        dmghp(cc, cdata(50, cc) * (5 + cdata(87, cc) / 5) / 100, -5);
        return;
    }
    if (mdata(6) != 1)
    {
        if (rnd(10 - limit(cdata(87, cc) / 10, 0, 9)) == 0)
        {
            efid = 408;
            tc = cc;
            label_2176();
            return;
        }
    }
    if (rnd(10) == 0)
    {
        if (cdata(30, cc) > 0)
        {
            p = rnd(cdata(30, cc)) / 100 + rnd(10) + 1;
            if (p > cdata(30, cc))
            {
                p = cdata(30, cc);
            }
            cdata(30, cc) -= p;
            if (synccheck(cc, -1))
            {
                txtef(8);
                txt(lang(
                    u8"悪意のある手が"s + name(cc)
                        + u8"の財布から金貨を抜き去った。"s,
                    u8"A malicious hand filches some gold pieces from "s
                        + name(cc) + your(cc) + u8" wallet."s));
            }
            return;
        }
    }
    return;
}
void label_1578()
{
    if (rnd(15) == 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は不安げに腹を押さえた。"s,
                name(cc) + u8" pat"s + _s(cc) + u8" "s + his(cc)
                    + u8" stomach uneasily."s));
            txt(lang(
                    u8"「なにかが産まれそうだよ！」"s,
                    cnvtalk(u8"I'm going to have a baby!"s)),
                lang(
                    u8"「腹になにかが…」"s,
                    cnvtalk(u8"Something is wrong with my stomach..."s)));
        }
    }
    if (mdata(6) != 1)
    {
        if (rnd(30) == 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"何かが"s + name(cc) + u8"の腹を破り飛び出した！"s,
                    u8"Something splits "s + name(cc) + your(cc)
                        + u8" body and breaks out!"s));
            }
            cdata(258, cc) += 15;
            flt();
            initlv = cdata(38, cc) / 2 + 1;
            novoidlv = 1;
            characreate(-1, 330, cdata(1, cc), cdata(2, cc));
            if (stat != 0)
            {
                if (strlen_u(cdatan(0, cc)) > 10
                    || instr(cdatan(0, cc), 0, lang(u8"の子供"s, u8"child"s))
                        != -1)
                {
                    cdatan(0, rc) = lang(u8"エイリアンの子供"s, u8"alien kid"s);
                }
                else
                {
                    cdatan(0, rc) = lang(
                        cdatan(0, cc) + u8"の子供"s,
                        u8"child of "s + cdatan(0, cc));
                }
            }
        }
    }
    return;
}
void label_1579()
{
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, cc) % 10000 == 0)
            {
                continue;
            }
            ci = cdata(cnt, cc) % 10000 - 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (inv(40 + cnt * 2, ci) == 0)
                    {
                        break;
                    }
                    if (inv(40 + cnt * 2, ci) == 21)
                    {
                        if (mdata(6) != 1)
                        {
                            if (rnd(25)
                                < limit(
                                      abs(inv((40 + cnt * 2 + 1), ci)) / 50,
                                      1,
                                      25))
                            {
                                efid = 408;
                                tc = cc;
                                label_2176();
                                continue;
                            }
                        }
                    }
                    if (inv(40 + cnt * 2, ci) == 45)
                    {
                        if (rnd(4) == 0)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    u8"何かが"s + name(cc)
                                        + u8"の血を吸った。"s,
                                    u8"Something sucks "s + name(cc) + your(cc)
                                        + u8" blood."s));
                            }
                            cdata(258, cc) +=
                                abs(inv((40 + cnt * 2 + 1), ci)) / 25 + 3;
                            continue;
                        }
                    }
                    if (inv(40 + cnt * 2, ci) == 46)
                    {
                        if (rnd(20) == 0)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    name(cc) + u8"は未熟になった。"s,
                                    name(cc) + u8" become"s + _s(cc)
                                        + u8" inexperienced."s));
                            }
                            cdata(35, cc) -= cdata(36, cc)
                                    / (300
                                       - limit(
                                             abs(inv((40 + cnt * 2 + 1), ci))
                                                 / 2,
                                             0,
                                             50))
                                + rnd(100);
                            if (cdata(35, cc) < 0)
                            {
                                cdata(35, cc) = 0;
                            }
                            continue;
                        }
                    }
                    if (inv(40 + cnt * 2, ci) == 47)
                    {
                        if (mdata(6) != 1)
                        {
                            if (mdata(6) != 5)
                            {
                                if (rnd(50)
                                    < limit(
                                          abs(inv((40 + cnt * 2 + 1), ci)) / 50,
                                          1,
                                          50))
                                {
                                    if (synccheck(cc, -1))
                                    {
                                        txtef(8);
                                        txt(lang(
                                            u8"魔力の渦が何かを召喚した！"s,
                                            u8"Several creatures are summoned from a vortex of magic."s));
                                    }
                                    {
                                        int cnt = 0;
                                        for (int cnt_end = cnt + (1 + rnd(3));
                                             cnt < cnt_end;
                                             ++cnt)
                                        {
                                            flt(calcobjlv(
                                                    cdata(38, 0) * 3 / 2 + 3),
                                                calcfixlv(2));
                                            characreate(
                                                -1,
                                                0,
                                                cdata(1, cc),
                                                cdata(2, cc));
                                        }
                                    }
                                    continue;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}
void label_1580()
{
    if (cdata(254, 0) != 0 || cdata(251, 0) != 0 || cdata(252, 0) != 0
        || cdata(263, 0) != 0)
    {
        return;
    }
    inv_getheader(0);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0 || inv(8, cnt) >= 3)
            {
                continue;
            }
            if (refitem(inv(3, cnt), 5) >= 50000)
            {
                continue;
            }
            ci = cnt;
            p(0) = sdata(13, 0) + sdata(162, 0) * 5;
            p(1) = 1500 + inv(29, ci) * 5;
            if (p > rnd(p(1) * 5))
            {
                s = itemname(ci);
                item_identify(ci, 3);
                itemmemory(0, inv(3, ci)) = 1;
                if (cfg_hideautoidentify <= 1)
                {
                    txt(lang(
                        u8"バックパックの中の"s + s + u8"は"s + itemname(ci)
                            + u8"だと判明した。"s,
                        u8"You appraise "s + s + u8" as "s + itemname(ci)
                            + u8"."s));
                }
                skillexp(162, 0, 50);
            }
            if (inv(8, ci) < 2)
            {
                if (p > rnd(p(1)))
                {
                    if (cfg_hideautoidentify == 0)
                    {
                        txt(lang(
                            u8"バックパックの中の"s + itemname(ci) + u8"は"s
                                + _quality(inv(4, ci))
                                + u8"だという感じがする。"s,
                            u8"You sense the quality of "s + itemname(ci)
                                + u8" is "s + _quality(inv(4, ci)) + u8"."s));
                    }
                    item_identify(ci, 2);
                    skillexp(162, 0, 50);
                }
            }
        }
    }
    return;
}
void label_1581()
{
    if (reftype < 60000)
    {
        if (rnd(12) == 0)
        {
            inv(17, ci) = 1;
        }
        if (rnd(13) == 0)
        {
            inv(17, ci) = -1;
            if (refitem(inv(3, ci), 5) < 50000)
            {
                if (rnd(4) == 0)
                {
                    inv(17, ci) = -2;
                }
            }
        }
    }
    if (cm || mode == 1 || inv(4, ci) == 6)
    {
        inv(17, ci) = 0;
    }
    if (reftype < 50000 || reftype == 60000 && rnd(5) == 0)
    {
        if (inv(24, ci) >= 1000 || reftype == 60000)
        {
            label_0263();
        }
        else
        {
            label_0267();
        }
    }
    if (fixeditemenc != 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                if (fixeditemenc(cnt * 2) == 0)
                {
                    break;
                }
                encadd(
                    ci,
                    fixeditemenc(cnt * 2),
                    fixeditemenc(cnt * 2 + 1),
                    0,
                    0,
                    0,
                    1);
            }
        }
    }
    if (reftype < 52000)
    {
        label_0261();
    }
    else
    {
        if (inv(4, ci) != 6)
        {
            inv(4, ci) = 2;
        }
    }
    return;
}
int label_1582()
{
    if (val == 0 || val == -1)
    {
        if (sdata(19, 0) > rnd(5000))
        {
            if (fixlv < 5)
            {
                ++fixlv;
            }
        }
    }
    ci = inv_getfreeid(val);
    if (ci == -1)
    {
        stat = 0;
        return stat;
    }
    item_delete(ci);
    if (val == -1 && mode != 6)
    {
        p = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
            {
                if (val(1) == -1)
                {
                    sx = rnd(mdata(0) - 2) + 2;
                    sy = rnd(mdata(1) - 2) + 2;
                    if (map(sx, sy, 4) != 0)
                    {
                        continue;
                    }
                }
                else
                {
                    if (cnt == 0)
                    {
                        sx = val(1);
                        sy = val(2);
                    }
                    else
                    {
                        sx = val(1) + rnd((cnt + 1)) - rnd((cnt + 1));
                        sy = val(2) + rnd((cnt + 1)) - rnd((cnt + 1));
                    }
                    if (sx < 0 || sy < 0 || sx > mdata(0) - 1
                        || sy > mdata(1) - 1)
                    {
                        continue;
                    }
                }
                if (val(1) != -1)
                {
                    if (cnt == 0)
                    {
                        p = 1;
                        inv(5, ci) = sx;
                        inv(6, ci) = sy;
                        break;
                    }
                }
                if (map(sx, sy, 6) != 0)
                {
                    if (map(sx, sy, 6) / 1000 % 100 == 22
                        || map(sx, sy, 6) / 1000 % 100 == 20
                        || map(sx, sy, 6) / 1000 % 100 == 21)
                    {
                        continue;
                    }
                }
                if ((chipm(7, map(sx, sy, 0)) && 4) == 0)
                {
                    p = 1;
                    inv(5, ci) = sx;
                    inv(6, ci) = sy;
                    break;
                }
            }
        }
        if (p == 0)
        {
            stat = 0;
            return stat;
        }
    }
    if (dbid == -1)
    {
        if (fltselect == 0)
        {
            if (mode != 6)
            {
                if (fixlv == 3)
                {
                    if (rnd(1000) == 0)
                    {
                        fltselect = 2;
                    }
                }
                if (fixlv == 4)
                {
                    if (rnd(100) == 0)
                    {
                        fltselect = 2;
                    }
                }
            }
        }
        dbmode = 1;
        label_0481();
        if (dbid == 25)
        {
            if (fltselect == 2)
            {
                fixlv = 4;
            }
            objlv += 10;
            fltselect = 0;
            dbmode = 1;
            label_0481();
        }
    }
    if (dbid == 25)
    {
        if (flttypemajor == 60002)
        {
            dbid = 501;
        }
    }
    itemcreatehack = dbid + 1;
    dbmode = 3;
    label_0481();
    dbmode = 2;
    label_0481();
    inv(22, ci) = icolref(inv(3, ci));
    if (inv(22, ci) == 1)
    {
        inv(22, ci) = randcolor(rnd(length(randcolor)));
    }
    if (inv(3, ci) == 519)
    {
        inv(22, ci) = rnd(21);
    }
    if (inv(3, ci) == 24)
    {
        if (inv(25, ci) == 0)
        {
            inv(25, ci) = isetbook(rnd(length(isetbook)));
        }
    }
    if (inv(3, ci) == 563)
    {
        if (inv(25, ci) == 0)
        {
            inv(25, ci) = randskill();
        }
    }
    if (inv(3, ci) == 783)
    {
        inv(23, ci) = rpsourcelist(rnd(length(rpsourcelist)));
        inv(25, ci) = 1;
    }
    ++itemmemory(1, dbid);
    inv(4, ci) = fixlv;
    if (fixlv == 6)
    {
        if (mode != 6)
        {
            if (nooracle == 0)
            {
                ii_p = inv_getowner(ci);
                if (ii_p != -1)
                {
                    if (cdata(150, ii_p) == 13)
                    {
                        artifactlocation += lang(
                            iknownnameref(inv(3, ci)) + u8"は"s + gdata(10)
                                + u8"年"s + gdata(11) + u8"月に"s
                                + mapname(cdata(80, ii_p)) + u8"の"s
                                + cdatan(0, ii_p) + u8"の手に渡った。\n"s,
                            cnven(iknownnameref(inv(3, ci)))
                                + u8" was held by "s + cdatan(0, ii_p)
                                + u8" at "s + mapname(cdata(80, ii_p))
                                + u8" in "s + gdata(12) + u8"/"s + gdata(11)
                                + u8", "s + gdata(10) + u8". "s);
                    }
                    else
                    {
                        ii_p = -1;
                    }
                }
                if (ii_p == -1)
                {
                    artifactlocation += lang(
                        iknownnameref(inv(3, ci)) + u8"は"s + gdata(10)
                            + u8"年"s + gdata(11) + u8"月に"s + mdatan(0)
                            + u8"で生成された。\n"s,
                        cnven(iknownnameref(inv(3, ci))) + u8" was created at "s
                            + mdatan(0) + u8" in "s + gdata(12) + u8"/"s
                            + gdata(11) + u8", "s + gdata(10) + u8". "s);
                }
            }
        }
    }
    if (inv(3, ci) == 617)
    {
        inv(25, ci) = rnd(6);
        inv(2, ci) = 385 + inv(25, ci);
        inv(1, ci) = inv(25, ci) * inv(25, ci) * 500 + 200;
    }
    if (inv(3, ci) == 344)
    {
        inv(25, ci) = rnd(5) + 1;
        if (mode != 6)
        {
            inv(25, ci) = 2;
        }
        inv(23, ci) = inv(25, ci);
        inv(1, ci) = 5000 + 4500 * inv(25, ci) * inv(25, ci) * inv(25, ci)
            + inv(25, ci) * 20000;
        if (inv(25, ci) == 5)
        {
            inv(1, ci) *= 2;
        }
    }
    if (inv(3, ci) == 54)
    {
        inv(0, ci) = calcinitgold(val);
        if (inv(4, ci) == 3)
        {
            inv(0, ci) = inv(0, ci) * 2;
        }
        if (inv(4, ci) >= 4)
        {
            inv(0, ci) = inv(0, ci) * 4;
        }
        if (val >= 0)
        {
            cdata(30, val) += inv(0, ci);
            inv(0, ci) = 0;
            stat = 1;
            return stat;
        }
    }
    if (inv(3, ci) == 729)
    {
        inv(28, ci) = rnd(rnd(rnd(length(giftvalue)) + 1) + 1);
        inv(1, ci) = inv(28, ci) * 2500 + 500;
    }
    if (inv(3, ci) == 578)
    {
        inv(26, ci) = rnd(rnd(length(moneybox)) + 1);
        inv(1, ci) = inv(26, ci) * inv(26, ci) * inv(26, ci) * 1000 + 1000;
    }
    if (inv(3, ci) == 685)
    {
        inv(26, ci) = rnd(objlv + 1) + 1;
        inv(1, ci) = 2000 + inv(26, ci) * inv(26, ci) + inv(26, ci) * 100;
    }
    if (inv(3, ci) == 630)
    {
        label_0264();
        label_0266();
    }
    if (inv(3, ci) == 687)
    {
        inv(25, ci) = rnd(rnd(limit(objlv / 2, 1, 14)) + 1);
    }
    if (inv(3, ci) == 667)
    {
        ibitmod(17, ci, 1);
    }
    if (inv(3, ci) == 641)
    {
        ++gdata(16);
        inv(9, ci) = gdata(16);
    }
    if (inv(3, ci) == 510)
    {
        inv(9, ci) = 3;
    }
    if (inv(3, ci) == 561)
    {
        inv(9, ci) = 5;
    }
    if (inv(3, ci) == 547)
    {
        inv(9, ci) = 4;
    }
    if (inv(3, ci) == 579)
    {
        inv(9, ci) = 6;
    }
    if (reftype == 72000)
    {
        inv(25, ci) = gdata(22) * (gdata(20) != 30) + 5;
        if (inv(3, ci) == 283)
        {
            inv(25, ci) = (rnd(10) + 1) * (cdata(38, 0) / 10 + 1);
        }
        if (inv(3, ci) == 415 || inv(3, ci) == 416)
        {
            inv(25, ci) = cdata(38, 0);
        }
        inv(26, ci) = rnd(abs(gdata(22)) * (gdata(20) != 30) + 1);
        if (inv(3, ci) == 284 || inv(3, ci) == 283)
        {
            inv(26, ci) = rnd(15);
        }
        inv(27, ci) = rnd(30000);
        if (inv(3, ci) == 734)
        {
            inv(26, ci) = rnd(rnd(100) + 1) + 1;
            inv(1, ci) = inv(26, ci) * 25 + 150;
            initnum = rnd(8);
        }
    }
    if (reftype == 57000)
    {
        if (inv(25, ci) != 0)
        {
            if (mode == 6)
            {
                if (rnd(2) == 0)
                {
                    inv(26, ci) = 0;
                }
                else
                {
                    inv(26, ci) = 3 + rnd(3);
                }
            }
            if (inv(26, ci) != 0)
            {
                inv(2, ci) = picfood(inv(26, ci), inv(25, ci) / 1000);
            }
            if (inv(24, ci) == 35)
            {
                inv(27, ci) += gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                    + gdata(10) * 24 * 30 * 12;
            }
        }
    }
    label_1581();
    if (reftype == 60000)
    {
        if (rnd(3) == 0)
        {
            inv(23, ci) = rnd(rnd(12) + 1);
        }
        else
        {
            inv(23, ci) = 0;
        }
    }
    if (mode == 6)
    {
        inv(8, ci) = 3;
    }
    if (reftype == 68000 || reftype == 69000 || inv(3, ci) == 622
        || inv(3, ci) == 724 || inv(3, ci) == 730 || inv(3, ci) == 615)
    {
        inv(17, ci) = 0;
        inv(8, ci) = 3;
    }
    if (reftype == 92000)
    {
        inv(8, ci) = 3;
        inv(17, ci) = 0;
        itemmemory(0, inv(3, ci)) = 1;
    }
    if (reftype == 62000 || reftype == 64000 || reftype == 77000)
    {
        inv(17, ci) = 0;
    }
    if (mode != 6)
    {
        if (reftype < 50000)
        {
            if (rnd(sdata(162, 0) + 1) > 5)
            {
                inv(8, ci) = 2;
            }
        }
    }
    label_1583();
    itemturn(ci);
    if (initnum != 0)
    {
        inv(0, ci) = initnum;
    }
    if (nostack == 1)
    {
        nostack = 0;
    }
    else
    {
        item_stack(val, ci);
        if (stat == 1)
        {
            ci = ti;
            stat = 1;
            return stat;
        }
    }
    if (val == -1)
    {
        cell_refresh(inv(5, ci), inv(6, ci));
    }
    stat = 1;
    return stat;
}
void label_1583()
{
    if (reftype == 60000)
    {
        if (inv(23, ci) != 0)
        {
            inv(1, ci) = inv(1, ci) * (80 + inv(23, ci) * 20) / 100;
        }
    }
    return;
}
void lovemiracle(int prm_932)
{
    if (rnd(2) || prm_932 == 0)
    {
        return;
    }
    cibk = ci;
    txtmore();
    txtef(9);
    txt(lang(u8"「あ…！」"s, cnvtalk(u8"Uh...!"s)));
    flt();
    if (rnd(2))
    {
        itemcreate(-1, 573, cdata(1, prm_932), cdata(2, prm_932), 0);
        if (stat)
        {
            inv(23, ci) = cdata(27, prm_932);
            inv(7, ci) = cdata(20, prm_932) * 10 + 250;
            inv(1, ci) = limit(
                cdata(20, prm_932) * cdata(20, prm_932) / 10000, 200, 40000);
        }
    }
    else
    {
        itemcreate(-1, 574, cdata(1, prm_932), cdata(2, prm_932), 0);
        if (stat)
        {
            inv(23, ci) = cdata(27, prm_932);
        }
    }
    ci = cibk;
    snd(107);
    animeload(15, prm_932);
    return;
}
void label_1586()
{
    if (cbit(14, cc) == 1)
    {
        txtmore();
        txt(lang(
            u8"しかし、"s + name(cc) + u8"は何ともなかった。"s,
            u8"But "s + name(cc) + your(cc) + u8" stomach isn't affected."s));
        return;
    }
    fdmax = 0;
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 10;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 11;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 17;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 16;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 12;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 13;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 14;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    if (fdmax < 10)
    {
        fdlist(0, fdmax) = 15;
        fdlist(1, fdmax) = -100;
        ++fdmax;
    }
    nutrition = 1000;
    dmgcon(cc, 3, 100);
    dmgcon(cc, 5, 200);
    return;
}
void label_1587()
{
    snd(25);
    item_separate(ci);
    s = itemname(ci);
    p = rnd(sdata(184, cc) + 6) + rnd((inv(25, cooktool) / 50 + 1));
    if (p > sdata(184, cc) / 5 + 7)
    {
        p = sdata(184, cc) / 5 + 7;
    }
    p = rnd(p + 1);
    if (p > 3)
    {
        p = rnd(p);
    }
    if (sdata(184, cc) >= 5)
    {
        if (p < 3)
        {
            if (rnd(4) == 0)
            {
                p = 3;
            }
        }
    }
    if (sdata(184, cc) >= 10)
    {
        if (p < 3)
        {
            if (rnd(3) == 0)
            {
                p = 3;
            }
        }
    }
    p += inv(25, cooktool) / 100;
    if (p > 9)
    {
        p = 9;
    }
    if (p < 1)
    {
        p = 1;
    }
    make_dish(ci, p);
    txt(lang(
        itemname(cooktool) + u8"で"s + s + u8"を料理して、"s + itemname(ci, 1)
            + u8"を作った。"s,
        u8"You cook "s + s + u8" with "s + itemname(cooktool, 1)
            + u8" and make "s + itemname(ci, 1) + u8"."s));
    r1 = inv(26, ci);
    if (r1 > 2)
    {
        skillexp(184, cc, 30 + r1 * 5);
    }
    label_1521();
    return;
}
void label_1588()
{
    tc = cc;
    DIM3(fdlist, 2, 10);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (fdmax); cnt < cnt_end; ++cnt)
        {
            fdlist(0, cnt) = 0;
            fdlist(1, cnt) = 0;
        }
    }
    nutrition = 2500;
    if (refitem(inv(3, ci), 10) == 1)
    {
        nutrition += 2500;
    }
    fdmax = 0;
    i = inv(25, ci) / 1000;
    if (i == 1)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 30;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 40;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        nutrition = 3500;
    }
    if (i == 8)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 20;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 20;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 20;
            ++fdmax;
        }
        nutrition = 2000;
    }
    if (i == 2)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        nutrition = 2000;
    }
    if (i == 3)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 20;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 30;
            ++fdmax;
        }
        nutrition = 1500;
    }
    if (i == 7)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 25;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 25;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 25;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 25;
            ++fdmax;
        }
        nutrition = 2800;
    }
    if (i == 4)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 40;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 30;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 30;
            ++fdmax;
        }
        nutrition = 1500;
    }
    if (i == 6)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 40;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 40;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 20;
            ++fdmax;
        }
        nutrition = 3000;
    }
    if (i == 5)
    {
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 60;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 40;
            ++fdmax;
        }
        nutrition = 3500;
    }
    nutrition = nutrition * (100 + inv(26, ci) * 15) / 100;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (fdmax); cnt < cnt_end; ++cnt)
        {
            if (fdlist(1, cnt) > 0)
            {
                if (inv(26, ci) < 3)
                {
                    fdlist(1, cnt) = fdlist(1, cnt) / 2;
                }
                else
                {
                    fdlist(1, cnt) =
                        fdlist(1, cnt) * (50 + inv(26, ci) * 20) / 100;
                }
            }
            else
            {
                if (inv(26, ci) < 3)
                {
                    fdlist(1, cnt) =
                        fdlist(1, cnt) * ((3 - inv(26, ci)) * 100 + 100) / 100;
                }
                else
                {
                    fdlist(1, cnt) = fdlist(1, cnt) * 100 / (inv(26, ci) * 50);
                }
            }
        }
    }
    if (cc == 0)
    {
        p = inv(25, ci) / 1000;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (cc == 0)
                {
                    if (trait(41))
                    {
                        if (inv(3, ci) == 204)
                        {
                            s = refchara_str(inv(23, ci), 8);
                            if (instr(s, 0, u8"/man/"s) != -1)
                            {
                                txt(lang(u8"ウマイ！"s, u8"Delicious!"s));
                                break;
                            }
                        }
                    }
                }
                if (inv(24, ci) == 35)
                {
                    if (inv(27, ci) < 0)
                    {
                        txt(lang(
                            u8"うげっ！腐ったものを食べてしまった…うわ…"s,
                            u8"Ugh! Rotten food!"s));
                        break;
                    }
                }
                if (inv(26, ci) == 0)
                {
                    if (p == 1)
                    {
                        txt(lang(u8"生肉だ…"s, u8"Ugh...Raw meat..."s));
                        break;
                    }
                    if (p == 7)
                    {
                        txt(lang(
                            u8"粉の味がする…"s,
                            u8"It tastes like...powder..."s));
                        break;
                    }
                    if (p == 5)
                    {
                        txt(lang(
                            u8"生で食べるものじゃないな…"s,
                            u8"Er...this needs to be cooked."s));
                        break;
                    }
                    txt(lang(
                            u8"まずいわけではないが…"s,
                            u8"It doesn't taste awful but..."s),
                        lang(u8"平凡な味だ。"s, u8"Very boring food."s));
                    break;
                }
                if (inv(26, ci) < 3)
                {
                    txt(lang(
                            u8"うぅ…腹を壊しそうだ。"s,
                            u8"Boy, it gives your stomach trouble!"s),
                        lang(u8"まずい！"s, u8"Ugh! Yuk!"s),
                        lang(u8"ひどい味だ！"s, u8"Awful taste!!"s));
                    break;
                }
                if (inv(26, ci) < 5)
                {
                    txt(lang(
                            u8"まあまあの味だ。"s,
                            u8"Uh-uh, the taste is so so."s),
                        lang(u8"悪くない味だ。"s, u8"The taste is not bad."s));
                    break;
                }
                if (inv(26, ci) < 7)
                {
                    txt(lang(u8"かなりいける。"s, u8"It tasted good."s),
                        lang(u8"それなりに美味しかった。"s, u8"Decent meal."s));
                    break;
                }
                if (inv(26, ci) < 9)
                {
                    txt(lang(u8"美味しい！"s, u8"Delicious!"s),
                        lang(u8"これはいける！"s, u8"Gee what a good taste!"s),
                        lang(u8"いい味だ！"s, u8"It tasted pretty good!"s));
                    break;
                }
                txt(lang(u8"最高に美味しい！"s, u8"Wow! Terrific food!"s),
                    lang(u8"まさに絶品だ！"s, u8"Yummy! Absolutely yummy!"s),
                    lang(
                        u8"天にも昇る味だ！"s,
                        u8"It tasted like seventh heaven!"s));
            }
        }
    }
    else
    {
        if (inv(24, ci) == 35)
        {
            if (inv(27, ci) < 0)
            {
                txt(lang(
                    name(cc) + u8"は渋い顔をした。"s,
                    name(cc) + u8" looks glum."s));
            }
        }
    }
    if (inv(3, ci) == 425)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 100;
            ++fdmax;
        }
        nutrition = 2500;
        if (cc == 0)
        {
            txtmore();
            txtef(2);
            txt(lang(
                u8"このハーブは活力の源だ。"s,
                u8"This herb invigorates you."s));
        }
    }
    if (inv(3, ci) == 422)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 900;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 700;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        nutrition = 500;
        modgrowth(cc, 10, 2);
        modgrowth(cc, 11, 2);
        if (cc == 0)
        {
            txtmore();
            txtef(2);
            txt(lang(
                u8"新たな力が湧きあがってくる。"s,
                u8"You feel might coming through your body."s));
        }
    }
    if (inv(3, ci) == 423)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 800;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 800;
            ++fdmax;
        }
        nutrition = 500;
        modgrowth(cc, 16, 2);
        modgrowth(cc, 15, 2);
        if (cc == 0)
        {
            txtmore();
            txtef(2);
            txt(lang(
                u8"魔力の向上を感じる。"s,
                u8"You feel magical power springs up inside you."s));
        }
    }
    if (inv(3, ci) == 424)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 750;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 800;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        modgrowth(cc, 12, 2);
        modgrowth(cc, 13, 2);
        nutrition = 500;
        if (cc == 0)
        {
            txtmore();
            txtef(2);
            txt(lang(
                u8"感覚が研ぎ澄まされるようだ。"s,
                u8"You feel as your sense is sharpened."s));
        }
    }
    if (inv(3, ci) == 426)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 850;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 700;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 10;
            ++fdmax;
        }
        nutrition = 500;
        modgrowth(cc, 17, 2);
        modgrowth(cc, 14, 2);
        if (cc == 0)
        {
            txtmore();
            txtef(2);
            txt(lang(
                u8"ホルモンが活発化した。"s,
                u8"Your hormones are activated."s));
        }
    }
    if (inv(3, ci) == 427)
    {
        fdmax = 0;
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 10;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 11;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 17;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 16;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 12;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 13;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 14;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        if (fdmax < 10)
        {
            fdlist(0, fdmax) = 15;
            fdlist(1, fdmax) = 50;
            ++fdmax;
        }
        nutrition = 20000;
    }
    if (inv(3, ci) == 738)
    {
        nutrition = 750;
    }
    if (cc == 0)
    {
        if (inv(24, ci) == 35)
        {
            if (inv(27, ci) < 0)
            {
                label_1586();
            }
        }
    }
    if (inv(3, ci) == 204)
    {
        s = refchara_str(inv(23, ci), 8);
        if (cc == 0)
        {
            if (instr(s, 0, u8"/man/"s) != -1)
            {
                if (trait(41))
                {
                    txt(lang(
                        u8"これはあなたの大好きな人肉だ！"s,
                        u8"It's your favorite human flesh!"s));
                }
                else
                {
                    txt(lang(
                        u8"これは人肉だ…うぇぇ！"s,
                        u8"Eeeek! It's human flesh!"s));
                    txtmore();
                    dmgsan(cc, 15);
                    dmgcon(cc, 11, 150);
                    if (trait(41) == 0)
                    {
                        if (rnd(5) == 0)
                        {
                            tid = 41;
                            traitmode = 0;
                            label_0042();
                            txtef(2);
                            txt(traitrefn(0));
                            trait(41) = 1;
                        }
                    }
                }
            }
            else
            {
                if (trait(41))
                {
                    txt(lang(
                        u8"人肉の方が好みだが…"s,
                        u8"You would've rather eaten human flesh."s));
                    nutrition = nutrition * 2 / 3;
                }
            }
        }
    }
    if (inv(3, ci) == 204
        || (inv(3, ci) == 571 || inv(3, ci) == 573) && rnd(3) == 0)
    {
        dbmode = 12;
        dbid = inv(23, ci);
        label_2299();
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (fdmax); cnt < cnt_end; ++cnt)
        {
            i = 100;
            if (cdata(22, cc) >= 5000)
            {
                p = (cdata(22, cc) - 5000) / 25;
                i = i * 100 / (100 + p);
            }
            if (cc != 0)
            {
                i = 1500;
                if (inv(24, ci) == 35)
                {
                    if (inv(27, ci) < 0)
                    {
                        i = 500;
                    }
                }
            }
            if (i > 0)
            {
                skillexp(fdlist(0, cnt), cc, fdlist(1, cnt) * i / 100);
            }
        }
    }
    if (inv(17, ci) >= 1)
    {
        nutrition = nutrition * 150 / 100;
    }
    if (inv(17, ci) <= -1)
    {
        nutrition = nutrition * 50 / 100;
    }
    if (nutrition >= 3000)
    {
        if (rnd(10) == 0 || cdata(22, cc) >= 12000)
        {
            modweight(cc, rnd(3) + 1, cdata(22, cc) >= 12000);
        }
    }
    cdata(22, cc) += nutrition;
    if (cdata(27, cc) == 261)
    {
        if (nutrition >= 2000)
        {
            cibk = ci;
            flt(calcobjlv(cdata(38, cc)));
            flttypeminor = 58500;
            itemcreate(-1, 0, cdata(1, cc), cdata(2, cc), 0);
            txtef(9);
            txtmore();
            txt(lang(
                u8"「げふぅ」"s + name(cc) + u8"は"s + itemname(ci, 1)
                    + u8"を吐き出した。"s,
                u8"「Ugh-Ughu」 "s + name(cc) + u8" spews up "s
                    + itemname(ci, 1) + u8"."s));
            ci = cibk;
        }
    }
    if (inv(3, ci) == 204)
    {
        if (inv(23, ci) == 319)
        {
            txtef(2);
            txt(lang(
                name(cc) + u8"は進化した。"s,
                name(cc) + u8" evolve"s + _s(cc) + u8"."s));
            if (rnd(sorg(2, cc) * sorg(2, cc) + 1) < 2000)
            {
                skillmod(2, cc, 1000);
            }
            if (rnd(sorg(3, cc) * sorg(3, cc) + 1) < 2000)
            {
                skillmod(3, cc, 1000);
            }
            {
                int cnt = 100;
                for (int cnt_end = cnt + (300); cnt < cnt_end; ++cnt)
                {
                    if (sdataref(0, cnt) == 0 || sorg(cnt, cc) == 0)
                    {
                        continue;
                    }
                    modgrowth(cc, cnt, rnd(10) + 1);
                }
            }
        }
    }
    if (inv(3, ci) == 755)
    {
        txt(lang(u8"これは縁起がいい！"s, u8"The food is a charm!"s));
        skillmod(19, cc, 2000);
    }
    if (inv(3, ci) == 702)
    {
        skillmod(19, cc, 1000);
    }
    if (inv(3, ci) == 639)
    {
        skillmod(19, cc, 20000);
    }
    if (inv(3, ci) == 655)
    {
        skillmod(2, cc, 3000);
    }
    if (inv(3, ci) == 662)
    {
        skillmod(3, cc, 3000);
    }
    if (inv(3, ci) == 738)
    {
        if (cc < 16)
        {
            txt(lang(
                name(cc) + u8"はクッキーの中のおみくじを読んだ。"s,
                name(cc) + u8" read"s + _s(cc) + u8" the paper fortune."s));
            valn = u8"%COOKIE2"s;
            label_0175();
            if (inv(17, ci) >= 1 || inv(17, ci) == 0 && rnd(2))
            {
                valn = u8"%COOKIE1"s;
                label_0175();
            }
            txtef(5);
            txt(""s + buff);
        }
    }
    if (inv(3, ci) == 667)
    {
        txtmore();
        txt(lang(
            name(cc) + u8"の心はすこし癒された。"s,
            name(cc) + your(cc) + u8" heart is warmed."s));
        healsan(cc, 30);
    }
    if (ibit(14, ci) == 1)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"これは毒されている！"s + name(cc)
                    + u8"はもがき苦しみのたうちまわった！"s,
                u8"It's poisoned! "s + name(cc) + u8" writhe"s + _s(cc)
                    + u8" in agony!"s));
            txt(lang(u8"「ギャァァ…！」"s, cnvtalk(u8"Gyaaaaa...!"s)),
                lang(u8"「ブッ！」"s, cnvtalk(u8"Ugh!"s)));
        }
        dmghp(cc, rnd(250) + 250, -4);
        if (cdata(0, cc) != 1)
        {
            if (cc != 0)
            {
                if (cdata(9, cc) >= 0)
                {
                    modkarma(0, -1);
                }
            }
            return;
        }
    }
    if (ibit(6, ci) == 1)
    {
        if (cc == 0)
        {
            txt(lang(u8"あなたは興奮した！"s, u8"You are excited!"s));
        }
        else
        {
            txtef(9);
            txt(name(cc)
                    + lang(
                          u8"「なんだか…変な気分なの…」"s,
                          (u8" gasps, "s
                           + cnvtalk(u8"I f-feel...strange..."s))),
                name(cc)
                    + lang(
                          u8"「あれ…なにこの感じは…」"s,
                          (u8"gasps "s
                           + cnvtalk(u8"Uh..uh..What is this feeling..."s))));
            cdata(79, cc) = 317;
            modimp(cc, 30);
            modkarma(0, -10);
            lovemiracle(cc);
        }
        dmgcon(cc, 7, 500);
        cdata(79, cc) = 317;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            if (inv(40 + cnt * 2, ci) == 0)
            {
                break;
            }
            enc = inv(40 + cnt * 2, ci);
            if (enc == 36)
            {
                p = rnd(inv((40 + cnt * 2 + 1), ci) / 50 + 1) + 1;
                healsp(cc, p);
                continue;
            }
            if (enc == 38)
            {
                p = rnd(inv((40 + cnt * 2 + 1), ci) / 25 + 1) + 1;
                healmp(cc, p / 5);
                continue;
            }
            if (enc == 37)
            {
                evadd(18, cc);
                continue;
            }
            if (enc == 40)
            {
                if (gdata(801) == 0)
                {
                    txtef(9);
                    txt(lang(
                        name(cc) + u8"は時を止めた。"s,
                        name(cc) + u8" stop"s + _s(cc) + u8" time."s));
                    gdata(801) = inv((40 + cnt * 2 + 1), ci) / 100 + 1 + 1;
                    continue;
                }
            }
            enc2 = enc / 10000;
            if (enc2 != 0)
            {
                enc = enc % 10000;
                if (enc2 == 1)
                {
                    skillexp(
                        enc,
                        cc,
                        (inv((40 + cnt * 2 + 1), ci) / 50 + 1) * 100
                            * (1 + (cc != 0) * 5));
                    if (synccheck(cc, -1))
                    {
                        if (inv(40 + cnt * 2 + 1, ci) >= 0)
                        {
                            txt(lang(
                                name(cc) + u8"の"s + skillname(enc)
                                    + u8"は発達した。"s,
                                name(cc) + his(cc) + u8" "s + skillname(enc)
                                    + u8" develops."s));
                        }
                        else
                        {
                            txt(lang(
                                name(cc) + u8"の"s + skillname(enc)
                                    + u8"は衰えた。"s,
                                name(cc) + his(cc) + u8" "s + skillname(enc)
                                    + u8" deteriorates."s));
                        }
                    }
                    continue;
                }
                if (enc2 == 6)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            name(cc) + u8"の"s + skillname(enc)
                                + u8"は成長期に突入した。"s,
                            name(cc) + his(cc) + u8" "s + skillname(enc)
                                + u8" enters a period of rapid growth."s));
                    }
                    addbuff(
                        cc,
                        20 + (enc - 10),
                        (inv((40 + cnt * 2 + 1), ci) / 50 + 1) * 5
                            * (1 + (cc != 0) * 2),
                        2000);
                    continue;
                }
            }
        }
    }
    eatstatus(inv(17, cieat), cc);
    return;
}
void label_1589()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            u8"まるで鉄のように硬い！"s + name(cc) + u8"の胃は悲鳴をあげた。"s,
            u8"It's too hard! "s + name(cc) + your(cc)
                + u8" stomach screams."s));
    }
    dmgcon(cc, 7, 200);
    return;
}
void label_1590()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            u8"気が変になりそうな味だ。"s,
            u8"It tastes really, really strange."s));
    }
    dmgsan(cc, 25);
    dmgcon(cc, 11, 500);
    return;
}
void label_1591()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"馬肉だ！これは精がつきそうだ。"s,
            u8"A horsemeat! It's nourishing"s));
    }
    skillexp(11, cc, 100);
    return;
}
void label_1592()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            name(cc) + u8"は神聖なものを汚した気がした。"s,
            name(cc) + u8" feel"s + _s(cc) + u8" as "s + he(cc) + u8" "s
                + have(cc) + u8" been corrupted."s));
    }
    if (rnd(5) == 0)
    {
        resistmod(cc, 53, 50);
    }
    return;
}
void label_1593()
{
    if (synccheck(cc, -1))
    {
        txt(lang(u8"＠を食べるなんて…"s, u8"You dare to eat @..."s));
    }
    return;
}
void label_1594()
{
    if (cc != 0)
    {
        return;
    }
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(u8"ガード達はあなたを憎悪した。"s, u8"Guards hate you."s));
    }
    modkarma(cc, -15);
    return;
}
void label_1595()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            name(cc) + u8"の体は一瞬燃え上がった。"s,
            name(cc) + your(cc) + u8" body burns up for a second."s));
    }
    resistmod(cc, 50, 100);
    return;
}
void label_1596()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            name(cc) + u8"の胃は狂気で満たされた。"s, u8"Sheer madness!"s));
    }
    resistmod(cc, 54, 50);
    dmgsan(cc, 200);
    dmgcon(cc, 11, 1000);
    return;
}
void label_1597()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"肌がつるつるになりそうだ。"s,
            name(cc) + your(cc) + u8" skin becomes smooth."s));
    }
    skillexp(17, cc, 150);
    return;
}
void label_1598()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            name(cc) + u8"は恋をしている気分になった！"s,
            name(cc) + u8" feel"s + _s(cc) + u8" love!"s));
    }
    skillexp(17, cc, 400);
    return;
}
void label_1599()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(u8"これは有毒だ！"s, u8"Argh! It's poisonous!"s));
    }
    dmgcon(cc, 1, 100);
    return;
}
void label_1600()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"血が沸き立つようだ。"s,
            u8"A troll meat. This must be good for your body."s));
    }
    skillexp(154, cc, 200);
    return;
}
void label_1601()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            u8"腐ってるなんて分かりきっていたのに…うげぇ"s,
            u8"Of course, it's rotten! Urgh..."s));
    }
    label_1586();
    return;
}
void label_1602()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(u8"力が湧いてくるようだ。"s, u8"Mighty taste!"s));
    }
    skillexp(10, cc, 250);
    return;
}
void label_1603()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"微かな魔力の刺激を感じた。"s,
            name(cc) + u8" "s + is(cc) + u8" magically stimulated."s));
    }
    skillexp(155, cc, 500);
    return;
}
void label_1604()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            u8"胃の調子がおかしい…"s,
            u8"Something is wrong with "s + name(cc) + your(cc)
                + u8" stomach..."s));
    }
    dmgcon(cc, 5, 200);
    return;
}
void label_1605()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"この肉は心を落ち着かせる効果があるようだ。"s,
            u8"Eating this brings "s + name(cc) + u8" inner peace."s));
    }
    healsan(cc, 20);
    return;
}
void label_1606()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            name(cc) + u8"の胃は狂気で満たされた。"s, u8"Sheer madness!"s));
    }
    dmgsan(cc, 50);
    if (rnd(5) == 0)
    {
        resistmod(cc, 54, 50);
    }
    return;
}
void label_1607()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            name(cc) + u8"の胃は混沌で満たされた。"s,
            name(cc) + u8" "s + is(cc) + u8" shaken by a chaotic power."s));
    }
    dmgcon(cc, 5, 300);
    return;
}
void label_1608()
{
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            name(cc) + u8"の神経に電流が走った。"s,
            name(cc) + your(cc) + u8" nerve is damaged."s));
    }
    dmgcon(cc, 3, 300);
    return;
}
void label_1609()
{
    if (cc != 0)
    {
        return;
    }
    if (synccheck(cc, -1))
    {
        txt(lang(u8"猫を食べるなんて！！"s, u8"How can you eat a cat!!"s));
    }
    modkarma(0, -5);
    return;
}
void label_1610()
{
    if (cc != 0)
    {
        return;
    }
    if (synccheck(cc, -1))
    {
        txtef(8);
        txt(lang(
            name(cc) + u8"の体内はエーテルで満たされた。"s,
            u8"Ether corrupts your body."s));
    }
    modcorrupt(1000);
    return;
}
void label_1611()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"体力がつきそうだ。"s,
            u8"This food is good for your endurance."s));
    }
    return;
}
void label_1612()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"魔力が鍛えられる。"s, u8"This food is good for your magic."s));
    }
    return;
}
void label_1613()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"力がつきそうだ。"s, u8"This food is good for your strength."s));
    }
    return;
}
void label_1614()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"精神が少しずぶとくなった。"s,
            u8"This food is good for your will power."s));
    }
    return;
}
void label_1615()
{
    if (synccheck(cc, -1))
    {
        txtef(2);
        txt(lang(
            u8"ワアーォ、"s + name(cc) + u8"は速くなった気がする！"s,
            u8"Wow, "s + name(cc) + u8" speed"s + _s(cc) + u8" up!"s));
    }
    skillexp(
        18, cc, limit(2500 - sdata(18, cc) * sdata(18, cc) / 10, 20, 2500));
    return;
}
void label_1616()
{
    if (synccheck(cc, -1))
    {
        txt(lang(
            u8"何かが"s + name(cc) + u8"の体内に入り込んだ。"s,
            u8"Something gets into "s + name(cc) + your(cc) + u8" body."s));
    }
    tc = cc;
    label_1617();
    return;
}
void label_1617()
{
    if (encfind(tc, 48) != -1)
    {
        if (synccheck(tc, -1))
        {
            txt(lang(
                u8"しかしすぐに吐き出した。"s,
                u8"But "s + he(tc) + u8" puke"s + _s(tc)
                    + u8" it out quickly."s));
        }
        return;
    }
    if (cbit(978, tc) == 0)
    {
        txtef(5);
        txt(lang(
            name(tc) + u8"は寄生された。"s,
            name(tc) + u8" get"s + _s(tc) + u8" pregnant."s));
        animeload(8, tc);
        cbitmod(978, tc, 1);
    }
    return;
}
void label_1618()
{
    tile_trap = 234;
    tile_doorclosed = 726;
    tile_doorclosed2 = 728;
    tile_doorclosed3 = 730;
    tile_doorclosed4 = 733;
    tile_dooropen = 236;
    tile_downstairs = 231;
    tile_upstairs = 232;
    tile_hidden = 0;
    tile_downlocked = 237;
    tile_re = 238;
    tile_plant = 247;
    tile_board = 727;
    tile_votebox = 729;
    tile_townboard = 732;
    DIM3(cellobjdata, 5, 50);
    SDIM3(cellobjname, 20, 50);
    maxobjid = 0;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed;
    cellobjdata(2, maxobjid) = 99;
    cellobjdata(3, maxobjid) = tile_doorclosed;
    cellobjname(maxobjid) = u8"dummy"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed;
    cellobjdata(2, maxobjid) = 99;
    cellobjdata(3, maxobjid) = tile_doorclosed;
    cellobjname(maxobjid) = u8"扉99"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_doorclosed;
    cellobjname(maxobjid) = u8"扉0"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 14;
    cellobjdata(1, maxobjid) = tile_trap;
    cellobjdata(2, maxobjid) = 100;
    cellobjdata(3, maxobjid) = 0;
    cellobjname(maxobjid) = u8"罠"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 14;
    cellobjdata(1, maxobjid) = tile_trap;
    cellobjdata(2, maxobjid) = 100;
    cellobjdata(3, maxobjid) = 0;
    cellobjname(maxobjid) = u8"罠"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 10;
    cellobjdata(1, maxobjid) = tile_upstairs;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_upstairs;
    cellobjname(maxobjid) = u8"昇り階段"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 11;
    cellobjdata(1, maxobjid) = tile_downstairs;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_downstairs;
    cellobjname(maxobjid) = u8"降り階段"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed2;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_doorclosed2;
    cellobjname(maxobjid) = u8"扉SF"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 23;
    cellobjdata(1, maxobjid) = tile_board;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_board;
    cellobjname(maxobjid) = u8"掲示板"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 31;
    cellobjdata(1, maxobjid) = tile_votebox;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_votebox;
    cellobjname(maxobjid) = u8"投票箱"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 32;
    cellobjdata(1, maxobjid) = tile_trap;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = 0;
    cellobjname(maxobjid) = u8"メダル"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed3;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_doorclosed3;
    cellobjname(maxobjid) = u8"扉JP"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 33;
    cellobjdata(1, maxobjid) = tile_townboard;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_townboard;
    cellobjname(maxobjid) = u8"街掲示板"s;
    ++maxobjid;
    cellobjdata(0, maxobjid) = 21;
    cellobjdata(1, maxobjid) = tile_doorclosed4;
    cellobjdata(2, maxobjid) = 0;
    cellobjdata(3, maxobjid) = tile_doorclosed4;
    cellobjname(maxobjid) = u8"扉JAIL"s;
    ++maxobjid;
    return;
}
void map_converttile()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    if (map(x, y, 0) == 0)
                    {
                        map(x, y, 0) = tile_default
                            + (rnd(tile_default(2)) == 0)
                                * rnd(tile_default(1));
                        continue;
                    }
                    if (map(x, y, 0) >= 100)
                    {
                        map(x, y, 0) = tile_tunnel
                            + (rnd(tile_tunnel(2)) == 0) * rnd(tile_tunnel(1));
                        continue;
                    }
                    if (map(x, y, 0) == 1)
                    {
                        map(x, y, 0) = tile_wall
                            + (rnd(tile_wall(2)) == 0) * rnd(tile_wall(1));
                        continue;
                    }
                    if (map(x, y, 0) == 3)
                    {
                        map(x, y, 0) = tile_room
                            + (rnd(tile_room(2)) == 0) * rnd(tile_room(1));
                        continue;
                    }
                    if (map(x, y, 0) == 4)
                    {
                        map(x, y, 0) = tile_default
                            + (rnd(tile_default(2)) == 0)
                                * rnd(tile_default(1));
                        continue;
                    }
                }
            }
        }
    }
    return;
}
void map_tileset(int prm_933)
{
    tile_doorclosed = 726;
    tile_dooropen = 236;
    tile_trans = 999;
    tile_dungeon = 133;
    tile_battlesite = 134;
    tile_default(0) = 396;
    tile_default(1) = 1;
    tile_default(2) = 1;
    tile_fog(0) = 531;
    tile_fog(1) = 1;
    tile_fog(2) = 1;
    tile_wall(0) = 462;
    tile_wall(1) = 1;
    tile_wall(2) = 1;
    tile_room(0) = 13;
    tile_room(1) = 1;
    tile_room(2) = 1;
    tile_board = 727;
    tile_votebox = 729;
    tile_townboard = 732;
    tile_tunnel(0) = 33;
    tile_tunnel(1) = 1;
    tile_tunnel(2) = 1;
    tile_pot = 242;
    tile_roomlen = 1;
    if (prm_933 == 12)
    {
        tile_doorclosed = 733;
        tile_dooropen = 265;
    }
    if (prm_933 == 8)
    {
        tile_doorclosed = 728;
        tile_dooropen = 241;
    }
    if (prm_933 == 9)
    {
        tile_doorclosed = 730;
        tile_dooropen = 264;
    }
    if (prm_933 == 3)
    {
        tile_room = 41;
        tile_tunnel = 41;
        tile_wall = 469;
        tile_fog = tile_wall + 66;
    }
    if (prm_933 == 2)
    {
        tile_wall = 462;
        tile_fog = 529;
    }
    if (prm_933 == 10)
    {
        tile_room = 165;
        tile_tunnel(0) = 33;
        tile_tunnel(1) = 4;
        tile_tunnel(2) = 2;
        tile_wall = 469;
        tile_default = 469;
    }
    if (prm_933 == 11)
    {
        tile_default = 465;
        tile_fog = 530;
        tile_tunnel = 212;
        tile_wall = 467;
        tile_room = 203;
    }
    if (prm_933 == 0)
    {
        tile_default = 469;
        tile_fog = 529;
        tile_tunnel(0) = 33;
        tile_tunnel(1) = 4;
        tile_tunnel(2) = 2;
        tile_wall = 469;
        tile_room(0) = 33;
        tile_room(1) = 4;
        tile_room(2) = 2;
    }
    if (prm_933 == 6)
    {
        tile_default = 469;
        tile_fog = 529;
        tile_tunnel(0) = 45;
        tile_tunnel(1) = 3;
        tile_tunnel(2) = 2;
        tile_wall = 469;
        tile_room(0) = 33;
        tile_room(1) = 6;
        tile_room(2) = 3;
    }
    if (prm_933 == 7)
    {
        tile_default = 474;
        tile_fog = 530;
        tile_tunnel = 68;
        tile_wall = 474;
        tile_room(0) = 66;
        tile_room(1) = 2;
        tile_room(2) = 2;
    }
    if (prm_933 == 300)
    {
        tile_default = 475;
        tile_fog = 528;
        tile_tunnel = 0;
        tile_wall = 475;
        tile_room(0) = 0;
        tile_room(1) = 6;
        tile_room(2) = 6;
    }
    if (prm_933 == 100)
    {
        tile_default = 472;
        tile_fog = 530;
        tile_tunnel = 103;
        tile_wall = 473;
        tile_room(0) = 132;
        tile_room(1) = 3;
        tile_room(2) = 2;
    }
    if (prm_933 == 101)
    {
        tile_default = 477;
        tile_fog = 530;
        tile_tunnel = 100;
        tile_wall = 477;
        tile_room = 99;
    }
    if (prm_933 == 200)
    {
        tile_default = 468;
        tile_fog = 531;
        tile_tunnel(0) = 33;
        tile_tunnel(1) = 4;
        tile_tunnel(2) = 2;
        tile_wall = 462;
        tile_room(0) = 119;
        tile_room(1) = 4;
        tile_room(2) = 2;
    }
    if (prm_933 == 1)
    {
        tile_wall = -1;
        tile_fog(0) = 396;
        tile_fog(1) = 4;
        tile_fog(2) = 2;
    }
    if (prm_933 == 4)
    {
        tile_default = 0;
        tile_fog = 528;
        if (4 <= gdata(62) && gdata(62) < 9)
        {
            tile_default = 7;
            tile_fog = 528;
        }
        if (264 <= gdata(62) && gdata(62) < 363)
        {
            tile_default = 12;
        }
        if (9 <= gdata(62) && gdata(62) < 13)
        {
            tile_fog = 528;
            tile_default = 3;
        }
        if (13 <= gdata(62) && gdata(62) < 17)
        {
            tile_fog = 531;
            tile_default = 19;
        }
        if (chipm(0, gdata(62)) == 4)
        {
            tile_fog = 532;
            tile_default = 45;
        }
    }
    return;
}
int dist_town()
{
    int p_at_m165 = 0;
    int y_at_m165 = 0;
    int x_at_m165 = 0;
    int i_at_m165 = 0;
    p_at_m165 = 1000;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y_at_m165 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x_at_m165 = cnt;
                    cell_featread(x_at_m165, y_at_m165);
                    if (adata(0, feat(2)) == 3)
                    {
                        i_at_m165 = dist(
                            cdata(1, 0), cdata(2, 0), x_at_m165, y_at_m165);
                        if (i_at_m165 < p_at_m165)
                        {
                            p_at_m165 = i_at_m165;
                        }
                    }
                }
            }
        }
    }
    stat = p_at_m165;
    return stat;
}
void map_initcustom(const std::string& prm_934)
{
    fmapfile = exedir + u8"map\\"s + prm_934;
    fmode = 5;
    label_2107();
    map_tileset(mdata(12));
    nooracle = 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
        {
            if (cmapdata(0, cnt) == 0)
            {
                continue;
            }
            if (cmapdata(4, cnt) == 0)
            {
                flt();
                itemcreate(
                    -1,
                    cmapdata(0, cnt),
                    cmapdata(1, cnt),
                    cmapdata(2, cnt),
                    0);
                if (stat != 0)
                {
                    inv(21, ci) = cmapdata(3, cnt);
                }
            }
            if (cmapdata(4, cnt) == 1)
            {
                flt();
                characreate(
                    -1, cmapdata(0, cnt), cmapdata(1, cnt), cmapdata(2, cnt));
            }
            if (cmapdata(4, cnt) == 2)
            {
                if (mapupdate)
                {
                    if (cellobjdata(0, cmapdata(0, cnt)) == 32)
                    {
                        continue;
                    }
                }
                cell_featset(
                    cmapdata(1, cnt),
                    cmapdata(2, cnt),
                    cellobjdata(3, cmapdata(0, cnt)),
                    cellobjdata(0, cmapdata(0, cnt)),
                    cmapdata(3, cnt) % 1000,
                    cmapdata(3, cnt) / 1000);
                if (cellobjdata(0, cmapdata(0, cnt)) == 10)
                {
                    mdata(5) = cmapdata(2, cnt) * 1000 + cmapdata(1, cnt);
                }
                if (cellobjdata(0, cmapdata(0, cnt)) == 11)
                {
                    mdata(4) = cmapdata(2, cnt) * 1000 + cmapdata(1, cnt);
                }
            }
        }
    }
    nooracle = 0;
    mdata(15) = 1;
    return;
}
void map_reload(const std::string& prm_935)
{
    int y_at_m166 = 0;
    int x_at_m166 = 0;
    fmapfile = exedir + u8"map\\"s + prm_935;
    fmode = 16;
    label_2107();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y_at_m166 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    map(cnt, y_at_m166, 8) = 0;
                    map(cnt, y_at_m166, 9) = 0;
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
        {
            mef(0, cnt) = 0;
        }
    }
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) > 0)
            {
                if (inv(21, cnt) == 1)
                {
                    if (refitem(inv(3, cnt), 5) == 57000)
                    {
                        inv(0, cnt) = 0;
                        cell_refresh(inv(5, cnt), inv(6, cnt));
                    }
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
        {
            if (cmapdata(0, cnt) == 0)
            {
                continue;
            }
            x_at_m166 = cmapdata(1, cnt);
            y_at_m166 = cmapdata(2, cnt);
            if (cmapdata(4, cnt) == 0)
            {
                if (map(x_at_m166, y_at_m166, 4) == 0)
                {
                    flt();
                    itemcreate(-1, cmapdata(0, cnt), x_at_m166, y_at_m166, 0);
                    if (stat != 0)
                    {
                        inv(21, ci) = cmapdata(3, cnt);
                    }
                }
                cell_refresh(x_at_m166, y_at_m166);
            }
        }
    }
    return;
}
void map_initialize()
{
    if (rdroomnum >= 30)
    {
        rdroomnum = 30;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            roomexist(cnt) = 0;
        }
    }
    DIM4(map, mdata(0), mdata(1), 10);
    DIM3(mapsync, mdata(0), mdata(1));
    DIM3(mef, 9, 200);
    map_tileset(mdata(12));
    return;
}
void map_placecharaonentrance(int prm_936, int prm_937, int prm_938)
{
    int x_at_m167 = 0;
    int y_at_m167 = 0;
    if (prm_937 == 1)
    {
        x_at_m167 = mdata(5) % 1000;
        if (prm_938 != 0)
        {
            x_at_m167 += rnd(prm_938) - rnd(prm_938);
        }
        y_at_m167 = mdata(5) / 1000;
        if (prm_938 != 0)
        {
            y_at_m167 += rnd(prm_938) - rnd(prm_938);
        }
    }
    if (prm_937 == 2)
    {
        x_at_m167 = mdata(4) % 1000;
        if (prm_938 != 0)
        {
            x_at_m167 += rnd(prm_938) - rnd(prm_938);
        }
        y_at_m167 = mdata(4) / 1000;
        if (prm_938 != 0)
        {
            y_at_m167 += rnd(prm_938) - rnd(prm_938);
        }
    }
    if (prm_937 == 3)
    {
        if (gdata(35) == 1)
        {
            x_at_m167 = mdata(0) - 2;
            y_at_m167 = mdata(1) / 2;
            if (gdata(20) == 15)
            {
                y_at_m167 = 22;
            }
            if (gdata(20) == 36)
            {
                x_at_m167 = 58;
                y_at_m167 = 21;
            }
        }
        if (gdata(35) == 2)
        {
            x_at_m167 = 1;
            y_at_m167 = mdata(1) / 2;
            if (gdata(20) == 33)
            {
                y_at_m167 = 3;
            }
            if (gdata(20) == 36)
            {
                x_at_m167 = 25;
                y_at_m167 = 1;
            }
        }
        if (gdata(35) == 3)
        {
            x_at_m167 = mdata(0) / 2;
            y_at_m167 = mdata(1) - 2;
            if (gdata(20) == 15)
            {
                x_at_m167 = 30;
            }
            if (gdata(20) == 33)
            {
                x_at_m167 = 28;
            }
            if (gdata(20) == 36)
            {
                x_at_m167 = 58;
                y_at_m167 = 21;
            }
        }
        if (gdata(35) == 0)
        {
            x_at_m167 = mdata(0) / 2;
            y_at_m167 = 1;
            if (gdata(20) == 33)
            {
                x_at_m167 = 5;
            }
            if (gdata(20) == 36)
            {
                x_at_m167 = 25;
                y_at_m167 = 1;
            }
        }
        if (gdata(20) == 25)
        {
            x_at_m167 = 1;
            y_at_m167 = 14;
        }
        if (gdata(60) != -1)
        {
            x_at_m167 = gdata(60);
            y_at_m167 = gdata(61);
        }
    }
    if (prm_937 == 4)
    {
        x_at_m167 = mdata(0) / 2;
        y_at_m167 = mdata(1) / 2;
    }
    if (prm_937 == 8)
    {
        x_at_m167 = mdata(0) / 2;
        y_at_m167 = mdata(1) - 2;
    }
    if (prm_937 == 5)
    {
        x_at_m167 = rnd(mdata(0) - 5) + 2;
        y_at_m167 = rnd(mdata(1) - 5) + 2;
    }
    if (prm_937 == 6)
    {
        x_at_m167 = gdata(5) + rnd((prm_936 / 5 + 1));
        y_at_m167 = gdata(6) + rnd((prm_936 / 5 + 1));
    }
    if (prm_937 == 7)
    {
        x_at_m167 = mapstartx;
        y_at_m167 = mapstarty;
    }
    cxinit = x_at_m167;
    cyinit = y_at_m167;
    rc = prm_936;
    label_1532();
    return;
}
void map_placearena(int prm_939, int prm_940)
{
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            await();
            x = rnd(7) + 5;
            y = rnd(6) + 6;
            if (prm_940 == 0)
            {
                x += 8;
            }
            cxinit = x;
            cyinit = y;
            rc = prm_939;
            label_1532();
            if (prm_940 == 0)
            {
                if (cdata(1, prm_939) >= 13 && cdata(2, prm_939) >= 6
                    && cdata(1, prm_939) < 20 && cdata(2, prm_939) < 12)
                {
                    break;
                }
            }
            else
            {
                if (cdata(1, prm_939) >= 5 && cdata(2, prm_939) >= 6
                    && cdata(1, prm_939) < 12 && cdata(2, prm_939) < 12)
                {
                    break;
                }
            }
            map(cdata(1, prm_939), cdata(2, prm_939), 1) = 0;
        }
    }
    return;
}
void map_placeplayer()
{
    if (mode == 11)
    {
        return;
    }
    camera = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cnt != 0)
            {
                if (gdata(183) == cnt)
                {
                    cdata(1, gdata(183)) = cdata(1, 0);
                    cdata(2, gdata(183)) = cdata(2, 0);
                    continue;
                }
            }
            if (gdata(20) == 40)
            {
                if (followerin(cnt) == 1)
                {
                    if (camera == 0)
                    {
                        camera = cnt;
                    }
                    map_placearena(cnt, 0);
                    continue;
                }
            }
            if (cdata(80, cnt) == gdata(20))
            {
                if (cnt != 0)
                {
                    cxinit = cdata(171, cnt);
                    cyinit = cdata(172, cnt);
                    rc = cnt;
                    label_1532();
                    continue;
                }
            }
            map_placecharaonentrance(cnt, gdata(26));
        }
    }
    return;
}
void map_randomtile(int prm_941, int prm_942)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(0) * mdata(1) * prm_942 / 100 + 1);
             cnt < cnt_end;
             ++cnt)
        {
            map(rnd(mdata(0)), rnd(mdata(1)), 0) = prm_941;
        }
    }
    return;
}
int map_digcheck(int prm_953, int prm_954)
{
    if (prm_953 < 1 || prm_954 < 1 || prm_953 > mdata(0) - 2
        || prm_954 > mdata(1) - 2)
    {
        stat = 0;
        return stat;
    }
    if (map(prm_953, prm_954, 0) == 100)
    {
        stat = 100;
        return stat;
    }
    stat = map(prm_953, prm_954, 0) == 0;
    return stat;
}
void map_nextdir1(int prm_955, int prm_956)
{
    if (tx_at_m168 >= prm_955 - 4 && tx_at_m168 <= prm_955 + 4)
    {
        if (ty_at_m168 >= prm_956 - 4 && ty_at_m168 <= prm_956 + 4)
        {
            if (tx_at_m168 < prm_955)
            {
                dir_at_m168 = 2;
                if (ty_at_m168 > prm_956)
                {
                    dest_at_m168 = 3;
                }
                else
                {
                    dest_at_m168 = 0;
                }
            }
            if (tx_at_m168 > prm_955)
            {
                dir_at_m168 = 1;
                if (ty_at_m168 > prm_956)
                {
                    dest_at_m168 = 3;
                }
                else
                {
                    dest_at_m168 = 0;
                }
            }
            if (ty_at_m168 < prm_956)
            {
                dir_at_m168 = 0;
                if (tx_at_m168 > prm_955)
                {
                    dest_at_m168 = 1;
                }
                else
                {
                    dest_at_m168 = 2;
                }
            }
            if (ty_at_m168 > prm_956)
            {
                dir_at_m168 = 3;
                if (tx_at_m168 > prm_955)
                {
                    dest_at_m168 = 1;
                }
                else
                {
                    dest_at_m168 = 2;
                }
            }
            return;
        }
    }
    if (dir_at_m168 == 1 || dir_at_m168 == 2)
    {
        if (ty_at_m168 > prm_956)
        {
            dir_at_m168 = 3;
        }
        else
        {
            dir_at_m168 = 0;
        }
        if (tx_at_m168 > prm_955)
        {
            dest_at_m168 = 1;
        }
        else
        {
            dest_at_m168 = 2;
        }
        return;
    }
    else
    {
        if (tx_at_m168 > prm_955)
        {
            dir_at_m168 = 1;
        }
        else
        {
            dir_at_m168 = 2;
        }
        if (ty_at_m168 > prm_956)
        {
            dest_at_m168 = 3;
        }
        else
        {
            dest_at_m168 = 0;
        }
        return;
    }
}
void map_nextdir2(int prm_957, int prm_958)
{
    int p_at_m168 = 0;
    if (dir2_at_m168 != -1)
    {
        if (dir2_at_m168 == 1)
        {
            if (map_digcheck(tx_at_m168 - 1, ty_at_m168))
            {
                if (tx_at_m168 == prm_957)
                {
                    p_at_m168 = dir2_at_m168;
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = p_at_m168;
                }
                else
                {
                    dir_at_m168 = dir2_at_m168;
                    dir2_at_m168 = -1;
                }
            }
        }
        if (dir2_at_m168 == 2)
        {
            if (map_digcheck(tx_at_m168 + 1, ty_at_m168))
            {
                if (tx_at_m168 == prm_957)
                {
                    p_at_m168 = dir2_at_m168;
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = p_at_m168;
                }
                else
                {
                    dir_at_m168 = dir2_at_m168;
                    dir2_at_m168 = -1;
                }
            }
        }
        if (dir2_at_m168 == 3)
        {
            if (map_digcheck(tx_at_m168, ty_at_m168 - 1))
            {
                if (ty_at_m168 == prm_958)
                {
                    p_at_m168 = dir2_at_m168;
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = p_at_m168;
                }
                else
                {
                    dir_at_m168 = dir2_at_m168;
                    dir2_at_m168 = -1;
                }
            }
        }
        if (dir2_at_m168 == 0)
        {
            if (map_digcheck(tx_at_m168, ty_at_m168 + 1))
            {
                if (ty_at_m168 == prm_958)
                {
                    p_at_m168 = dir2_at_m168;
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = p_at_m168;
                }
                else
                {
                    dir_at_m168 = dir2_at_m168;
                    dir2_at_m168 = -1;
                }
            }
        }
    }
    if (dir_at_m168 == 1 || dir_at_m168 == 2)
    {
        if (tx_at_m168 == prm_957)
        {
            if (ty_at_m168 > prm_958)
            {
                if (map_digcheck(tx_at_m168, ty_at_m168 - 1))
                {
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = 3;
                }
            }
            if (ty_at_m168 < prm_958)
            {
                if (map_digcheck(tx_at_m168, ty_at_m168 + 1))
                {
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = 0;
                }
            }
        }
        return;
    }
    else
    {
        if (ty_at_m168 == prm_958)
        {
            if (tx_at_m168 > prm_957)
            {
                if (map_digcheck(tx_at_m168 - 1, ty_at_m168))
                {
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = 1;
                }
            }
            if (tx_at_m168 < prm_957)
            {
                if (map_digcheck(tx_at_m168 + 1, ty_at_m168))
                {
                    dir2_at_m168 = dir_at_m168;
                    dir_at_m168 = 2;
                }
            }
        }
        return;
    }
}
int map_digtoentrance1(
    int prm_959,
    int prm_960,
    int prm_961,
    int prm_962,
    int prm_963)
{
    int f_at_m168 = 0;
    int dx_at_m168 = 0;
    int dy_at_m168 = 0;
    tx_at_m168 = prm_959;
    ty_at_m168 = prm_960;
    dest_at_m168 = -1;
    f_at_m168 = 0;
    if (prm_963 == 1)
    {
        dir2_at_m168 = -1;
        map_nextdir1(prm_961, prm_962);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2000); cnt < cnt_end; ++cnt)
        {
            if (tx_at_m168 == prm_961)
            {
                if (ty_at_m168 + 1 == prm_962 || ty_at_m168 - 1 == prm_962)
                {
                    f_at_m168 = 1;
                    break;
                }
            }
            if (ty_at_m168 == prm_962)
            {
                if (tx_at_m168 + 1 == prm_961 || tx_at_m168 - 1 == prm_961)
                {
                    f_at_m168 = 1;
                    break;
                }
            }
            if (prm_963 == 1)
            {
                map_nextdir2(prm_961, prm_962);
            }
            dx_at_m168 = tx_at_m168;
            dy_at_m168 = ty_at_m168;
            if (dir_at_m168 == 1)
            {
                --dx_at_m168;
            }
            if (dir_at_m168 == 2)
            {
                ++dx_at_m168;
            }
            if (dir_at_m168 == 3)
            {
                --dy_at_m168;
            }
            if (dir_at_m168 == 0)
            {
                ++dy_at_m168;
            }
            if (map_digcheck(dx_at_m168, dy_at_m168))
            {
                tx_at_m168 = dx_at_m168;
                ty_at_m168 = dy_at_m168;
                map(dx_at_m168, dy_at_m168, 0) = 100;
                if (rnd(200) < rdhiddenpath)
                {
                    map(dx_at_m168, dy_at_m168, 0) = 4;
                    cell_featset(dx_at_m168, dy_at_m168, 0, 22);
                }
                if (prm_963 == 0)
                {
                    if (rnd(4) == 0)
                    {
                        map_nextdir1(prm_961, prm_962);
                    }
                }
            }
            else
            {
                if (dest_at_m168 == 1)
                {
                    if (map_digcheck(tx_at_m168 - 1, ty_at_m168))
                    {
                        dir_at_m168 = 1;
                        dest_at_m168 = -2;
                    }
                }
                if (dest_at_m168 == 2)
                {
                    if (map_digcheck(tx_at_m168 + 1, ty_at_m168))
                    {
                        dir_at_m168 = 2;
                        dest_at_m168 = -2;
                    }
                }
                if (dest_at_m168 == 3)
                {
                    if (map_digcheck(tx_at_m168, ty_at_m168 - 1))
                    {
                        dir_at_m168 = 3;
                        dest_at_m168 = -2;
                    }
                }
                if (dest_at_m168 == 0)
                {
                    if (map_digcheck(tx_at_m168, ty_at_m168 + 1))
                    {
                        dir_at_m168 = 0;
                        dest_at_m168 = -2;
                    }
                }
                if (dest_at_m168 == -2)
                {
                    dest_at_m168 = -1;
                    continue;
                }
                if (prm_963 == 0)
                {
                    map_nextdir1(prm_961, prm_962);
                }
                if (prm_963 == 1)
                {
                    map_nextdir1(prm_961, prm_962);
                }
            }
        }
    }
    stat = f_at_m168;
    return stat;
}
void map_setfog(int, int)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    map(x, y, 2) =
                        tile_fog + (rnd(tile_fog(2)) == 0) * rnd(tile_fog(1));
                }
            }
        }
    }
    return;
}
void map_createroomdoor()
{
    if (rdpos == 3 || rdpos == 0)
    {
        p = roomwidth(cr);
    }
    else
    {
        p = roomheight(cr);
    }
    DIM1(rddoorpos);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p - 2); cnt < cnt_end; ++cnt)
        {
            rddoorpos(cnt) = cnt;
        }
    }
    rndshuffle(rddoorpos);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p - 2); cnt < cnt_end; ++cnt)
        {
            if (rdpos == 3)
            {
                x = rddoorpos(cnt) + roomx(cr) + 1;
                y = roomy(cr) + roomheight(cr) - 1;
                p(0) = 0;
                p(1) = 0;
                p(2) = -1;
                p(3) = 1;
            }
            if (rdpos == 0)
            {
                x = rddoorpos(cnt) + roomx(cr) + 1;
                y = roomy(cr);
                p(0) = 0;
                p(1) = 0;
                p(2) = -1;
                p(3) = 1;
            }
            if (rdpos == 1)
            {
                y = rddoorpos(cnt) + roomy(cr) + 1;
                x = roomx(cr) + roomwidth(cr) - 1;
                p(0) = -1;
                p(1) = 1;
                p(2) = 0;
                p(3) = 0;
            }
            if (rdpos == 2)
            {
                y = rddoorpos(cnt) + roomy(cr) + 1;
                x = roomx(cr);
                p(0) = -1;
                p(1) = 1;
                p(2) = 0;
                p(3) = 0;
            }
            f = 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                {
                    dx = x + p(cnt);
                    dy = y + p((cnt + 2));
                    if ((dx >= 0 && dy >= 0 && dx < mdata(0) && dy < mdata(1))
                        == 0)
                    {
                        f = 0;
                        break;
                    }
                    if (map(dx, dy, 0) == 1)
                    {
                        f = 0;
                        break;
                    }
                }
            }
            if (f == 1)
            {
                map(x, y, 0) = 3;
                if (roomdoor != 3)
                {
                    cell_featset(
                        x,
                        y,
                        tile_doorclosed,
                        21,
                        rnd(abs(gdata(22) * 3 / 2) + 1));
                }
                break;
            }
        }
    }
    return;
}
int map_createroom(int prm_966)
{
    if (roomsum >= 30)
    {
        stat = 0;
        return stat;
    }
    if (prm_966 == 0)
    {
        roompos = 0;
        roomwall = 0;
        roomdoor = 0;
    }
    if (prm_966 == 1)
    {
        roompos = 1;
        roomwall = 1;
        roomdoor = 0;
    }
    if (prm_966 == 2)
    {
        roompos = 2;
        roomwall = 1;
        roomdoor = 1;
    }
    if (prm_966 == 3)
    {
        roompos = 3;
        roomwall = 2;
        roomdoor = 3;
    }
    if (prm_966 == 4)
    {
        roompos = 4;
        roomwall = 3;
        roomdoor = 0;
    }
    cr = roomsum;
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            if (roompos == 0)
            {
                roomwidth(cr) = rnd(rdroomsizemax) + rdroomsizemin;
                roomheight(cr) = rnd(rdroomsizemax) + rdroomsizemin;
                roomx(cr) = rnd(mdata(0)) + 2;
                roomy(cr) = rnd(mdata(1)) + 2;
            }
            if (roompos == 1)
            {
                roomwidth(cr) =
                    (rnd(rdroomsizemax) + rdroomsizemin) / 3 * 3 + 5;
                roomheight(cr) =
                    (rnd(rdroomsizemax) + rdroomsizemin) / 3 * 3 + 5;
                roomx(cr) = rnd(mdata(0)) / 3 * 3 + 2;
                roomy(cr) = rnd(mdata(1)) / 3 * 3 + 2;
            }
            if (roompos == 2)
            {
                rdpos = rnd(4);
                if (rdpos == 3 || rdpos == 0)
                {
                    roomx(cr) = rnd(mdata(0) - rdroomsizemin * 3 / 2 - 2)
                        + rdroomsizemin / 2;
                    roomwidth(cr) = rnd(rdroomsizemin) + rdroomsizemin / 2 + 3;
                    roomheight(cr) = rdroomsizemin;
                    if (rdpos == 3)
                    {
                        roomy(cr) = 0;
                    }
                    else
                    {
                        roomy(cr) = mdata(1) - roomheight(cr);
                    }
                }
                if (rdpos == 1 || rdpos == 2)
                {
                    roomy(cr) = rnd(mdata(1) - rdroomsizemin * 3 / 2 - 2)
                        + rdroomsizemin / 2;
                    roomwidth(cr) = rdroomsizemin;
                    roomheight(cr) = rnd(rdroomsizemin) + rdroomsizemin / 2 + 3;
                    if (rdpos == 1)
                    {
                        roomx(cr) = 0;
                    }
                    else
                    {
                        roomx(cr) = mdata(0) - roomwidth(cr);
                    }
                }
            }
            if (roompos == 3)
            {
                roomwidth(cr) = 3;
                roomheight(cr) = 3;
                x = mdata(0) - rdroomsizemin * 2 - roomwidth(cr) - 2 + 1;
                if (x < 1)
                {
                    break;
                }
                y = mdata(1) - rdroomsizemin * 2 - roomheight(cr) - 2 + 1;
                if (y < 1)
                {
                    break;
                }
                roomx(cr) = rdroomsizemin + 1 + rnd(x);
                roomy(cr) = rdroomsizemin + 1 + rnd(y);
            }
            if (roompos == 4)
            {
                roomwidth(cr) = rnd(rdroomsizemax) + rdroomsizemin;
                roomheight(cr) = rnd(rdroomsizemax) + rdroomsizemin;
                roomx(cr) = rnd(mdata(0) - rdroomsizemax - 8) + 3;
                roomy(cr) = rnd(mdata(1) - rdroomsizemax - 8) + 3;
            }
            x = roomx(cr) + roomwidth(cr) - 1;
            y = roomy(cr) + roomheight(cr) - 1;
            if (x >= mdata(0))
            {
                continue;
            }
            if (y >= mdata(1))
            {
                continue;
            }
            if (roompos == 1)
            {
                if (x + 1 >= mdata(0))
                {
                    continue;
                }
                if (y + 1 >= mdata(1))
                {
                    continue;
                }
            }
            if (roompos == 0)
            {
                if (map(x, y, 0) != 3)
                {
                    continue;
                }
            }
            p = 0;
        label_1644_internal:
            if (p >= roomsum)
            {
                goto label_1646_internal;
            }
            if (p == cr)
            {
                goto label_1645_internal;
            }
            x1 = roomx(p) - 1 - roomx(cr);
            x2 = -roomwidth(p) - 2 < x1 && x1 < roomwidth(cr);
            y1 = roomy(p) - 1 - roomy(cr);
            y2 = -roomheight(p) - 2 < y1 && y1 < roomheight(cr);
            if (x2 && y2)
            {
                continue;
            }
        label_1645_internal:
            p += 1;
            goto label_1644_internal;
        label_1646_internal:
            ++roomsum;
            f = 1;
            break;
        }
    }
    if (f == 0)
    {
        stat = 0;
        return stat;
    }
    if (rnd(2) == 0)
    {
        tile(1) = 1 + rnd(2);
    }
    else
    {
        tile(1) = 0;
    }
    if (rnd(2) == 0)
    {
        tile(2) = 1 + rnd(2);
    }
    else
    {
        tile(2) = 0;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (roomheight(cr)); cnt < cnt_end; ++cnt)
        {
            y = roomy(cr) + cnt;
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (roomwidth(cr)); cnt < cnt_end; ++cnt)
                {
                    x = roomx(cr) + cnt;
                    tile = 3;
                    if (roomwall != 0)
                    {
                        if (cnt == 0 || cnt2 == 0 || cnt == roomwidth(cr) - 1
                            || cnt2 == roomheight(cr) - 1)
                        {
                            if (roomwall == 1)
                            {
                                tile = 1;
                            }
                            if (roomwall == 2)
                            {
                                tile = 4;
                            }
                            if (roomwall == 3)
                            {
                                tile = 3;
                                if (tile(1) == 1)
                                {
                                    if (cnt == 0)
                                    {
                                        tile = 1;
                                    }
                                }
                                if (tile(2) == 1)
                                {
                                    if (cnt2 == 0)
                                    {
                                        if (cnt != 0
                                            && cnt != roomwidth(cr) - 1)
                                        {
                                            if (rnd(3))
                                            {
                                                flt();
                                                p(0) = 296;
                                                p(1) = 300;
                                                p(2) = 312;
                                                p(3) = 604;
                                                itemcreate(
                                                    -1, p(rnd(4)), x, y + 1, 0);
                                            }
                                            else
                                            {
                                                if (cnt % 2 == 1)
                                                {
                                                    flt();
                                                    itemcreate(
                                                        -1, 584, x, y + 1, 0);
                                                }
                                            }
                                        }
                                        tile = 1;
                                    }
                                }
                                if (tile(1) == 2)
                                {
                                    if (cnt == roomwidth(cr) - 1)
                                    {
                                        tile = 1;
                                    }
                                }
                                if (tile(2) == 2)
                                {
                                    if (cnt2 == roomheight(cr) - 1)
                                    {
                                        if (rnd(3))
                                        {
                                            flt();
                                            p(0) = 296;
                                            p(1) = 300;
                                            p(2) = 312;
                                            p(3) = 604;
                                            itemcreate(
                                                -1, p(rnd(4)), x, y + 1, 0);
                                        }
                                        else
                                        {
                                            if (cnt % 2 == 1)
                                            {
                                                flt();
                                                itemcreate(
                                                    -1, 584, x, y + 1, 0);
                                            }
                                        }
                                        tile = 1;
                                    }
                                }
                            }
                        }
                    }
                    map(x, y, 0) = tile;
                }
            }
        }
    }
    if (roomdoor == 1)
    {
        map_createroomdoor();
    }
    if (roomdoor == 2 || roomdoor == 3)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
            {
                rdpos = cnt;
                map_createroomdoor();
            }
        }
    }
    stat = 1;
    return stat;
}
int map_placeupstairs(int prm_967, int prm_968)
{
    if (prm_967 == 0)
    {
        x_at_m169 = rnd(roomwidth(cr) - 2) + roomx(cr) + 1;
        y_at_m169 = rnd(roomheight(cr) - 2) + roomy(cr) + 1;
    }
    else
    {
        x_at_m169 = prm_967;
        y_at_m169 = prm_968;
    }
    cell_featset(x_at_m169, y_at_m169, tile_upstairs, 10);
    mdata(5) = y_at_m169 * 1000 + x_at_m169;
    rdroomupstair = cr;
    stat = 1;
    return stat;
}
int map_placedownstairs(int prm_969, int prm_970)
{
    if (gdata(22) >= adata(10, gdata(20)))
    {
        stat = 0;
        return stat;
    }
    if (prm_969 == 0)
    {
        x_at_m169 = rnd(roomwidth(cr) - 2) + roomx(cr) + 1;
        y_at_m169 = rnd(roomheight(cr) - 2) + roomy(cr) + 1;
    }
    else
    {
        x_at_m169 = prm_969;
        y_at_m169 = prm_970;
    }
    cell_featset(x_at_m169, y_at_m169, tile_downstairs, 11);
    mdata(4) = y_at_m169 * 1000 + x_at_m169;
    rdroomdownstair = cr;
    stat = 1;
    return stat;
}
void map_randsite(int prm_971, int prm_972)
{
    int f_at_m169 = 0;
    f_at_m169 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            if (prm_971 == 0)
            {
                x_at_m169 = rnd(mdata(0) - 5) + 2;
                y_at_m169 = rnd(mdata(1) - 5) + 2;
            }
            else
            {
                x_at_m169 = prm_971;
                y_at_m169 = prm_972;
            }
            if ((chipm(7, map(x_at_m169, y_at_m169, 0)) && 4) == 0)
            {
                if (map(x_at_m169, y_at_m169, 6) == 0
                    && map(x_at_m169, y_at_m169, 4) == 0)
                {
                    f_at_m169 = 1;
                    break;
                }
            }
        }
    }
    if (mdata(6) == 1)
    {
        if (264 <= map(x_at_m169, y_at_m169, 0)
                && map(x_at_m169, y_at_m169, 0) < 363
            || 33 <= map(x_at_m169, y_at_m169, 0)
                && map(x_at_m169, y_at_m169, 0) < 66)
        {
            f_at_m169 = 0;
        }
    }
    if (f_at_m169 == 0)
    {
        return;
    }
    if (mdata(6) >= 20 && mdata(6) <= 23)
    {
        if (mdata(3) == 0)
        {
            if (rnd(25) == 0)
            {
                flt();
                itemcreate(-1, 173, x_at_m169, y_at_m169, 0);
                inv(21, ci) = 1;
                return;
            }
            if (rnd(100) == 0)
            {
                flt();
                itemcreate(-1, 172, x_at_m169, y_at_m169, 0);
                inv(21, ci) = 1;
                inv(25, ci) = isetgod(rnd(length(isetgod)));
                return;
            }
        }
    }
    if (mdata(6) >= 20 && mdata(6) <= 23)
    {
        if (rnd(14) == 0)
        {
            cell_featset(x_at_m169, y_at_m169, 243, 27);
            return;
        }
        if (rnd(13) == 0)
        {
            cell_featset(x_at_m169, y_at_m169, 244, 25);
            return;
        }
        if (rnd(12) == 0)
        {
            cell_featset(x_at_m169, y_at_m169, 245, 26);
            return;
        }
        if (rnd(11) == 0)
        {
            cell_featset(x_at_m169, y_at_m169, 246, 28);
            return;
        }
        cell_featset(x_at_m169, y_at_m169, tile_re + rnd(3), 24);
        return;
    }
    if (mdata(6) == 3 || mdata(6) == 2)
    {
        if (rnd(3) == 0)
        {
            flt();
            itemcreate(-1, 631, x_at_m169, y_at_m169, 0);
            return;
        }
        if (rnd(15) == 0)
        {
            flt();
            itemcreate(-1, 55, x_at_m169, y_at_m169, 0);
            return;
        }
        if (rnd(20) == 0)
        {
            flt();
            itemcreate(-1, 284, x_at_m169, y_at_m169, 0);
            return;
        }
        if (rnd(15) == 0)
        {
            flt();
            itemcreate(-1, 283, x_at_m169, y_at_m169, 0);
            return;
        }
        if (rnd(18) == 0)
        {
            flt(calcobjlv(rnd(cdata(38, 0) + 10)), calcfixlv(3));
            flttypemajor = fsetwear(rnd(length(fsetwear)));
            itemcreate(-1, 0, x_at_m169, y_at_m169, 0);
            return;
        }
        flt(10);
        flttypeminor = 64100;
        itemcreate(-1, 0, x_at_m169, y_at_m169, 0);
        return;
    }
    if (mdata(6) == 4)
    {
    }
    return;
}
int map_trap(int prm_973, int prm_974, int, int prm_976)
{
    int trap_at_m170 = 0;
    dx_at_m170 = prm_973;
    dy_at_m170 = prm_974;
    p_at_m170 = 0;
label_1652_internal:
    if (p_at_m170 >= 3)
    {
        label_1653();
        stat = 0;
        return stat;
    }
    if (prm_973 == 0)
    {
        dx_at_m170 = rnd(mdata(0) - 5) + 2;
        dy_at_m170 = rnd(mdata(1) - 5) + 2;
    }
    else
    {
        dx_at_m170 = prm_973;
        dy_at_m170 = prm_974;
    }
    if ((chipm(7, map(dx_at_m170, dy_at_m170, 0)) && 4) == 0)
    {
        if (map(dx_at_m170, dy_at_m170, 6) == 0)
        {
            if (prm_976 == 0)
            {
                trap_at_m170 = rnd(8);
            }
            else
            {
                trap_at_m170 = prm_976;
            }
            if (gdata(22) <= 5)
            {
                if (trap_at_m170 == 6)
                {
                    stat = 0;
                    return stat;
                }
                if (trap_at_m170 == 1)
                {
                    stat = 0;
                    return stat;
                }
                if (trap_at_m170 == 5)
                {
                    stat = 0;
                    return stat;
                }
            }
            if (gdata(22) <= 25)
            {
                if (trap_at_m170 == 7)
                {
                    stat = 0;
                    return stat;
                }
            }
            cell_featset(dx_at_m170, dy_at_m170, 0, 14, trap_at_m170);
            stat = 1;
            return stat;
        }
    }
    p_at_m170 += 1;
    goto label_1652_internal;
}
int label_1653()
{
    stat = 0;
    return stat;
}
int map_web(int prm_977, int prm_978, int prm_979)
{
    dx_at_m170 = prm_977;
    dy_at_m170 = prm_978;
    p_at_m170 = 0;
label_1655_internal:
    if (p_at_m170 >= 3)
    {
        label_1656();
        stat = 0;
        return stat;
    }
    if (prm_977 == 0)
    {
        dx_at_m170 = rnd(mdata(0) - 5) + 2;
        dy_at_m170 = rnd(mdata(1) - 5) + 2;
    }
    else
    {
        dx_at_m170 = prm_977;
        dy_at_m170 = prm_978;
    }
    if ((chipm(7, map(dx_at_m170, dy_at_m170, 0)) && 4) == 0)
    {
        if (map(dx_at_m170, dy_at_m170, 6) == 0)
        {
            addmef(dx_at_m170, dy_at_m170, 1, 11, -1, prm_979);
            stat = 1;
            return stat;
        }
    }
    p_at_m170 += 1;
    goto label_1655_internal;
}
int label_1656()
{
    stat = 0;
    return stat;
}
int map_barrel(int prm_980, int prm_981)
{
    dx_at_m170 = prm_980;
    dy_at_m170 = prm_981;
    p_at_m170 = 0;
label_1658_internal:
    if (p_at_m170 >= 3)
    {
        label_1659();
        stat = 0;
        return stat;
    }
    if (prm_980 == 0)
    {
        dx_at_m170 = rnd(mdata(0) - 5) + 2;
        dy_at_m170 = rnd(mdata(1) - 5) + 2;
    }
    else
    {
        dx_at_m170 = prm_980;
        dy_at_m170 = prm_981;
    }
    if ((chipm(7, map(dx_at_m170, dy_at_m170, 0)) && 4) == 0)
    {
        if (map(dx_at_m170, dy_at_m170, 6) == 0)
        {
            cell_featset(dx_at_m170, dy_at_m170, tile_pot, 30);
            stat = 1;
            return stat;
        }
    }
    p_at_m170 += 1;
    goto label_1658_internal;
}
int label_1659()
{
    stat = 0;
    return stat;
}
int map_connectroom()
{
    cr = 0;
label_1662_internal:
    if (cr >= roomsum - 1)
    {
        label_1663();
        stat = 0;
        return stat;
    }
    p = cr + 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rnd(rdroomentrance + 1) + 1); cnt < cnt_end;
             ++cnt)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                {
                    if (cnt == 0)
                    {
                        p = cr;
                    }
                    else
                    {
                        p = cr + 1;
                    }
                    dir = rnd(4);
                    x = dirxy(0, dir);
                    y = dirxy(1, dir);
                    if (dir == 1)
                    {
                        dx = roomx(p);
                        dy = roomy(p) + rnd((roomheight(p) - 2)) + 1;
                    }
                    if (dir == 2)
                    {
                        dx = roomx(p) + roomwidth(p) - 1;
                        dy = roomy(p) + rnd((roomheight(p) - 2)) + 1;
                    }
                    if (dir == 3)
                    {
                        dx = roomx(p) + rnd((roomwidth(p) - 2)) + 1;
                        dy = roomy(p);
                    }
                    if (dir == 0)
                    {
                        dx = roomx(p) + rnd((roomwidth(p) - 2)) + 1;
                        dy = roomy(p) + roomheight(p) - 1;
                    }
                    if (x != 0)
                    {
                        if (map(dx, dy - 1, 0) == 3 || map(dx, dy + 1, 0) == 3)
                        {
                            --cnt;
                            continue;
                        }
                    }
                    if (y != 0)
                    {
                        if (map(dx - 1, dy, 0) == 3 || map(dx + 1, dy, 0) == 3)
                        {
                            --cnt;
                            continue;
                        }
                    }
                    map(dx, dy, 0) = 3;
                    roomexist(p) = 1;
                    dx += x;
                    dy += y;
                    roomentrancex(p) = dx;
                    roomentrancey(p) = dy;
                    map(dx, dy, 0) = 100;
                    if (cnt == 0)
                    {
                        tx = dx;
                        ty = dy;
                    }
                }
            }
            map_digtoentrance1(tx, ty, dx, dy, 1);
        }
    }
    if (stat == 0)
    {
        roomexist(cr) = 0;
        roomexist(p) = 0;
        stat = 0;
        return stat;
    }
    cr += 1;
    goto label_1662_internal;
}
int label_1663()
{
    stat = 1;
    return stat;
}
void map_makedoor()
{
    cr = 0;
label_1665_internal:
    if (cr >= roomsum)
    {
        label_1666();
        return;
    }
    tx = 0;
    ty = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (roomheight(cr) * 2 + roomwidth(cr) * 2);
             cnt < cnt_end;
             ++cnt)
        {
            if (tx == 0)
            {
                if (cnt != 0)
                {
                    --ty;
                }
            }
            if (ty == roomheight(cr) - 1)
            {
                --tx;
            }
            if (tx == roomwidth(cr) - 1)
            {
                ++ty;
            }
            if (ty == 0)
            {
                ++tx;
            }
            dx = tx + roomx(cr);
            dy = ty + roomy(cr);
            if (map(dx, dy, 0) == 1)
            {
                continue;
            }
            cell_featset(
                dx, dy, tile_doorclosed, 21, rnd(abs(gdata(22) * 3 / 2) + 1));
        }
    }
    cr += 1;
    goto label_1665_internal;
}
void label_1666()
{
    return;
}
void label_16952()
{
label_16951_internal:
    randomize();
    ++rdtry;
    mdata(15) = 0;
    mdata(0) = 34 + rnd(15);
    mdata(1) = 22 + rnd(15);
    mdata(10) = mdata(0) * mdata(1) / 100;
    roomsum = 0;
    rdroomnum = mdata(0) * mdata(1) / 70;
    rdroomsizemin = 3;
    rdroomsizemax = 4;
    rdroomdoor = 80;
    rdroomentrance = 1;
    rdhiddenpath = 20;
    rdval(2) = 2;
    rdtunnel = mdata(0) * mdata(1);
    rdextraroom = 10;
    rdtype = 1;
    if (rnd(30) == 0)
    {
        rdtype = 3;
    }
    if (adata(0, gdata(20)) == 20)
    {
        rdtype = 2;
        if (rnd(4) == 0)
        {
            rdtype = 1;
        }
        if (rnd(6) == 0)
        {
            rdtype = 10;
        }
        if (rnd(10) == 0)
        {
            rdtype = 4;
        }
        if (rnd(25) == 0)
        {
            rdtype = 8;
        }
        if (rnd(20) == 0)
        {
            mdata(12) = 10;
        }
    }
    if (adata(0, gdata(20)) == 22)
    {
        rdtype = 2;
        if (rnd(6) == 0)
        {
            rdtype = 1;
        }
        if (rnd(6) == 0)
        {
            rdtype = 10;
        }
        if (rnd(25) == 0)
        {
            rdtype = 8;
        }
        if (rnd(20) == 0)
        {
            rdtype = 4;
        }
    }
    if (adata(0, gdata(20)) == 21)
    {
        rdtype = 1;
        if (rnd(5) == 0)
        {
            rdtype = 4;
        }
        if (rnd(10) == 0)
        {
            rdtype = 3;
        }
        if (rnd(25) == 0)
        {
            rdtype = 2;
        }
        if (rnd(40) == 0)
        {
            mdata(12) = 10;
        }
    }
    if (adata(0, gdata(20)) == 23)
    {
        rdtype = 1;
        if (rnd(5) == 0)
        {
            rdtype = 4;
        }
        if (rnd(6) == 0)
        {
            rdtype = 5;
        }
        if (rnd(7) == 0)
        {
            rdtype = 2;
        }
        if (rnd(40) == 0)
        {
            mdata(12) = 10;
        }
    }
    if (adata(16, gdata(20)) == 3)
    {
        mdata(10) += gdata(22) / 2;
        mdata(12) = 101;
        if (rnd(20) == 0)
        {
            mdata(12) = 10;
        }
        if (gdata(22) < 35)
        {
            mdata(12) = 0;
        }
        if (gdata(22) < 20)
        {
            mdata(12) = 100;
        }
        if (gdata(22) < 10)
        {
            mdata(12) = 200;
        }
        if (gdata(22) < 5)
        {
            mdata(12) = 0;
        }
        rdtype = 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (gdata(22) == 1)
                {
                    rdtype = 2;
                    break;
                }
                if (gdata(22) == 5)
                {
                    rdtype = 5;
                    break;
                }
                if (gdata(22) == 10)
                {
                    rdtype = 3;
                    break;
                }
                if (gdata(22) == 15)
                {
                    rdtype = 5;
                    break;
                }
                if (gdata(22) == 20)
                {
                    rdtype = 3;
                    break;
                }
                if (gdata(22) == 25)
                {
                    rdtype = 5;
                    break;
                }
                if (gdata(22) == 30)
                {
                    rdtype = 3;
                    break;
                }
                if (gdata(22) < 30)
                {
                    if (rnd(4) == 0)
                    {
                        rdtype = 2;
                    }
                }
                if (rnd(5) == 0)
                {
                    rdtype = 4;
                }
                if (rnd(20) == 0)
                {
                    rdtype = 8;
                }
                if (rnd(6) == 0)
                {
                    rdtype = 10;
                }
            }
        }
    }
    if (adata(16, gdata(20)) == 16)
    {
        mdata(10) += gdata(22) / 2;
        mdata(12) = 7;
        rdtype = 1;
    }
    if (adata(16, gdata(20)) == 17)
    {
        mdata(10) += gdata(22) / 2;
        mdata(12) = 0;
        rdtype = 1;
    }
    if (adata(16, gdata(20)) == 18)
    {
        mdata(10) += gdata(22) / 2;
        mdata(12) = 200;
        rdtype = 1;
    }
    if (adata(16, gdata(20)) == 26)
    {
        rdtype = 8;
    }
    if (adata(16, gdata(20)) == 27)
    {
        rdtype = 10;
    }
    if (adata(16, gdata(20)) == 38)
    {
        rdtype = 9;
    }
    if (adata(16, gdata(20)) == 13)
    {
        if (gdata(70) == 1001)
        {
            mdata(12) = 300;
            mdata(0) = 28 + rnd(6);
            mdata(1) = 20 + rnd(6);
            rdtype = 6;
        }
        if (gdata(70) == 1009)
        {
            label_1703();
            return;
        }
        if (gdata(70) == 1006)
        {
            label_1697();
            return;
        }
        if (gdata(70) == 1008)
        {
            label_1704();
            return;
        }
        if (gdata(70) == 1010)
        {
            label_1704();
            return;
        }
    }
    if (rdtype == 2)
    {
        label_1701();
    }
    if (rdtype == 1)
    {
        label_1698();
    }
    if (rdtype == 4)
    {
        label_1699();
    }
    if (rdtype == 5)
    {
        label_1700();
    }
    if (rdtype == 3)
    {
        label_1702();
    }
    if (rdtype == 6)
    {
        mdata(14) = 2;
        label_1696();
        return;
    }
    if (rdtype == 8)
    {
        label_1705();
    }
    if (rdtype == 10)
    {
        _mclass = 5 + rnd(4);
        _bold = 2;
        label_1710();
    }
    if (rdtype == 9)
    {
        _mclass = 12;
        _bold = 2;
        label_1708();
    }
    if (stat == 0)
    {
        goto label_16951_internal;
    }
    map_converttile();
    map_placeplayer();
    rdmonsterhouse = 0;
    rdcreaturepack = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (roomsum); cnt < cnt_end; ++cnt)
        {
            rx = roomx(cnt) + 1;
            rw = roomwidth(cnt) - 2;
            ry = roomy(cnt) + 1;
            rh = roomheight(cnt) - 2;
            rdsize = rw * rh;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (rnd(rdsize / 8 + 2)); cnt < cnt_end;
                     ++cnt)
                {
                    if (rnd(2) == 0)
                    {
                        flt(calcobjlv(gdata(22)), calcfixlv(2));
                        flttypemajor = fltsetdungeon();
                        itemcreate(-1, 0, rnd(rw) + rx, rnd(rh) + ry, 0);
                    }
                    label_1735();
                    characreate(-1, 0, rnd(rw) + rx, rnd(rh) + ry);
                    if (stat == 1)
                    {
                        if (gdata(22) > 3)
                        {
                            if (creaturepack != 0)
                            {
                                if (rnd(rdcreaturepack * 5 + 5) == 0)
                                {
                                    ++rdcreaturepack;
                                    {
                                        int cnt = 0;
                                        for (int cnt_end = cnt + (10 + rnd(20));
                                             cnt < cnt_end;
                                             ++cnt)
                                        {
                                            flt(cdata(38, rc), calcfixlv(2));
                                            flttypemajor = creaturepack;
                                            characreate(
                                                -1,
                                                0,
                                                rnd(rw) + rx,
                                                rnd(rh) + ry);
                                        }
                                    }
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            if (cnt == rdroomdownstair)
            {
                continue;
            }
            if (cnt == rdroomupstair)
            {
                continue;
            }
            if (rdmonsterhouse == 0 || rdtype == 2)
            {
                if (rnd(8) == 0)
                {
                    if (rw * rh < 40)
                    {
                        ++rdmonsterhouse;
                        {
                            int cnt = ry;
                            for (int cnt_end = cnt + (rh); cnt < cnt_end; ++cnt)
                            {
                                rdy3 = cnt;
                                {
                                    int cnt = rx;
                                    for (int cnt_end = cnt + (rw);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        rdx3 = cnt;
                                        label_1735();
                                        characreate(-1, 0, rdx3, rdy3);
                                    }
                                }
                            }
                        }
                        if (rdtype != 2)
                        {
                            {
                                int cnt = 0;
                                for (int cnt_end = cnt + (rnd(3) + 1);
                                     cnt < cnt_end;
                                     ++cnt)
                                {
                                    flt();
                                    flttypemajor = 72000;
                                    itemcreate(
                                        -1, 0, rnd(rw) + rx, rnd(rh) + ry, 0);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    mobdensity = mdata(10) / 4;
    itemdensity = mdata(10) / 4;
    if (rdtype == 3)
    {
        flt();
        flttypemajor = fsetwear(rnd(length(fsetwear)));
        fixlv = 4;
        itemcreate(-1, 0, -1, -1, 0);
        mobdensity = mdata(10) / 2;
        itemdensity = mdata(10) / 3;
    }
    if (rdtype == 8)
    {
        mobdensity = mdata(10) / 4;
        itemdensity = mdata(10) / 10;
    }
    if (rdtype == 10)
    {
        mobdensity = mdata(10) / 3;
        itemdensity = mdata(10) / 6;
    }
    if (rdtype == 9)
    {
        mobdensity = mdata(10) / 3;
        itemdensity = mdata(10) / 10;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mobdensity); cnt < cnt_end; ++cnt)
        {
            label_1735();
            characreate(-1, 0, -3, 0);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (itemdensity); cnt < cnt_end; ++cnt)
        {
            flt(calcobjlv(gdata(22)), calcfixlv(2));
            flttypemajor = fltsetdungeon();
            itemcreate(-1, 0, -1, -1, 0);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rnd(mdata(0) * mdata(1) / 80)); cnt < cnt_end;
             ++cnt)
        {
            map_trap(0, 0, gdata(22));
        }
    }
    if (rnd(5) == 0)
    {
        p = rnd(mdata(0) * mdata(1) / 40);
        if (rnd(5) == 0)
        {
            p = rnd(mdata(0) * mdata(1) / 5);
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
            {
                map_web(0, 0, gdata(22) * 10 + 100);
            }
        }
    }
    if (rnd(4) == 0)
    {
        p = limit(rnd(mdata(0) * mdata(1) / 500 + 1) + 1, 3, 15);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
            {
                map_barrel(0, 0);
            }
        }
    }
    if (mdata(7) == 1)
    {
        if (rnd(15 + gdata(810) * 2) == 0)
        {
            flt();
            characreate(-1, 318, -3, 0);
        }
    }
    if (adata(16, gdata(20)) == 3)
    {
        if (gdata(22) == 3 || gdata(22) == 17 || gdata(22) == 25
            || gdata(22) == 44)
        {
            x = mdata(4) % 1000;
            y = mdata(4) / 1000;
            cell_featset(x, y, tile_downlocked, 11);
        }
    }
    return;
}
void label_1696()
{
    map_initialize();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    map(cnt, p, 0) = 3;
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rnd(mdata(0) * mdata(1) / 30)); cnt < cnt_end;
             ++cnt)
        {
            x = rnd(mdata(0));
            y = rnd(mdata(1));
            map(x, y, 0) = 1;
        }
    }
    if (gdata(66) == 33)
    {
        tile_room(0) = 45;
        tile_room(1) = 6;
    }
    map_converttile();
    map_placeplayer();
    mdata(10) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10 + rnd(6)); cnt < cnt_end; ++cnt)
        {
            label_1735();
            characreate(-1, 0, -3, 0);
            if (stat != 0)
            {
                cdata(9, rc) = -3;
                cdata(69, rc) = -3;
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10 + rnd(10)); cnt < cnt_end; ++cnt)
        {
            flt();
            flttypemajor = 80000;
            itemcreate(-1, 0, -1, -1, 0);
            inv(21, ci) = 1;
        }
    }
    return;
}
int label_1697()
{
    gdata(84) = 120;
    gdata(87) = 9999;
    mdata(14) = 2;
    mdata(12) = 4;
    mdata(0) = 58 + rnd(16);
    mdata(1) = 50 + rnd(16);
    map_initialize();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    map(cnt, p, 0) = tile_default
                        + (rnd(tile_default(2)) == 0) * rnd(tile_default(1));
                }
            }
        }
    }
    mdatan(0) = u8"街周辺の畑"s;
    map_randomtile(9, 10);
    map_randomtile(10, 10);
    map_randomtile(0, 30);
    map_randomtile(1, 4);
    map_randomtile(4, 2);
    map_randomtile(3, 2);
    map_randomtile(4, 2);
    map_randomtile(5, 2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            w = rnd(5) + 5;
            h = rnd(4) + 4;
            dx = rnd(mdata(0));
            dy = rnd(mdata(1));
            if (rnd(2))
            {
                tile = 30;
            }
            else
            {
                tile = 31;
            }
            size = limit(dist(dx, dy, mdata(0) / 2, mdata(1) / 2) / 8, 0, 8);
            crop = isetcrop(rnd(length(isetcrop)));
            {
                int cnt = dy;
                for (int cnt_end = cnt + (h); cnt < cnt_end; ++cnt)
                {
                    y = cnt;
                    if (y >= mdata(1))
                    {
                        break;
                    }
                    {
                        int cnt = dx;
                        for (int cnt_end = cnt + (w); cnt < cnt_end; ++cnt)
                        {
                            x = cnt;
                            if (x >= mdata(0))
                            {
                                break;
                            }
                            map(x, y, 0) = tile;
                            if (rnd(10) != 0 || map(x, y, 4) != 0)
                            {
                                continue;
                            }
                            if (rnd(4))
                            {
                                dbid = crop;
                            }
                            else
                            {
                                dbid = isetcrop(rnd(length(isetcrop)));
                            }
                            flt();
                            itemcreate(-1, dbid, x, y, 0);
                            inv(21, ci) = 4;
                            p = limit(size + rnd((rnd(4) + 1)), 0, 9);
                            inv(7, ci) = inv(7, ci) * (80 + p * p * 100) / 100;
                            inv(23, ci) = p;
                        }
                    }
                }
            }
        }
    }
    gdata(26) = 7;
    mapstartx = rnd(mdata(0) / 3) + mdata(0) / 3;
    mapstarty = rnd(mdata(1) / 3) + mdata(1) / 3;
    map_placeplayer();
    flt();
    itemcreate(-1, 560, cdata(1, 0) + 1, cdata(2, 0), 0);
    inv(21, ci) = 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (70 + rnd(20)); cnt < cnt_end; ++cnt)
        {
            x = rnd(mdata(0));
            y = rnd(mdata(1));
            if (map(x, y, 0) != 30 && map(x, y, 0) != 31)
            {
                if (map(x, y, 4) == 0)
                {
                    if (rnd(8))
                    {
                        flt();
                        flttypemajor = 80000;
                        itemcreate(-1, 0, x, y, 0);
                        inv(21, ci) = 1;
                    }
                    else
                    {
                        cell_featset(x, y, tile_pot, 30);
                    }
                }
            }
        }
    }
    mdata(10) = 15;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            label_1735();
            characreate(-1, 0, -3, 0);
        }
    }
    stat = 1;
    return stat;
}
int label_1698()
{
    map_initialize();
    map_createroom(1);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placeupstairs();
    map_createroom(1);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placedownstairs();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdroomnum); cnt < cnt_end; ++cnt)
        {
            map_createroom(1);
        }
    }
    map_connectroom();
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_makedoor();
    stat = 1;
    return stat;
}
int label_1699()
{
    rdroomsizemin = 8;
    map_initialize();
    p = rdroomsizemin - 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    map(x, y, 0) = 1;
                    if (x > p && y > p && x + 1 < mdata(0) - p
                        && y + 1 < mdata(1) - p)
                    {
                        map(x, y, 0) = 100;
                    }
                }
            }
        }
    }
    map_createroom(2);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placeupstairs();
    map_createroom(2);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placedownstairs();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdroomnum); cnt < cnt_end; ++cnt)
        {
            map_createroom(2);
        }
    }
    if (rnd(2) == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (rdroomnum / 4 + 1); cnt < cnt_end; ++cnt)
            {
                map_createroom(3);
            }
        }
    }
    else
    {
        p = rdroomsizemin + 1 + rnd(3);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (mdata(1) - p * 2); cnt < cnt_end; ++cnt)
            {
                y = p + cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (mdata(0) - p * 2); cnt < cnt_end;
                         ++cnt)
                    {
                        x = p + cnt;
                        map(x, y, 0) = 1;
                    }
                }
            }
        }
    }
    stat = 1;
    return stat;
}
int label_1700()
{
    rdroomsizemin = 8;
    mdata(0) = 48 + rnd(20);
    mdata(1) = 22;
    mdata(10) = mdata(0) * mdata(1) / 20;
    map_initialize();
    p = rdroomsizemin - 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    map(x, y, 0) = 1;
                    if (x > p && y > p && x + 1 < mdata(0) - p
                        && y + 1 < mdata(1) - p)
                    {
                        map(x, y, 0) = 100;
                    }
                }
            }
        }
    }
    map_createroom(2);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placeupstairs();
    map_createroom(2);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placedownstairs();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdroomnum); cnt < cnt_end; ++cnt)
        {
            map_createroom(2);
        }
    }
    if (rnd(2) == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (rdroomnum / 4 + 1); cnt < cnt_end; ++cnt)
            {
                map_createroom(3);
            }
        }
    }
    else
    {
        p = rdroomsizemin + 1 + rnd(3);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (mdata(1) - p * 2); cnt < cnt_end; ++cnt)
            {
                y = p + cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (mdata(0) - p * 2); cnt < cnt_end;
                         ++cnt)
                    {
                        x = p + cnt;
                        map(x, y, 0) = 1;
                    }
                }
            }
        }
    }
    stat = 1;
    return stat;
}
int label_1701()
{
    rdroomsizemax = 3;
    map_initialize();
    dx = mdata(0) / 2;
    dy = mdata(1) / 2;
    map(dx, dy, 0) = 3;
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdtunnel); cnt < cnt_end; ++cnt)
        {
            if (rnd(rdval(2)) == 0)
            {
                p = rnd(4);
            }
            if (p == 2)
            {
                ++dx;
                if (dx > mdata(0) - 2)
                {
                    p = 0;
                    dx = mdata(0) - 2;
                }
            }
            if (p == 1)
            {
                --dx;
                if (dx < 1)
                {
                    p = 3;
                    dx = 1;
                }
            }
            if (p == 0)
            {
                ++dy;
                if (dy > mdata(1) - 2)
                {
                    p = 1;
                    dy = mdata(1) - 2;
                }
            }
            if (p == 3)
            {
                --dy;
                if (dy < 1)
                {
                    p = 2;
                    dy = 1;
                }
            }
            map(dx, dy, 0) = 3;
        }
    }
    map_createroom();
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placeupstairs();
    map_createroom();
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    map_placedownstairs();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdroomnum); cnt < cnt_end; ++cnt)
        {
            map_createroom(0);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdextraroom); cnt < cnt_end; ++cnt)
        {
            p = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
                {
                    x = rnd(mdata(0));
                    y = rnd(mdata(1));
                    if (map(x, y, 0) == 3)
                    {
                        dx = rnd(rdroomsizemax) + rdroomsizemin;
                        dy = rnd(rdroomsizemax) + rdroomsizemin;
                        rx = rnd(dx);
                        ry = rnd(dy);
                        if (x > 1 && y > 1 && x + dx < mdata(0) - 2
                            && y + dy < mdata(1) - 2)
                        {
                            p = 1;
                            break;
                        }
                    }
                }
            }
            if (p == 0)
            {
                continue;
            }
            dy = y;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (ry); cnt < cnt_end; ++cnt)
                {
                    dx = x;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (rx); cnt < cnt_end; ++cnt)
                        {
                            map(dx, dy, 0) = 3;
                            ++dx;
                        }
                    }
                    ++dy;
                }
            }
        }
    }
    stat = 1;
    return stat;
}
int label_1702()
{
    mdata(0) = 48 + rnd(20);
    mdata(1) = 22;
    mdata(10) = mdata(0) * mdata(1) / 20;
    map_initialize();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    if (x == 0 || y == 0 || x + 1 == mdata(0)
                        || y + 1 == mdata(1))
                    {
                        continue;
                    }
                    map(x, y, 0) = 3;
                }
            }
        }
    }
    p(0) = rnd(mdata(0) / 2) + 2;
    p(1) = rnd(mdata(0) / 2) + mdata(0) / 2 - 2;
    if (rnd(2) == 0)
    {
        p(2) = p;
        p = p(1);
        p(1) = p(2);
    }
    map_placeupstairs(p, rnd(mdata(1) - 4) + 2);
    map_placedownstairs(p(1), rnd(mdata(1) - 4) + 2);
    stat = 1;
    return stat;
}
int label_1703()
{
    gdata(84) = 60;
    gdata(87) = 9999;
    rdroomsizemin = 5;
    mdatan(0) = lang(u8"パーティー場"s, u8"Party Room"s);
    mdata(14) = 1;
    mdata(12) = 11;
    mdata(0) = 38;
    mdata(1) = 28;
    map_initialize();
    rdroomnum = 80;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    if (x == 0 || y == 0 || x + 1 == mdata(0)
                        || y + 1 == mdata(1))
                    {
                        continue;
                    }
                    map(x, y, 0) = 100;
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (rdroomnum); cnt < cnt_end; ++cnt)
        {
            map_createroom(4);
        }
    }
    map_converttile();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            dx = rnd(mdata(0) - 5);
            dy = rnd(mdata(1) - 5);
            p(0) = 1;
            p(1) = 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                {
                    y = dy + cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                        {
                            x = dx + cnt;
                            if (map(x, y, 0) != tile_tunnel
                                || map(x, y, 4) != 0)
                            {
                                p(0) = 0;
                            }
                            if (map(x, y, 0) != tile_room || map(x, y, 4) != 0)
                            {
                                p(1) = 0;
                            }
                        }
                    }
                }
            }
            if (p(0) == 1)
            {
                n = rnd(5);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                    {
                        y = dy + cnt;
                        cnt2 = cnt;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                            {
                                x = dx + cnt;
                                if (n < 2)
                                {
                                    if (cnt != 0 && cnt != 3 && cnt2 != 0
                                        && cnt2 != 3)
                                    {
                                        map(x, y, 0) = 473;
                                    }
                                }
                                if (n == 2)
                                {
                                    if (cnt == 3 || cnt2 == 3)
                                    {
                                        break;
                                    }
                                    if (cnt == 1 && cnt2 == 1)
                                    {
                                        map(x, y, 0) = 664;
                                    }
                                    else
                                    {
                                        map(x, y, 0) = 206;
                                        flt();
                                        itemcreate(-1, 91, x, y, 0);
                                    }
                                }
                                if (n == 3)
                                {
                                    if (cnt == 1 && cnt2 == 1)
                                    {
                                        map(x, y, 0) = 204;
                                        flt();
                                        itemcreate(-1, 585, x, y, 0);
                                    }
                                }
                                if (n == 4)
                                {
                                    if (cnt == 1 && cnt2 == 1)
                                    {
                                        flt();
                                        map(x, y, 0) = 69;
                                        itemcreate(-1, 138, x, y, 0);
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (p(1) == 1)
            {
                flt();
                itemcreate(-1, 83, dx + 1, dy + 1, 0);
                if (rnd(2))
                {
                    flt();
                    itemcreate(-1, 92, dx + 1, dy, 0);
                }
                if (rnd(2))
                {
                    flt();
                    itemcreate(-1, 92, dx + 1, dy + 2, 0);
                }
                if (rnd(2))
                {
                    flt();
                    itemcreate(-1, 92, dx, dy + 1, 0);
                }
                if (rnd(2))
                {
                    flt();
                    itemcreate(-1, 92, dx + 2, dy + 1, 0);
                }
            }
        }
    }
    list(0, 0) = 171;
    list(1, 0) = 9;
    list(2, 0) = 36;
    list(0, 1) = 269;
    list(1, 1) = 273;
    list(2, 1) = 35;
    list(0, 2) = 269;
    list(1, 2) = 174;
    list(2, 2) = 8;
    list(0, 3) = 174;
    list(1, 3) = 16;
    list(2, 3) = 239;
    list(0, 4) = 16;
    list(1, 4) = 185;
    list(2, 4) = 41;
    list(0, 5) = 185;
    list(1, 5) = 274;
    list(2, 5) = 184;
    list(0, 6) = 274;
    list(1, 6) = 272;
    list(2, 6) = 70;
    list(0, 7) = 272;
    list(1, 7) = 38;
    list(2, 7) = 1;
    list(0, 8) = 38;
    list(1, 8) = 206;
    list(2, 8) = 72;
    list(0, 9) = 206;
    list(1, 9) = 73;
    list(2, 9) = 69;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (roomsum); cnt < cnt_end; ++cnt)
        {
            rx = roomx(cnt) + 1;
            rw = roomwidth(cnt) - 2;
            ry = roomy(cnt) + 1;
            rh = roomheight(cnt) - 2;
            rdsize = rw * rh;
            roomdiff = limit(rnd(qdata(5, gdata(72)) / 3 + 3), 0, 9);
            if (rnd(2) == 0)
            {
                x = rnd(rw) + rx;
                y = rnd(rh) + ry;
                if (map(x, y, 4) == 0)
                {
                    flt();
                    itemcreate(-1, 88, x, y, 0);
                }
            }
            if (rnd(3) == 0)
            {
                x = rnd(rw) + rx;
                y = rnd(rh) + ry;
                if (map(x, y, 4) == 0)
                {
                    flt();
                    itemcreate(-1, 313, x, y, 0);
                }
            }
            if (rnd(2) == 0)
            {
                x = rnd(rw) + rx;
                y = rnd(rh) + ry;
                if (map(x, y, 4) == 0)
                {
                    flt();
                    itemcreate(-1, 156, x, y, 0);
                }
            }
            if (rnd(3) == 0)
            {
                x = rnd(rw) + rx;
                y = rnd(rh) + ry;
                if (map(x, y, 4) == 0)
                {
                    flt();
                    itemcreate(-1, 606, x, y, 0);
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (rnd(rdsize / 5 + 2) + rdsize / 5 + 3);
                     cnt < cnt_end;
                     ++cnt)
                {
                    flt(roomdiff * 5, calcfixlv(2));
                    initlv = roomdiff * 7 + rnd(5);
                    dbid = list(rnd(3), roomdiff);
                    characreate(-1, dbid, rnd(rw) + rx, rnd(rh) + ry);
                    cdata(150, rc) = 3;
                    cdata(9, rc) = -1;
                    cdata(69, rc) = -1;
                    cdata(30, rc) = cdata(38, rc) * (20 + rnd(20));
                }
            }
        }
    }
    gdata(26) = 7;
    mapstartx = rnd(mdata(0) / 3) + mdata(0) / 3;
    mapstarty = rnd(mdata(1) / 3) + mdata(1) / 3;
    map_placeplayer();
    mdata(10) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (25 + rnd(10)); cnt < cnt_end; ++cnt)
        {
            x = rnd(mdata(0));
            y = rnd(mdata(1));
            if (map(x, y, 4) != 0 || chipm(7, map(x, y, 0)) && 4)
            {
                continue;
            }
            flt();
            p(0) = 217;
            p(1) = 218;
            p(2) = 216;
            p(3) = 215;
            p(4) = 215;
            p(5) = 152;
            p(6) = 152;
            p(7) = 91;
            p(8) = 189;
            itemcreate(-1, p(rnd(9)), x, y, 0);
        }
    }
    flt();
    characreate(-1, 29, -3, 0);
    cdata(150, rc) = 3;
    cdata(9, rc) = -1;
    cdata(69, rc) = -1;
    flt();
    characreate(-1, 231, -3, 0);
    cdata(150, rc) = 3;
    cdata(9, rc) = -1;
    cdata(69, rc) = -1;
    flt();
    characreate(-1, 31, -3, 0);
    cdata(150, rc) = 3;
    cdata(9, rc) = -1;
    cdata(69, rc) = -1;
    flt();
    characreate(-1, 247, -3, 0);
    cdata(150, rc) = 3;
    cdata(9, rc) = -1;
    cdata(69, rc) = -1;
    if (rnd(10) == 0)
    {
        flt();
        characreate(-1, 34, -3, 0);
        cdata(150, rc) = 3;
        cdata(9, rc) = -1;
        cdata(69, rc) = -1;
    }
    if (rnd(10) == 0)
    {
        flt();
        characreate(-1, 28, -3, 0);
        cdata(150, rc) = 3;
        cdata(9, rc) = -1;
        cdata(69, rc) = -1;
    }
    if (rnd(10) == 0)
    {
        flt();
        characreate(-1, 223, -3, 0);
        cdata(150, rc) = 3;
        cdata(9, rc) = -1;
        cdata(69, rc) = -1;
    }
    if (rnd(10) == 0)
    {
        flt();
        characreate(-1, 252, -3, 0);
        cdata(150, rc) = 3;
        cdata(9, rc) = -1;
        cdata(69, rc) = -1;
    }
    if (rnd(10) == 0)
    {
        flt();
        characreate(-1, 322, -3, 0);
        cdata(150, rc) = 3;
        cdata(9, rc) = -1;
        cdata(69, rc) = -1;
    }
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) > 0)
            {
                inv(21, cnt) = 1;
            }
        }
    }
    stat = 1;
    return stat;
}
void label_1704()
{
    mdata(10) = 0;
    mdata(14) = 2;
    map_initcustom(mapfile(gdata(66)));
    mdatan(0) = lang(u8"市街地"s, u8"Urban Area"s);
    randomize();
    gdata(26) = 5;
    map_placeplayer();
    mdata(15) = 0;
    if (gdata(70) == 1008)
    {
        gdata(84) = 720;
        gdata(87) = 9999;
        flt();
        initlv = qdata(5, gdata(72));
        fixlv = 5;
        characreate(-1, qdata(12, gdata(72)), -3, 0);
        cdata(9, rc) = -3;
        cdata(69, rc) = -3;
        qdata(13, gdata(72)) = rc;
    }
    if (gdata(70) == 1010)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6 + rnd(4)); cnt < cnt_end; ++cnt)
            {
                flt();
                initlv = qdata(5, gdata(72)) * 3 / 2;
                fixlv = 1;
                characreate(-1, qdata(12, gdata(72)), -3, 0);
                cdata(9, rc) = -3;
                cdata(69, rc) = -3;
            }
        }
    }
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            f = 0;
            if (inv(3, cnt) == 109 || inv(3, cnt) == 173)
            {
                inv(25, cnt) = -10;
            }
            if (inv(3, cnt) == 241)
            {
                inv(25, cnt) = 0;
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    map(x, y, 6) = 0;
                }
            }
        }
    }
    return;
}
void label_1705()
{
    mdata(0) = 30;
    mdata(1) = 60 + rnd(60);
    mdata(10) = mdata(0) * mdata(1) / 20;
    map_initialize();
    w = 6;
    dx = mdata(0) / 2 - w / 2;
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1) - 4); cnt < cnt_end; ++cnt)
        {
            y = 2 + cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (w); cnt < cnt_end; ++cnt)
                {
                    x = cnt + dx;
                    map(x, y, 0) = 100;
                }
            }
            if (p <= 0)
            {
                if (rnd(2))
                {
                    p = rnd(12);
                }
            }
            if (rnd(2))
            {
                if (w > 4)
                {
                    w -= rnd(2);
                }
            }
            if (p > 0)
            {
                if (p < 5)
                {
                    if (w > 3)
                    {
                        w -= rnd(2);
                        --p;
                    }
                }
                if (p > 4)
                {
                    if (w < 10)
                    {
                        ++w;
                        --p;
                    }
                }
            }
            if (dx > 1)
            {
                dx -= rnd(2);
            }
            if (dx + w < mdata(0) - 1)
            {
                dx += rnd(2);
            }
            if (dx + w > mdata(0))
            {
                w = mdata(0) - dx;
            }
        }
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            x = rnd(mdata(0));
            y = rnd(15);
            if (map(x, y, 0) == 100)
            {
                map_placeupstairs(x, y);
                break;
            }
        }
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            x = rnd(mdata(0));
            y = mdata(1) - rnd(15) - 1;
            if (map(x, y, 0) == 100)
            {
                map_placedownstairs(x, y);
                break;
            }
        }
    }
    return;
}
void dimmix(elona_vector1<int>& prm_983)
{
    int mx_at_m172 = 0;
    int r_at_m172 = 0;
    mx_at_m172 = length(prm_983);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mx_at_m172); cnt < cnt_end; ++cnt)
        {
            r_at_m172 = cnt + rnd((mx_at_m172 - cnt));
            tmp_at_m172 = prm_983(r_at_m172);
            prm_983(r_at_m172) = prm_983(cnt);
            prm_983(cnt) = tmp_at_m172;
        }
    }
    return;
}
void label_1708()
{
    mdata(0) = _mclass * (_bold * 2) - _bold + 8;
    mdata(1) = mdata(0);
    mdata(10) = mdata(0) * mdata(1) / 12;
    map_initialize();
    label_1709();
    rdsecond = 1;
    label_1709();
    rdsecond = 0;
    return;
}
void label_1709()
{
    DIM2(maze, _mclass * _mclass);
    mdig = 0;
    _hole = 0;
    sdigx = _bold;
    sdigy = _bold;
    maze(mdig) = 7;
    DIM2(way, 4);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
        {
            way(cnt) = cnt;
        }
    }
    i = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            dimmix(way);
            digno = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                {
                    pmdig = mdig;
                    if (way(cnt) == 0)
                    {
                        if (pmdig / _mclass == 0)
                        {
                            continue;
                        }
                        else
                        {
                            mdig -= _mclass;
                        }
                    }
                    if (way(cnt) == 1)
                    {
                        if (pmdig % _mclass == _mclass - 1)
                        {
                            continue;
                        }
                        else
                        {
                            ++mdig;
                        }
                    }
                    if (way(cnt) == 2)
                    {
                        if (pmdig / _mclass == _mclass - 1)
                        {
                            continue;
                        }
                        else
                        {
                            mdig += _mclass;
                        }
                    }
                    if (way(cnt) == 3)
                    {
                        if (pmdig % _mclass == 0)
                        {
                            continue;
                        }
                        else
                        {
                            --mdig;
                        }
                    }
                    if (maze(mdig) != _hole)
                    {
                        mdig = pmdig;
                        continue;
                    }
                    ++i;
                    sdigx = pmdig % _mclass * _bold * 2 + _bold;
                    sdigy = pmdig / _mclass * _bold * 2 + _bold;
                    if (way(cnt) == 0)
                    {
                        maze(mdig) = 3;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (_bold * 2); cnt < cnt_end;
                                 ++cnt)
                            {
                                y = sdigy - _bold * 2 + cnt - _bold + 4;
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (_bold - 1);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        x = sdigx + cnt - _bold + 4;
                                        map(x, y, 0) = 100;
                                    }
                                }
                            }
                        }
                    }
                    if (way(cnt) == 1)
                    {
                        maze(mdig) = 4;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (_bold - 1); cnt < cnt_end;
                                 ++cnt)
                            {
                                y = sdigy + cnt - _bold + 4;
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (_bold * 3 - 1);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        x = sdigx + cnt - _bold + 4;
                                        map(x, y, 0) = 100;
                                    }
                                }
                            }
                        }
                    }
                    if (way(cnt) == 2)
                    {
                        maze(mdig) = 1;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (_bold * 3 - 1);
                                 cnt < cnt_end;
                                 ++cnt)
                            {
                                y = sdigy + cnt - _bold + 4;
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (_bold - 1);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        x = sdigx + cnt - _bold + 4;
                                        map(x, y, 0) = 100;
                                    }
                                }
                            }
                        }
                    }
                    if (way(cnt) == 3)
                    {
                        maze(mdig) = 2;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (_bold - 1); cnt < cnt_end;
                                 ++cnt)
                            {
                                y = sdigy + cnt - _bold + 4;
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (_bold * 2);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        x = sdigx + cnt - _bold * 2 - _bold + 4;
                                        map(x, y, 0) = 100;
                                    }
                                }
                            }
                        }
                    }
                    digno = 1;
                    break;
                }
            }
            if (digno == 1)
            {
                continue;
            }
            if (maze(mdig) == 7)
            {
                break;
            }
            if (maze(mdig) == 1)
            {
                mdig -= _mclass;
                continue;
            }
            if (maze(mdig) == 2)
            {
                ++mdig;
                continue;
            }
            if (maze(mdig) == 3)
            {
                mdig += _mclass;
                continue;
            }
            if (maze(mdig) == 4)
            {
                --mdig;
            }
        }
    }
    if (rdsecond)
    {
        return;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            x = rnd(mdata(0));
            y = rnd(mdata(1));
            if (map(x, y, 0) != 100)
            {
                continue;
            }
            dx = rnd(mdata(0));
            dy = rnd(mdata(1));
            if (map(dx, dy, 0) != 100)
            {
                continue;
            }
            if (dist(x, y, dx, dy) < 10)
            {
                if (cnt < 1000)
                {
                    continue;
                }
            }
            map_placeupstairs(x, y);
            map_placedownstairs(dx, dy);
            break;
        }
    }
    return;
}
void label_1710()
{
    mdata(0) = _mclass * (_bold * 2) - _bold + 8;
    mdata(1) = mdata(0);
    mdata(10) = mdata(0) * mdata(1) / 12;
    map_initialize();
    label_1709();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            cnt2 = cnt;
            t = 100 + cnt2 + 1;
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    x = rnd(mdata(0));
                    y = rnd(mdata(1));
                    if (map(x, y, 0) != 100)
                    {
                        continue;
                    }
                    w = 10 + rnd(4);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (w); cnt < cnt_end; ++cnt)
                        {
                            dy = cnt + y - w / 2;
                            {
                                int cnt = 0;
                                for (int cnt_end = cnt + (w); cnt < cnt_end;
                                     ++cnt)
                                {
                                    dx = cnt + x - w / 2;
                                    if (dx < 1 || dy < 1 || dx >= mdata(0) - 1
                                        || dy >= mdata(1) - 1)
                                    {
                                        continue;
                                    }
                                    if (dist(x, y, dx, dy) >= w / 2)
                                    {
                                        continue;
                                    }
                                    tx = dx - 1;
                                    ty = dy;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx + 1;
                                    ty = dy;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx;
                                    ty = dy - 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx;
                                    ty = dy + 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx - 1;
                                    ty = dy - 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx + 1;
                                    ty = dy - 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx - 1;
                                    ty = dy + 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    tx = dx + 1;
                                    ty = dy + 1;
                                    if (map(tx, ty, 0) != t)
                                    {
                                        if (map(tx, ty, 0) != 0)
                                        {
                                            if (map(tx, ty, 0) != 100)
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    map(dx, dy, 0) = t;
                                }
                            }
                        }
                    }
                    break;
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1) / 2 - 2); cnt < cnt_end; ++cnt)
        {
            y = cnt * 2;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0) / 2 - 2); cnt < cnt_end;
                     ++cnt)
                {
                    x = cnt * 2;
                    if (map(x, y, 0) < 100)
                    {
                        continue;
                    }
                    if (map(x, y, 6) != 0)
                    {
                        continue;
                    }
                    if (map(x - 1, y, 0) >= 100)
                    {
                        if (map(x + 1, y, 0) >= 100)
                        {
                            if (map(x, y - 1, 0) == 0)
                            {
                                if (map(x, y + 1, 0) == 0)
                                {
                                    cell_featset(
                                        x,
                                        y,
                                        tile_doorclosed,
                                        21,
                                        rnd(abs(gdata(22) * 3 / 2) + 1));
                                }
                            }
                            continue;
                        }
                    }
                    if (map(x, y - 1, 0) >= 100)
                    {
                        if (map(x, y + 1, 0) >= 100)
                        {
                            if (map(x - 1, y, 0) == 0)
                            {
                                if (map(x + 1, y, 0) == 0)
                                {
                                    cell_featset(
                                        x,
                                        y,
                                        tile_doorclosed,
                                        21,
                                        rnd(abs(gdata(22) * 3 / 2) + 1));
                                }
                            }
                            continue;
                        }
                    }
                }
            }
        }
    }
    return;
}
void label_1711()
{
    if (gdata(24) == 0)
    {
        mdata(18) = 100;
        gdata(76) = 1000;
    }
    if (gdata(24) == 1)
    {
        mdata(18) = 150;
        gdata(76) = 3000;
    }
    if (gdata(24) == 2)
    {
        mdata(18) = 200;
        gdata(76) = 5000;
    }
    if (gdata(24) == 3)
    {
        mdata(18) = 300;
        gdata(76) = 7000;
    }
    if (gdata(24) == 4)
    {
        mdata(18) = 350;
        gdata(76) = 8000;
        mdata(12) = 8;
    }
    if (gdata(24) == 5)
    {
        mdata(18) = 400;
        gdata(76) = 10000;
    }
    return;
}
void label_1712()
{
    if (mdata(6) != 1)
    {
        txt(lang(
            u8"それはワールドマップでしか使えない。"s,
            u8"You can only use it in the world map."s));
        label_1419();
        label_2743(false);
    }
    cell_featread(cdata(1, 0), cdata(2, 0));
    if (feat(0) != 0)
    {
        txt(lang(
            u8"その場所には建てられない。"s, u8"You can't build it here."s));
        label_1419();
        label_2743(false);
    }
    area = -1;
    {
        int cnt = 300;
        for (int cnt_end = cnt + (150); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 0)
            {
                area = cnt;
                break;
            }
        }
    }
    if (area == -1)
    {
        txt(lang(
            u8"もうこれ以上建物は建てられない。"s,
            u8"You can't build a building anymore."s));
        label_1419();
        label_2743(false);
    }
    txt(lang(u8"本当にこの場所に建設する？ "s, u8"Really build it here? "s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    if (rtval != 0)
    {
        label_1419();
        label_2743(false);
    }
    if (inv(3, ci) == 344)
    {
        gdata(24) = inv(25, ci);
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        label_1713();
        midbk = mid;
        mid = ""s + 7 + u8"_"s + 101;
        fmode = 12;
        label_2107();
        mid = midbk;
        label_1749();
        levelexitby = 2;
        gdata(64) = 7;
        gdata(65) = 1;
        gdata(5) = adata(1, 7);
        gdata(6) = adata(2, 7);
        snd(58);
        txtef(2);
        txt(lang(u8"新しい家を建てた！ "s, u8"You've built a new house!"s));
        msg_halt();
        snd(49);
        label_1737();
        return;
    }
    fmode = 13;
    label_2107();
    p = area;
    adata(1, p) = cdata(1, 0);
    adata(2, p) = cdata(2, 0);
    adata(0, p) = 5;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(18, p) = 3;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(4, p) = 1;
    adata(3, p) = 8;
    adata(30, p) = gdata(850);
    if (inv(3, ci) == 521)
    {
        adata(16, p) = 101;
        adata(15, p) = 151;
        adata(21, p) = 1;
        s = lang(u8"博物館"s, u8"museum"s);
    }
    if (inv(3, ci) == 522)
    {
        adata(16, p) = 102;
        adata(15, p) = 150;
        adata(21, p) = 1;
        s = lang(u8"店"s, u8"shop"s);
    }
    if (inv(3, ci) == 542)
    {
        adata(16, p) = 103;
        adata(15, p) = 152;
        adata(21, p) = 2;
        s = lang(u8"畑"s, u8"crop"s);
    }
    if (inv(3, ci) == 543)
    {
        adata(16, p) = 104;
        adata(15, p) = 153;
        adata(21, p) = 1;
        s = lang(u8"倉庫"s, u8"storage"s);
    }
    if (inv(3, ci) == 572)
    {
        adata(16, p) = 31;
        adata(15, p) = 154;
        adata(21, p) = 2;
        adata(12, p) = 1;
        s = lang(u8"牧場"s, u8"ranch"s);
    }
    if (inv(3, ci) == 712)
    {
        adata(16, p) = 39;
        adata(15, p) = 138;
        adata(21, p) = 1;
        adata(12, p) = 1;
        s = lang(u8"ダンジョン"s, u8"dungeon"s);
    }
    snd(58);
    txtef(5);
    txt(lang(
        u8"あなたは"s + s + u8"を建設した！ "s,
        u8"You've built a "s + s + u8"!"s));
    label_1749();
    --inv(0, ci);
    cell_refresh(inv(5, ci), inv(6, ci));
    label_2742();
    return;
}
void label_1713()
{
    p = 7;
    adata(15, p) = 143;
    if (gdata(24) == 0)
    {
        adata(15, p) = 138;
    }
    if (gdata(24) == 4)
    {
        adata(15, p) = 148;
    }
    if (gdata(24) == 5)
    {
        adata(15, p) = 144;
    }
    if (gdata(24) != 0)
    {
        adata(1, p) = cdata(1, 0);
        adata(2, p) = cdata(2, 0);
    }
    adata(30, p) = gdata(850);
    return;
}
void label_1714()
{
    txtnew();
    if (mdata(6) != 5)
    {
        ++msgdup;
        txt(lang(
            u8"ここはあなたの家ではない。"s,
            u8"You can only use it in your home."s));
        label_1419();
        label_2743(false);
    }
    inv_getheader(-1);
    p(0) = 0;
    p(1) = 0;
    p(2) = 0;
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            ++p(2);
            if (inv(0, cnt) != 0)
            {
                if (refitem(inv(3, cnt), 5) != 60000)
                {
                    ++p;
                }
                else
                {
                    ++p(1);
                }
            }
        }
    }
    if (mdata(18) != 0)
    {
        p(2) = mdata(18);
    }
    txt(lang(
        mapname(gdata(20)) + u8"には"s + p + u8"個のアイテムと"s + p(1)
            + u8"個の家具がある(アイテム最大"s + p(2) + u8"個) "s,
        u8"There are "s + p + u8" items and "s + p(1) + u8" furniture in "s
            + mapname(gdata(20)) + u8".(Max: "s + p(2) + u8") "s));
    txtmore();
    if (adata(16, gdata(20)) == 102)
    {
        if (getworker(gdata(20)) != -1)
        {
            txt(lang(
                u8"現在の店主は"s + cdatan(0, getworker(gdata(20))) + u8"だ。"s,
                u8"Current shopkeeper is "s + cdatan(0, getworker(gdata(20)))
                    + u8"."s));
        }
        else
        {
            txt(lang(
                u8"現在店主はいない。"s,
                u8"You haven't assigned a shopkeeper yet."s));
        }
    }
    if (adata(16, gdata(20)) == 31)
    {
        if (getworker(gdata(20)) != -1)
        {
            txt(lang(
                u8"現在のブリーダーは"s + cdatan(0, getworker(gdata(20)))
                    + u8"だ。"s,
                u8"Current breeder is "s + cdatan(0, getworker(gdata(20)))
                    + u8"."s));
        }
        else
        {
            txt(lang(
                u8"現在ブリーダーはいない。"s,
                u8"You haven't assigned a breeder yet."s));
        }
    }
    if (gdata(20) == 7)
    {
        p = 0;
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) == 1 || cdata(0, cnt) == 2)
                {
                    if (cdata(150, cnt) != 0)
                    {
                        ++p;
                    }
                }
            }
        }
        txtmore();
        txt(lang(
            u8"現在"s + p + u8"人の滞在者がいる(最大"s + (gdata(24) + 2)
                + u8"人) "s,
            ""s + p + u8" members are staying at your home. (Max: "s
                + (gdata(24) + 2) + u8")."s));
    }
    txtnew();
    txt(lang(u8"何をする？"s, u8"What do you want to do?"s));
    p = 0;
    if (adata(16, gdata(20)) == 102)
    {
        promptl(0, promptmax) =
            lang(u8"仲間に店主を頼む"s, u8"Assign a shopkeeper"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 4;
        ++promptmax;
        if (mdata(18) < 400)
        {
            promptl(0, promptmax) = lang(u8"店を拡張"s, u8"Extend"s) + u8"("s
                + calcshopreform() + u8" GP)"s;
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 5;
            ++promptmax;
        }
    }
    if (adata(16, gdata(20)) == 31)
    {
        promptl(0, promptmax) =
            lang(u8"ブリーダーを任命する"s, u8"Assign a breeder"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 4;
        ++promptmax;
    }
    promptl(0, promptmax) = lang(u8"家の模様替え"s, u8"Design"s);
    promptl(1, promptmax) = u8"null"s;
    promptl(2, promptmax) = ""s + 0;
    ++promptmax;
    if (gdata(20) == 7)
    {
        promptl(0, promptmax) = lang(u8"家の情報"s, u8"Home rank"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 2;
        ++promptmax;
        promptl(0, promptmax) = lang(u8"仲間の滞在"s, u8"Allies in your home"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 4;
        ++promptmax;
        if (gdata(22) == 1)
        {
            promptl(0, promptmax) =
                lang(u8"使用人を募集する"s, u8"Recruit a servant"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 6;
            ++promptmax;
        }
        promptl(0, promptmax) = lang(u8"滞在者の移動"s, u8"Move a stayer"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 3;
        ++promptmax;
    }
    homemakewall = 0;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 240;
    val(3) = 1;
    label_2131();
    if (stat == 0)
    {
        label_1419();
        label_2743(false);
    }
    switch (rtval)
    {
    case 0:
        homemapmode = 1;
        cxbk = cdata(1, 0);
        cybk = cdata(2, 0);
        label_1723();
        n = 0;
        txtnew();
        txt(lang(
            u8"マウスの左クリックでタイルの敷設、右クリックでタイルの取得、移動キーでスクリーン移動、決定キーでタイル一覧、キャンセルキーで終了。"s,
            u8"Left click to place the tile, right click to pick the tile under your mouse cursor, movement keys to move current position, hit the enter key to show the list of tiles, hit the cancel key to exit."s));
        tlocinitx = cdata(1, 0);
        tlocinity = cdata(2, 0);
        tile = 0;
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                await();
                homemakewall = 1;
                label_1947();
                if (stat == -1)
                {
                    break;
                }
                if ((chipm(7, tile) && 4) == 0)
                {
                    map(tlocx, tlocy, 0) = tile;
                    map(tlocx, tlocy, 2) = tile;
                }
                else
                {
                    efid = 438;
                    label_2176();
                }
                tlocinitx = tlocx;
                tlocinity = tlocy;
            }
        }
        homemapmode = 0;
        cdata(1, 0) = cxbk;
        cdata(2, 0) = cybk;
        goto label_1722_internal;
    case 2:
        gsel(4);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(cnt % 4 * 180, cnt / 4 * 300);
                picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
            }
        }
        gsel(0);
        snd(26);
        redraw(0);
        pagesize = 0;
        keyrange = 0;
        key_list = key_cancel;
        s(0) = lang(u8"家の情報"s, u8"Home Value"s);
        s(1) = lang(u8"決定ｷｰ,"s, u8"Enter key,"s) + strhint3;
        windowshadow = 1;
        display_window(
            (windoww - 440) / 2 + inf_screenx, winposy(360), 440, 360);
        display_topic(lang(u8"価値"s, u8"Value"s), wx + 28, wy + 36);
        display_topic(
            lang(u8"家宝ランク"s, u8"Heirloom Rank"s), wx + 28, wy + 106);
        ++cmbg;
        x = ww / 5 * 2;
        y = wh - 80;
        gmode(4, 180, 300, 50);
        pos(wx + ww / 4, wy + wh / 2);
        grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
        gmode(2);
        label_1730();
        s(0) = lang(u8"基本."s, u8"Base"s);
        s(1) = lang(u8"家具."s, u8"Deco"s);
        s(2) = lang(u8"家宝."s, u8"Heir"s);
        s(3) = lang(u8"総合."s, u8"Total"s);
        p(0) = gdata(76);
        p(1) = gdata(77);
        p(2) = gdata(78);
        p(3) = (p + p(1) + p(2)) / 3;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
            {
                x = wx + 45 + cnt / 2 * 190;
                y = wy + 68 + cnt % 2 * 18;
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
                color(0, 0, 0);
                pos(x, y);
                mes(s(cnt));
                font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (limit(p(cnt) / 1000, 1, 10));
                         cnt < cnt_end;
                         ++cnt)
                    {
                        color(0, 0, 0);
                        pos(x + 35 + cnt * 13 + en * 8, y - 2);
                        bmes(lang(u8"★"s, u8"*"s), 255, 255, 50);
                    }
                }
            }
        }
        font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
        color(0, 0, 0);
        listmax = 10;
        label_2056();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                p = list(0, cnt);
                if (p == 0)
                {
                    continue;
                }
                p(1) = inv(2, p) % 1000;
                gsel(1);
                color(0);
                boxf(0, 960, chipi(2, p(1)), chipi(3, p(1)) + 960);
                if (p(1) == 528)
                {
                    gmode(2);
                    pos(0, 960);
                    gcopy(1, 0, 768, inf_tiles, inf_tiles);
                    pos(0, 1008);
                    gzoom(
                        22,
                        20,
                        5,
                        chipc(0, inv(22, p)) + 8,
                        chipc(1, inv(22, p)) + 4
                            + (chipc(3, inv(22, p)) > inf_tiles) * 8,
                        chipc(2, inv(22, p)) - 16,
                        chipc(3, inv(22, p)) - 8
                            - (chipc(3, inv(22, p)) > inf_tiles) * 10,
                        1);
                    pos(6, 974);
                    gcopy(1, 0, 1008, 22, 20);
                    gsel(selcur);
                }
                else
                {
                    if (p(1) == 531)
                    {
                        pos(8, 1058 - chipc(3, inv(22, p)));
                        gcopy(
                            5,
                            chipc(0, inv(22, p)) + 8,
                            chipc(1, inv(22, p)) + 2,
                            chipc(2, inv(22, p)) - 16,
                            chipc(3, inv(22, p)) - 8);
                        gmode(4 - 1, -1, 150);
                        color(0, 0, 0);
                        pos(0, 960 + (chipc(3, inv(22, p)) == inf_tiles) * 48);
                        gcopy(
                            1,
                            144,
                            768 + (chipc(3, inv(22, p)) > inf_tiles) * 48,
                            inf_tiles,
                            chipc(3, inv(22, p))
                                + (chipc(3, inv(22, p)) > inf_tiles) * 48);
                        gmode(2);
                        gsel(selcur);
                    }
                    else
                    {
                        pos(0, 960);
                        gcopy(
                            1,
                            chipi(0, p(1)),
                            chipi(1, p(1)),
                            chipi(2, p(1)),
                            chipi(3, p(1)));
                        gfini(chipi(2, p(1)), chipi(3, p(1)));
                        gfdec2(
                            c_col(0, inv(22, p)),
                            c_col(1, inv(22, p)),
                            c_col(2, inv(22, p)));
                        gsel(selcur);
                    }
                }
                pos(wx + 37, cnt * 16 + wy + 138);
                gmode(2, chipi(2, p(1)), chipi(3, p(1)));
                grotate(
                    1,
                    0,
                    960,
                    0,
                    chipi(2, p(1)) * inf_tiles / chipi(3, p(1)),
                    inf_tiles);
                pos(wx + 68, cnt * 16 + wy + 138);
                mes(""s + cnvrank((10 - cnt)) + lang(u8"位."s, ""s));
                pos(wx + 110, cnt * 16 + wy + 138);
                mes(itemname(p));
            }
        }
    label_1715_internal:
        redraw(1);
        await(cfg_wait1);
        key_check();
        cursor_check();
        if (key == key_cancel)
        {
            goto label_1722_internal;
        }
        goto label_1715_internal;
        goto label_1722_internal;
    case 3:
    label_1717_internal:
        txtnew();
        txt(lang(u8"誰を移動させる？"s, u8"Move who?"s));
        allyctrl = 0;
        label_1980();
        if (stat == -1)
        {
            goto label_1722_internal;
        }
        if (cdata(9, stat) <= -3)
        {
            txtnew();
            txtef(9);
            txt(cdatan(0, stat)
                + lang(
                      u8"「触るな！」"s,
                      (u8" "s + cnvtalk(u8"Don't touch me!"s))));
            goto label_1722_internal;
        }
        tchome = stat;
        tc = stat;
        snd(20);
    label_1718_internal:
        txtnew();
        txt(lang(
            cdatan(0, tc) + u8"をどこに移動させる？"s,
            u8"Where do you want to move "s + cdatan(0, tc) + u8"?"s));
        label_1947();
        if (stat == -1)
        {
            goto label_1717_internal;
        }
        if (chipm(7, map(tlocx, tlocy, 0)) && 4 || map(tlocx, tlocy, 1) != 0)
        {
            txt(lang(
                u8"その場所には移動させることができない。"s,
                u8"The location is invalid."s));
            goto label_1718_internal;
        }
        tc = tchome;
        map(cdata(1, tc), cdata(2, tc), 1) = 0;
        map(tlocx, tlocy, 1) = tc + 1;
        cdata(1, tc) = tlocx;
        cdata(171, tc) = tlocx;
        cdata(2, tc) = tlocy;
        cdata(172, tc) = tlocy;
        rowactend(tc);
        txtnew();
        txt(lang(
            cdatan(0, tc) + u8"を移動させた。"s,
            cdatan(0, tc) + u8" "s + is(tc) + u8" moved to the location."s));
        snd(43);
        goto label_1717_internal;
        goto label_1718_internal;
        goto label_1717_internal;
        goto label_1722_internal;
    case 4:
        allyctrl = 3;
        label_1959();
        if (stat != -1)
        {
            c = stat;
            snd(20);
            txtnew();
            if (getworker(gdata(20), c) == c)
            {
                if (gdata(20) == 7)
                {
                    cdata(80, c) = 0;
                    txt(lang(
                        cdatan(0, c) + u8"の滞在を取り消した。"s,
                        cdatan(0, c) + u8" "s + is(c)
                            + u8" no longer staying at your home."s));
                }
                else
                {
                    removeworker(gdata(20));
                    txt(lang(
                        cdatan(0, c) + u8"を役目から外した。"s,
                        u8"You remove "s + cdatan(0, c) + u8" from "s + his(c)
                            + u8" job."s));
                }
            }
            else
            {
                if (gdata(20) == 7)
                {
                    cdata(171, c) = cdata(1, c);
                    cdata(172, c) = cdata(2, c);
                    txt(lang(
                        cdatan(0, c) + u8"を滞在させた。"s,
                        cdatan(0, c) + u8" stay"s + _s(c)
                            + u8" at your home now."s));
                }
                else
                {
                    removeworker(gdata(20));
                    txt(lang(
                        cdatan(0, c) + u8"を任命した。"s,
                        cdatan(0, c) + u8" take"s + _s(c)
                            + u8" charge of the job now."s));
                }
                cdata(80, c) = gdata(20);
            }
        }
        goto label_1722_internal;
    case 5:
        txtnew();
        if (cdata(30, 0) < calcshopreform())
        {
            txt(lang(
                u8"お金が足りない…"s, u8"You don't have enough money..."s));
        }
        else
        {
            snd(12);
            cdata(30, 0) -= calcshopreform();
            mdata(18) = limit(mdata(18) + 10, 1, 400);
            txtef(2);
            txt(lang(
                u8"店を拡張した！これからは"s + mdata(18)
                    + u8"個のアイテムを陳列できる。"s,
                u8"You extend your shop! You can display max of "s + mdata(18)
                    + u8" items now!"s));
        }
        goto label_1722_internal;
    case 6:
        txtnew();
        p = 0;
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) == 1 || cdata(0, cnt) == 2)
                {
                    if (cdata(150, cnt) != 0)
                    {
                        ++p;
                    }
                }
            }
        }
        if (p >= gdata(24) + 2)
        {
            txt(lang(
                u8"家はすでに人であふれかえっている。"s,
                u8"You already have too many guests in your home."s));
            goto label_1722_internal;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                randomize(gdata(12) + cnt);
                if (rnd(2))
                {
                    continue;
                }
                if (cnt == 0)
                {
                    hire = 0;
                }
                else
                {
                    hire = rnd(length(isethire));
                }
                dbid = isethire(hire);
                randomize(gdata(12) + cnt);
                flt(20);
                characreate(-1, dbid, -3, 0);
                if (stat == 0)
                {
                    continue;
                }
                cdata(0, rc) = 10;
                cdata(150, rc) = isethirerole(hire);
                if (cdata(27, rc) == 1)
                {
                    p = rnd(6);
                    if (p == 0)
                    {
                        cdata(150, rc) = 1001;
                        cdatan(0, rc) = lang(
                            u8"武具店の"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of armory"s);
                    }
                    if (p == 1)
                    {
                        cdata(150, rc) = 1006;
                        cdatan(0, rc) = lang(
                            u8"雑貨屋の"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of general store"s);
                    }
                    if (p == 2)
                    {
                        cdata(150, rc) = 1004;
                        cdatan(0, rc) = lang(
                            u8"魔法店の"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of magic store"s);
                    }
                    if (p == 3)
                    {
                        cdata(150, rc) = 1008;
                        cdatan(0, rc) = lang(
                            u8"何でも屋の"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of goods store"s);
                    }
                    if (p == 4)
                    {
                        cdata(150, rc) = 1001;
                        cdatan(0, rc) = lang(
                            u8"武具店の"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of armory"s);
                    }
                    if (p == 5)
                    {
                        cdata(150, rc) = 1007;
                        cdatan(0, rc) = lang(
                            u8"ブラックマーケットの"s + cdatan(0, rc),
                            cdatan(0, rc) + u8" of blackmarket"s);
                    }
                    randomize();
                    cdata(151, rc) = rnd(15) + 1;
                }
                cnt2 = cnt;
                {
                    int cnt = 57;
                    for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                    {
                        if (cnt == rc)
                        {
                            continue;
                        }
                        if (cdatan(0, cnt) == cdatan(0, rc))
                        {
                            chara_vanquish(rc);
                        }
                    }
                }
            }
        }
        randomize();
        txtnew();
        txt(lang(u8"誰を雇用する？"s, u8"Who do you want to hire?"s));
        allyctrl = 1;
        label_1980();
        if (stat != -1)
        {
            tc = stat;
            txtnew();
            if (cdata(30, 0) < calchirecost(tc) * 20)
            {
                txt(lang(
                    u8"お金が足りない…"s,
                    u8"You dont't have enough money..."s));
            }
            else
            {
                snd(12);
                cdata(30, 0) -= calchirecost(tc) * 20;
                await(250);
                cdata(0, tc) = 1;
                txtef(2);
                txt(lang(
                    cdatan(0, tc) + u8"を家に迎えた。"s,
                    u8"You hire "s + cdatan(0, tc) + u8"."s));
                snd(64);
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) == 10)
                {
                    chara_vanquish(cnt);
                }
            }
        }
        calccosthire();
        goto label_1722_internal;
    }
label_1722_internal:
    tlocinitx = 0;
    tlocinity = 0;
    screenupdate = -1;
    label_1419();
    label_1714();
    return;
}
void label_1723()
{
    p = 0;
    gsel(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2772); cnt < cnt_end; ++cnt)
        {
            f = 0;
            if (cnt < 231)
            {
                f = 1;
            }
            if (cnt >= 396)
            {
                if (cnt < 429)
                {
                    f = 1;
                }
            }
            if (cnt >= 462)
            {
                if (cnt < 495)
                {
                    f = 1;
                }
            }
            if (cnt >= 561)
            {
                if (cnt < 726)
                {
                    f = 1;
                }
            }
            if (f == 0)
            {
                continue;
            }
            f = 1;
            pget(cnt % 33 * 48, cnt / 33 * 48);
            if (ginfo(16) == 0)
            {
                if (ginfo(17) == 0)
                {
                    if (ginfo(18) == 0)
                    {
                        f = 0;
                    }
                }
            }
            if (chipm(0, cnt) == 2)
            {
                f = 0;
            }
            if (chipm(0, cnt) == 1)
            {
                f = 0;
            }
            if (chipm(1, cnt) == 5)
            {
                f = 0;
            }
            if (gdata(24) < 4)
            {
                if (chipm(0, cnt) == 3)
                {
                    f = 0;
                }
            }
            if (f)
            {
                list(0, p) = cnt;
                ++p;
            }
            if (chipm(3, cnt) != 0)
            {
                cnt = cnt + chipm(3, cnt) - 1;
                continue;
            }
        }
    }
    listmax = p;
    gsel(0);
    return;
}
void label_1724()
{
    area = -1;
    midbk = mid;
    {
        int cnt = 300;
        for (int cnt_end = cnt + (150); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 102)
            {
                area = cnt;
                mid = ""s + area + u8"_"s + 101;
                label_1725();
            }
        }
    }
    mid = midbk;
    if (adata(16, gdata(20)) == 102)
    {
        label_1726();
    }
    return;
}
void label_1725()
{
    worker = getworker(area);
    if (worker == -1)
    {
        txt(lang(
            u8"[店]店には店番がいない。"s,
            u8"[Shop]You shop doesn't have a shopkeeper."s));
        return;
    }
    sold = 0;
    income(0) = 0;
    income(1) = 0;
    listmax = 0;
    shoplv = 100 - gdata(125) / 100;
    customer = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            customer += rnd(shoplv / 3 + 5);
        }
    }
    customer = customer * (80 + sdata(17, worker) * 3 / 2) / 100;
    if (customer < 1)
    {
        customer = 1;
    }
    if (gdata(20) != area)
    {
        file = u8"shoptmp.s2"s;
        fmode = 4;
        label_2107();
        file = u8"inv_"s + mid + u8".s2"s;
        fmode = 3;
        label_2107();
    }
    mode = 6;
    dblistmax = 0;
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) <= 0)
            {
                continue;
            }
            if (inv(3, cnt) == 561)
            {
                continue;
            }
            if (inv(3, cnt) == 562)
            {
                continue;
            }
            if (inv(3, cnt) == 24)
            {
                continue;
            }
            if (inv(3, cnt) == 54)
            {
                continue;
            }
            if (inv(3, cnt) == 555)
            {
                continue;
            }
            if (inv(3, cnt) == 344)
            {
                continue;
            }
            if (inv(7, cnt) < 0)
            {
                continue;
            }
            if (inv(4, cnt) >= 6)
            {
                continue;
            }
            if (inv(1, cnt) < 50)
            {
                continue;
            }
            a = refitem(inv(3, cnt), 5);
            if (a == 60000)
            {
                continue;
            }
            dblist(0, dblistmax) = cnt;
            dblist(1, dblistmax) = a;
            ++dblistmax;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (customer); cnt < cnt_end; ++cnt)
        {
            if (dblistmax == 0)
            {
                break;
            }
            p = rnd(dblistmax);
            ci = dblist(0, p);
            a = dblist(1, p);
            val = calcitemvalue(ci, 2);
            val = val * elona_int((10 + sqrt(sdata(156, worker) * 200))) / 100;
            if (val <= 1)
            {
                continue;
            }
            if (rnd(val) > shoplv * 100 + 500)
            {
                continue;
            }
            if (inv(0, ci) <= 0)
            {
                continue;
            }
            if (rnd(8))
            {
                continue;
            }
            in = rnd(inv(0, ci)) + 1;
            inv(0, ci) -= in;
            sold += in;
            val = val * in;
            if (rnd(4) == 0)
            {
                list(0, listmax) = refitem(inv(3, ci), 7);
                list(1, listmax) = inv(4, ci);
                listn(0, listmax) = elona_str(a);
                listn(1, listmax) = elona_str(val);
                ++listmax;
            }
            else
            {
                income += val;
            }
            if (area == gdata(20))
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) != 1)
                        {
                            continue;
                        }
                        if (cdata(140, cnt) == 0 || cdata(141, cnt) == 0)
                        {
                            continue;
                        }
                        if (cdata(142, cnt) == ci)
                        {
                            rowactend(cnt);
                        }
                    }
                }
            }
        }
    }
    mode = 0;
    if (gdata(20) != area)
    {
        file = u8"inv_"s + mid + u8".s2"s;
        fmode = 4;
        label_2107();
    }
    else
    {
        file = u8"shoptmp.s2"s;
        fmode = 4;
        label_2107();
    }
    file = u8"shop"s + 5 + u8".s2"s;
    exist(exedir + u8"tmp\\"s + file);
    if (strsize != -1)
    {
        fmode = 3;
        label_2107();
    }
    else
    {
        inv_getheader(-1);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                inv(0, cnt) = 0;
            }
        }
    }
    mode = 6;
    if (income != 0)
    {
        flt();
        itemcreate(-1, 54, -1, -1, income);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                {
                    flt(list(0, cnt2), list(1, cnt2));
                    flttypemajor = elona_int(listn(0, cnt2));
                    itemcreate(-1, 0, -1, -1, 0);
                    if (stat == 0)
                    {
                        f = 0;
                        break;
                    }
                    if (inv(1, ci) > elona_int(listn(1, cnt2)) * 2)
                    {
                        f = 1;
                        break;
                    }
                    else
                    {
                        inv(0, ci) = 0;
                        if (cnt == 3)
                        {
                            f = 0;
                            break;
                        }
                        else
                        {
                            continue;
                        }
                    }
                }
            }
            if (f == 0)
            {
                itemcreate(-1, 54, -1, -1, elona_int(listn(1, cnt)));
                income += elona_int(listn(1, cnt));
            }
            else
            {
                ++income(1);
            }
        }
    }
    if (sold == 0)
    {
        if (cfg_hideshopresult == 0)
        {
            txt(lang(
                u8"[店]"s + customer + u8"人が来客したが、"s + cdatan(0, worker)
                    + u8"はアイテムを一つも売れなかった。"s,
                u8"[Shop]"s + customer + u8" customers visited your shop but "s
                    + cdatan(0, worker) + u8" couldn't sell any item."s));
        }
    }
    else
    {
        if (cfg_hideshopresult <= 1)
        {
            s = ""s + income + lang(u8"gold"s, u8" gold pieces"s);
            if (income(1) != 0)
            {
                s += lang(
                    u8"と"s + income(1) + u8"個のアイテム"s,
                    u8" and "s + income(1) + u8" items"s);
            }
            snd(24);
            txtmore();
            txtef(5);
            txt(lang(
                u8"[店]"s + customer + u8"人の来客があり、"s + cdatan(0, worker)
                    + u8"は"s + sold + u8"個のアイテムを売却した。"s + s
                    + u8"が売り上げとして金庫に保管された。"s,
                u8"[Shop]"s + customer + u8" customers visited your shop and "s
                    + cdatan(0, worker) + u8" sold "s + sold + u8" items. "s
                    + cdatan(0, worker) + u8" put "s + s
                    + u8" in the shop strong box."s));
        }
        skillexp(156, worker, limit(elona_int(sqrt(income)) * 6, 25, 1000));
    }
    if (sold > (110 - gdata(125) / 100) / 10)
    {
        modrank(5, 30, 2);
    }
    mode = 0;
    file = u8"shop"s + 5 + u8".s2"s;
    fmode = 4;
    label_2107();
    file = u8"shoptmp.s2"s;
    fmode = 3;
    label_2107();
    return;
}
void label_1726()
{
    mdata(10) = (100 - gdata(125) / 100) / 4 + 1;
    inv_getheader(-1);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    map(cnt, y, 4) = 0;
                    map(cnt, y, 9) = 0;
                }
            }
        }
    }
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) <= 0)
            {
                continue;
            }
            x = inv(5, cnt);
            y = inv(6, cnt);
            if (x < 0 || x >= mdata(0) || y < 0 || y >= mdata(1))
            {
                continue;
            }
            cell_refresh(x, y);
        }
    }
    return;
}
void label_1727()
{
    rc = 56;
    fixlv = 2;
    dbmode = 3;
    label_2299();
    ++dblist(val, cdata(27, 56));
    if (fixlv == 6)
    {
        rtval = 70 + cdata(38, 56);
    }
    else
    {
        rtval = cdata(38, 56) / 10 + 2;
        if (chipc(3, cdata(7, 56) % 1000) > inf_tiles)
        {
            rtval = rtval / 2 * 3 + 40;
        }
        p = refchara(cdata(27, 56), 6);
        if (p < 80)
        {
            rtval = rtval + 80 - p;
        }
    }
    if (dblist(val, cdata(27, 56)) > 1)
    {
        rtval /= 3;
        if (rtval > 15)
        {
            rtval = 15;
        }
    }
    return;
}
void label_1728()
{
    rankorg = gdata(123);
    inv_getheader(-1);
    rankcur = 0;
    DIM3(dblist, 2, 800);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) != 503 && inv(3, cnt) != 504)
            {
                continue;
            }
            if (wpeek(map(inv(5, cnt), inv(6, cnt), 4), 0) != inv(2, cnt))
            {
                continue;
            }
            if (inv(3, cnt) == 503)
            {
                val = 0;
            }
            else
            {
                val = 1;
            }
            dbid = inv(23, cnt);
            label_1727();
            if (inv(3, cnt) == 503)
            {
                rankcur += rtval;
            }
            else
            {
                rankcur += rtval / 2;
            }
        }
    }
    rankcur = 10000 - elona_int(sqrt(rankcur) * 100);
    if (rankcur < 100)
    {
        rankcur = 100;
    }
    gdata(123) = rankcur;
    if (rankorg != rankcur)
    {
        if (rankorg > rankcur)
        {
            txtef(2);
        }
        else
        {
            txtef(8);
        }
        txtnew();
        txt(lang(
            u8"ランク変動("s + rankn(10, 3) + u8" "s + rankorg / 100
                + u8"位 → "s + rankcur / 100 + u8"位 )《"s + ranktitle(3)
                + u8"》"s,
            u8"Museum Rank:"s + cnvrank(rankorg / 100) + u8"->"s
                + cnvrank(rankcur / 100) + u8" Your museum is now known as <"s
                + ranktitle(3) + u8">."s));
    }
    mdata(10) = (100 - gdata(123) / 100) / 2 + 1;
    return;
}
void label_1729()
{
    a = refitem(inv(3, val), 5);
    if (a == 60000)
    {
        gdata(77) += limit(inv(1, val) / 50, 50, 500);
    }
    p = inv(1, val);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (a == 60000)
            {
                p /= 20;
                break;
            }
            if (a == 80000)
            {
                p /= 10;
                break;
            }
            if (a == 77000)
            {
                p /= 10;
                break;
            }
            p /= 1000;
        }
    }
    if (p > list(1, n))
    {
        list(0, n) = val;
        list(1, n) = p;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
            {
                if (list(1, cnt) < list(1, n))
                {
                    n = cnt;
                }
            }
        }
    }
    return;
}
void label_1730()
{
    if (gdata(22) != 1)
    {
        return;
    }
    rankorg = gdata(124);
    inv_getheader(-1);
    rankcur = 0;
    gdata(77) = 0;
    gdata(78) = 0;
    n = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            list(0, cnt) = 0;
            list(1, cnt) = 0;
        }
    }
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (wpeek(map(inv(5, cnt), inv(6, cnt), 4), 0) != inv(2, cnt))
            {
                continue;
            }
            val = cnt;
            label_1729();
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (list(0, cnt) != 0)
            {
                gdata(78) += limit(list(1, cnt), 100, 2000);
            }
        }
    }
    if (gdata(77) > 10000)
    {
        gdata(77) = 10000;
    }
    if (gdata(78) > 10000)
    {
        gdata(78) = 10000;
    }
    rankcur = 10000 - (gdata(76) + gdata(77) + gdata(78)) / 3;
    if (rankcur < 100)
    {
        rankcur = 100;
    }
    gdata(124) = rankcur;
    if (rankorg != rankcur)
    {
        if (rankorg > rankcur)
        {
            txtef(2);
        }
        else
        {
            txtef(8);
        }
        txtnew();
        txt(lang(
            u8"家具("s + gdata(77) / 100 + u8"点) 家宝("s + gdata(78) / 100
                + u8"点) ランク変動("s + rankn(10, 4) + u8" "s + rankorg / 100
                + u8"位 → "s + rankcur / 100 + u8"位 )《"s + ranktitle(4)
                + u8"》"s,
            u8"Furniture Value:"s + gdata(77) / 100 + u8" Heirloom Value:"s
                + gdata(78) / 100 + u8" Home Rank:"s + cnvrank(rankorg / 100)
                + u8"->"s + cnvrank(rankcur / 100)
                + u8" Your home is now known as <"s + ranktitle(4) + u8">."s));
    }
    return;
}
int cbreeder(int prm_984)
{
    std::string s_at_m173;
    int p_at_m173 = 0;
    s_at_m173 = refchara_str(cdata(27, prm_984), 8);
    p_at_m173 = refrace(cdatan(2, prm_984), 9);
    p_at_m173 = p_at_m173 * 100 / (100 + cdata(38, prm_984) * 5);
    stat = p_at_m173;
    return stat;
}
void label_1733()
{
    worker = getworker(gdata(20));
    livestock = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            if (cbit(960, cnt) == 0)
            {
                continue;
            }
            ++livestock;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (renewmulti); cnt < cnt_end; ++cnt)
        {
            if (worker == -1)
            {
                goto label_1734_internal;
            }
            if (rnd(5000) > cbreeder(worker) * 100 / (100 + livestock * 20)
                    - livestock * 2)
            {
                if (livestock != 0 || rnd(30) != 0)
                {
                    goto label_1734_internal;
                }
            }
            flt(calcobjlv(cdata(38, worker)), 1);
            if (rnd(2))
            {
                dbid = cdata(27, worker);
            }
            else
            {
                dbid = 0;
            }
            if (rnd(10) != 0)
            {
                fltnrace = cdatan(2, worker);
            }
            if (cdata(27, worker) == 319)
            {
                dbid = 176;
            }
            characreate(-1, dbid, 4 + rnd(11), 4 + rnd(8));
            if (stat != 0)
            {
                cbitmod(960, rc, 1);
                ++livestock;
            }
        label_1734_internal:
            egg = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cbit(960, cnt) == 0)
                    {
                        continue;
                    }
                    x = rnd(11) + 4;
                    y = rnd(8) + 4;
                    if (map(x, y, 4) != 0)
                    {
                        continue;
                    }
                    flt(calcobjlv(cdata(38, cnt)), 2);
                    p = rnd(5);
                    f = 0;
                    if (rnd(egg + 1) > 2)
                    {
                        continue;
                    }
                    if (livestock > 10)
                    {
                        if (rnd(4) == 0)
                        {
                            continue;
                        }
                    }
                    if (livestock > 20)
                    {
                        if (rnd(4) == 0)
                        {
                            continue;
                        }
                    }
                    if (livestock > 30)
                    {
                        if (rnd(4) == 0)
                        {
                            continue;
                        }
                    }
                    if (livestock > 40)
                    {
                        if (rnd(4) == 0)
                        {
                            continue;
                        }
                    }
                    if (p == 0)
                    {
                        if (rnd(60) == 0)
                        {
                            f = 1;
                        }
                        if (cdatan(2, cnt) == u8"chicken"s)
                        {
                            if (rnd(20) == 0)
                            {
                                f = 1;
                            }
                        }
                        if (f)
                        {
                            ++egg;
                            itemcreate(-1, 573, x, y, 0);
                            if (stat)
                            {
                                inv(23, ci) = cdata(27, cnt);
                                inv(7, ci) = cdata(20, cnt) * 10 + 250;
                                inv(1, ci) = limit(
                                    cdata(20, cnt) * cdata(20, cnt) / 10000,
                                    200,
                                    40000);
                            }
                        }
                        continue;
                    }
                    if (p == 1)
                    {
                        if (rnd(60) == 0)
                        {
                            f = 1;
                        }
                        if (cdatan(2, cnt) == u8"sheep"s)
                        {
                            if (rnd(20) == 0)
                            {
                                f = 1;
                            }
                        }
                        if (f)
                        {
                            ++egg;
                            itemcreate(-1, 574, x, y, 0);
                            if (stat)
                            {
                                inv(23, ci) = cdata(27, cnt);
                            }
                        }
                        continue;
                    }
                    if (p == 2)
                    {
                        if (rnd(80) == 0)
                        {
                            f = 1;
                        }
                        if (f)
                        {
                            itemcreate(-1, 575, x, y, 0);
                            if (stat)
                            {
                                inv(23, ci) = cdata(27, cnt);
                                inv(7, ci) = cdata(20, cnt) * 40 + 300;
                                inv(1, ci) = limit(
                                    cdata(20, cnt) * cdata(20, cnt) / 5000,
                                    1,
                                    20000);
                            }
                        }
                        continue;
                    }
                    if (p == 3)
                    {
                        if (rnd(80) == 0)
                        {
                            f = 1;
                        }
                        if (f)
                        {
                            dbid = 222;
                            if (rnd(2))
                            {
                                dbid = 45;
                            }
                            itemcreate(-1, dbid, x, y, 0);
                        }
                        continue;
                    }
                }
            }
        }
    }
    return;
}
void label_1735()
{
    dbid = 0;
    if (gdata(20) == 21)
    {
        flt(calcobjlv(10), calcfixlv(2));
        fltn(u8"sf"s);
        return;
    }
    if (mdata(6) == 3 || mdata(6) == 2)
    {
        flt(calcobjlv(10), calcfixlv(2));
        fltselect = 5;
        if (gdata(22) == 1)
        {
            if (gdata(20) == 12)
            {
                if (rnd(2))
                {
                    dbid = 269;
                    return;
                }
            }
            if (gdata(20) == 33)
            {
                if (rnd(3) == 0)
                {
                    dbid = 270;
                    return;
                }
            }
            if (gdata(20) == 14)
            {
                if (rnd(3) == 0)
                {
                    dbid = 271;
                    return;
                }
                else
                {
                    if (rnd(2) == 0)
                    {
                        dbid = 335;
                        return;
                    }
                }
            }
            if (gdata(20) == 36)
            {
                if (rnd(3) == 0)
                {
                    dbid = 272;
                    return;
                }
            }
            if (gdata(20) == 5)
            {
                if (rnd(2))
                {
                    dbid = 273;
                    return;
                }
            }
            if (gdata(20) == 15)
            {
                if (rnd(3) == 0)
                {
                    dbid = 274;
                    return;
                }
            }
        }
        if (gdata(20) == 36)
        {
            if (gdata(22) == 3)
            {
                dbid = 289;
            }
        }
        if (gdata(20) == 14)
        {
            if (gdata(22) == 3)
            {
                dbid = 293;
            }
        }
        if (gdata(20) == 11)
        {
            if (gdata(22) == 3)
            {
                dbid = 295;
            }
        }
        return;
    }
    if (gdata(20) == 3)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        if (gdata(22) < 4)
        {
            if (objlv > 5)
            {
                obvjlv = 5;
            }
        }
        return;
    }
    if (gdata(20) == 42)
    {
        flt(calcobjlv(gdata(22) % 50 + 5), calcfixlv(2));
        return;
    }
    if (gdata(20) == 19)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        return;
    }
    if (gdata(20) == 17)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        fltn(u8"undead"s);
        return;
    }
    if (gdata(20) == 16)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        fltn(u8"fire"s);
        return;
    }
    if (gdata(20) == 18)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        if (rnd(2) == 0)
        {
            fltn(u8"man"s);
        }
        return;
    }
    if (gdata(20) == 37)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        flttypemajor = 13;
        return;
    }
    if (gdata(20) == 10 || gdata(20) == 20)
    {
        flt(calcobjlv(20), calcfixlv(2));
        fltselect = 4;
        return;
    }
    if (gdata(20) == 13)
    {
        if (gdata(70) >= 1000)
        {
            flt(calcobjlv(qdata(5, gdata(72)) + 1), calcfixlv(2));
        }
        if (gdata(70) == 1006)
        {
            fltn(u8"wild"s);
            objlv = limit(objlv / 4, 1, 8);
        }
        return;
    }
    if (adata(16, gdata(20)) == 28)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        if (rnd(2))
        {
            fltn(u8"yeek"s);
        }
        return;
    }
    if (adata(16, gdata(20)) == 38)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        if (rnd(2))
        {
            fltn(u8"mino"s);
        }
        return;
    }
    if (mdata(6) >= 20)
    {
        flt(calcobjlv(gdata(22)), calcfixlv(2));
        return;
    }
    if (adata(16, gdata(20)) == 101 || adata(16, gdata(20)) == 102)
    {
        flt(calcobjlv(100), calcfixlv(2));
        if (rnd(1))
        {
            fltselect = 5;
        }
        else
        {
            fltselect = 7;
        }
        return;
    }
    flt(calcobjlv(cdata(38, 0)), calcfixlv(2));
    return;
}
void label_1736()
{
    if (adata(16, gdata(20)) == 101 || adata(16, gdata(20)) == 102)
    {
        if (gdata(3) < mdata(10) / 2)
        {
            if (rnd(2) == 0)
            {
                label_1735();
                characreate(-1, dbid, -2, 0);
            }
        }
    }
    if (mdata(10) == 0)
    {
        return;
    }
    if (gdata(3) < mdata(10) / 4)
    {
        if (rnd(2) == 0)
        {
            label_1735();
            characreate(-1, dbid, -2, 0);
        }
    }
    if (gdata(3) < mdata(10) / 2)
    {
        if (rnd(4) == 0)
        {
            label_1735();
            characreate(-1, dbid, -2, 0);
        }
    }
    if (gdata(3) < mdata(10))
    {
        if (rnd(8) == 0)
        {
            label_1735();
            characreate(-1, dbid, -2, 0);
        }
    }
    return;
}
void label_1737()
{
    gdata(84) = 0;
    gdata(171) = 0;
    if (mdata(6) == 5)
    {
        if (cfg_extrahelp)
        {
            if (gdata(201) == 0)
            {
                if (mode == 0)
                {
                    if (cdata(141, 0) == 0)
                    {
                        gdata(201) = 1;
                        ghelp = 1;
                        label_2701();
                    }
                }
            }
        }
    }
    msg_newline();
    msgtemp = u8"  "s;
    if (gdata(20) == 35 || gdata(20) == 6 || gdata(20) == 40)
    {
        usermapid = 0;
    }
    rdtry = 0;
    fixstart = 0;
    if (adata(16, gdata(20)) == 8)
    {
        if (gdata(22) == adata(10, gdata(20)))
        {
            if (adata(20, gdata(20)) > 0)
            {
                chara_vanquish(adata(20, gdata(20)));
                adata(20, gdata(20)) = -1;
            }
        }
    }
    gdata(19) = gdata(20);
    if (gdata(19) == 30)
    {
        gdata(20) = gdata(66);
        gdata(22) = gdata(67);
        mapstartx = gdata(68);
        mapstarty = gdata(69);
        gdata(26) = 7;
        fixstart = 1;
        levelexitby = 5;
    }
    if (levelexitby == 4)
    {
        cell_featread(cdata(1, 0), cdata(2, 0));
        if (gdata(20) == 7)
        {
            if (mapitemfind(cdata(1, cc), cdata(2, cc), 751) != -1)
            {
                feat(1) = 11;
            }
            if (mapitemfind(cdata(1, cc), cdata(2, cc), 750) != -1)
            {
                feat(1) = 10;
            }
        }
        f = 0;
        if (feat(1) == 11)
        {
            msgtemp +=
                lang(u8"階段を降りた。"s, u8"You walk down the stairs. "s);
            f = 1;
            gdata(26) = 1;
            mdata(4) = cdata(2, 0) * 1000 + cdata(1, 0);
            if (feat(2) == 0)
            {
                ++gdata(22);
                gdata(22) -= (adata(3, gdata(20)) == 2) * 2;
            }
            else
            {
                gdata(22) = feat(2);
            }
        }
        if (feat(1) == 10)
        {
            msgtemp += lang(u8"階段を昇った。"s, u8"You walk up the stairs. "s);
            f = 1;
            gdata(26) = 2;
            mdata(5) = cdata(2, 0) * 1000 + cdata(1, 0);
            if (feat(2) == 0)
            {
                --gdata(22);
                gdata(22) += (adata(3, gdata(20)) == 2) * 2;
            }
            else
            {
                gdata(22) = feat(2);
            }
        }
        if (f == 0)
        {
            if (mdata(6) == 1)
            {
                gdata(5) = cdata(1, cc);
                gdata(6) = cdata(2, cc);
                gdata(22) = 1;
                if (feat(2) != 0 || feat(3) != 0)
                {
                    gdata(20) = feat(2) + feat(3) * 100;
                    if (adata(16, gdata(20)) == 42)
                    {
                        if (itemfind(0, 742) == -1)
                        {
                            txt(lang(
                                u8"あなたはこの洞窟の探索を許可されていない。"s,
                                u8"You are not permitted to explore this dungeon."s));
                            msg_halt();
                            gdata(20) = 2;
                        }
                    }
                    if (adata(16, gdata(20)) == 37)
                    {
                        if (gdata(462) == 0)
                        {
                            txt(lang(
                                u8"あなたはピラミッドへの招待状を持っていない。"s,
                                u8"You don't have an invitation."s));
                            msg_halt();
                            gdata(20) = 2;
                        }
                    }
                    if (adata(16, gdata(20)) == 41)
                    {
                        txt(lang(
                            u8"あなたはガードに追い返された。"s,
                            u8"The guards turn you away from the jail."s));
                        msg_halt();
                        gdata(20) = 2;
                    }
                }
                else
                {
                    gdata(20) = 2;
                }
                if (feat(1) != 15)
                {
                    gdata(20) = 2;
                }
            }
            if (mdata(6) == 3 || mdata(6) == 4 || mdata(6) == 5 || mdata(6) == 6
                || mdata(6) == 2)
            {
                gdata(20) = gdata(850);
            }
        }
        if (mdata(6) >= 20 || mdata(6) == 6)
        {
            if (gdata(22) < adata(17, gdata(20)))
            {
                gdata(20) = gdata(850);
            }
        }
        if (adata(0, gdata(20)) == 3)
        {
            if (gdata(20) == gdata(19))
            {
                if (gdata(22) == 1)
                {
                    msgtemp += lang(
                        mapname(gdata(20)) + u8"の表層に戻った。"s,
                        u8"You returned to the surface of "s
                            + mapname(gdata(20)));
                }
                else
                {
                    msgtemp += lang(
                        mapname(gdata(20)) + u8"の表層を後にした。"s,
                        u8"You left the surface of "s + mapname(gdata(20))
                            + u8"."s);
                }
            }
        }
    }
    if (mdata(6) == 7)
    {
        rq = gdata(72);
        label_2674();
        gdata(20) = gdata(66);
        gdata(22) = gdata(67);
        mapstartx = gdata(68);
        mapstarty = gdata(69);
        gdata(26) = 7;
        fixstart = 1;
    }
    if (levelexitby == 2)
    {
        gdata(20) = gdata(64);
        gdata(22) = gdata(65);
        if (gdata(70) == 0)
        {
            if (gdata(19) != 2)
            {
                gdata(5) = adata(1, gdata(20));
                gdata(6) = adata(2, gdata(20));
                label_2735();
            }
        }
        if (gdata(20) == 41)
        {
            mapstartx = 29;
            mapstarty = 3;
            gdata(26) = 7;
            fixstart = 1;
        }
    }
    if (cdata(0, 0) == 0)
    {
        rc = 0;
        label_1540();
        gdata(20) = 7;
        gdata(850) = adata(30, 7);
        gdata(22) = 1;
    }
    if (rdtry > 1)
    {
        msgtemp += u8"(再生成"s + rdtry + u8"回)"s;
    }
    if (gdata(20) != gdata(19))
    {
        if (mdata(6) == 3 || gdata(181) == 0 || gdata(19) == 7 || mdata(6) == 2)
        {
            gdata(181) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12;
            gdata(180) = 0;
            gdata(182) = gdata(19);
        }
        if (adata(0, gdata(20)) != 1 && adata(0, gdata(20)) != 4
            && gdata(20) != 35)
        {
            autosave = 1 * (gdata(20) != 35);
        }
        if (mdata(6) != 1)
        {
            if (mdata(6) != 4 || mdata(6) == 5)
            {
                if (fixtransfermap == 0)
                {
                    gdata(5) = adata(1, gdata(19));
                    gdata(6) = adata(2, gdata(19));
                }
                else
                {
                    fixtransfermap = 0;
                }
            }
        }
        if (fixstart == 0)
        {
            gdata(26) = adata(3, gdata(20));
        }
        if (evfind(6))
        {
            msgtemp += lang(
                u8"あなたは家まで運ばれた。"s,
                u8"You were delivered to your home."s);
            label_2735();
        }
        else
        {
            if (adata(0, gdata(19)) == 1)
            {
                msgtemp += lang(
                    mapname(gdata(20)) + u8"に入った。"s,
                    u8"You entered "s + mapname(gdata(20)) + u8"."s);
            }
            else
            {
                if (mdata(6) == 7)
                {
                    msgtemp += lang(
                        mapname(gdata(20)) + u8"に戻った。"s,
                        u8"You returned to "s + mapname(gdata(20)));
                }
                else
                {
                    msgtemp += lang(
                        mapname(gdata(19)) + u8"を後にした。"s,
                        u8"You left "s + mapname(gdata(19)) + u8"."s);
                }
            }
        }
        if (gdata(80) > gdata(82))
        {
            if (adata(0, gdata(20)) == 1 || adata(0, gdata(20)) == 4)
            {
                msgtemp += lang(
                    u8"荷車の重量超過でかなり鈍足になっている！ "s,
                    u8"The weight of your cargo burdens your traveling speed."s);
            }
        }
    }
    if (gdata(20) == 25)
    {
        if (gdata(22) == 2)
        {
            gdata(20) = 26;
            gdata(22) = adata(10, gdata(20)) - 1;
            gdata(26) = 1;
            msgtemp += lang(
                u8"マウンテンパスに降りた。"s,
                u8"You entered the Mountain Pass."s);
        }
    }
    if (gdata(20) == 26)
    {
        if (gdata(22) == adata(10, gdata(20)))
        {
            gdata(20) = 25;
            gdata(22) = 1;
            gdata(26) = 2;
            msgtemp += lang(
                u8"ラーナの村に辿りついた。"s,
                u8"You reached the town of Larna."s);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            cdata(201, cnt) = 0;
            cdata(29, cnt) = 0;
            rowactend(cnt);
            if (cdata(0, cnt) != 1)
            {
                if (cdata(0, cnt) == 8)
                {
                    cdata(0, cnt) = 1;
                }
                continue;
            }
            map(cdata(1, cnt), cdata(2, cnt), 1) = 0;
            if (cnt != 0)
            {
                if (cdata(80, cnt) != 0)
                {
                    cdata(0, cnt) = 9;
                }
            }
        }
    }
    if (mdata(7) == 1)
    {
        label_1739();
    }
    else
    {
        label_1738();
        exist(exedir + u8"tmp\\mdata_"s + mid + u8".s2"s);
        if (strsize != -1)
        {
            fmode = 11;
            label_2107();
        }
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 0)
                {
                    --npcmemory(1, cdata(27, cnt));
                }
            }
        }
        {
            int cnt = 1320;
            for (int cnt_end = cnt + (4160); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) != 0)
                {
                }
            }
        }
    }
    mode = 2;
    label_17402();
    return;
}
void label_1738()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
        {
            rowactend(cnt);
            cdata(12, cnt) = 0;
        }
    }
    {
        int cnt = 16;
        for (int cnt_end = cnt + (39); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 1)
            {
                map(cdata(1, cnt), cdata(2, cnt), 1) = 0;
                cdata(0, cnt) = 3;
            }
        }
    }
    return;
}
void label_1739()
{
    label_1738();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    map(cnt, y, 7) = 0;
                }
            }
        }
    }
    fmode = 2;
    label_2107();
    file = u8"inv_"s + mid + u8".s2"s;
    fmode = 4;
    label_2107();
    return;
}
void label_1745()
{
    if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12
        >= adata(25, gdata(20)))
    {
        adata(24, gdata(20)) = rnd(10000);
        adata(25, gdata(20)) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12 + 24;
    }
    if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12
        >= mdata(3))
    {
        if (mdata(17) == 0)
        {
            if (mdata(3) != 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
                    {
                        y = cnt;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end;
                                 ++cnt)
                            {
                                if (map(cnt, y, 6) != 0)
                                {
                                    cell_featread(cnt, y);
                                    if (feat(1) >= 24 && feat(1) <= 28)
                                    {
                                        cell_featclear(cnt, y);
                                    }
                                }
                            }
                        }
                    }
                }
                inv_getheader(-1);
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) == 0)
                        {
                            continue;
                        }
                        if (inv(3, cnt) == 526)
                        {
                            if (inv(25, cnt) < 10)
                            {
                                inv(25, cnt) += 1;
                                inv(2, cnt) = 591;
                                cell_refresh(inv(5, cnt), inv(6, cnt));
                            }
                        }
                        if (mdata(6) == 3 || mdata(6) == 2)
                        {
                            if (inv(21, cnt) < 0)
                            {
                                ++inv(21, cnt);
                            }
                            if (inv(21, cnt) == 0)
                            {
                                inv(0, cnt) = 0;
                                cell_refresh(inv(5, cnt), inv(6, cnt));
                            }
                        }
                    }
                }
            }
            {
                int cnt = 57;
                for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                {
                    rc = cnt;
                    label_1539();
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cbit(964, cnt) == 1)
                    {
                        if (rnd(2))
                        {
                            cdata(0, cnt) = 0;
                            map(cdata(1, cnt), cdata(2, cnt), 1) = 0;
                        }
                    }
                }
            }
            p = rnd(mdata(1) * mdata(0) / 400 + 3);
            if (mdata(6) == 1)
            {
                p = rnd(40);
            }
            if (mdata(6) == 3)
            {
                p = rnd(rnd(rnd(12) + 1) + 1);
            }
            if (mdata(6) == 2)
            {
                p = rnd(p + 1);
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
                {
                    map_randsite();
                }
            }
        }
        mdata(3) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12 + 120;
    }
    if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12
        >= mdata(16))
    {
        if (mdata(16) == 0)
        {
            renewmulti = 1;
        }
        else
        {
            renewmulti = (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                          + gdata(10) * 24 * 30 * 12 - mdata(16))
                    / 24
                + 1;
        }
        if (adata(16, gdata(20)) == 31)
        {
            label_1733();
        }
        if (adata(16, gdata(20)) == 7)
        {
            {
                int cnt = 57;
                for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cbit(964, cnt) == 1)
                    {
                        cdata(0, cnt) = 0;
                        map(cdata(1, cnt), cdata(2, cnt), 1) = 0;
                    }
                }
            }
        }
        if (mdata(17) == 0)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
                {
                    y = cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end;
                             ++cnt)
                        {
                            if (map(cnt, y, 6) != 0)
                            {
                                cell_featread(cnt, y);
                                x = cnt;
                                if (feat(1) == 29)
                                {
                                    {
                                        int cnt = 0;
                                        for (int cnt_end = cnt + (renewmulti);
                                             cnt < cnt_end;
                                             ++cnt)
                                        {
                                            if (feat >= tile_plant + 2)
                                            {
                                                break;
                                            }
                                            if (chipm(0, map(x, y, 0)) == 2)
                                            {
                                                val = 1;
                                            }
                                            else
                                            {
                                                val = 0;
                                            }
                                            label_2233();
                                        }
                                    }
                                    cell_featset(
                                        cnt,
                                        y,
                                        feat,
                                        feat(1),
                                        feat(2),
                                        feat(3));
                                }
                            }
                        }
                    }
                }
            }
            if (mdata(6) == 3 || mdata(6) == 2 || gdata(20) == 7)
            {
                {
                    int cnt = 57;
                    for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) != 1)
                        {
                            continue;
                        }
                        generatemoney(cnt);
                        if (cdata(27, cnt) == 326)
                        {
                            if (itemfind(cnt, 60005, 1) == -1)
                            {
                                if (rnd(150) == 0)
                                {
                                    flt();
                                    itemcreate(cnt, 707, -1, -1, 0);
                                }
                                else
                                {
                                    flt(calcobjlv(cdata(38, cnt)), calcfixlv());
                                    flttypeminor = 60005;
                                    itemcreate(cnt, 0, -1, -1, 0);
                                }
                            }
                        }
                        rc = cnt;
                        if (rnd(5) == 0)
                        {
                            label_2668();
                        }
                        if (rnd(2) == 0)
                        {
                            if (inv_sum(rc) < 8)
                            {
                                flt(calcobjlv(cdata(38, rc)), calcfixlv(2));
                                itemcreate(rc, 0, -1, -1, 0);
                                if (stat != 0)
                                {
                                    if (inv(7, ci) <= 0 || inv(7, ci) >= 4000)
                                    {
                                        inv(0, ci) = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        mdata(16) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12 + 24;
    }
    return;
}
void label_1746()
{
    gsel(6);
    redraw(0);
    if (mdata(2) != mtilefilecur)
    {
        pos(0, 0);
        picload(exedir + u8"\\graphic\\map"s + mdata(2) + u8".bmp"s, 1);
        mtilefilecur = mdata(2);
        label_0201();
    }
    map_tileset(mdata(12));
    gsel(2);
    gmode(0);
    pos(0, 0);
    gcopy(6, 0, 0, 33 * inf_tiles, 25 * inf_tiles);
    p(0) = 5;
    p(1) = 5;
    p(2) = 5;
    shade = 15;
    if (mdata(14) == 2)
    {
        if (gdata(13) >= 24)
        {
            p(0) = 110;
            p(1) = 90;
            p(2) = 60;
            shade = 8;
        }
        if (gdata(13) >= 0 && gdata(13) < 4)
        {
            p(0) = 110;
            p(1) = 90;
            p(2) = 60;
            shade = 8;
        }
        if (gdata(13) >= 4 && gdata(13) < 10)
        {
            p(0) = 70 - (gdata(13) - 3) * 10;
            p(1) = 80 - (gdata(13) - 3) * 12;
            p(2) = 60 - (gdata(13) - 3) * 10;
            if (p < 10)
            {
                p = 10;
                shade = (gdata(13) - 3) * 2 + 8;
            }
        }
        if (gdata(13) >= 10 && gdata(13) < 12)
        {
            p(0) = 10;
            p(1) = 10;
            p(2) = 10;
            shade = 25;
        }
        if (gdata(13) >= 12 && gdata(13) < 17)
        {
            p(0) = 0;
            p(1) = 0;
            p(2) = 0;
            shade = 25;
        }
        if (gdata(13) >= 17 && gdata(13) < 21)
        {
            p(0) = 0 + (gdata(13) - 17) * 20;
            p(1) = 15 + (gdata(13) - 16) * 15;
            p(2) = 10 + (gdata(13) - 16) * 10;
            shade = 12;
        }
        if (gdata(13) >= 21 && gdata(13) < 24)
        {
            p(0) = 80 + (gdata(13) - 21) * 10;
            p(1) = 70 + (gdata(13) - 21) * 10;
            p(2) = 40 + (gdata(13) - 21) * 5;
            shade = 7;
        }
        if (gdata(17) == 3)
        {
            if (p < 40)
            {
                p(0) = 40;
                p(1) = 40;
                p(2) = 40;
            }
        }
        if (gdata(17) == 4)
        {
            if (p < 65)
            {
                p(0) = 65;
                p(1) = 65;
                p(2) = 65;
            }
        }
        if (gdata(20) == 33)
        {
            if (gdata(13) >= 17 || gdata(13) < 7)
            {
                p += 35;
                p(1) += 35;
                p(2) += 35;
            }
        }
    }
    pos(0, 0);
    gfini(33 * inf_tiles, 25 * inf_tiles);
    gfdec2(p, p(1), p(2));
    color(255, 255, 255);
    gmode(4 - 1, -1, 30);
    if (mdata(2) == 0)
    {
        pos(0, 192);
        gcopy(6, 0, 192, 1360, 48);
    }
    if (mdata(2) == 1)
    {
        pos(0, 1056);
        gcopy(6, 0, 1056, 1360, 48);
    }
    if (mdata(2) != 2)
    {
        pos(0, 336);
        gcopy(6, 0, 336, 1360, 48);
    }
    gmode(0);
    gsel(0);
    gmode(2, 24, 24);
    return;
}
int label_1747()
{
    p = 0;
    {
        int cnt = 450;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 8)
            {
                if (adata(20, cnt) != -1)
                {
                    ++p;
                }
            }
        }
    }
    p = 40 - p;
    if (p < 1)
    {
        p = 1;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            cxinit = rnd(mdata(0));
            cyinit = rnd(mdata(1));
            label_1753();
        }
    }
    label_1749();
    stat = 1;
    return stat;
}
void label_1748()
{
    if (gdata(79) == 1)
    {
        label_1752();
        label_1749();
        {
            int cnt = 450;
            for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
            {
                adata(16, cnt) = 0;
            }
        }
    }
    p = 0;
    {
        int cnt = 450;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 0)
            {
                continue;
            }
            if (adata(16, cnt) == 8)
            {
                if (adata(20, cnt) != -1)
                {
                    ++p;
                }
            }
        }
    }
    if (p <= 25 || rnd(150) == 0 || gdata(262) != 0 || gdata(79))
    {
        gdata(262) = 0;
        msgtemp += lang(
            u8"この大陸に大きな地殻変動が起こった。"s,
            u8"A sudden diastrophism hits the continent."s);
        {
            int cnt = 450;
            for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
            {
                if (adata(16, cnt) == 8)
                {
                    if (rnd(5) == 0 || adata(20, cnt) == -1)
                    {
                        adata(16, cnt) = 0;
                    }
                }
            }
        }
        label_1747();
        label_1749();
    }
    gdata(79) = 0;
    return;
}
void label_1749()
{
    label_1751();
    label_1750();
    return;
}
void label_1750()
{
    label_0201();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            cnt2 = cnt;
            if (gdata(850) != 4)
            {
                break;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    if (bddata(0, cnt2, cnt) != 0)
                    {
                        p = bddata(0, cnt2, cnt);
                        cell_featset(
                            bddata(1, cnt2, cnt),
                            bddata(2, cnt2, cnt),
                            bddata(3, cnt2, cnt),
                            34,
                            cnt2,
                            cnt);
                    }
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 0 || adata(15, cnt) == 0)
            {
                continue;
            }
            if (adata(30, cnt) != gdata(850))
            {
                continue;
            }
            if (adata(16, cnt) == 900)
            {
                adata(16, cnt) = 40;
                continue;
            }
            if (adata(16, cnt) >= 900)
            {
                adata(16, cnt) -= 800;
                continue;
            }
            if (adata(1, cnt) <= 0 || adata(2, cnt) <= 0
                || adata(1, cnt) >= mdata(0) || adata(2, cnt) >= mdata(1))
            {
                adata(1, cnt) = mdata(0) / 2;
                adata(2, cnt) = mdata(1) / 2;
            }
            p = cnt;
            if (chipm(7, map(adata(1, cnt), adata(2, cnt), 0)) && 4
                || map(adata(1, cnt), adata(2, cnt), 6) != 0)
            {
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        await();
                        dx = limit(rnd(cnt / 4 + 1) + 1, 1, mdata(0));
                        dy = limit(rnd(cnt / 4 + 1) + 1, 1, mdata(1));
                        x = adata(1, p) + rnd(dx) - rnd(dx);
                        y = adata(2, p) + rnd(dy) - rnd(dy);
                        if (x <= 0 || y <= 0 || x >= mdata(0) - 1
                            || y >= mdata(1) - 1)
                        {
                            continue;
                        }
                        if (33 <= map(x, y, 0) && map(x, y, 0) < 66)
                        {
                            continue;
                        }
                        if (chipm(7, map(x, y, 0)) && 4)
                        {
                            continue;
                        }
                        if (map(x, y, 6) != 0)
                        {
                            continue;
                        }
                        adata(1, p) = x;
                        adata(2, p) = y;
                        break;
                    }
                }
            }
            if (33 <= map(adata(1, cnt), adata(2, cnt), 0)
                    && map(adata(1, cnt), adata(2, cnt), 0) < 66
                || chipm(0, map(adata(1, cnt), adata(2, cnt), 0)) == 4
                || chipm(1, map(adata(1, cnt), adata(2, cnt), 0)) == 9)
            {
            }
            else
            {
                map(adata(1, cnt), adata(2, cnt), 0) = 33;
            }
            cell_featset(
                adata(1, cnt),
                adata(2, cnt),
                adata(15, cnt),
                15,
                cnt % 100,
                cnt / 100);
            if (adata(0, cnt) == 3 || adata(0, cnt) == 2)
            {
                map(adata(1, cnt), adata(2, cnt), 9) = 11;
            }
        }
    }
    return;
}
void label_1751()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (mdata(1)); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (mdata(0)); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    cell_featread(x, y);
                    if (feat(1) >= 24 && feat(1) <= 28)
                    {
                    }
                    else
                    {
                        map(x, y, 6) = 0;
                    }
                    map(x, y, 9) = 0;
                }
            }
        }
    }
    return;
}
void label_1752()
{
    p = 47;
    adata(16, p) = 47;
    adata(15, p) = 0;
    adata(0, p) = 1;
    adata(1, p) = 26;
    adata(2, p) = 23;
    adata(3, p) = 6;
    adata(4, p) = 2;
    adata(18, p) = 1;
    adata(9, p) = 50000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 47;
    p = 48;
    adata(16, p) = 48;
    adata(15, p) = 158;
    adata(0, p) = 2;
    adata(1, p) = 28;
    adata(2, p) = 1;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 47;
    p = 44;
    adata(16, p) = 44;
    adata(15, p) = 0;
    adata(0, p) = 1;
    adata(1, p) = 26;
    adata(2, p) = 23;
    adata(3, p) = 6;
    adata(4, p) = 2;
    adata(18, p) = 1;
    adata(9, p) = 50000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 44;
    p = 45;
    adata(16, p) = 45;
    adata(15, p) = 158;
    adata(0, p) = 2;
    adata(1, p) = 42;
    adata(2, p) = 1;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 44;
    p = 46;
    adata(16, p) = 46;
    adata(15, p) = 159;
    adata(0, p) = 2;
    adata(1, p) = 39;
    adata(2, p) = 13;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 44;
    p = 4;
    adata(16, p) = 4;
    adata(15, p) = 0;
    adata(0, p) = 1;
    adata(1, p) = 26;
    adata(2, p) = 23;
    adata(3, p) = 6;
    adata(4, p) = 2;
    adata(18, p) = 1;
    adata(9, p) = 50000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 5;
    adata(16, p) = 5;
    adata(15, p) = 132;
    adata(0, p) = 3;
    adata(1, p) = 26;
    adata(2, p) = 23;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 999;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 1;
    adata(30, p) = 4;
    p = 12;
    adata(16, p) = 12;
    adata(15, p) = 142;
    adata(0, p) = 3;
    adata(1, p) = 43;
    adata(2, p) = 32;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 999;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 2;
    adata(30, p) = 4;
    p = 15;
    adata(16, p) = 15;
    adata(15, p) = 136;
    adata(0, p) = 3;
    adata(1, p) = 53;
    adata(2, p) = 24;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 3;
    adata(30, p) = 4;
    p = 14;
    adata(16, p) = 14;
    adata(15, p) = 142;
    adata(0, p) = 3;
    adata(1, p) = 14;
    adata(2, p) = 35;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 999;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 4;
    adata(30, p) = 4;
    p = 11;
    adata(16, p) = 11;
    adata(15, p) = 132;
    adata(0, p) = 3;
    adata(1, p) = 3;
    adata(2, p) = 15;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 999;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 5;
    adata(30, p) = 4;
    p = 33;
    adata(16, p) = 33;
    adata(15, p) = 156;
    adata(0, p) = 3;
    adata(1, p) = 89;
    adata(2, p) = 14;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 6;
    adata(30, p) = 4;
    p = 36;
    adata(16, p) = 36;
    adata(15, p) = 132;
    adata(0, p) = 3;
    adata(1, p) = 61;
    adata(2, p) = 32;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 999;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(28, p) = 7;
    adata(30, p) = 4;
    p = 2;
    adata(16, p) = 2;
    adata(15, p) = 0;
    adata(0, p) = 4;
    adata(1, p) = 0;
    adata(2, p) = 0;
    adata(3, p) = 4;
    adata(4, p) = 1;
    adata(18, p) = 4;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 7;
    adata(16, p) = 7;
    adata(0, p) = 5;
    adata(3, p) = 8;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 10;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    if (gdata(24) == 0)
    {
        adata(15, p) = 138;
        adata(1, p) = 22;
        adata(2, p) = 21;
        adata(4, p) = 1;
        adata(18, p) = 3;
        adata(30, p) = 4;
    }
    p = 35;
    adata(16, p) = 35;
    adata(0, p) = 7;
    adata(3, p) = 8;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 1;
    adata(15, p) = 158;
    adata(1, p) = 35;
    adata(2, p) = 27;
    adata(4, p) = 1;
    adata(18, p) = 3;
    adata(30, p) = 4;
    p = 6;
    adata(16, p) = 6;
    adata(15, p) = 0;
    adata(0, p) = 7;
    adata(1, p) = 22;
    adata(2, p) = 21;
    adata(3, p) = 4;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 40;
    adata(16, p) = 40;
    adata(15, p) = 0;
    adata(0, p) = 7;
    adata(1, p) = 23;
    adata(2, p) = 21;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 13;
    adata(16, p) = 13;
    adata(15, p) = 0;
    adata(0, p) = 7;
    adata(1, p) = 22;
    adata(2, p) = 21;
    adata(3, p) = 4;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 3;
    adata(16, p) = 3;
    adata(15, p) = 139;
    adata(0, p) = 20;
    adata(1, p) = 23;
    adata(2, p) = 29;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 45;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 42;
    adata(16, p) = 42;
    adata(15, p) = 139;
    adata(0, p) = 20;
    adata(1, p) = 81;
    adata(2, p) = 51;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 50;
    adata(10, p) = 99999999;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 16;
    adata(16, p) = 16;
    adata(15, p) = 145;
    adata(0, p) = 21;
    adata(1, p) = 43;
    adata(2, p) = 4;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 15;
    adata(10, p) = 18;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 17;
    adata(16, p) = 17;
    adata(15, p) = 141;
    adata(0, p) = 20;
    adata(1, p) = 37;
    adata(2, p) = 20;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 25;
    adata(10, p) = 30;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 18;
    adata(16, p) = 18;
    adata(15, p) = 144;
    adata(0, p) = 23;
    adata(1, p) = 26;
    adata(2, p) = 44;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 17;
    adata(10, p) = 22;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 19;
    adata(16, p) = 19;
    adata(15, p) = 146;
    adata(0, p) = 20;
    adata(1, p) = 13;
    adata(2, p) = 32;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 30;
    adata(10, p) = 33;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 26;
    adata(16, p) = 26;
    adata(15, p) = 146;
    adata(0, p) = 20;
    adata(1, p) = 64;
    adata(2, p) = 43;
    adata(3, p) = 2;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 25;
    adata(10, p) = 29;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 27;
    adata(16, p) = 27;
    adata(15, p) = 146;
    adata(0, p) = 20;
    adata(1, p) = 29;
    adata(2, p) = 24;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 2;
    adata(10, p) = 5;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 38;
    adata(16, p) = 38;
    adata(15, p) = 146;
    adata(0, p) = 20;
    adata(1, p) = 43;
    adata(2, p) = 39;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 23;
    adata(10, p) = 27;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 28;
    adata(16, p) = 28;
    adata(15, p) = 146;
    adata(0, p) = 20;
    adata(1, p) = 38;
    adata(2, p) = 31;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 5;
    adata(10, p) = 5;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 37;
    adata(16, p) = 37;
    adata(15, p) = 160;
    adata(0, p) = 20;
    adata(1, p) = 4;
    adata(2, p) = 11;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 0;
    adata(9, p) = 10000;
    adata(17, p) = 20;
    adata(10, p) = 21;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 10;
    adata(16, p) = 10;
    adata(15, p) = 141;
    adata(0, p) = 6;
    adata(1, p) = 74;
    adata(2, p) = 31;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 4;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 20;
    adata(16, p) = 20;
    adata(15, p) = 147;
    adata(0, p) = 6;
    adata(1, p) = 51;
    adata(2, p) = 9;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 4;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 41;
    adata(16, p) = 41;
    adata(15, p) = 161;
    adata(0, p) = 6;
    adata(1, p) = 28;
    adata(2, p) = 37;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 12;
    adata(9, p) = 100000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    p = 21;
    adata(16, p) = 21;
    adata(15, p) = 148;
    adata(0, p) = 2;
    adata(1, p) = 21;
    adata(2, p) = 27;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 8;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 25;
    adata(16, p) = 25;
    adata(15, p) = 142;
    adata(0, p) = 2;
    adata(1, p) = 64;
    adata(2, p) = 47;
    adata(3, p) = 3;
    adata(4, p) = 1;
    adata(18, p) = 9;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 34;
    adata(16, p) = 34;
    adata(15, p) = 157;
    adata(0, p) = 2;
    adata(1, p) = 88;
    adata(2, p) = 25;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 29;
    adata(16, p) = 29;
    adata(15, p) = 162;
    adata(0, p) = 6;
    adata(1, p) = 18;
    adata(2, p) = 2;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 2;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 32;
    adata(16, p) = 32;
    adata(15, p) = 155;
    adata(0, p) = 2;
    adata(1, p) = 53;
    adata(2, p) = 21;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 43;
    adata(16, p) = 43;
    adata(15, p) = 158;
    adata(0, p) = 2;
    adata(1, p) = 27;
    adata(2, p) = 52;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 2;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 1;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 22;
    adata(16, p) = 22;
    adata(15, p) = 149;
    adata(0, p) = 6;
    adata(1, p) = 13;
    adata(2, p) = 43;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 33;
    adata(10, p) = 33;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 23;
    adata(16, p) = 23;
    adata(15, p) = 149;
    adata(0, p) = 6;
    adata(1, p) = 51;
    adata(2, p) = 32;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 33;
    adata(10, p) = 33;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 24;
    adata(16, p) = 24;
    adata(15, p) = 149;
    adata(0, p) = 6;
    adata(1, p) = 35;
    adata(2, p) = 10;
    adata(3, p) = 8;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 10000;
    adata(17, p) = 33;
    adata(10, p) = 33;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 30;
    adata(16, p) = 30;
    adata(15, p) = 0;
    adata(0, p) = 5;
    adata(1, p) = 35;
    adata(2, p) = 10;
    adata(3, p) = 1;
    adata(4, p) = 1;
    adata(18, p) = 100;
    adata(9, p) = 1000000;
    adata(17, p) = -999999;
    adata(10, p) = 999999;
    adata(21, p) = 1;
    adata(11, p) = 1;
    adata(12, p) = 1;
    adata(30, p) = 4;
    p = 9;
    adata(16, p) = 9;
    adata(15, p) = 0;
    adata(0, p) = 6;
    adata(1, p) = 20;
    adata(2, p) = 20;
    adata(3, p) = 4;
    adata(4, p) = 1;
    adata(18, p) = 4;
    adata(9, p) = 10000;
    adata(17, p) = 1;
    adata(10, p) = 45;
    adata(21, p) = 2;
    adata(11, p) = 0;
    adata(12, p) = 0;
    adata(30, p) = 4;
    return;
}
int label_1753()
{
    {
        int cnt = 450;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) != 0)
            {
                continue;
            }
            f = -1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1000); cnt < cnt_end; ++cnt)
                {
                    x = cxinit + rnd((cnt + 1)) - rnd((cnt + 1));
                    y = cyinit + rnd((cnt + 1)) - rnd((cnt + 1));
                    if (x <= 5 || y <= 5 || x >= mdata(0) - 6
                        || y >= mdata(1) - 6)
                    {
                        continue;
                    }
                    if (33 <= map(x, y, 0) && map(x, y, 0) < 66)
                    {
                        continue;
                    }
                    if (map(x, y, 0) > 19)
                    {
                        continue;
                    }
                    if (map(x, y, 6) % 1000 != 0)
                    {
                        continue;
                    }
                    p = 1;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
                        {
                            if (adata(16, cnt) == 0)
                            {
                                continue;
                            }
                            if (x >= adata(1, cnt) - 2
                                && x <= adata(1, cnt) + 2)
                            {
                                if (y >= adata(2, cnt) - 2
                                    && y <= adata(2, cnt) + 2)
                                {
                                    p = 0;
                                    break;
                                }
                            }
                        }
                    }
                    if (p == 0)
                    {
                        continue;
                    }
                    f = 1;
                    break;
                }
            }
            if (f == -1)
            {
                p = -1;
                break;
            }
            p = cnt;
            area = p;
            fmode = 13;
            label_2107();
            adata(0, p) = 20 + rnd(4);
            adata(16, p) = 8;
            adata(15, p) = 133;
            adata(1, p) = x;
            adata(2, p) = y;
            adata(3, p) = 1;
            adata(4, p) = 1;
            adata(18, p) = 1;
            adata(9, p) = 10000;
            adata(21, p) = 1;
            adata(30, p) = gdata(850);
            if (rnd(3))
            {
                adata(17, p) = rnd(cdata(38, 0) + 5) + 1;
            }
            else
            {
                adata(17, p) = rnd(50) + 1;
                if (rnd(5) == 0)
                {
                    adata(17, p) *= rnd(3) + 1;
                }
            }
            adata(10, p) = adata(17, p) + rnd(4) + 2;
            adata(11, p) = 1;
            adata(12, p) = 0;
            adata(20, p) = 0;
            adata(5, p) = rnd(length(mapnamerd));
            map(x, y, 6) = 1;
            if (adata(0, p) == 20)
            {
                adata(15, p) = 133;
                adata(18, p) = 0;
            }
            if (adata(0, p) == 21)
            {
                adata(15, p) = 137;
                adata(18, p) = 100;
            }
            if (adata(0, p) == 23)
            {
                adata(15, p) = 140;
                adata(18, p) = 200;
            }
            if (adata(0, p) == 22)
            {
                adata(15, p) = 135;
                adata(18, p) = 300;
            }
            break;
        }
    }
    stat = p;
    return stat;
}
void label_1754()
{
    if (gdata(20) == 33)
    {
        if (gdata(258) == 1)
        {
            if (cdata(0, gdata(259)) == 1)
            {
                if (gdata(3) < 30)
                {
                    if (rnd(4) == 0)
                    {
                        flt();
                        objlv = 1;
                        characreate(-1, 204, -3, 0);
                    }
                    if (rnd(10) == 0)
                    {
                        flt();
                        objlv = 1;
                        characreate(-1, 185, -3, 0);
                    }
                }
            }
        }
    }
    if (gdata(70) == 1008)
    {
        if (qdata(8, gdata(72)) != 3)
        {
            if (gdata(3) < gdata(84) / 600)
            {
                dbid = 0;
                if (rnd(4) == 0)
                {
                    dbid = 204;
                }
                if (rnd(10) == 0)
                {
                    dbid = 185;
                }
                if (dbid != 0)
                {
                    flt();
                    objlv = 1;
                    characreate(-1, dbid, -3, 0);
                    if (stat != 0)
                    {
                        cdata(9, rc) = -1;
                        cdata(69, rc) = -1;
                        cdata(201, rc) = 100;
                        cdata(29, rc) = qdata(13, gdata(72));
                    }
                }
            }
        }
    }
    if (gdata(20) == 16)
    {
        if (rnd(5) == 0)
        {
            r = sdata(50, 0) / 50;
            if (r < 6)
            {
                dmg = (6 - r) * (6 - r) * 2;
                txtef(3);
                txtmore();
                txt(lang(u8"熱い！"s, u8"It's hot!"s));
                dmghp(cc, dmg, -9);
            }
        }
        return;
    }
    if (gdata(20) == 11)
    {
        if (gdata(22) == 25)
        {
            ++gdata(261);
            x = 1;
            y = rnd(mdata(1));
            if (rnd(4) == 0)
            {
                x = mdata(0) - 2;
                y = rnd(mdata(1));
            }
            if (rnd(5) == 0)
            {
                x = rnd(mdata(0));
                y = 1;
            }
            if (rnd(6) == 0)
            {
                x = rnd(mdata(0));
                y = mdata(1) - 2;
            }
            p = 237;
            if (gdata(261) > 50)
            {
                if (rnd(10) == 0)
                {
                    p = 245;
                }
            }
            if (gdata(261) > 100)
            {
                if (rnd(10) == 0)
                {
                    p = 244;
                }
            }
            if (gdata(261) > 150)
            {
                if (rnd(10) == 0)
                {
                    p = 244;
                }
            }
            if (gdata(261) == 250)
            {
                snd(44);
                txtef(2);
                txt(lang(
                    u8"ジャーナルが更新された。"s,
                    u8"Your journal has been updated."s));
                gdata(459) = 3;
                txtef(9);
                txt(lang(
                    u8"伝令「パルミア軍の撤退が完了しました！これ以上ここに留まる必要はありません。機を見て地下から退却してください！」"s,
                    u8"The messenger "s
                        + cnvtalk(
                              u8"The retreat of our army is over now. You don't need to fight them any more. Please leave at once!"s)));
                txtmore();
                txt(lang(u8"階段が現れた。"s, u8"Suddenly, stairs appear."s));
                cell_featset(18, 9, tile_downstairs, 11, 1);
            }
            flt();
            characreate(-1, p, x, y);
            cdata(201, rc) = 1000;
            cdata(29, rc) = 0;
            return;
        }
    }
    if (gdata(20) == 41)
    {
        if (rnd(50) == 0)
        {
            if (cdata(49, 0) < -30)
            {
                txt(lang(
                    u8"あなたは罪を悔いた。"s, u8"You repent of your sin."s));
                modkarma(0, 1);
                p = rnd(8) + 10;
                if (sorg(p, 0) >= 10)
                {
                    skillmod(p, 0, -300);
                }
            }
        }
        if (cdata(49, 0) >= -30)
        {
            if (rnd(1000) == 0)
            {
                cell_featread(29, 6);
                if (feat(1) == 21)
                {
                    txt(lang(
                        u8"あなたはガードの足音が近づいてくるのに気付いた。"s,
                        u8"You hear footsteps coming towards your cell."s));
                    txt(lang(
                        u8"「そこのお前、もう反省したころだろう。出てもいいぞ」"s,
                        cnvtalk(
                            u8"Hey punk, our boss says you can leave the jail now. Do not come back, okay?"s)));
                    txt(lang(
                        u8"ガードは面倒くさそうにあなたの牢の扉を開けた。"s,
                        u8"A guard unenthusiastically unlocks your cell."s));
                    cell_featset(29, 6, tile_dooropen, 20, 0, -1);
                    snd(48);
                }
            }
        }
    }
    if (gdata(20) == 30)
    {
        if (gdata(17) == 2 || gdata(17) == 4 || gdata(17) == 1)
        {
            if (cdata(22, 0) < 5000)
            {
                if (cbit(986, 0) == 0)
                {
                    snd(18);
                    txt(lang(
                        u8"シェルターの貯蔵食品を食べた。"s,
                        u8"You eat stored food."s));
                    cdata(22, cc) += 5000;
                    label_2162();
                }
            }
            if (gdata(90) >= 15)
            {
                gdata(90) = 13;
            }
            mdata(9) = 1000000;
        }
        else
        {
            if (mdata(9) == 1000000)
            {
                mdata(9) = 10000;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                    {
                        cdata(10, cnt) = 0;
                    }
                }
                txt(lang(
                    u8"もうシェルターの中にいる必要は無い。"s,
                    u8"You don't need to stay in the shelter any longer."s));
            }
        }
    }
    if (adata(16, gdata(20)) == 101)
    {
        if (gdata(3) > 0)
        {
            if (rnd(25) == 0)
            {
                txtef(9);
                txtmore();
                txt(lang(u8" *ざわざわ* "s, u8"*noise*"s),
                    lang(u8"「ふむ…悪くないな」"s, cnvtalk(u8"Hmm. Not bad."s)),
                    lang(u8"「何だろう、これは」"s, cnvtalk(u8"What's this?"s)),
                    lang(u8"「ほほう…」"s, cnvtalk(u8"Ohh..."s)),
                    lang(
                        u8"「私も死んだらはく製に…」"s,
                        cnvtalk(u8"I want to be stuffed..."s)),
                    lang(
                        u8"「ここが噂の…」"s,
                        cnvtalk(u8"So this is the famous..."s)));
            }
            if (rnd(25) == 0)
            {
                txtef(9);
                txtmore();
                txt(lang(u8" *がやがや* "s, u8"*murmur*"s),
                    lang(
                        u8"「やだっ気持ち悪い」"s,
                        cnvtalk(u8"Gross! Disgusting."s)),
                    lang(
                        u8"「ねーねーこれ死んでるんでしょ？」"s,
                        cnvtalk(u8"Hey. Is it really dead?"s)),
                    lang(u8"「かわ、いー♪」"s, cnvtalk(u8"Scut!"s)),
                    lang(
                        u8"「今日はとことん見るぜ」"s,
                        cnvtalk(u8"Absolutely amazing."s)),
                    lang(
                        u8"「触ってもいいの？」"s, cnvtalk(u8"Can I touch?"s)));
            }
            if (rnd(15) == 0)
            {
                txtef(9);
                txtmore();
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                    {
                        if (en)
                        {
                            break;
                        }
                        if (gdata(123) > 8000)
                        {
                            txt(u8"「退屈ぅー」"s,
                                u8"「あまり見るものがないな」"s,
                                u8"「こんなので見物料とるの？」"s,
                                u8"館内は少し寂しい…"s);
                            break;
                        }
                        if (gdata(123) > 5000)
                        {
                            txt(u8"「いいんじゃない〜」"s,
                                u8"「まあ、普通の博物館だ」"s,
                                u8"「恋人を連れてくればよかったかも」"s,
                                u8"まあまあの客足だ。"s);
                            break;
                        }
                        if (gdata(123) > 2500)
                        {
                            txt(u8"「この雰囲気好きだなぁ」"s,
                                u8"「もう一度来ようよ」"s,
                                u8"「時間が経つのを忘れるね！」"s,
                                u8"館内はなかなか賑わっている。"s);
                            break;
                        }
                        if (gdata(123) > 500)
                        {
                            txt(u8"「来て良かった♪」"s,
                                u8"「よくこんなに集めたなあ」"s,
                                u8"「むぅ…興味深い」"s,
                                u8"客足が全く絶えない盛況ぶりだ。"s);
                            break;
                        }
                        txt(u8"「素晴らしいコレクションだ！」"s,
                            u8"「感動した」"s,
                            u8"「帰りたくないわ♪」"s,
                            u8"来客は食い入るように展示物を眺めている。"s);
                    }
                }
            }
            return;
        }
    }
    if (adata(16, gdata(20)) == 102)
    {
        if (gdata(3) > 0)
        {
            if (rnd(25) == 0)
            {
                txtef(9);
                txtmore();
                txt(lang(u8" *ざわざわ* "s, u8"*murmur*"s),
                    lang(
                        u8"「これ欲しい〜」"s,
                        cnvtalk(u8"I want this! I want this!"s)),
                    lang(
                        u8"「何だろう、これは」"s,
                        cnvtalk(u8"Oh what's this?"s)),
                    lang(u8"「お買い物♪」"s, cnvtalk(u8"I'm just watching"s)),
                    lang(
                        u8"「金が足りん…」"s,
                        cnvtalk(u8"My wallet is empty..."s)),
                    lang(
                        u8"「ここが噂の…」"s,
                        cnvtalk(u8"So this is the famous...."s)));
            }
            return;
        }
    }
    return;
}
void label_1755()
{
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(3, cnt) == 555 || inv(3, cnt) == 600)
            {
                continue;
            }
            inv(0, cnt) = 0;
            cell_refresh(inv(5, cnt), inv(6, cnt));
        }
    }
    if (adata(29, gdata(20)) == 1)
    {
        flt();
        itemcreate(-1, 763, 29, 16, 0);
        if (stat != 0)
        {
            inv(21, ci) = 1;
        }
        flt();
        itemcreate(-1, 686, 29, 16, 0);
        if (stat != 0)
        {
            inv(21, ci) = 1;
        }
        flt();
        itemcreate(-1, 171, 29, 17, 0);
        if (stat != 0)
        {
            inv(25, ci) = 6;
            inv(21, ci) = 1;
        }
        flt();
        itemcreate(-1, 756, 29, 17, 0);
        if (stat != 0)
        {
            inv(21, ci) = 5;
        }
        flt();
        characreate(-1, 345, 48, 19);
        if (stat != 0)
        {
            cdata(150, rc) = 3;
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 348, 30, 17);
        if (stat != 0)
        {
            cdata(150, rc) = 3;
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 174, 38, 19);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
            cbitmod(985, rc, 1);
            cdatan(0, rc) = lang(u8"オパートスの信者"s, u8"Opatos Fanatic"s);
            if (rnd(2))
            {
                cdatan(0, rc) = lang(u8"マニの信者"s, u8"Mani Fanatic"s);
            }
            else
            {
                cdatan(0, rc) =
                    lang(u8"エヘカトルの信者"s, u8"Ehekatl Fanatic"s);
            }
        }
        flt();
        characreate(-1, 347, 35, 19);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 347, 37, 18);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 347, 37, 21);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 347, 39, 20);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 347, 38, 21);
        if (stat != 0)
        {
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 70, 17, 8);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cbitmod(991, rc, 1);
            cdata(150, rc) = 1002;
            cdata(151, rc) = 10;
            snfood(cdatan(0, rc));
        }
        flt();
        characreate(-1, 239, 25, 8);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cdata(9, rc) = 0;
            cdata(69, rc) = 0;
            cbitmod(991, rc, 1);
            cdata(150, rc) = 1018;
            cdata(151, rc) = 30;
            cdatan(0, rc) = randomname();
            cdatan(0, rc) = lang(
                u8"おみやげ屋の"s + cdatan(0, rc),
                sncnv(cdatan(0, rc)) + u8"the souvenir vendor"s);
        }
        flt();
        characreate(-1, 271, 24, 22);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cdata(9, rc) = 0;
            cdata(69, rc) = 0;
            cbitmod(991, rc, 1);
            cdata(150, rc) = 1018;
            cdata(151, rc) = 30;
            cdatan(0, rc) = randomname();
            cdatan(0, rc) = lang(
                u8"おみやげ屋の"s + cdatan(0, rc),
                sncnv(cdatan(0, rc)) + u8"the souvenir vendor"s);
        }
        flt();
        characreate(-1, 1, 38, 12);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cdata(150, rc) = 1007;
            cdata(151, rc) = 10;
            snblack(cdatan(0, rc));
            cbitmod(991, rc, 1);
        }
        flt();
        characreate(-1, 271, 28, 9);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cdata(9, rc) = 0;
            cdata(69, rc) = 0;
            cbitmod(991, rc, 1);
            cdata(150, rc) = 1022;
            cdata(151, rc) = 30;
            cdatan(0, rc) = randomname();
            cdatan(0, rc) = lang(
                u8"屋台商人の"s + cdatan(0, rc),
                sncnv(cdatan(0, rc)) + u8"the street vendor"s);
        }
        flt();
        characreate(-1, 271, 29, 24);
        if (stat != 0)
        {
            cdata(202, rc) = 3;
            cdata(9, rc) = 0;
            cdata(69, rc) = 0;
            cbitmod(991, rc, 1);
            cdata(150, rc) = 1022;
            cdata(151, rc) = 30;
            cdatan(0, rc) = randomname();
            cdatan(0, rc) = lang(
                u8"屋台商人屋の"s + cdatan(0, rc),
                sncnv(cdatan(0, rc)) + u8"the street vendor"s);
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                flt();
                characreate(-1, 349, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
                flt();
                characreate(-1, 350, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
            {
                flt();
                characreate(-1, 326, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (7); cnt < cnt_end; ++cnt)
            {
                flt();
                characreate(-1, 335, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
                flt();
                characreate(-1, 185, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
                flt();
                characreate(-1, 274, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
                flt();
                characreate(-1, 174, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
            {
                flt();
                characreate(-1, 332, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
                flt();
                characreate(-1, 185, -3, 0);
                if (stat != 0)
                {
                    cbitmod(991, rc, 1);
                }
            }
        }
    }
    else
    {
        {
            int cnt = 57;
            for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
            {
                if (cbit(991, cnt) == 1)
                {
                    chara_vanquish(cnt);
                }
            }
        }
    }
    return;
}
int cdbit(int prm_985, int prm_986)
{
    HMMBITCHECK(card_at_tcg(30 + prm_985 / 32, prm_986), prm_985 % 32);
    stat = stat;
    return stat;
}
void cdbitmod(int prm_987, int prm_988, int prm_989)
{
    if (prm_989 == 0)
    {
        HMMBITOFF(card_at_tcg(30 + prm_987 / 32, prm_988), prm_987 % 32);
        return;
    }
    HMMBITON(card_at_tcg(30 + prm_987 / 32, prm_988), prm_987 % 32);
    return;
}
void cpflip()
{
    if (cp_at_tcg == 1)
    {
        cp_at_tcg = 0;
        tp_at_tcg = 1;
        cl_at_tcg = 1;
        tl_at_tcg = 3;
        ch_at_tcg = 0;
        th_at_tcg = 3;
    }
    else
    {
        cp_at_tcg = 1;
        tp_at_tcg = 0;
        cl_at_tcg = 2;
        tl_at_tcg = 1;
        ch_at_tcg = 3;
        th_at_tcg = 0;
    }
    return;
}
void cpisme()
{
    if (ct_at_tcg == 0)
    {
        cp_at_tcg = 0;
        tp_at_tcg = 1;
        cl_at_tcg = 1;
        tl_at_tcg = 3;
        ch_at_tcg = 0;
        th_at_tcg = 3;
    }
    else
    {
        cp_at_tcg = 1;
        tp_at_tcg = 0;
        cl_at_tcg = 2;
        tl_at_tcg = 1;
        ch_at_tcg = 3;
        th_at_tcg = 0;
    }
    return;
}
void cpisenemy()
{
    if (ct_at_tcg == 0)
    {
        cp_at_tcg = 1;
        tp_at_tcg = 0;
        cl_at_tcg = 2;
        tl_at_tcg = 1;
        ch_at_tcg = 3;
        th_at_tcg = 0;
    }
    else
    {
        cp_at_tcg = 0;
        tp_at_tcg = 1;
        cl_at_tcg = 1;
        tl_at_tcg = 3;
        ch_at_tcg = 0;
        th_at_tcg = 3;
    }
    return;
}
std::string cnvrare(int prm_990)
{
    s_at_tcg = "";
    {
        int cnt = 0;
        for (int cnt_end = cnt + (limit(5 - prm_990 / 20, 1, 5)); cnt < cnt_end;
             ++cnt)
        {
            s_at_tcg += u8"*"s;
        }
    }
    return s_at_tcg;
}
int card_ref(int prm_991)
{
    cardrefcost = 0;
    cardrefhp = 0;
    cardrefattack = 0;
    cardrefskill = 0;
    cardrefdomain = 0;
    cardrefrare = 100;
    dbid = prm_991;
    label_1756();
    if (cardreftype == 0)
    {
        cardreftype = 10;
        cardrefdomain = 4;
    }
    rtvaln = cardrefn;
    if (cardreftype == 10)
    {
        cardrefbg = cardrefdomain;
        rtvaln += lang(u8" <クリーチャー>"s, u8" <Creature>"s)
            + lang(u8"  種族:"s, u8"  Race:"s) + cardrefrace + u8"  Hp:"s
            + cardrefhp + u8"  Atk:"s + cardrefattack;
    }
    if (cardreftype == 30)
    {
        cardrefbg = 6;
        rtvaln += lang(u8" <土地>"s, u8" <Land>"s);
    }
    if (cardreftype == 20)
    {
        cardrefbg = 5;
        rtvaln += lang(u8" <スペル>"s, u8" <Spell>"s);
    }
    rtvaln +=
        lang(u8"  ドメイン:"s, u8"  Domain:"s) + domname_at_tcg(cardrefdomain);
    rtvaln += lang(u8"  レア度:"s, u8"  Rare:"s) + cnvrare(cardrefrare);
    if (cardrefskill != 0)
    {
        s_at_tcg = "";
        if (cardreftype == 10)
        {
            s_at_tcg += lang(u8"スキル:"s, u8"Skill:"s);
        }
        s_at_tcg += cdrefn_at_tcg(cardrefskill);
        talk_conv(s_at_tcg, 95);
        rtvaln += u8"\n"s + s_at_tcg;
    }
    stat = dbid;
    return stat;
}
void makecardlist()
{
    int lmax_at_tcg = 0;
    int c1_at_tcg = 0;
    int c2_at_tcg = 0;
    DIM3(clist_at_tcg, 10, 4);
    DIM2(clistmax_at_tcg, 4);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            cnt2_at_tcg = cnt;
            lmax_at_tcg = 0;
            if (cnt == 0)
            {
                p_at_tcg = 0;
            }
            else
            {
                p_at_tcg = 3;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
                {
                    if (card_at_tcg(1, cnt) != cnt2_at_tcg)
                    {
                        continue;
                    }
                    if (card_at_tcg(0, cnt) != 2)
                    {
                        continue;
                    }
                    clist_at_tcg(lmax_at_tcg, p_at_tcg) = cnt;
                    ++lmax_at_tcg;
                }
            }
            clist_at_tcg(lmax_at_tcg, p_at_tcg) = -1;
            clistmax_at_tcg(p_at_tcg) = lmax_at_tcg;
            lmax_at_tcg = 0;
            if (cnt == 0)
            {
                p_at_tcg = 1;
            }
            else
            {
                p_at_tcg = 2;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
                {
                    if (card_at_tcg(1, cnt) != cnt2_at_tcg)
                    {
                        continue;
                    }
                    if (card_at_tcg(0, cnt) != 1)
                    {
                        continue;
                    }
                    clist_at_tcg(lmax_at_tcg, p_at_tcg) = cnt;
                    ++lmax_at_tcg;
                }
            }
            clist_at_tcg(lmax_at_tcg, p_at_tcg) = -1;
            clistmax_at_tcg(p_at_tcg) = lmax_at_tcg;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
        {
            p_at_tcg = cnt;
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    f_at_tcg = 0;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (clistmax_at_tcg(p_at_tcg));
                             cnt < cnt_end;
                             ++cnt)
                        {
                            c1_at_tcg = clist_at_tcg(cnt, p_at_tcg);
                            c2_at_tcg = clist_at_tcg(cnt + 1, p_at_tcg);
                            if (c2_at_tcg == -1)
                            {
                                continue;
                            }
                            if (card_at_tcg(4, c2_at_tcg)
                                < card_at_tcg(4, c1_at_tcg))
                            {
                                i_at_tcg = clist_at_tcg(cnt, p_at_tcg);
                                clist_at_tcg(cnt, p_at_tcg) =
                                    clist_at_tcg(cnt + 1, p_at_tcg);
                                clist_at_tcg(cnt + 1, p_at_tcg) = i_at_tcg;
                                f_at_tcg = 1;
                                break;
                            }
                        }
                    }
                    if (f_at_tcg == 0)
                    {
                        break;
                    }
                }
            }
        }
    }
    label_1844();
    return;
}
void cardhelp(const std::string& prm_992, int prm_993)
{
    int helpdur_at_tcg = 0;
    int dur_at_tcg = 0;
    if (helpdur_at_tcg > 1)
    {
        if (prm_993 == 0)
        {
            --helpdur_at_tcg;
            return;
        }
    }
    if (prm_993 == 0)
    {
        dur_at_tcg = 1;
    }
    else
    {
        dur_at_tcg = prm_993;
    }
    helpmsg_at_tcg = prm_992;
    helpdur_at_tcg = dur_at_tcg;
    return;
}
void tcgdrawcard(int prm_994, int prm_995)
{
    int selected_at_tcg = 0;
    selected_at_tcg = 0;
    if (prm_995 == 0)
    {
        if (cursor_at_tcg)
        {
            if (cs_at_tcg != -1)
            {
                if (clist_at_tcg(cs_at_tcg, csline_at_tcg) == prm_994)
                {
                    selected_at_tcg = 1;
                }
            }
        }
    }
    else
    {
        if (prm_994 == dlist_at_tcg(0, dsc_at_tcg))
        {
            selected_at_tcg = 1;
        }
    }
    if (selected_at_tcg)
    {
        gmode(2);
        pos(card_at_tcg(2, prm_994) - 5, card_at_tcg(3, prm_994) - 5);
        gcopy(7, 168, 144, 82, 106);
        if (0 || cdbit(1, prm_994) == 1 || card_at_tcg(1, prm_994) == 0)
        {
            cardhelp(carddetailn_at_tcg(prm_994));
        }
        else
        {
            cardhelp(""s);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1 + (selected_at_tcg == 1)); cnt < cnt_end;
             ++cnt)
        {
            x_at_tcg = card_at_tcg(2, prm_994);
            y_at_tcg = card_at_tcg(3, prm_994);
            if (cnt == 1)
            {
                if (card_at_tcg(6, prm_994) != 0)
                {
                    break;
                }
                x_at_tcg = basex_at_tcg + 20;
                y_at_tcg = basey_at_tcg + 490;
                gmode(6 - 1, -1, 140);
                pos(x_at_tcg - 6, y_at_tcg - 6);
                gcopy(7, 168, 144, 82, 106);
            }
            gmode(2);
            if (card_at_tcg(6, prm_994) == 2)
            {
                gmode(4 - 1, -1, card_at_tcg(7, prm_994) * 15);
            }
            pos(x_at_tcg, y_at_tcg);
            if (cdbit(1, prm_994) == 1
                || card_at_tcg(1, prm_994) == 0 && cnt == 1)
            {
                if (card_at_tcg(17, prm_994) > 0)
                {
                    gcopy(7, 72 + card_at_tcg(19, prm_994) * 72, 0, 72, 96);
                    p_at_tcg = card_at_tcg(17, prm_994) % 1000;
                    chara_preparepic(p_at_tcg, card_at_tcg(17, prm_994) / 1000);
                    color(0, 0, 0);
                    pos(x_at_tcg + 13,
                        y_at_tcg + 32 - chipc(4, p_at_tcg)
                            + chipc(3, p_at_tcg) / 6);
                    gcopy(5, 0, 960, chipc(2, p_at_tcg), chipc(3, p_at_tcg));
                }
                else
                {
                    p_at_tcg = abs(card_at_tcg(17, prm_994));
                    pos(x_at_tcg, y_at_tcg);
                    gcopy(2, p_at_tcg % 22 * 72, p_at_tcg / 22 * 96, 72, 96);
                }
                color(255, 255, 255);
                if (card_at_tcg(9, prm_994) == 10)
                {
                    pos(x_at_tcg + 39, y_at_tcg - 8);
                    gcopy(7, 48, 96, 36, 26);
                    pos(x_at_tcg + 56 - (card_at_tcg(12, prm_994) > 9) * 4 - en,
                        y_at_tcg - 1 - en);
                    mes(card_at_tcg(12, prm_994));
                    pos(x_at_tcg - 3, y_at_tcg - 8);
                    gcopy(7, 0, 96, 36, 26);
                    pos(x_at_tcg + 11 - (card_at_tcg(11, prm_994) > 9) * 4 - en,
                        y_at_tcg - 1 - en);
                    mes(card_at_tcg(11, prm_994));
                    if (card_at_tcg(13, prm_994) != 0)
                    {
                        pos(x_at_tcg + 39, y_at_tcg + 78 - en);
                        gcopy(7, 144, 96, 36, 26);
                        pos(x_at_tcg + 56 - en, y_at_tcg + 86 - en);
                        mes(card_at_tcg(20, prm_994));
                    }
                }
                if (card_at_tcg(10, prm_994) != 0)
                {
                    pos(x_at_tcg - 3, y_at_tcg + 78);
                    gcopy(7, 96, 96, 36, 26);
                    pos(x_at_tcg + 11 - (card_at_tcg(10, prm_994) > 9) * 4 - en,
                        y_at_tcg + 86 - en);
                    mes(card_at_tcg(10, prm_994));
                }
            }
            else
            {
                gcopy(7, 0, 0, 72, 96);
            }
            if (cnt == 0)
            {
                if (card_at_tcg(0, prm_994) == 1)
                {
                    if (cdbit(1, prm_994))
                    {
                        if (card_at_tcg(9, prm_994) == 10)
                        {
                            if (card_at_tcg(14, prm_994) == -1)
                            {
                                pos(x_at_tcg, y_at_tcg + 18);
                                gcopy(7, 288, 120, 24, 24);
                            }
                            if (card_at_tcg(14, prm_994) == -2)
                            {
                                pos(x_at_tcg, y_at_tcg + 18);
                                gcopy(7, 312, 120, 24, 24);
                            }
                            if (card_at_tcg(14, prm_994) == -3)
                            {
                                pos(x_at_tcg, y_at_tcg + 18);
                                gcopy(7, 264, 120, 24, 24);
                            }
                            if (card_at_tcg(14, prm_994) == -4)
                            {
                                pos(x_at_tcg, y_at_tcg + 18);
                                gcopy(7, 240, 120, 24, 24);
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}
void tcgdraw()
{
    int t_at_tcg = 0;
    int anime_at_tcg = 0;
    int chaintime_at_tcg = 0;
    elona_vector2<int> star_at_tcg;
    int screenupdate_at_tcg = 0;
label_1772_internal:
    ++t_at_tcg;
    redraw(0);
    label_1825();
    anime_at_tcg = 0;
    font(lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0);
    color(255, 255, 255);
    gmode(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            x_at_tcg = holderix_at_tcg(cnt) - holderspace_at_tcg;
            y_at_tcg = holderiy_at_tcg(cnt);
            pos(x_at_tcg, y_at_tcg);
            gcopy(7, 96, 144, 72, 96);
            pos(x_at_tcg + 14, y_at_tcg + 75);
            mes(""s + cpdata_at_tcg(7, cnt) + u8"/"s + cpdata_at_tcg(8, cnt));
        }
    }
    font(lang(cfg_font1, cfg_font2), 13 + en - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            c_at_tcg = maxcard_at_tcg - cnt - 1;
            if (cc_at_tcg != 0)
            {
                if (c_at_tcg == 0)
                {
                    c_at_tcg = cc_at_tcg;
                }
                else
                {
                    if (c_at_tcg == cc_at_tcg)
                    {
                        c_at_tcg = 0;
                    }
                }
            }
            if (card_at_tcg(0, c_at_tcg) <= 0)
            {
                if (card_at_tcg(7, c_at_tcg) == 0)
                {
                    continue;
                }
            }
            if (card_at_tcg(0, c_at_tcg) == 4)
            {
                continue;
            }
            if (card_at_tcg(2, c_at_tcg) != card_at_tcg(4, c_at_tcg)
                || card_at_tcg(3, c_at_tcg) != card_at_tcg(5, c_at_tcg)
                || card_at_tcg(7, c_at_tcg) > 0)
            {
                anime_at_tcg = 1;
                p_at_tcg = 0;
                if (card_at_tcg(2, c_at_tcg) != card_at_tcg(4, c_at_tcg))
                {
                    p_at_tcg =
                        (card_at_tcg(4, c_at_tcg) - card_at_tcg(2, c_at_tcg))
                        / 6;
                    if (card_at_tcg(2, c_at_tcg) > card_at_tcg(4, c_at_tcg))
                    {
                        --p_at_tcg;
                    }
                    else
                    {
                        ++p_at_tcg;
                    }
                }
                card_at_tcg(2, c_at_tcg) += p_at_tcg;
                p_at_tcg = 0;
                if (card_at_tcg(3, c_at_tcg) != card_at_tcg(5, c_at_tcg))
                {
                    p_at_tcg =
                        (card_at_tcg(5, c_at_tcg) - card_at_tcg(3, c_at_tcg))
                        / 6;
                    if (card_at_tcg(3, c_at_tcg) > card_at_tcg(5, c_at_tcg))
                    {
                        --p_at_tcg;
                    }
                    else
                    {
                        ++p_at_tcg;
                    }
                }
                card_at_tcg(3, c_at_tcg) += p_at_tcg;
                if (card_at_tcg(7, c_at_tcg) > 0)
                {
                    --card_at_tcg(7, c_at_tcg);
                }
            }
            tcgdrawcard(c_at_tcg);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(255, 255, 255);
    gmode(2);
    if (cursor_at_tcg)
    {
        if (cs_at_tcg == -1)
        {
            if (phase_at_tcg == 2)
            {
                if (selectmode_at_tcg == 0)
                {
                    cardhelp(lang(
                        u8"メインフェイズを終了する。"s,
                        u8"End your main phase."s));
                }
                else
                {
                    cardhelp(lang(u8"ブロックしない。"s, u8"No blocker."s));
                }
            }
            pos(holderix_at_tcg - holderspace_at_tcg - 5, holderiy_at_tcg - 5);
            gcopy(7, 168, 144, 82, 106);
        }
    }
    if (chaintime_at_tcg > 0)
    {
        if (chaintime_at_tcg == cfg_chaintime)
        {
            DIM3(star_at_tcg, 2, 10);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    star_at_tcg(0, cnt) = rnd(72) - 32;
                    star_at_tcg(1, cnt) = rnd(40) - 32;
                }
            }
        }
        if (chaintime_at_tcg > 5)
        {
            gmode(5 - 1, -1, limit(chaintime_at_tcg * 3 - 40, 0, 255));
            color(0, 0, 0);
            cnt2_at_tcg = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    pos(chainx_at_tcg + star_at_tcg(0, cnt),
                        chainy_at_tcg + star_at_tcg(1, cnt));
                    gcopy(
                        7,
                        64 * limit((17 - chaintime_at_tcg / 3), 0, 8),
                        416,
                        64,
                        64);
                    star_at_tcg(1, cnt) += 2;
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
            {
                p_at_tcg = (t_at_tcg / 4 + cnt) % 7;
                color(p_at_tcg * 20, 25 + p_at_tcg * 20, 60 + p_at_tcg * 20);
                boxl(
                    chainx_at_tcg - p_at_tcg,
                    chainy_at_tcg - p_at_tcg,
                    chainx_at_tcg + 72 + p_at_tcg,
                    chainy_at_tcg + 96 + p_at_tcg);
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (efllistmax_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (efllist_at_tcg(4, cnt) <= 0)
            {
                continue;
            }
            --efllist_at_tcg(4, cnt);
            if (efllist_at_tcg(0, cnt) == 1)
            {
                font(lang(cfg_font1, cfg_font2), 20 - en * 2, 1);
                color(0, 0, 0);
                pos(efllist_at_tcg(5, cnt) + 11,
                    efllist_at_tcg(6, cnt) + efllist_at_tcg(4, cnt) / 3 + 21);
                mes(abs(efllist_at_tcg(1, cnt)));
                color(255, 100, 100);
                pos(efllist_at_tcg(5, cnt) + 10,
                    efllist_at_tcg(6, cnt) + efllist_at_tcg(4, cnt) / 3 + 20);
                mes(abs(efllist_at_tcg(1, cnt)));
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                gmode(5 - 1, -1, (efllist_at_tcg(4, cnt) - 30) * 8);
                color(0, 0, 0);
                pos(efllist_at_tcg(5, cnt) - 12, efllist_at_tcg(6, cnt) + 10);
                gcopy(
                    7,
                    64 * limit((10 - (efllist_at_tcg(4, cnt) - 30) / 3), 0, 8),
                    360,
                    48,
                    64);
            }
            if (efllist_at_tcg(0, cnt) == 2)
            {
                font(lang(cfg_font1, cfg_font2), 20 - en * 2, 1);
                color(0, 0, 0);
                pos(efllist_at_tcg(2, cnt) + 31,
                    efllist_at_tcg(3, cnt) + efllist_at_tcg(4, cnt) / 3 + 26);
                mes(abs(efllist_at_tcg(1, cnt)));
                color(100, 100, 255);
                pos(efllist_at_tcg(2, cnt) + 30,
                    efllist_at_tcg(3, cnt) + efllist_at_tcg(4, cnt) / 3 + 25);
                mes(abs(efllist_at_tcg(1, cnt)));
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                color(255, 255, 255);
                gmode(5 - 1, -1, (efllist_at_tcg(4, cnt) - 30) * 8);
                color(0, 0, 0);
                pos(efllist_at_tcg(5, cnt), efllist_at_tcg(6, cnt) + 24);
                gcopy(
                    7,
                    64 * limit((10 - (efllist_at_tcg(4, cnt) - 30) / 3), 0, 8),
                    416,
                    64,
                    64);
                pos(efllist_at_tcg(2, cnt), efllist_at_tcg(3, cnt) + 24);
                gcopy(
                    7,
                    64 * limit((10 - (efllist_at_tcg(4, cnt) - 30) / 3), 0, 8),
                    416,
                    64,
                    64);
            }
        }
    }
    gmode(2);
    if (screenupdate_at_tcg == -1)
    {
        screenupdate_at_tcg = 0;
        label_1773();
        return;
    }
    else
    {
        await(15);
        redraw(1);
    }
    if (anime_at_tcg == 0)
    {
        label_1773();
        return;
    }
    goto label_1772_internal;
}
void label_1773()
{
    return;
}
void efllistadd(
    int prm_996,
    int prm_997,
    int prm_998,
    int prm_999,
    int prm_1000,
    int prm_1001)
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (efllistmax_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (efllist_at_tcg(4, cnt) <= 0)
            {
                efllist_at_tcg(0, cnt) = prm_996;
                efllist_at_tcg(1, cnt) = prm_997;
                if (prm_996 == 1)
                {
                    efllist_at_tcg(4, cnt) = 60;
                    efllist_at_tcg(5, cnt) = prm_998 + rnd(30);
                    efllist_at_tcg(6, cnt) = prm_999 + rnd(20);
                }
                if (prm_996 == 2)
                {
                    efllist_at_tcg(4, cnt) = 60;
                    efllist_at_tcg(5, cnt) = prm_998;
                    efllist_at_tcg(6, cnt) = prm_999;
                    efllist_at_tcg(2, cnt) = prm_1000;
                    efllist_at_tcg(3, cnt) = prm_1001;
                }
                break;
            }
        }
    }
    return;
}
int create_card(int prm_1002, int prm_1003)
{
    card_ref(prm_1003);
    card_at_tcg(18, prm_1002) = stat;
    card_at_tcg(9, prm_1002) = cardreftype;
    card_at_tcg(10, prm_1002) = cardrefcost;
    card_at_tcg(16, prm_1002) = cardrefhp;
    card_at_tcg(11, prm_1002) = cardrefattack;
    card_at_tcg(13, prm_1002) = cardrefskill;
    card_at_tcg(17, prm_1002) = cardrefpic;
    card_at_tcg(19, prm_1002) = cardrefbg;
    carddetailn_at_tcg(prm_1002) = rtvaln;
    cardn_at_tcg(0, prm_1002) = cardrefrace;
    card_at_tcg(20, prm_1002) = cardrefskillcost;
    card_at_tcg(23, prm_1002) = cardrefdomain;
    stat = prm_1002;
    return stat;
}
void cardpos(int prm_1004, int prm_1005)
{
    int l_at_tcg = 0;
    int spotlistmax_at_tcg = 0;
    elona_vector1<int> spotlist_at_tcg;
    int x2_at_tcg = 0;
    if (prm_1004 == 0)
    {
        l_at_tcg = 1;
    }
    else
    {
        l_at_tcg = 2;
    }
    p_at_tcg = -1;
    spotlistmax_at_tcg = clistmax_at_tcg(l_at_tcg);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (spotlistmax_at_tcg); cnt < cnt_end; ++cnt)
        {
            spotlist_at_tcg(cnt) = clist_at_tcg(cnt, l_at_tcg);
            if (p_at_tcg == -1)
            {
                if (card_at_tcg(9, clist_at_tcg(cnt, l_at_tcg)) != 10)
                {
                    p_at_tcg = cnt;
                }
            }
        }
    }
    if (prm_1005 != -1)
    {
        if (p_at_tcg != -1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (spotlistmax_at_tcg - p_at_tcg);
                     cnt < cnt_end;
                     ++cnt)
                {
                    spotlist_at_tcg(spotlistmax_at_tcg - cnt) =
                        spotlist_at_tcg(spotlistmax_at_tcg - cnt - 1);
                }
            }
            spotlist_at_tcg(p_at_tcg) = prm_1005;
        }
        else
        {
            spotlist_at_tcg(spotlistmax_at_tcg) = prm_1005;
        }
        ++spotlistmax_at_tcg;
    }
    x2_at_tcg = spotspace_at_tcg;
    x_at_tcg = basex_at_tcg + 466 - spotlistmax_at_tcg * x2_at_tcg / 2;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (spotlistmax_at_tcg); cnt < cnt_end; ++cnt)
        {
            p_at_tcg = spotlist_at_tcg(cnt);
            card_at_tcg(4, p_at_tcg) = x_at_tcg + cnt * x2_at_tcg;
            card_at_tcg(5, p_at_tcg) = spotiy_at_tcg(prm_1004);
        }
    }
    return;
}
void gravecard(int prm_1006)
{
    if (card_at_tcg(0, prm_1006) == 1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
            {
                if (card_at_tcg(0, cnt) != 1)
                {
                    continue;
                }
                if (card_at_tcg(1, cnt) != card_at_tcg(1, prm_1006))
                {
                    continue;
                }
                if (card_at_tcg(2, cnt) > card_at_tcg(2, prm_1006))
                {
                    card_at_tcg(4, cnt) -= spotspace_at_tcg;
                }
            }
        }
    }
    card_at_tcg(0, prm_1006) = -2;
    ++cpdata_at_tcg(8, card_at_tcg(1, prm_1006));
    n_at_tcg = card_at_tcg(1, prm_1006);
    if (gravesum_at_tcg(n_at_tcg) > 2)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
            {
                gravelist_at_tcg(cnt, n_at_tcg) =
                    gravelist_at_tcg(cnt + 1, n_at_tcg);
            }
        }
        gravelist_at_tcg(2, n_at_tcg) = prm_1006;
    }
    else
    {
        gravelist_at_tcg(gravesum_at_tcg(n_at_tcg), n_at_tcg) = prm_1006;
        ++gravesum_at_tcg(n_at_tcg);
    }
    makecardlist();
    cardpos(card_at_tcg(1, prm_1006), -1);
    label_1823();
    return;
}
void dmgcard(int prm_1007, int prm_1008)
{
    if (prm_1008 > 0)
    {
        snd(2);
    }
    efllistadd(
        1, -prm_1008, card_at_tcg(2, prm_1007), card_at_tcg(3, prm_1007));
    card_at_tcg(12, prm_1007) -= prm_1008;
    if (card_at_tcg(12, prm_1007) < 0)
    {
        card_at_tcg(12, prm_1007) = 0;
    }
    if (card_at_tcg(12, prm_1007) <= 0)
    {
        card_at_tcg(6, prm_1007) = 2;
        card_at_tcg(7, prm_1007) = 18;
        tcgdraw();
        gravecard(prm_1007);
    }
    return;
}
void dmgplayer(int prm_1009, int prm_1010)
{
    if (prm_1010 > 0)
    {
        snd(2);
    }
    efllistadd(1, -prm_1010, cpx_at_tcg(prm_1009), cpy_at_tcg(prm_1009));
    cpdata_at_tcg(4, prm_1009) -= prm_1010;
    if (cpdata_at_tcg(4, prm_1009) < 0)
    {
        cpdata_at_tcg(4, prm_1009) = 0;
    }
    return;
}
void delbottomcard(int prm_1011)
{
    int delcard_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1011)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) == 2)
            {
                card_at_tcg(4, cnt) -= holderspace_at_tcg;
                if (card_at_tcg(4, cnt) < holderix_at_tcg(prm_1011))
                {
                    card_at_tcg(6, cnt) = 2;
                    card_at_tcg(7, cnt) = 18;
                    delcard_at_tcg = cnt;
                }
            }
        }
    }
    tcgdraw();
    gravecard(delcard_at_tcg);
    return;
}
int gameover()
{
    if (cpdata_at_tcg(4, 1) <= 0)
    {
        stat = 2;
        return stat;
    }
    if (cpdata_at_tcg(4, 0) <= 0)
    {
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int getholdersum(int prm_1012)
{
    p_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1012)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) == 2)
            {
                ++p_at_tcg;
            }
        }
    }
    stat = p_at_tcg;
    return stat;
}
int getspotsum(int prm_1013)
{
    p_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1013)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) == 1)
            {
                ++p_at_tcg;
            }
        }
    }
    stat = p_at_tcg;
    return stat;
}
int getdecksum(int prm_1014)
{
    p_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1014)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) == -1)
            {
                ++p_at_tcg;
            }
        }
    }
    stat = p_at_tcg;
    return stat;
}
int cardcandeclareattack(int prm_1015)
{
    if (card_at_tcg(0, prm_1015) != 1)
    {
        stat = 0;
        return stat;
    }
    if (card_at_tcg(9, prm_1015) != 10)
    {
        stat = 0;
        return stat;
    }
    if (cdbit(0, prm_1015))
    {
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
int cardcanblock(int prm_1016)
{
    if (card_at_tcg(0, prm_1016) != 1)
    {
        stat = 0;
        return stat;
    }
    if (card_at_tcg(9, prm_1016) != 10)
    {
        stat = 0;
        return stat;
    }
    if (cdbit(0, prm_1016))
    {
        if (card_at_tcg(14, prm_1016) != -4)
        {
            stat = 0;
            return stat;
        }
    }
    stat = 1;
    return stat;
}
int cardcanuseskill(int prm_1017)
{
    if (card_at_tcg(0, prm_1017) != 1)
    {
        stat = 0;
        return stat;
    }
    if (card_at_tcg(9, prm_1017) != 10)
    {
        stat = 0;
        return stat;
    }
    if (cdbit(0, prm_1017))
    {
        stat = 0;
        return stat;
    }
    if (card_at_tcg(20, prm_1017) == 0)
    {
        stat = 0;
        return stat;
    }
    if (card_at_tcg(20, prm_1017) > cpdata_at_tcg(5, card_at_tcg(1, prm_1017)))
    {
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
void getrandomcard(int prm_1018)
{
    if (getdecksum(prm_1018) == 0)
    {
        cpdata_at_tcg(4, prm_1018) = 0;
        return;
    }
    p_at_tcg = getholdersum(prm_1018);
label_1789_internal:
    c_at_tcg = rnd(maxcard_at_tcg);
    if (card_at_tcg(0, c_at_tcg) == -1)
    {
        if (card_at_tcg(1, c_at_tcg) == prm_1018)
        {
            goto label_1790_internal;
            return;
        }
    }
    goto label_1789_internal;
label_1790_internal:
    card_at_tcg(0, c_at_tcg) = 2;
    card_at_tcg(1, c_at_tcg) = prm_1018;
    card_at_tcg(2, c_at_tcg) = deckix_at_tcg(prm_1018);
    card_at_tcg(3, c_at_tcg) = deckiy_at_tcg(prm_1018);
    card_at_tcg(4, c_at_tcg) =
        holderix_at_tcg(prm_1018) + p_at_tcg * holderspace_at_tcg;
    card_at_tcg(5, c_at_tcg) = holderiy_at_tcg(prm_1018);
    card_at_tcg(6, c_at_tcg) = 0;
    card_at_tcg(7, c_at_tcg) = 0;
    card_at_tcg(12, c_at_tcg) = card_at_tcg(16, c_at_tcg);
    --cpdata_at_tcg(7, prm_1018);
    if (prm_1018 == 0)
    {
        cdbitmod(1, c_at_tcg, 1);
    }
    else
    {
        cdbitmod(1, c_at_tcg, 0);
    }
    if (getholdersum(prm_1018) > 7)
    {
        delbottomcard(prm_1018);
    }
    makecardlist();
    return;
}
void saccard(int prm_1019, int prm_1020)
{
    snd(96);
    ++sac_at_tcg;
    if (prm_1020 == 0)
    {
        cardhelp(lang(u8"カードを捧げた。"s, u8"You sacrifice the card."s), 40);
    }
    else
    {
        cardhelp(
            lang(
                u8"相手はカードを捧げた。"s,
                u8"The opponent sacrifices the card."s),
            40);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1020)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) != 2)
            {
                continue;
            }
            if (card_at_tcg(2, cnt) <= card_at_tcg(2, prm_1019))
            {
                continue;
            }
            card_at_tcg(4, cnt) -= holderspace_at_tcg;
        }
    }
    ++cpdata_at_tcg(6, prm_1020);
    ++cpdata_at_tcg(5, prm_1020);
    card_ref(500 + card_at_tcg(23, prm_1019) * 2 + rnd(2));
    create_card(prm_1019, stat);
    cdbitmod(1, prm_1019, 1);
    card_at_tcg(4, prm_1019) = landix_at_tcg(prm_1020)
        + landsum_at_tcg(prm_1020)
            * limit(
                  (landspace_at_tcg - landsum_at_tcg(prm_1020) / 2),
                  4,
                  landspace_at_tcg);
    card_at_tcg(5, prm_1019) = landiy_at_tcg(prm_1020);
    landlist_at_tcg(landsum_at_tcg(prm_1020), prm_1020) = prm_1019;
    ++landsum_at_tcg(prm_1020);
    tcgdraw();
    makecardlist();
    card_at_tcg(0, prm_1019) = 4;
    makecardlist();
    label_1823();
    efllistadd(
        2,
        1,
        card_at_tcg(2, prm_1019),
        card_at_tcg(3, prm_1019),
        cpx_at_tcg(prm_1020),
        cpy_at_tcg(prm_1020));
    return;
}
void opencard(int prm_1021)
{
    snd(71);
    cdbitmod(1, prm_1021, 1);
    tcgdraw();
    return;
}
void label_1793()
{
    SDIM3(cdrefn_at_tcg, 50, 4);
    p_at_tcg = 0;
    cdrefn_at_tcg(p_at_tcg) = lang(
        u8"自分のデッキからカードを1枚選び受け取る。"s,
        u8"Player chooses and receives 1 card from his deck."s);
    p_at_tcg = 2;
    cdrefn_at_tcg(p_at_tcg) = lang(
        u8"プレイヤーはカードを2枚ドローする。"s, u8"Player draws 2 cards."s);
    p_at_tcg = 3;
    cdrefn_at_tcg(p_at_tcg) = lang(
        u8"場のクリーチャー1体を選択し、所有者の手札に戻す。"s,
        u8"Return target creature to its owner's hand."s);
    return;
}
void actionproc()
{
    int ac_at_tcg = 0;
    int ap_at_tcg = 0;
    int tc_at_tcg = 0;
    spellused_at_tcg = 0;
label_1799_internal:
    if (stack_at_tcg > 0)
    {
        cc_at_tcg = cardstack_at_tcg(0, stack_at_tcg - 1);
        if (spellused_at_tcg == 0)
        {
            if (cardstack_at_tcg(1, stack_at_tcg - 1) == -1)
            {
                if (cp_at_tcg == 0)
                {
                    card_at_tcg(5, cc_at_tcg) -= 25;
                }
                else
                {
                    card_at_tcg(5, cc_at_tcg) += 25;
                }
                card_at_tcg(14, cc_at_tcg) = -1;
                cdbitmod(0, cc_at_tcg, 1);
                tcgdraw();
                attacktarget_at_tcg = -1;
                cpisenemy();
                chainmode_at_tcg = 1;
                if (cp_at_tcg == player_at_tcg)
                {
                    cs_at_tcg = -1;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (clistmax_at_tcg(cl_at_tcg));
                             cnt < cnt_end;
                             ++cnt)
                        {
                            c_at_tcg = clist_at_tcg(cnt, cl_at_tcg);
                            if (cdbit(0, c_at_tcg) == 0
                                || card_at_tcg(14, c_at_tcg) == -4)
                            {
                                cs_at_tcg = cnt;
                                csline_at_tcg = cl_at_tcg;
                                break;
                            }
                        }
                    }
                    selectmode_at_tcg = 1;
                    label_1836();
                    selectmode_at_tcg = -1;
                }
                else
                {
                    aiblock_at_tcg = 1;
                    label_18462();
                    aiblock_at_tcg = 0;
                }
                chainmode_at_tcg = 0;
                if (spellused_at_tcg)
                {
                    goto label_1799_internal;
                }
            }
        }
    }
    --stack_at_tcg;
    if (stack_at_tcg < 0)
    {
        label_1802();
        return;
    }
    ac_at_tcg = cardstack_at_tcg(0, stack_at_tcg);
    act_at_tcg = cardstack_at_tcg(1, stack_at_tcg);
    ap_at_tcg = cardstack_at_tcg(2, stack_at_tcg);
    if (ap_at_tcg != cp_at_tcg)
    {
        cpflip();
    }
    if (cardstack_at_tcg(1, stack_at_tcg) == -3)
    {
        act_at_tcg = card_at_tcg(13, ac_at_tcg);
        card_at_tcg(14, ac_at_tcg) = -3;
    }
    if (card_at_tcg(0, ac_at_tcg) != 1)
    {
        goto label_1799_internal;
    }
    switch (act_at_tcg)
    {
    case -1:
        tc_at_tcg = attacktarget_at_tcg;
        if (tc_at_tcg != -1)
        {
            card_at_tcg(14, tc_at_tcg) = -2;
            cdbitmod(0, tc_at_tcg, 1);
            if (cp_at_tcg == 0)
            {
                card_at_tcg(5, tc_at_tcg) += 25;
            }
            else
            {
                card_at_tcg(5, tc_at_tcg) -= 25;
            }
            tcgdraw();
            dmgcard(tc_at_tcg, card_at_tcg(11, ac_at_tcg));
            dmgcard(ac_at_tcg, card_at_tcg(11, tc_at_tcg));
            if (cp_at_tcg == 0)
            {
                card_at_tcg(5, tc_at_tcg) -= 25;
            }
            else
            {
                card_at_tcg(5, tc_at_tcg) += 25;
            }
        }
        else
        {
            dmgplayer(tp_at_tcg, card_at_tcg(11, ac_at_tcg));
        }
        if (cp_at_tcg == 0)
        {
            card_at_tcg(5, ac_at_tcg) += 25;
        }
        else
        {
            card_at_tcg(5, ac_at_tcg) -= 25;
        }
        tcgdraw();
        goto label_1800_internal;
    case 2:
        getrandomcard(ap_at_tcg);
        tcgdraw();
        getrandomcard(ap_at_tcg);
        tcgdraw();
        goto label_1800_internal;
    case 1:
        deckmode_at_tcg = 1;
        deckrefn_at_tcg = cardn_at_tcg(0, ac_at_tcg);
        label_1828();
        goto label_1800_internal;
    case 0:
        deckmode_at_tcg = 2;
        label_1828();
        goto label_1800_internal;
    }
label_1800_internal:
    if (card_at_tcg(9, ac_at_tcg) == 20)
    {
        card_at_tcg(6, ac_at_tcg) = 2;
        card_at_tcg(7, ac_at_tcg) = 18;
        tcgdraw();
        gravecard(ac_at_tcg);
    }
    goto label_1799_internal;
}
void label_1802()
{
    stack_at_tcg = 0;
    return;
}
int putcard(int prm_1024, int prm_1025)
{
    if (getspotsum(prm_1025) >= 8)
    {
        if (prm_1025 == player_at_tcg)
        {
            snd(27);
            cardhelp(
                lang(u8"これ以上は場に出せない。"s, u8"Your field is full."s),
                40);
        }
        stat = -1;
        return stat;
    }
    if (card_at_tcg(10, prm_1024) > cpdata_at_tcg(5, prm_1025))
    {
        if (prm_1025 == player_at_tcg)
        {
            snd(27);
            cardhelp(
                lang(u8"マナが足りない。"s, u8"You don't have enough mana."s),
                40);
        }
        stat = -3;
        return stat;
    }
    cpdata_at_tcg(5, prm_1025) -= card_at_tcg(10, prm_1024);
    if (prm_1025 == 0)
    {
        card_at_tcg(5, prm_1024) -= 25;
    }
    else
    {
        card_at_tcg(5, prm_1024) += 25;
    }
    tcgdraw();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(1, cnt) != prm_1025)
            {
                continue;
            }
            if (card_at_tcg(0, cnt) != 2)
            {
                continue;
            }
            if (card_at_tcg(2, cnt) <= card_at_tcg(2, prm_1024))
            {
                continue;
            }
            card_at_tcg(4, cnt) -= holderspace_at_tcg;
        }
    }
    if (card_at_tcg(9, prm_1024) == 30)
    {
        cdbitmod(1, prm_1024, 1);
        card_at_tcg(4, prm_1024) = landix_at_tcg(prm_1025)
            + landsum_at_tcg(prm_1025)
                * limit(
                      (landspace_at_tcg - landsum_at_tcg(prm_1025) / 2),
                      4,
                      landspace_at_tcg);
        card_at_tcg(5, prm_1024) = landiy_at_tcg(prm_1025);
        landlist_at_tcg(landsum_at_tcg(prm_1025), prm_1025) = prm_1024;
        ++landsum_at_tcg(prm_1025);
        tcgdraw();
        makecardlist();
        card_at_tcg(0, prm_1024) = 4;
        makecardlist();
        label_1823();
        stat = 1;
        return stat;
    }
    p_at_tcg = getspotsum(prm_1025);
    card_at_tcg(0, prm_1024) = 1;
    cdbitmod(1, prm_1024, 0);
    card_at_tcg(22, prm_1024) = 0;
    card_at_tcg(14, prm_1024) = -4;
    cdbitmod(0, prm_1024, 1);
    cardpos(prm_1025, prm_1024);
    tcgdraw();
    makecardlist();
    opencard(prm_1024);
    stat = 1;
    return stat;
}
void tcgdrawbg()
{
    int w_at_tcg = 0;
    int h_at_tcg = 0;
    redraw(0);
    x_at_tcg = 960;
    y_at_tcg = 96;
    w_at_tcg = 128;
    h_at_tcg = 128;
    gmode(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (windowh / h_at_tcg + 1); cnt < cnt_end; ++cnt)
        {
            cnt2_at_tcg = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (windoww / w_at_tcg + 1);
                     cnt < cnt_end;
                     ++cnt)
                {
                    pos(windoww - (cnt + 1) * w_at_tcg,
                        windowh - (cnt2_at_tcg + 1) * h_at_tcg);
                    gcopy(3, x_at_tcg, y_at_tcg, w_at_tcg, h_at_tcg);
                }
            }
        }
    }
    gmode(2);
    return;
}
void tcginit()
{
    elona_vector1<int> spotix_at_tcg;
    turn_at_tcg = 0;
    efllistmax_at_tcg = 10;
    cardmode_at_tcg = 0;
    label_1793();
    DIM3(card_at_tcg, 50, maxcard_at_tcg);
    SDIM4(cardn_at_tcg, 16, 2, maxcard_at_tcg);
    DIM3(cpdata_at_tcg, 20, 2);
    DIM3(efllist_at_tcg, 10, efllistmax_at_tcg);
    DIM3(elist_at_tcg, 10, 23);
    DIM2(gravesum_at_tcg, 2);
    DIM2(landsum_at_tcg, 2);
    DIM3(landlist_at_tcg, maxcard_at_tcg, 2);
    DIM3(cardstack_at_tcg, 5, 100);
    DIM3(gravelist_at_tcg, 4, 2);
    SDIM3(carddetailn_at_tcg, 200, maxcard_at_tcg);
    SDIM1(cardrefn);
    SDIM1(helpmsg_at_tcg);
    DIM2(deck, 1000);
    SDIM3(domname_at_tcg, 20, 10);
    phasen_at_tcg(0) = u8"Begin"s;
    phasen_at_tcg(1) = u8"Draw"s;
    phasen_at_tcg(2) = u8"Main"s;
    phasen_at_tcg(3) = u8"End"s;
    phasen_at_tcg(4) = "";
    domname_at_tcg(0) = lang(u8"ルルウィ"s, u8"Lulwy"s);
    domname_at_tcg(1) = lang(u8"クミロミ"s, u8"Kumiromi"s);
    domname_at_tcg(2) = lang(u8"ヤカテクト"s, u8"Yacatect"s);
    domname_at_tcg(3) = lang(u8"ジュア"s, u8"Jure"s);
    domname_at_tcg(4) = lang(u8"マニ"s, u8"etc"s);
    chainx_at_tcg = 0;
    chainy_at_tcg = 0;
    cfg_chaintime = 50;
    basew_at_tcg = 800;
    baseh_at_tcg = 600;
    basex_at_tcg = (windoww - basew_at_tcg) / 2;
    basey_at_tcg = (windowh - baseh_at_tcg) / 2;
    graveix_at_tcg(0) = basex_at_tcg + 638;
    graveix_at_tcg(1) = basex_at_tcg + 638;
    graveiy_at_tcg(0) = basey_at_tcg + 315;
    graveiy_at_tcg(1) = basey_at_tcg + 125;
    gravespace_at_tcg = 22;
    landix_at_tcg(0) = basex_at_tcg + 150;
    landix_at_tcg(1) = basex_at_tcg + 150;
    landiy_at_tcg(0) = basey_at_tcg + 315;
    landiy_at_tcg(1) = basey_at_tcg + 125;
    landspace_at_tcg = 22;
    spotix_at_tcg(0) = basex_at_tcg + 138;
    spotix_at_tcg(1) = basex_at_tcg + 138;
    spotiy_at_tcg(0) = basey_at_tcg + 290;
    spotiy_at_tcg(1) = basey_at_tcg + 150;
    spotspace_at_tcg = 80;
    holderix_at_tcg(0) = basex_at_tcg + 222;
    holderix_at_tcg(1) = basex_at_tcg + 222;
    holderiy_at_tcg(0) = basey_at_tcg + 420;
    holderiy_at_tcg(1) = basey_at_tcg + 20;
    holderspace_at_tcg = 80;
    deckix_at_tcg(0) = basex_at_tcg + 800;
    deckix_at_tcg(1) = basex_at_tcg + 800;
    deckiy_at_tcg(0) = basey_at_tcg + 420;
    deckiy_at_tcg(1) = basey_at_tcg + 20;
    selectmode_at_tcg = -1;
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_card.bmp"s, 1);
    gsel(7);
    picload(exedir + u8"graphic\\interface2.bmp"s);
    gsel(2);
    pos(0, 0);
    picload(exedir + u8"graphic\\card0.bmp"s, 1);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\bg_card.bmp"s, 1);
    label_1826();
    tcgdrawbg();
    return;
}
int calcstartcard(int prm_1026)
{
    stat = 6 - (cpdata_at_tcg(9, prm_1026) > 2)
        - (cpdata_at_tcg(9, prm_1026) > 3) - (cpdata_at_tcg(9, prm_1026) > 4);
    return stat;
}
void calcstartattb(int prm_1027)
{
    cpdata_at_tcg(4, prm_1027) = 40 - cpdata_at_tcg(9, prm_1027) * 5;
    cpdata_at_tcg(6, prm_1027) = 0;
    return;
}
void calcdomain()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            DIM2(domain_at_tcg, 5);
            p_at_tcg = cnt;
            cpdata_at_tcg(9, p_at_tcg) = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
                {
                    if (card_at_tcg(1, cnt) != p_at_tcg)
                    {
                        continue;
                    }
                    if (domain_at_tcg(card_at_tcg(23, cnt)) == 0)
                    {
                        domain_at_tcg(card_at_tcg(23, cnt)) = 1;
                    }
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                {
                    if (domain_at_tcg(cnt))
                    {
                        ++cpdata_at_tcg(9, p_at_tcg);
                    }
                }
            }
            calcstartattb(p_at_tcg);
        }
    }
    return;
}
void calcdecksize()
{
    int cardsize_at_tcg = 0;
    gdata(830 + curdeck) = 0;
    cardsize_at_tcg = 0;
    cpdata_at_tcg(9, 0) = 0;
    DIM2(domain_at_tcg, 5);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            cardsize_at_tcg += card(0, cnt);
            if (deck(card_at_tcg(18, cnt)) == 0)
            {
                continue;
            }
            gdata(830 + curdeck) += deck(card_at_tcg(18, cnt));
            domain_at_tcg(card_at_tcg(23, cnt)) = 1;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            if (domain_at_tcg(cnt))
            {
                ++cpdata_at_tcg(9, 0);
            }
        }
    }
    calcstartattb(0);
    return;
}
void tcgdeck()
{
    std::string file_at_tcg;
    maxcard_at_tcg = 1000;
    tcginit();
    cardmode_at_tcg = 1;
    i_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1000); cnt < cnt_end; ++cnt)
        {
            if (card(0, cnt) == 0)
            {
                continue;
            }
            create_card(i_at_tcg, cnt);
            card_at_tcg(0, i_at_tcg) = -1;
            card_at_tcg(1, i_at_tcg) = 0;
            ++i_at_tcg;
        }
    }
label_1812_internal:
    tcgdrawbg();
    s_at_tcg(0) = lang(u8"白"s, u8"White"s);
    s_at_tcg(1) = lang(u8"青"s, u8"Blue"s);
    s_at_tcg(2) = lang(u8"銀"s, u8"Silver"s);
    s_at_tcg(3) = lang(u8"赤"s, u8"Red"s);
    s_at_tcg(4) = lang(u8"黒"s, u8"Black"s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            s_at_tcg(cnt) += lang(u8"のデッキ"s, u8" Deck"s);
            file_at_tcg = ""s + exedir + u8"tmp\\deck_"s + cnt + u8".s2"s;
            exist(file_at_tcg);
            if (strsize == -1)
            {
                s_at_tcg(cnt) += lang(u8" (新規作成)"s, u8" (New)"s);
            }
            else
            {
                if (gdata(830 + cnt) != 30)
                {
                    s_at_tcg(cnt) +=
                        u8" (NG "s + gdata((830 + cnt)) + u8"/"s + 30 + u8")"s;
                }
                if (gdata(813) == cnt)
                {
                    s_at_tcg(cnt) += u8" [Use]"s;
                }
            }
            promptl(0, promptmax) = s_at_tcg(cnt);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
        }
    }
    val(0) = basex_at_tcg + 400;
    val(1) = basey_at_tcg + 230;
    val(2) = 300;
    val(3) = 1;
    label_2131();
    if (rtval != -1)
    {
        DIM2(deck, 1000);
        curdeck = rtval;
        file = ""s + exedir + u8"tmp\\deck_"s + curdeck + u8".s2"s;
        exist(file);
        if (strsize != -1)
        {
            promptl(0, promptmax) = lang(u8"デッキの構築"s, u8"Edit Deck"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            promptl(0, promptmax) =
                lang(u8"メインデッキに設定"s, u8"Set as Main Deck"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            val(0) = 400;
            val(1) = basey_at_tcg + 230;
            val(2) = 240;
            val(3) = 1;
            label_2131();
            if (rtval == -1)
            {
                goto label_1812_internal;
            }
            if (rtval == 1)
            {
                gdata(813) = curdeck;
                goto label_1812_internal;
            }
            if (rtval == 0)
            {
                fmode = 24;
                label_2107();
            }
        }
        decksizebk_at_tcg = gdata(830 + curdeck);
        snd(95);
        calcdecksize();
        deckmode_at_tcg(0) = 0;
        deckmode_at_tcg(1) = rtval_at_tcg;
        label_1828();
        goto label_1812_internal;
    }
    return;
}
void tcgmain()
{
    int rp_at_tcg = 0;
    maxcard_at_tcg = 80;
    tcginit();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            rp_at_tcg = cnt;
            cpx_at_tcg(cnt) = basex_at_tcg + 23;
            cpy_at_tcg(cnt) = basey_at_tcg + 236 - cnt * 120;
            cpdata_at_tcg(4, cnt) = 30;
            cpdata_at_tcg(8, cnt) = 0;
            cpdata_at_tcg(7, cnt) = 30;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    cc_at_tcg = rp_at_tcg * 40 + cnt;
                    card_ref(rnd(1000));
                    if (cardrefcost == 0)
                    {
                        --cnt;
                        continue;
                    }
                    create_card(cc_at_tcg, stat);
                    card_at_tcg(0, cc_at_tcg) = -1;
                    card_at_tcg(1, cc_at_tcg) = rp_at_tcg;
                }
            }
        }
    }
    calcdomain();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            cp_at_tcg = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (calcstartcard(cnt)); cnt < cnt_end;
                     ++cnt)
                {
                    getrandomcard(cp_at_tcg);
                }
            }
        }
    }
    ct_at_tcg = 0;
    player_at_tcg = -1;
label_1814_internal:
    cpisme();
    label_1816();
    if (gameover())
    {
        label_1815();
        return;
    }
    label_1817();
    if (gameover())
    {
        label_1815();
        return;
    }
    label_1818();
    if (gameover())
    {
        label_1815();
        return;
    }
    label_1819();
    if (ct_at_tcg == 0)
    {
        ct_at_tcg = 1;
    }
    else
    {
        ct_at_tcg = 0;
    }
    goto label_1814_internal;
}
void label_1815()
{
    return;
}
void label_1816()
{
    phase_at_tcg = 0;
    ++turn_at_tcg;
    tcgdraw();
    await(50);
    sac_at_tcg = 0;
    cpdata_at_tcg(5, cp_at_tcg) = cpdata_at_tcg(6, cp_at_tcg);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(0, cnt) != 1)
            {
                continue;
            }
            if (card_at_tcg(1, cnt) != cp_at_tcg)
            {
                continue;
            }
            ++card_at_tcg(22, cnt);
            card_at_tcg(14, cnt) = 0;
            card_at_tcg(12, cnt) = card_at_tcg(16, cnt);
            cdbitmod(0, cnt, 0);
        }
    }
    return;
}
void label_1817()
{
    phase_at_tcg = 1;
    tcgdraw();
    await(50);
    getrandomcard(cp_at_tcg);
    tcgdraw();
    return;
}
void label_1818()
{
    phase_at_tcg = 2;
    tcgdraw();
    await(50);
    if (cp_at_tcg == player_at_tcg)
    {
        selectmode_at_tcg = 0;
        label_1836();
    }
    else
    {
        selectmode_at_tcg = -1;
        label_18462();
    }
    return;
}
void label_1819()
{
    phase_at_tcg = 3;
    if (cp_at_tcg == player_at_tcg)
    {
        selectmode_at_tcg = 0;
    }
    else
    {
        selectmode_at_tcg = -1;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            tcgdraw();
        }
    }
    return;
}
void csfix()
{
    if (clistmax_at_tcg(csline_at_tcg) == 0)
    {
        if (csline_at_tcg != 0)
        {
            cs_at_tcg = -1;
            csline_at_tcg = 0;
        }
    }
    if (cs_at_tcg == -1)
    {
        if (csline_at_tcg != 0)
        {
            cs_at_tcg = 0;
        }
    }
    if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
    {
        if (csline_at_tcg == 0)
        {
            cs_at_tcg = -1;
        }
        else
        {
            cs_at_tcg = 0;
        }
    }
    if (cs_at_tcg < -1)
    {
        cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
    }
    return;
}
void cslineup()
{
    cslinebk_at_tcg = csline_at_tcg;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            ++csline_at_tcg;
            if (csline_at_tcg == 4)
            {
                break;
            }
            if (clistmax_at_tcg(csline_at_tcg) != 0)
            {
                break;
            }
        }
    }
    if (csline_at_tcg == 4)
    {
        csline_at_tcg = 0;
    }
    if (csline_at_tcg == 0)
    {
        cs_at_tcg = -1;
    }
    else
    {
        cs_at_tcg = 0;
    }
    if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
    {
        cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
    }
    return;
}
void cslinedown()
{
    cslinebk_at_tcg = csline_at_tcg;
    if (csline_at_tcg == 0)
    {
        csline_at_tcg = 4;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            --csline_at_tcg;
            if (csline_at_tcg == -1)
            {
                break;
            }
            if (clistmax_at_tcg(csline_at_tcg) != 0)
            {
                break;
            }
        }
    }
    if (csline_at_tcg == -1)
    {
        csline_at_tcg = 0;
    }
    if (csline_at_tcg == 0)
    {
        cs_at_tcg = -1;
    }
    else
    {
        cs_at_tcg = 0;
    }
    if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
    {
        cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
    }
    return;
}
void label_1823()
{
    elona_vector1<int> mana_at_tcg;
    int m_at_tcg = 0;
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\bg_card.bmp"s, 1);
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(255, 255, 255);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            gmode(0);
            cnt2_at_tcg = cnt;
            DIM2(mana_at_tcg, 10);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (landsum_at_tcg(cnt2_at_tcg));
                     cnt < cnt_end;
                     ++cnt)
                {
                    x_at_tcg = landix_at_tcg(cnt2_at_tcg)
                        + cnt
                            * limit(
                                  (landspace_at_tcg
                                   - landsum_at_tcg(cnt2_at_tcg) / 2),
                                  4,
                                  landspace_at_tcg);
                    y_at_tcg = landiy_at_tcg(cnt2_at_tcg);
                    m_at_tcg = landlist_at_tcg(cnt, cnt2_at_tcg);
                    n_at_tcg = abs(card_at_tcg(17, m_at_tcg));
                    ++mana_at_tcg(card_at_tcg(23, m_at_tcg));
                    pos(x_at_tcg, y_at_tcg);
                    gcopy(2, n_at_tcg % 22 * 72, n_at_tcg / 22 * 96, 72, 96);
                }
            }
            y_at_tcg = landiy_at_tcg(cnt2_at_tcg) + (cnt == 0) * 80;
            x_at_tcg = landix_at_tcg(cnt2_at_tcg) - 16;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    if (mana_at_tcg(cnt) == 0)
                    {
                        continue;
                    }
                    pos(x_at_tcg - 15, y_at_tcg - 2);
                    gcopy(7, cnt * 12, 126, 12, 18);
                    pos(x_at_tcg, y_at_tcg);
                    mes(mana_at_tcg(cnt));
                    if (cnt2_at_tcg == 0)
                    {
                        y_at_tcg -= 20;
                    }
                    else
                    {
                        y_at_tcg += 20;
                    }
                }
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (gravesum_at_tcg(cnt2_at_tcg));
                     cnt < cnt_end;
                     ++cnt)
                {
                    x_at_tcg =
                        graveix_at_tcg(cnt2_at_tcg) + cnt * gravespace_at_tcg;
                    y_at_tcg = graveiy_at_tcg(cnt2_at_tcg);
                    m_at_tcg = gravelist_at_tcg(cnt, cnt2_at_tcg);
                    if (card_at_tcg(17, m_at_tcg) > 0)
                    {
                        gmode(2);
                        pos(x_at_tcg, y_at_tcg);
                        gcopy(
                            7, 72 + card_at_tcg(19, m_at_tcg) * 72, 0, 72, 96);
                        n_at_tcg = card_at_tcg(17, m_at_tcg) % 1000;
                        chara_preparepic(
                            n_at_tcg, card_at_tcg(17, m_at_tcg) / 1000);
                        gsel(4);
                        color(0, 0, 0);
                        pos(x_at_tcg + 13,
                            y_at_tcg + 32 - chipc(4, n_at_tcg)
                                + chipc(3, n_at_tcg) / 6);
                        gcopy(
                            5, 0, 960, chipc(2, n_at_tcg), chipc(3, n_at_tcg));
                    }
                    else
                    {
                        gmode(0);
                        n_at_tcg = abs(card_at_tcg(17, m_at_tcg));
                        pos(x_at_tcg, y_at_tcg);
                        gcopy(
                            2, n_at_tcg % 22 * 72, n_at_tcg / 22 * 96, 72, 96);
                    }
                }
            }
        }
    }
    gsel(0);
    return;
}
void label_1824()
{
    font(lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0);
    color(255, 255, 255);
    gmode(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (cfmax_at_tcg); cnt < cnt_end; ++cnt)
        {
            x_at_tcg = basex_at_tcg + 180 + cnt * 80;
            y_at_tcg = basey_at_tcg + 26 + (ccf_at_tcg == cnt) * 3;
            p_at_tcg = cflist_at_tcg(cnt);
            color(0, 0, 0);
            if (ccf_at_tcg == cnt)
            {
                gmode(4 - 1, -1, 255);
                color(255, 255, 255);
            }
            else
            {
                gmode(4 - 1, -1, 120);
                color(200, 200, 200);
            }
            pos(x_at_tcg, y_at_tcg);
            gcopy(7, 360, 96, 79, 20);
            gmode(2);
            pos(x_at_tcg + 10, y_at_tcg + 4);
            mes(cfname_at_tcg(p_at_tcg));
            if (ccf_at_tcg == cnt)
            {
                pos(x_at_tcg + 65, y_at_tcg - 5);
                gcopy(7, 288, 96, 24, 24);
            }
        }
    }
    font(lang(cfg_font1, cfg_font2), 13 + en - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (24); cnt < cnt_end; ++cnt)
        {
            p_at_tcg = page_at_tcg * 8 + cnt;
            if (p_at_tcg >= dlistmax_at_tcg)
            {
                break;
            }
            c_at_tcg = dlist_at_tcg(0, p_at_tcg);
            i_at_tcg = card_at_tcg(18, c_at_tcg);
            x_at_tcg = basex_at_tcg + 144 + cnt % 8 * 80;
            y_at_tcg = basey_at_tcg + 70 + cnt / 8 * 150;
            if (deckmode_at_tcg == 0)
            {
                if (deck(i_at_tcg) != 0)
                {
                    s_at_tcg = ""s + deck(i_at_tcg);
                }
                else
                {
                    s_at_tcg = "";
                }
                s_at_tcg += u8"("s + card(0, i_at_tcg) + u8")"s;
                color(0, 0, 0);
                pos(x_at_tcg + 1, y_at_tcg + 111);
                mes(s_at_tcg);
                if (deck(i_at_tcg) != 0)
                {
                    color(150, 255, 150);
                }
                else
                {
                    color(200, 200, 200);
                }
                pos(x_at_tcg, y_at_tcg + 110);
                mes(s_at_tcg);
            }
            card_at_tcg(2, c_at_tcg) = x_at_tcg;
            card_at_tcg(3, c_at_tcg) = y_at_tcg;
            tcgdrawcard(c_at_tcg, 1);
        }
    }
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(255, 255, 255);
    pos(basex_at_tcg + 160, basey_at_tcg + 510);
    mes(lang(
        ""s + key_next + u8","s + key_prev
            + u8",Tab [フィルター切替]  決定ｷｰ [カード選択]  ｷｬﾝｾﾙｷｰ [終了]"s,
        ""s + key_next + u8","s + key_prev
            + u8" [Change Filter]  Enter [Select]  Cancel [Exit]"s));
    pos(basex_at_tcg + 700, basey_at_tcg + 510);
    mes(u8"Page "s + dsc_at_tcg / 8 / 3 + u8"/"s
        + (dlistmax_at_tcg - 1) / 8 / 3);
    return;
}
void label_1825()
{
    gmode(0);
    pos(basex_at_tcg, basey_at_tcg);
    gcopy(4, 0, 0, basew_at_tcg, baseh_at_tcg);
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    gmode(2);
    pos(basex_at_tcg + 20, basey_at_tcg + 22);
    if (cardmode_at_tcg != 0 || ct_at_tcg == player_at_tcg)
    {
        gcopy(7, 360, 120, 88, 84);
    }
    else
    {
        gcopy(7, 456, 120, 88, 84);
    }
    if (cardmode_at_tcg == 0)
    {
        color(0, 0, 0);
        pos(basex_at_tcg + 39, basey_at_tcg + 58);
        mes(u8"Turn "s + turn_at_tcg);
        color(255, 255, 255);
        pos(basex_at_tcg + 38, basey_at_tcg + 57);
        mes(u8"Turn "s + turn_at_tcg);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
            {
                x_at_tcg = cpx_at_tcg(cnt);
                y_at_tcg = cpy_at_tcg(cnt);
                pos(x_at_tcg, y_at_tcg);
                gcopy(7, 264, 144, 72, 120);
                s_at_tcg = ""s + cpdata_at_tcg(4, cnt);
                pos(x_at_tcg + 36 - strlen_u(s_at_tcg) * 3, y_at_tcg + 9 - en);
                mes(s_at_tcg);
                if (cnt != player_at_tcg && 1)
                {
                    s_at_tcg = u8"?/"s + cpdata_at_tcg(6, cnt);
                }
                else
                {
                    s_at_tcg = ""s + cpdata_at_tcg(5, cnt) + u8"/"s
                        + cpdata_at_tcg(6, cnt);
                }
                pos(x_at_tcg + 36 - strlen_u(s_at_tcg) * 3, y_at_tcg + 95 - en);
                mes(s_at_tcg);
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                if (cnt - 1 == phase_at_tcg)
                {
                    pos(basex_at_tcg + 4, basey_at_tcg + 370 + cnt * 20);
                    gcopy(7, 360, 216, 106, 18);
                }
                pos(basex_at_tcg + 36, basey_at_tcg + 373 + cnt * 20);
                if (cnt == 0)
                {
                    if (ct_at_tcg == player_at_tcg)
                    {
                        color(150, 150, 255);
                        mes(u8"Player"s);
                    }
                    else
                    {
                        color(255, 150, 150);
                        mes(u8"Opponent"s);
                    }
                    color(215, 215, 215);
                }
                else
                {
                    mes(phasen_at_tcg(cnt - 1));
                }
            }
        }
    }
    else
    {
        color(0, 0, 0);
        pos(basex_at_tcg + 41, basey_at_tcg + 53);
        mes(u8"Deck\n Editor"s);
        color(255, 255, 255);
        pos(basex_at_tcg + 40, basey_at_tcg + 52);
        mes(u8"Deck\n Editor"s);
        if (gdata(830 + curdeck) != 30)
        {
            color(255, 100, 100);
        }
        else
        {
            color(100, 255, 100);
        }
        pos(basex_at_tcg + 24, basey_at_tcg + 120);
        mes(u8"Deck "s + gdata((830 + curdeck)) + u8"/"s + 30);
        color(215, 215, 215);
        pos(basex_at_tcg + 24, basey_at_tcg + 140);
        mes(u8"Life "s + cpdata_at_tcg(4, 0));
        pos(basex_at_tcg + 24, basey_at_tcg + 160);
        mes(u8"Mana "s + cpdata_at_tcg(6, 0));
        pos(basex_at_tcg + 24, basey_at_tcg + 180);
        mes(u8"Card "s + calcstartcard(0));
        pos(basex_at_tcg + 24, basey_at_tcg + 220);
        mes(u8"Domain * "s + cpdata_at_tcg(9, 0));
        s_at_tcg = "";
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                if (domain_at_tcg(cnt))
                {
                    s_at_tcg += ""s + domname_at_tcg(cnt) + u8"\n"s;
                }
            }
        }
        pos(basex_at_tcg + 24, basey_at_tcg + 240);
        mes(s_at_tcg);
    }
    font(lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0);
    pos(basex_at_tcg + 146, basey_at_tcg + 545);
    mes(helpmsg_at_tcg);
    return;
}
void label_1826()
{
    gmode(4 - 1, -1, 180);
    redraw(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            cnt2_at_tcg = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
                {
                }
            }
        }
    }
    gsel(0);
    return;
}
void label_1827()
{
    if (dsc_at_tcg < 0)
    {
        dsc_at_tcg = dlistmax_at_tcg - 1;
    }
    if (dsc_at_tcg >= dlistmax_at_tcg)
    {
        dsc_at_tcg = 0;
    }
    if (dsc_at_tcg >= (page_at_tcg + 3) * 8)
    {
        page_at_tcg = dsc_at_tcg / 8;
    }
    if (dsc_at_tcg < page_at_tcg * 8)
    {
        page_at_tcg = dsc_at_tcg / 8;
    }
    page_at_tcg = page_at_tcg - page_at_tcg % 3;
    return;
}
void label_1828()
{
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\bg_card.bmp"s, 1);
    gsel(0);
    DIM3(dlist_at_tcg, 2, 400);
    DIM2(cflist_at_tcg, 10);
    SDIM3(cfname_at_tcg, 16, 10);
    cfname_at_tcg(0) = lang(u8"候補"s, u8"List"s);
    cfname_at_tcg(1) = lang(u8"デッキ"s, u8"Deck"s);
    cfname_at_tcg(2) = domname_at_tcg(0);
    cfname_at_tcg(3) = domname_at_tcg(1);
    cfname_at_tcg(4) = domname_at_tcg(2);
    cfname_at_tcg(5) = domname_at_tcg(3);
    cfname_at_tcg(6) = domname_at_tcg(4);
    cflist_at_tcg = 0;
    cfmax_at_tcg = 1;
    ccf_at_tcg = 0;
    if (deckmode_at_tcg == 0)
    {
        cflist_at_tcg(0) = 1;
        cflist_at_tcg(1) = 2;
        cflist_at_tcg(2) = 3;
        cflist_at_tcg(3) = 4;
        cflist_at_tcg(4) = 5;
        cflist_at_tcg(5) = 6;
        cfmax_at_tcg = 6;
    }
label_1829_internal:
    dlistmax_at_tcg = 0;
    dsc_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (maxcard_at_tcg); cnt < cnt_end; ++cnt)
        {
            if (card_at_tcg(0, cnt) != -1)
            {
                continue;
            }
            if (card_at_tcg(1, cnt) != cp_at_tcg)
            {
                continue;
            }
            if (cflist_at_tcg(ccf_at_tcg) == 1)
            {
                if (deck(card_at_tcg(18, cnt)) == 0)
                {
                    continue;
                }
            }
            if (cflist_at_tcg(ccf_at_tcg) >= 2)
            {
                if (cflist_at_tcg(ccf_at_tcg) <= 6)
                {
                    if (card_at_tcg(23, cnt) != cflist_at_tcg(ccf_at_tcg) - 2)
                    {
                        continue;
                    }
                }
            }
            if (deckmode_at_tcg == 1)
            {
                if (cardn_at_tcg(0, cnt) != deckrefn_at_tcg)
                {
                    continue;
                }
            }
            if (deckmode_at_tcg == 1 || deckmode_at_tcg == 2)
            {
                f_at_tcg = 0;
                cnt2_at_tcg = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (dlistmax_at_tcg); cnt < cnt_end;
                         ++cnt)
                    {
                        c_at_tcg = dlist_at_tcg(0, cnt);
                        if (card_at_tcg(18, c_at_tcg)
                            == card_at_tcg(18, cnt2_at_tcg))
                        {
                            f_at_tcg = 1;
                            break;
                        }
                    }
                }
                if (f_at_tcg)
                {
                    continue;
                }
            }
            cdbitmod(1, cnt, 1);
            dlist_at_tcg(0, dlistmax_at_tcg) = cnt;
            ++dlistmax_at_tcg;
        }
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            f_at_tcg = 0;
            if (dlistmax_at_tcg == 0)
            {
                break;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (dlistmax_at_tcg - 1); cnt < cnt_end;
                     ++cnt)
                {
                    p_at_tcg(0) = card_at_tcg(10, dlist_at_tcg(0, cnt)) * 10000
                        + card_at_tcg(18, dlist_at_tcg(0, cnt));
                    p_at_tcg(1) =
                        card_at_tcg(10, dlist_at_tcg(0, (cnt + 1))) * 10000
                        + card_at_tcg(18, dlist_at_tcg(0, (cnt + 1)));
                    if (p_at_tcg > p_at_tcg(1))
                    {
                        f_at_tcg = 1;
                        p_at_tcg(0) = dlist_at_tcg(0, cnt);
                        p_at_tcg(1) = dlist_at_tcg(1, cnt);
                        dlist_at_tcg(0, cnt) = dlist_at_tcg(0, cnt + 1);
                        dlist_at_tcg(1, cnt) = dlist_at_tcg(1, cnt + 1);
                        dlist_at_tcg(0, cnt + 1) = p_at_tcg;
                        dlist_at_tcg(1, cnt + 1) = p_at_tcg(1);
                    }
                }
            }
            if (f_at_tcg == 0)
            {
                break;
            }
        }
    }
    label_1827();
label_1830_internal:
    redraw(0);
    label_1825();
    label_1824();
    redraw(1);
    await(30);
    key_check();
    if (key == key_next)
    {
        ++ccf_at_tcg;
        snd(5);
        if (ccf_at_tcg >= cfmax_at_tcg)
        {
            ccf_at_tcg = 0;
        }
        goto label_1829_internal;
    }
    if (key == key_prev)
    {
        --ccf_at_tcg;
        snd(5);
        if (ccf_at_tcg < 0)
        {
            ccf_at_tcg = cfmax_at_tcg - 1;
        }
        goto label_1829_internal;
    }
    if (key == key_west)
    {
        --dsc_at_tcg;
        snd(5);
    }
    if (key == key_east)
    {
        ++dsc_at_tcg;
        snd(5);
    }
    if (key == key_south)
    {
        dsc_at_tcg += 8;
        snd(5);
    }
    if (key == key_north)
    {
        dsc_at_tcg -= 8;
        snd(5);
    }
    label_1827();
    if (key == key_enter)
    {
        if (dlistmax_at_tcg == 0)
        {
            goto label_1830_internal;
        }
        if (deckmode_at_tcg == 0)
        {
            if (card_at_tcg(9, dlist_at_tcg(0, dsc_at_tcg)) == 10)
            {
                if (card_at_tcg(10, dlist_at_tcg(0, dsc_at_tcg)) == 0)
                {
                    snd(27);
                    cardhelp(
                        lang(
                            u8"未実装のカード"s,
                            u8"The card isn't available in this version."s),
                        40);
                    goto label_1830_internal;
                }
            }
        label_1831_internal:
            redraw(0);
            calcdecksize();
            label_1825();
            label_1824();
            act_at_tcg(0) = 0;
            act_at_tcg(1) = 0;
            act_at_tcg(2) = 0;
            cc_at_tcg = dlist_at_tcg(0, dsc_at_tcg);
            if (deck(card_at_tcg(18, cc_at_tcg))
                < card(0, card_at_tcg(18, cc_at_tcg)))
            {
                act_at_tcg(0) = 1;
            }
            if (deck(card_at_tcg(18, cc_at_tcg)) != 0)
            {
                act_at_tcg(1) = 1;
            }
            if (act_at_tcg(0) == 0)
            {
                if (act_at_tcg(1) == 0)
                {
                    snd(27);
                    goto label_1833_internal;
                }
            }
            label_1840();
            if (f_at_tcg == 0)
            {
                if (act_at_tcg(0))
                {
                    ++deck(card_at_tcg(18, cc_at_tcg));
                    snd(71);
                    goto label_1831_internal;
                }
            }
            if (f_at_tcg == 1)
            {
                if (act_at_tcg(1))
                {
                    --deck(card_at_tcg(18, cc_at_tcg));
                    snd(71);
                    goto label_1831_internal;
                }
            }
            goto label_1833_internal;
            goto label_1831_internal;
        label_1833_internal:
            calcdecksize();
            goto label_1830_internal;
        }
        rtval_at_tcg = dlist_at_tcg(0, dsc_at_tcg);
        rtval_at_tcg = 1;
        label_1835();
        return;
    }
    if (key == key_cancel)
    {
        if (deckmode_at_tcg == 0)
        {
            promptl(0, promptmax) = lang(u8"セーブして終了"s, u8"Save & Exit"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            promptl(0, promptmax) =
                lang(u8"セーブしないで終了"s, u8"Just Exit"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            val(0) = basex_at_tcg + 420;
            val(1) = basey_at_tcg + 230;
            val(2) = 240;
            val(3) = 1;
            label_2131();
            if (rtval == 0)
            {
                file = ""s + exedir + u8"tmp\\deck_"s + curdeck + u8".s2"s;
                fmode = 23;
                label_2107();
            }
            else
            {
                gdata(830 + curdeck) = decksizebk_at_tcg;
            }
            if (rtval == -1)
            {
                goto label_1830_internal;
            }
        }
        rtval_at_tcg = 0;
        label_1835();
        return;
    }
    goto label_1830_internal;
}
int label_1835()
{
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\bg_card.bmp"s, 1);
    label_1826();
    stat = rtval_at_tcg;
    return stat;
}
void label_1836()
{
    if (selectmode_at_tcg == 0)
    {
        cs_at_tcg = -1;
        csline_at_tcg = 0;
    }
    if (selectmode_at_tcg == 1)
    {
        if (cs_at_tcg == -1)
        {
            csline_at_tcg = 0;
        }
        else
        {
            csline_at_tcg = 1;
        }
    }
label_1837_internal:
    tcgdraw();
    cursor_at_tcg = 1;
    await(15);
    stick(a_at_tcg);
    key_check();
    if (key == key_east)
    {
        ++cs_at_tcg;
        snd(5);
        if (cs_at_tcg == 0)
        {
            if (clistmax_at_tcg(csline_at_tcg) == 0)
            {
                cslineup();
            }
        }
        csfix();
    }
    if (key == key_west)
    {
        --cs_at_tcg;
        snd(5);
        if (cs_at_tcg == -1)
        {
            if (csline_at_tcg != 0)
            {
                cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
            }
        }
        if (cs_at_tcg == -2)
        {
            if (clistmax_at_tcg(csline_at_tcg) == 0)
            {
                cslinedown();
            }
        }
        csfix();
    }
    if (key == key_north)
    {
        cslineup();
        snd(5);
        csfix();
    }
    if (key == key_south)
    {
        cslinedown();
        snd(5);
        csfix();
    }
    if (key == key_enter)
    {
        if (cs_at_tcg == -1)
        {
            label_1839();
            return;
        }
        act_at_tcg(0) = 0;
        act_at_tcg(1) = 0;
        act_at_tcg(2) = 0;
        s_at_tcg = "";
        cc_at_tcg = clist_at_tcg(cs_at_tcg, csline_at_tcg);
        if (csline_at_tcg == 0 || csline_at_tcg == 3 && 0)
        {
            if (card_at_tcg(10, cc_at_tcg) <= cpdata_at_tcg(5, cp_at_tcg))
            {
                if (card_at_tcg(9, cc_at_tcg) == 20 || selectmode_at_tcg == 0)
                {
                    act_at_tcg(0) = 1;
                    s_at_tcg += lang(
                        u8"↑   カードを出す。\n"s, u8"UP: Put the card.\n"s);
                }
            }
            if (sac_at_tcg == 0)
            {
                if (selectmode_at_tcg == 0)
                {
                    act_at_tcg(1) = 1;
                    s_at_tcg += lang(
                        u8"↓   カードを捧げてマナを得る(1ターンに1回)。\n"s,
                        u8"Down: Sacrifice the card.\n"s);
                }
            }
        }
        if (csline_at_tcg == 1 || csline_at_tcg == 2 && 0)
        {
            if (selectmode_at_tcg == 0)
            {
                if (card_at_tcg(14, cc_at_tcg) != -1)
                {
                    if (cardcandeclareattack(cc_at_tcg))
                    {
                        act_at_tcg(0) = 1;
                        s_at_tcg += lang(
                            u8"↑   攻撃を宣言する。\n"s,
                            u8"UP: Declare an attack.\n"s);
                    }
                }
            }
            if (selectmode_at_tcg == 1)
            {
                if (cardcanblock(cc_at_tcg))
                {
                    act_at_tcg(0) = 1;
                    s_at_tcg +=
                        lang(u8"↑   ブロックする。\n"s, u8"UP: Block.\n"s);
                }
            }
            if (cardcanuseskill(cc_at_tcg))
            {
                act_at_tcg(2) = 1;
                s_at_tcg += lang(
                    u8"決定 スキルを使用する。\n"s,
                    u8"ENTER: Use the skill.\n"s);
            }
        }
        f_at_tcg = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
            {
                if (act_at_tcg(cnt) != 0)
                {
                    f_at_tcg = 1;
                    break;
                }
            }
        }
        if (f_at_tcg == 0)
        {
            snd(27);
            cardhelp(
                lang(
                    u8"可能な行動はない。"s,
                    u8"There is no action available."s),
                40);
            goto label_1837_internal;
        }
        snd(40);
        cardhelp(s_at_tcg, 10);
        tcgdraw();
        label_1840();
        cc_at_tcg = clist_at_tcg(cs_at_tcg, csline_at_tcg);
        key = "";
        if (f_at_tcg == -1)
        {
            goto label_1837_internal;
        }
        if (act_at_tcg(f_at_tcg) == 0)
        {
            goto label_1837_internal;
        }
        if (csline_at_tcg == 1 || csline_at_tcg == 2 && 0)
        {
            if (f_at_tcg == 0)
            {
                if (selectmode_at_tcg == 1)
                {
                    attacktarget_at_tcg = cc_at_tcg;
                    label_1839();
                    return;
                }
                cardstack_at_tcg(0, stack_at_tcg) = cc_at_tcg;
                cardstack_at_tcg(1, stack_at_tcg) = -1;
                cardstack_at_tcg(2, stack_at_tcg) = cp_at_tcg;
                ++stack_at_tcg;
                actionproc();
                if (gameover())
                {
                    label_1839();
                    return;
                }
                if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
                {
                    cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
                }
                csfix();
                goto label_1837_internal;
            }
            if (f_at_tcg == 1)
            {
                card_at_tcg(14, cc_at_tcg) = 0;
            }
            if (f_at_tcg == 2)
            {
                cardstack_at_tcg(0, stack_at_tcg) = cc_at_tcg;
                cardstack_at_tcg(1, stack_at_tcg) = -3;
                cardstack_at_tcg(2, stack_at_tcg) = cp_at_tcg;
                ++stack_at_tcg;
                if (chainmode_at_tcg)
                {
                    chaincontinue_at_tcg = 1;
                    spellused_at_tcg = 1;
                    label_1839();
                    return;
                }
                actionproc();
                if (gameover())
                {
                    label_1839();
                    return;
                }
            }
            if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
            {
                cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
            }
            csfix();
            goto label_1837_internal;
        }
        if (f_at_tcg == 1)
        {
            cursor_at_tcg = 0;
            saccard(cc_at_tcg, cp_at_tcg + (csline_at_tcg == 3));
            if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
            {
                cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
            }
            csfix();
            goto label_1837_internal;
        }
        if (f_at_tcg == 0)
        {
            cursor_at_tcg = 0;
            putcard(cc_at_tcg, cp_at_tcg + (csline_at_tcg == 3));
            if (gameover())
            {
                label_1839();
                return;
            }
            if (card_at_tcg(9, cc_at_tcg) == 20)
            {
                cardstack_at_tcg(0, stack_at_tcg) = cc_at_tcg;
                cardstack_at_tcg(1, stack_at_tcg) = -3;
                cardstack_at_tcg(2, stack_at_tcg) = cp_at_tcg;
                ++stack_at_tcg;
                if (chainmode_at_tcg)
                {
                    chaincontinue_at_tcg = 1;
                    spellused_at_tcg = 1;
                    label_1839();
                    return;
                }
                actionproc();
            }
            if (gameover())
            {
                label_1839();
                return;
            }
        }
        if (cs_at_tcg >= clistmax_at_tcg(csline_at_tcg))
        {
            cs_at_tcg = clistmax_at_tcg(csline_at_tcg) - 1;
        }
        csfix();
    }
    if (key == key_cancel || key_escape)
    {
        label_1839();
        return;
    }
    if (key == u8"s"s)
    {
        promptl(0, promptmax) = lang(u8"降参する"s, u8"Surrender"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + promptmax;
        ++promptmax;
        val(0) = basex_at_tcg + 420;
        val(1) = basey_at_tcg + 230;
        val(2) = 200;
        val(3) = 1;
        label_2131();
        if (rtval == 0)
        {
            cpdata_at_tcg(4, 0) = 0;
            cursor_at_tcg = 0;
            return;
        }
    }
    goto label_1837_internal;
}
void label_1839()
{
    cursor_at_tcg = 0;
    return;
}
void label_1840()
{
    redraw(0);
    p_at_tcg = 0;
    i_at_tcg = 0;
    f_at_tcg = 1;
label_1841_internal:
    ++p_at_tcg;
    i_at_tcg += f_at_tcg;
    if (i_at_tcg > 30)
    {
        f_at_tcg = -1;
    }
    else
    {
        if (i_at_tcg < 0)
        {
            f_at_tcg = 1;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            x_at_tcg(cnt) = card_at_tcg(2, cc_at_tcg) + 20;
            if (cnt == 0)
            {
                y_at_tcg(cnt) =
                    card_at_tcg(3, cc_at_tcg) - limit(p_at_tcg * 3, 0, 16);
            }
            if (cnt == 1)
            {
                y_at_tcg(cnt) =
                    card_at_tcg(3, cc_at_tcg) + 60 + limit(p_at_tcg * 3, 0, 16);
            }
            if (cnt == 2)
            {
                y_at_tcg(cnt) = card_at_tcg(3, cc_at_tcg) + 30;
            }
            gmode(0);
            gsel(7);
            pos(cnt * 48, 264);
            gcopy(0, x_at_tcg(cnt), y_at_tcg(cnt), 36, 36);
            gsel(0);
            if (act_at_tcg(cnt) == 0)
            {
                continue;
            }
            color(0, 0, 0);
            gmode(4, 0, 0, limit(p_at_tcg * 30 + 20, 0, 255));
            pos(x_at_tcg(cnt), y_at_tcg(cnt));
            gcopy(7, 192, 96, 36, 36);
            gmode(4, 0, 0, 50 + i_at_tcg * 2);
            pos(x_at_tcg(cnt) + 13, y_at_tcg(cnt) + 11);
            gcopy(7, 336 + (cnt == 2) * 12, 96 + cnt % 2 * 24, 12, 12);
        }
    }
    redraw(1);
    redraw(0);
    gmode(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            if (act_at_tcg(cnt) == 0)
            {
                continue;
            }
            pos(x_at_tcg(cnt), y_at_tcg(cnt));
            gcopy(7, cnt * 48, 264, 36, 36);
        }
    }
    await(15);
    key_check();
    if (key == key_north)
    {
        f_at_tcg = 0;
        label_1842();
        return;
    }
    if (key == key_south)
    {
        f_at_tcg = 1;
        label_1842();
        return;
    }
    if (key == key_enter)
    {
        f_at_tcg = 2;
        label_1842();
        return;
    }
    if (key != ""s)
    {
        f_at_tcg = -1;
        label_1842();
        return;
    }
    goto label_1841_internal;
}
void label_1842()
{
    return;
}
void label_1844()
{
    emax_at_tcg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (clistmax_at_tcg(ch_at_tcg)); cnt < cnt_end;
             ++cnt)
        {
            if (aiblock_at_tcg)
            {
                break;
            }
            c_at_tcg = clist_at_tcg(cnt, ch_at_tcg);
            p_at_tcg = 10;
            if (card_at_tcg(9, c_at_tcg) == 10)
            {
                p_at_tcg = 20;
                p_at_tcg -= abs(
                    cpdata_at_tcg(6, cp_at_tcg) - card_at_tcg(10, c_at_tcg));
            }
            if (card_at_tcg(13, c_at_tcg) == 2)
            {
                p_at_tcg = (5 - getholdersum(cp_at_tcg)) * 20;
            }
            elist_at_tcg(0, emax_at_tcg) = p_at_tcg;
            elist_at_tcg(1, emax_at_tcg) = c_at_tcg;
            elist_at_tcg(2, emax_at_tcg) = -5;
            ++emax_at_tcg;
        }
    }
    if (aiblock_at_tcg == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (clistmax_at_tcg(cl_at_tcg));
                 cnt < cnt_end;
                 ++cnt)
            {
                c_at_tcg = clist_at_tcg(cnt, cl_at_tcg);
                p_at_tcg = 0;
                p_at_tcg = rnd(40);
                if (cardcandeclareattack(c_at_tcg))
                {
                    elist_at_tcg(0, emax_at_tcg) = p_at_tcg;
                    elist_at_tcg(1, emax_at_tcg) = c_at_tcg;
                    elist_at_tcg(2, emax_at_tcg) = -1;
                    ++emax_at_tcg;
                }
            }
        }
    }
    else
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (clistmax_at_tcg(cl_at_tcg));
                 cnt < cnt_end;
                 ++cnt)
            {
                c_at_tcg = clist_at_tcg(cnt, cl_at_tcg);
                p_at_tcg = 0;
                p_at_tcg = rnd(40);
                if (cardcanblock(c_at_tcg))
                {
                    elist_at_tcg(0, emax_at_tcg) = p_at_tcg;
                    elist_at_tcg(1, emax_at_tcg) = c_at_tcg;
                    elist_at_tcg(2, emax_at_tcg) = -2;
                    ++emax_at_tcg;
                }
            }
        }
    }
    if (emax_at_tcg == 0)
    {
        return;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            f_at_tcg = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (emax_at_tcg - 1); cnt < cnt_end;
                     ++cnt)
                {
                    if (elist_at_tcg(0, cnt) < elist_at_tcg(0, cnt + 1))
                    {
                        cnt2_at_tcg = cnt;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                            {
                                p_at_tcg(cnt) =
                                    elist_at_tcg(cnt, cnt2_at_tcg + 1);
                                elist_at_tcg(cnt, cnt2_at_tcg + 1) =
                                    elist_at_tcg(cnt, cnt2_at_tcg);
                                elist_at_tcg(cnt, cnt2_at_tcg) = p_at_tcg(cnt);
                            }
                        }
                        f_at_tcg = 1;
                        break;
                    }
                }
            }
            if (f_at_tcg == 0)
            {
                break;
            }
        }
    }
    return;
}
int label_1845()
{
    if (sac_at_tcg > 0)
    {
        stat = 0;
        return stat;
    }
    if (getholdersum(cp_at_tcg) <= cpdata_at_tcg(6, cp_at_tcg) / 4 + 1)
    {
        if (rnd(4))
        {
            stat = 0;
            return stat;
        }
    }
    f_at_tcg = 0;
    p_at_tcg(1) = 50;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (emax_at_tcg); cnt < cnt_end; ++cnt)
        {
            c_at_tcg = elist_at_tcg(1, cnt);
            p_at_tcg = elist_at_tcg(0, cnt);
            if (card_at_tcg(0, c_at_tcg) != 2)
            {
                continue;
            }
            if (card_at_tcg(13, c_at_tcg) == 2)
            {
                p_at_tcg = 40;
            }
            if (p_at_tcg < p_at_tcg(1))
            {
                p_at_tcg(1) = p_at_tcg;
                cc_at_tcg = c_at_tcg;
                f_at_tcg = 1;
            }
        }
    }
    if (f_at_tcg)
    {
        saccard(cc_at_tcg, cp_at_tcg);
        tcgdraw();
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
void label_18462()
{
    int ec_at_tcg = 0;
label_18461:
    spellused_at_tcg = 0;
    stick(a_at_tcg);
    if (a_at_tcg)
    {
        cpdata_at_tcg(4, 0) = 0;
    }
    label_1844();
    ec_at_tcg = 0;
label_1847_internal:
    if (gameover())
    {
        label_1848();
        return;
    }
    if (ec_at_tcg >= emax_at_tcg)
    {
        label_1848();
        return;
    }
    if (elist_at_tcg(0, ec_at_tcg) <= 0)
    {
        label_1848();
        return;
    }
    cc_at_tcg = elist_at_tcg(1, ec_at_tcg);
    if (elist_at_tcg(2, ec_at_tcg) == -5)
    {
        if (card_at_tcg(10, cc_at_tcg) <= cpdata_at_tcg(5, cp_at_tcg))
        {
            putcard(cc_at_tcg, cp_at_tcg);
            if (gameover())
            {
                label_1848();
                return;
            }
            if (card_at_tcg(9, cc_at_tcg) == 20)
            {
                cardstack_at_tcg(0, stack_at_tcg) = cc_at_tcg;
                cardstack_at_tcg(1, stack_at_tcg) = -3;
                cardstack_at_tcg(2, stack_at_tcg) = cp_at_tcg;
                ++stack_at_tcg;
                if (chainmode_at_tcg)
                {
                    chaincontinue_at_tcg = 1;
                    spellused_at_tcg = 1;
                    label_1848();
                    return;
                }
                actionproc();
            }
            goto label_18461;
        }
        else
        {
            label_1845();
            if (stat == 1)
            {
                goto label_18461;
            }
        }
    }
    if (elist_at_tcg(2, ec_at_tcg) == -1)
    {
        cardstack_at_tcg(0, stack_at_tcg) = cc_at_tcg;
        cardstack_at_tcg(1, stack_at_tcg) = -1;
        cardstack_at_tcg(2, stack_at_tcg) = cp_at_tcg;
        ++stack_at_tcg;
        actionproc();
    }
    if (elist_at_tcg(2, ec_at_tcg) == -2)
    {
        attacktarget_at_tcg = cc_at_tcg;
        label_1848();
        return;
    }
    ++ec_at_tcg;
    goto label_1847_internal;
}
void label_1848()
{
    if (aiblock_at_tcg == 0)
    {
        if (sac_at_tcg == 0)
        {
            label_1845();
            if (stat == 1)
            {
                label_18462();
                return;
            }
        }
    }
    if (gameover())
    {
        return;
    }
    return;
}
int random_material(int prm_1028, int prm_1029)
{
    int f_at_m174 = 0;
    int lv_at_m174 = 0;
    int rare_at_m174 = 0;
    int loc_at_m174 = 0;
    int p_at_m174 = 0;
    int f2_at_m174 = 0;
    int p2_at_m174 = 0;
    f_at_m174 = 0;
    matnum = 1;
    lv_at_m174 = prm_1028;
    rare_at_m174 = prm_1029;
    loc_at_m174 = atxspot;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            p_at_m174 = rnd(55);
            if (p_at_m174 == 0)
            {
                continue;
            }
            if (cnt % 10 == 0)
            {
                --lv_at_m174;
                --rare_at_m174;
            }
            if (matref(0, p_at_m174) < lv_at_m174)
            {
                continue;
            }
            if (matref(1, p_at_m174) < rare_at_m174)
            {
                continue;
            }
            f2_at_m174 = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                {
                    p2_at_m174 = matspot(cnt, p_at_m174);
                    if (p2_at_m174 == 0)
                    {
                        break;
                    }
                    if (p2_at_m174 == loc_at_m174 || p2_at_m174 == 18)
                    {
                        f2_at_m174 = 1;
                        break;
                    }
                }
            }
            if (f2_at_m174 == 0)
            {
                continue;
            }
            if (rnd(matref(1, p_at_m174)) == 0)
            {
                f_at_m174 = p_at_m174;
                break;
            }
        }
    }
    stat = f_at_m174;
    return stat;
}
void matgetmain(int prm_1030, int prm_1031, int prm_1032)
{
    n_at_m174 = prm_1031;
    if (n_at_m174 == 0)
    {
        n_at_m174 = 1;
    }
    mat(prm_1030) += n_at_m174;
    snd(21);
    if (en)
    {
        s_at_m174 =
            u8"You get "s + n_at_m174 + u8" "s + matname(prm_1030) + u8". "s;
    }
    else
    {
        s_at_m174 = u8"マテリアル:"s + matname(prm_1030) + u8"を"s + n_at_m174
            + u8"個"s;
        if (prm_1032 == 1)
        {
            s_at_m174 += u8"掘り当てた"s;
        }
        if (prm_1032 == 2)
        {
            s_at_m174 += u8"釣り上げた。"s;
        }
        if (prm_1032 == 3)
        {
            s_at_m174 += u8"採取した。"s;
        }
        if (prm_1032 == 5)
        {
            s_at_m174 += u8"見つけた。"s;
        }
        if (prm_1032 == 0)
        {
            s_at_m174 += u8"入手した"s;
        }
    }
    txtef(4);
    txt(s_at_m174 + u8"("s + mat(prm_1030) + u8") "s);
    return;
}
void matdelmain(int prm_1033, int prm_1034)
{
    n_at_m174 = prm_1034;
    if (n_at_m174 == 0)
    {
        n_at_m174 = 1;
    }
    mat(prm_1033) -= n_at_m174;
    s_at_m174 = u8"マテリアル:"s + matname(prm_1033) + u8"を"s + n_at_m174
        + u8"個失った"s;
    txtef(4);
    txt(s_at_m174 + u8"(残り "s + mat(prm_1033) + u8"個) "s);
    return;
}
void label_1854()
{
    return;
}
void label_18552()
{
label_18551_internal:
    listmax = 0;
    page = 0;
    pagesize = 10;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    page_load();
    if (invctrl == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (maxitemid); cnt < cnt_end; ++cnt)
            {
                matid = cnt;
                label_1280();
                if (stat == -1)
                {
                    continue;
                }
                if (prodtype == 2)
                {
                    if (matval != 178)
                    {
                        continue;
                    }
                }
                if (prodtype == 1)
                {
                    if (matval != 176)
                    {
                        continue;
                    }
                }
                if (prodtype == 3)
                {
                    if (matval != 179)
                    {
                        continue;
                    }
                }
                if (prodtype == 4)
                {
                    if (matval != 177)
                    {
                        continue;
                    }
                }
                if (sdata(matval, 0) + 3 < matval(1))
                {
                    continue;
                }
                listn(0, listmax) = ""s + prodcheck();
                list(0, listmax) = cnt;
                list(1, listmax) = 0;
                ++listmax;
            }
        }
    }
    else
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
            {
                label_1854();
                listn(0, listmax) = ""s + prodcheck();
                list(0, listmax) = 630;
                list(1, listmax) = cnt;
                ++listmax;
            }
        }
    }
    windowshadow = 1;
label_1857_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    s(0) = lang(u8"生産品の選択"s, u8"Production"s);
    s(1) = strhint2 + strhint3b;
    display_window((windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448);
    display_topic(lang(u8"生産品"s, u8"Product"s), wx + 28, wy + 36);
    display_topic(lang(u8"説明"s, u8"Detail"s), wx + 296, wy + 36);
    display_topic(lang(u8"詳細"s, u8"Requirement"s), wx + 28, wy + 258);
    display_topic(lang(u8"必要素材"s, u8"Material"s), wx + 28, wy + 304);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(540, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    cs_listbk();
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i(0) = list(0, p);
            i(1) = list(1, p);
            if (cs == cnt)
            {
                matid = i;
                if (invctrl == 0)
                {
                    label_1280();
                    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                    s = lang(u8"必要スキル: "s, u8"Skill needed: "s);
                    if (matval == 178)
                    {
                        s += lang(u8"錬金術"s, u8"Alchemy"s);
                    }
                    if (matval == 176)
                    {
                        s += lang(u8"大工"s, u8"Carpentory"s);
                    }
                    if (matval == 179)
                    {
                        s += lang(u8"宝石細工"s, u8"Jewelling"s);
                    }
                    if (matval == 177)
                    {
                        s += lang(u8"裁縫"s, u8"Tailoring"s);
                    }
                    s +=
                        u8" "s + matval(1) + u8"("s + sdata(matval, 0) + u8")"s;
                    if (matval(1) <= sdata(matval, 0))
                    {
                        color(30, 30, 200);
                    }
                    else
                    {
                        color(200, 30, 30);
                    }
                    pos(wx + 37, wy + 288);
                    mes(s + u8" "s);
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                    {
                        j(0) = matneed(cnt * 2);
                        j(1) = matneed(cnt * 2 + 1);
                        if (j == -1)
                        {
                            break;
                        }
                        s = matname(j) + lang(u8" ? "s, u8" x "s) + j(1)
                            + u8"("s + mat(j) + u8")"s;
                        if (mat(j) >= j(1))
                        {
                            color(30, 30, 200);
                        }
                        else
                        {
                            color(200, 30, 30);
                        }
                        pos(wx + 37 + cnt % 3 * 192, wy + 334 + cnt / 3 * 16);
                        mes(s);
                    }
                }
                f = 1;
            }
            s = ioriginalnameref(i);
            p(1) = ipicref(i);
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, p(1)), chipi(3, p(1)) + 960);
            if (p(1) == 528)
            {
                gmode(2);
                pos(0, 960);
                gcopy(1, 0, 768, inf_tiles, inf_tiles);
                pos(0, 1008);
                gzoom(
                    22,
                    20,
                    5,
                    chipc(0, 0) + 8,
                    chipc(1, 0) + 4 + (chipc(3, 0) > inf_tiles) * 8,
                    chipc(2, 0) - 16,
                    chipc(3, 0) - 8 - (chipc(3, 0) > inf_tiles) * 10,
                    1);
                pos(6, 974);
                gcopy(1, 0, 1008, 22, 20);
                gsel(selcur);
            }
            else
            {
                if (p(1) == 531)
                {
                    pos(8, 1058 - chipc(3, 0));
                    gcopy(
                        5,
                        chipc(0, 0) + 8,
                        chipc(1, 0) + 2,
                        chipc(2, 0) - 16,
                        chipc(3, 0) - 8);
                    gmode(4 - 1, -1, 150);
                    color(0, 0, 0);
                    pos(0, 960 + (chipc(3, 0) == inf_tiles) * 48);
                    gcopy(
                        1,
                        144,
                        768 + (chipc(3, 0) > inf_tiles) * 48,
                        inf_tiles,
                        chipc(3, 0) + (chipc(3, 0) > inf_tiles) * 48);
                    gmode(2);
                    gsel(selcur);
                }
                else
                {
                    pos(0, 960);
                    gcopy(
                        1,
                        chipi(0, p(1)),
                        chipi(1, p(1)),
                        chipi(2, p(1)),
                        chipi(3, p(1)));
                    gfini(chipi(2, p(1)), chipi(3, p(1)));
                    gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
                    gsel(selcur);
                }
            }
            s(1) = lang(u8"アイテム["s + s + u8"]"s, u8"Make ["s + s + u8"]"s);
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            if (elona_int(listn(0, p)) == -1)
            {
                p(2) = 3;
            }
            else
            {
                p(2) = 0;
            }
            cs_list(
                cnt, cnven(s), wx + 86, wy + 66 + cnt * 19 - 1, 19, 0, p(2));
            pos(wx + 308, wy + 66 + cnt * 19 + 2);
            mes(s(1));
            pos(wx + 37, wy + 69 + cnt * 19 + 2);
            gmode(2, inf_tiles, inf_tiles);
            grotate(1, 0, 960, 0, chipi(2, p(1)), chipi(3, p(1)));
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    if (f == 1 || listmax == 0)
    {
        redraw(1);
    }
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        matid = p;
        label_1280();
        s = ioriginalnameref(matid);
        if (prodcheck() == -1)
        {
            snd(27);
            txt(lang(
                u8"生産の条件を満たしてない。"s,
                u8"You don't meet requirements to create the item."s));
            goto label_1857_internal;
        }
        if (inv_getspace() == 0)
        {
            snd(27);
            txt(lang(
                u8"バックパックが一杯だ。"s, u8"Your inventory is full."s));
            goto label_1857_internal;
        }
        matuse = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
            {
                j(0) = matneed(cnt * 2);
                j(1) = matneed(cnt * 2 + 1);
                if (j == -1)
                {
                    break;
                }
                mat(j) -= j(1);
                matuse += j(1);
            }
        }
        snd(58);
        fixlv = 2;
        if (rnd(200 + matval(1) * 2) < sdata(matval, 0) + 20)
        {
            fixlv = 4;
        }
        if (rnd(100 + matval(1) * 2) < sdata(matval, 0) + 20)
        {
            fixlv = 3;
        }
        flt(calcobjlv(sdata(matval, 0)), calcfixlv(fixlv));
        itemcreate(0, p, -1, -1, 0);
        txt(lang(
            itemname(ci, 1) + u8"を製造した。"s,
            u8"You producted "s + itemname(ci, 1) + u8"."s));
        r1 = matval;
        r2 = matuse;
        label_1472();
        r1 = 0;
        label_1477();
        label_1421();
        page_save();
        goto label_18551_internal;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1857_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1857_internal;
        }
    }
    if (key == key_cancel)
    {
        return;
    }
    goto label_1857_internal;
}
void label_1859()
{
    listmax = 0;
    page = 0;
    pagesize = 15;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    curmenu = 3;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
        {
            if (mat(cnt) != 0)
            {
                list(0, listmax) = cnt;
                ++listmax;
            }
        }
    }
    redraw(0);
    gsel(7);
    pos(0, 0);
    picload(exedir + u8"graphic\\ie_scroll.bmp"s);
    gsel(0);
    snd(92);
    drawmenu();
    wx = (windoww - 600) / 2 + inf_screenx;
    wy = winposy(430);
    ww = 600;
    wh = 430;
    windowanime(wx, wy, ww, wh, 10, 4);
    windowshadow = 1;
label_1860_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    drawmenu();
label_1861_internal:
    redraw(0);
    s = strhint2 + strhint3b;
    showscroll(wx, wy, ww, wh);
    display_topic(lang(u8"所持マテリアル"s, u8"Name"s), wx + 38, wy + 36);
    display_topic(lang(u8"説明"s, u8"Detail"s), wx + 296, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(490, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 68, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s = ""s + matname(i) + lang(u8" ? "s, u8" x "s) + mat(i);
            cs_list(cnt, s, wx + 96, wy + 66 + cnt * 19 - 1, 19, 0, 0);
            s = matdesc(i);
            pos(wx + 308, wy + 66 + cnt * 19 + 2);
            mes(s);
            p(1) = matref(2, i);
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, p(1)), chipi(3, p(1)) + 960);
            if (p(1) == 528)
            {
                gmode(2);
                pos(0, 960);
                gcopy(1, 0, 768, inf_tiles, inf_tiles);
                pos(0, 1008);
                gzoom(
                    22,
                    20,
                    5,
                    chipc(0, 0) + 8,
                    chipc(1, 0) + 4 + (chipc(3, 0) > inf_tiles) * 8,
                    chipc(2, 0) - 16,
                    chipc(3, 0) - 8 - (chipc(3, 0) > inf_tiles) * 10,
                    1);
                pos(6, 974);
                gcopy(1, 0, 1008, 22, 20);
                gsel(selcur);
            }
            else
            {
                if (p(1) == 531)
                {
                    pos(8, 1058 - chipc(3, 0));
                    gcopy(
                        5,
                        chipc(0, 0) + 8,
                        chipc(1, 0) + 2,
                        chipc(2, 0) - 16,
                        chipc(3, 0) - 8);
                    gmode(4 - 1, -1, 150);
                    color(0, 0, 0);
                    pos(0, 960 + (chipc(3, 0) == inf_tiles) * 48);
                    gcopy(
                        1,
                        144,
                        768 + (chipc(3, 0) > inf_tiles) * 48,
                        inf_tiles,
                        chipc(3, 0) + (chipc(3, 0) > inf_tiles) * 48);
                    gmode(2);
                    gsel(selcur);
                }
                else
                {
                    pos(0, 960);
                    gcopy(
                        1,
                        chipi(0, p(1)),
                        chipi(1, p(1)),
                        chipi(2, p(1)),
                        chipi(3, p(1)));
                    gfini(chipi(2, p(1)), chipi(3, p(1)));
                    gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
                    gsel(selcur);
                }
            }
            pos(wx + 47, wy + 69 + cnt * 19 + 2);
            gmode(2, inf_tiles, inf_tiles);
            grotate(1, 0, 960, 0, chipi(2, p(1)), chipi(3, p(1)));
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 3)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 3;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    csctrl = 0;
                    label_20332();
                    return;
                }
                if (curmenu == 1)
                {
                    label_2050();
                    return;
                }
                if (curmenu == 2)
                {
                    label_19672();
                    return;
                }
                if (curmenu == 3)
                {
                    label_1859();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1860_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1860_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        label_2743(false);
    }
    goto label_1861_internal;
}
void atxinit()
{
    if (atxthrough == 0)
    {
        notesel(atbuff);
        atbuff = "";
    }
    atxthrough = 0;
    listmax = 0;
    cs = 0;
    page = 0;
    cc = 0;
    cs_bk = -1;
    pagesize = 16;
    chatesc = -1;
    if (atxbg != atxbgbk)
    {
        mode = 0;
        screenupdate = -1;
        label_1419();
        mode = 9;
        atxbgbk = atxbg;
        gsel(4);
        gmode(0);
        pos(0, 0);
        picload(exedir + u8"\\graphic\\"s + atxbg + u8".bmp"s, 1);
        pos(0, inf_msgh);
        gzoom(windoww, windowh - inf_verh - inf_msgh, 4, 0, 0, 240, 160);
        gmode(2);
        p = windoww / 192;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p + 1); cnt < cnt_end; ++cnt)
            {
                if (cnt == p)
                {
                    sx = windoww % 192;
                }
                else
                {
                    sx = 192;
                }
                pos(cnt * 192, 0);
                gcopy(3, 496, 528, sx, inf_msgh);
            }
        }
        window2(windoww - 208, 0, 208, 98, 0, 0);
        pos(windoww - 204, 4);
        gzoom(200, 90, 0, 120, 88, windoww - 120, windowh - inf_verh - 112, 1);
        gsel(0);
    }
    return;
}
void begintempinv()
{
    file = u8"shoptmp.s2"s;
    fmode = 4;
    label_2107();
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            inv(0, cnt) = 0;
        }
    }
    return;
}
void exittempinv()
{
    file = u8"shoptmp.s2"s;
    fmode = 3;
    label_2107();
    return;
}
void label_1866()
{
    begintempinv();
    atxthrough = 0;
    atxpic = 0;
    snd(39);
    mode = 9;
    atxbg = u8"bg13"s;
    atxbgbk = "";
    SDIM3(atxinfon, 80, 5);
    redraw(0);
    if (atxid == 2)
    {
        label_1874();
        return;
    }
    if (atxid == 1)
    {
        txt(lang(u8"ディーラーに話しかけた。"s, u8"You talk to the dealer."s));
        music = 77;
        label_0068();
        label_1878();
        return;
    }
    if (atxid == 4)
    {
        music = 77;
        label_0068();
        label_1878();
        return;
    }
    label_1873();
    return;
}
void label_18672()
{
label_18671_internal:
    redraw(0);
    screenupdate = -1;
    label_1419();
    if (atxid >= 2)
    {
        txtadvmsgfix = 136;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (strmid(s, 0, 1) == u8"@"s)
            {
                s(1) = strmid(s, 1, 2);
                s = strmid(s, 3, strlen(s) - 3);
                font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
                color(250, 240, 230);
                if (s(1) == u8"BL"s)
                {
                    color(130, 130, 250);
                }
                if (s(1) == u8"GR"s)
                {
                    color(130, 250, 130);
                }
                if (s(1) == u8"QM"s)
                {
                    color(0, 100, 0);
                }
            }
            else
            {
                font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
                color(250, 240, 230);
            }
            pos(170, cnt * 20 + 120 + txtadvmsgfix);
            mes(s);
        }
    }
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    gsel(2);
    gmode(0);
    pos(0, 0);
    gcopy(0, 0, 0, windoww, windowh);
    gsel(0);
    gmode(2);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
        }
    }
    label_1870();
label_1868_internal:
    redraw(0);
    x(0) = 170;
    x(1) = 400;
    y(0) = noteinfo(0) * 20 + 120 + txtadvmsgfix + 16;
    y(1) = 20 * listmax;
    gmode(0);
    pos(x, y);
    gcopy(2, x, y, x(1), y(1));
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            display_key(
                170,
                noteinfo(0) * 20 + 120 + txtadvmsgfix + 16 + cnt * 20,
                cnt);
            s = listn(0, p);
            cs_list(
                cnt,
                s,
                200,
                noteinfo(0) * 20 + 120 + txtadvmsgfix + 16 + cnt * 20,
                19,
                0,
                2);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    rtval = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                rtval = list(0, pagesize * page + cnt);
                snd(40);
                break;
            }
        }
    }
    if (chatesc != -1)
    {
        if (key == key_cancel)
        {
            snd(40);
            rtval = chatesc;
        }
    }
    if (rtval != -1)
    {
        label_1871();
        atxpic = 0;
        return;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_18671_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_18671_internal;
        }
    }
    goto label_1868_internal;
}
void label_1870()
{
    label_1872();
    if (mattile != -1)
    {
        mattile = rnd(mattile(2)) + mattile(1);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
        {
            x(0) = 170;
            x(1) = 300;
            y(0) = noteinfo(0) * 20 + 120 + txtadvmsgfix + 16;
            y(1) = 20 * listmax;
            redraw(0);
            gmode(0);
            pos(x - 50, y - 50);
            gcopy(2, x - 50, y - 50, 100 + x(1), y(1) + 100);
            if (cnt == 11)
            {
                break;
            }
            color(0, 0, 0);
            gmode(4, x(1), y(1), cnt * 25);
            pos(x + x(1) / 2 - 10 + cnt, y + y(1) / 2);
            grotate(2, 0, 0, 0, x(1), y(1));
            if (atxpic != 0)
            {
                x(0) = 345;
                x(1) = atxpic(2) + 120;
                y(0) = 170;
                y(1) = atxpic(3);
                gmode(0);
                pos(x - atxpic(2) / 2, y - atxpic(3) / 2);
                gcopy(2, x - atxpic(2) / 2, y - atxpic(3) / 2, x(1), y(1));
                pos(x, y);
                gmode(2, inf_tiles, inf_tiles);
                if (cnt == 10)
                {
                    p_double = 0;
                }
                else
                {
                    p_double = 0.6222 * cnt;
                }
                p(1) = 1;
                if (atxpic == 2)
                {
                    p(1) = 5;
                }
                grotate(
                    p(1),
                    atxpic(1) % 33 * 32,
                    atxpic(1) / 33 * 32,
                    p_double,
                    cnt * (atxpic(2) / 10),
                    cnt * (atxpic(3) / 10));
            }
            if (mattile != -1)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                    {
                        x(0) = cnt * 250 + 170;
                        x(1) = 96;
                        y(0) = 120;
                        y(1) = 96;
                        gmode(0);
                        pos(x, y);
                        gcopy(2, x, y, x(1), y(1));
                        pos(x + x(1) / 2, y + y(1) / 2);
                        gmode(2, inf_tiles, inf_tiles);
                        grotate(
                            1,
                            mattile % 33 * 32,
                            mattile / 33 * 32,
                            0,
                            cnt2 * 9,
                            cnt2 * 9);
                    }
                }
            }
            await(20);
            redraw(1);
        }
    }
    gmode(2);
    atxpic = 0;
    return;
}
void label_1871()
{
    label_1872();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
        {
            x = 170;
            y(0) = noteinfo(0) * 20 + 120 + txtadvmsgfix + 16;
            y(1) = 20 * listmax;
            redraw(0);
            gmode(0);
            pos(x - 50, y - 50);
            gcopy(2, x - 50, y - 50, 100 + x(1), y(1) + 100);
            color(0, 0, 0);
            gmode(4, x(1), y(1), 250 - cnt * 25);
            pos(x + x(1) / 2 - 2 * cnt, y + y(1) / 2);
            grotate(2, 0, 0, 0, x(1), y(1));
            await(15);
            redraw(1);
        }
    }
    return;
}
void label_1872()
{
    x(1) = 300;
    cs = -1;
    redraw(0);
    color(0, 0, 0);
    boxf(
        170,
        noteinfo(0) * 20 + 120 + txtadvmsgfix + 16,
        170 + x(1),
        noteinfo(0) * 20 + 120 + txtadvmsgfix + 16 + 20 * listmax);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            display_key(
                170,
                noteinfo(0) * 20 + 120 + txtadvmsgfix + 16 + cnt * 20,
                cnt);
            s = listn(0, p);
            gmode(2);
            color(0, 0, 0);
            cs_list(
                cnt,
                s,
                200,
                noteinfo(0) * 20 + 120 + txtadvmsgfix + 16 + cnt * 20,
                19,
                0,
                2);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    gsel(2);
    gmode(0);
    pos(0, 0);
    gcopy(
        0, 170, noteinfo(0) * 20 + 120 + txtadvmsgfix + 16, x(1), 20 * listmax);
    gsel(0);
    gmode(2);
    cs = 0;
    return;
}
void label_1873()
{
    mtilefilecur = -1;
    label_1746();
    f = 0;
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) != 0)
            {
                f = 1;
            }
        }
    }
    if (f == 1)
    {
        if (cdata(50, 0) >= 0)
        {
            txt(lang(
                u8"幾つかの戦利品がある。"s,
                u8"There're some items you can aquire."s));
            screenupdate = -1;
            label_1419();
            invsubroutine = 1;
            invctrl(0) = 22;
            invctrl(1) = 0;
            label_20592();
        }
    }
    mode = 0;
    atxid = 0;
    exittempinv();
    await(100);
    snd(39);
    label_0068();
    return;
}
void label_1874()
{
    atxap = 10;
    atxspot = 19;
    atxinfon(0) = u8"ランダムサイト"s;
    atxinit();
    atxthrough = 1;
    if (atxid(1) == 0)
    {
        atxid(1) = 3;
        atxlv = gdata(22);
        if (mdata(6) == 20)
        {
            atxid(1) = 1;
        }
        if (mdata(6) == 21)
        {
            atxid(1) = 4;
        }
        if (mdata(6) == 22)
        {
            atxid(1) = 2;
        }
        if (mdata(6) == 23)
        {
            atxid(1) = 4;
        }
        if (mdata(6) == 1)
        {
            atxlv = cdata(38, 0);
            if (4 <= gdata(62) && gdata(62) < 9)
            {
                atxid(1) = 2;
            }
            if (264 <= gdata(62) && gdata(62) < 363)
            {
                atxid(1) = 3;
            }
            if (9 <= gdata(62) && gdata(62) < 13)
            {
                atxid(1) = 2;
            }
            if (13 <= gdata(62) && gdata(62) < 17)
            {
                atxid(1) = 3;
            }
        }
    }
    if (atxid(1) == 8)
    {
        atxbg = u8"bg21"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 16;
        noteadd(u8"この辺りは残骸やら遺品やらでごちゃごちゃだ。"s);
    }
    if (atxid(1) == 7)
    {
        atxbg = u8"bg20"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 15;
        noteadd(u8"この辺りには見たこともない植物がたくさんある。"s);
    }
    if (atxid(1) == 6)
    {
        atxbg = u8"bg19"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 14;
        noteadd(u8"天然の鉱石の宝庫だ。"s);
    }
    if (atxid(1) == 5)
    {
        atxbg = u8"bg18"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 13;
        noteadd(u8"綺麗な泉がある。"s);
    }
    if (atxid(1) == 1)
    {
        atxbg = u8"bg13"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 9;
    }
    if (atxid(1) == 4)
    {
        atxbg = u8"bg17"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 12;
    }
    if (atxid(1) == 2)
    {
        atxbg = u8"bg15"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 10;
    }
    if (atxid(1) == 3)
    {
        atxbg = u8"bg16"s;
        mattile(0) = 0;
        mattile(1) = 495;
        mattile(2) = 3;
        atxspot = 11;
    }
label_1875:
    if (atxap <= 0 || cdata(50, 0) < 0)
    {
        label_1877();
        return;
    }
    atxinit();
    noteadd(u8"何をしよう？"s);
    list(0, listmax) = 1;
    listn(0, listmax) = u8"探索"s;
    ++listmax;
    list(0, listmax) = 3;
    listn(0, listmax) = u8"去る"s;
    ++listmax;
    atxinfon(1) = u8"行動回数残り "s + atxap + u8"回\n"s;
    chatesc = 3;
    txtadvmsgfix = 0;
    txtadvscreenupdate = 1;
    label_18672();
    if (rtval == 1)
    {
        goto label_1876_internal;
        return;
    }
    if (rtval == 2)
    {
        goto label_1876_internal;
        return;
    }
    if (rtval == 3)
    {
        label_1877();
        return;
    }
    goto label_1875;
label_1876_internal:
    --atxap;
    atxinit();
    if (rnd(1) == 0)
    {
        atxrefval1 = -1;
        if (atxid(1) == 7)
        {
            atxpic(0) = 1;
            atxpic(1) = 171;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"茂みを見つけた。"s);
            list(0, listmax) = 1;
            listn(0, listmax) = u8"調べる"s;
            ++listmax;
            list(0, listmax) = 2;
            listn(0, listmax) = u8"採取する("s + skillname(180) + u8": "s
                + sdata(180, 0) + u8")"s;
            ++listmax;
            atxrefval1 = 7;
        }
        if (atxid(1) == 6)
        {
            atxpic(0) = 1;
            atxpic(1) = 219;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"鉱石の岩がある。"s);
            list(0, listmax) = 1;
            listn(0, listmax) = u8"調べる"s;
            ++listmax;
            list(0, listmax) = 2;
            listn(0, listmax) =
                u8"掘る("s + skillname(163) + u8": "s + sdata(163, 0) + u8")"s;
            ++listmax;
            atxrefval1 = 7;
        }
        if (atxid(1) == 5)
        {
            atxpic(0) = 1;
            atxpic(1) = 439;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"泉がある。"s);
            list(0, listmax) = 1;
            listn(0, listmax) = u8"飲む"s;
            ++listmax;
            list(0, listmax) = 2;
            listn(0, listmax) =
                u8"釣る("s + skillname(185) + u8": "s + sdata(185, 0) + u8")"s;
            ++listmax;
            atxrefval1 = 7;
        }
        if (atxid(1) == 8)
        {
            atxpic(0) = 1;
            atxpic(1) = 199;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"残骸を見つけた。"s);
            list(0, listmax) = 1;
            listn(0, listmax) = u8"あさる"s;
            ++listmax;
            list(0, listmax) = 2;
            listn(0, listmax) = u8"解剖する("s + skillname(161) + u8": "s
                + sdata(161, 0) + u8")"s;
            ++listmax;
            atxrefval1 = 7;
        }
        if (atxrefval1 == -1)
        {
            noteadd(u8"壁に何やら怪しいひび割れがある…"s);
            list(0, listmax) = 1;
            listn(0, listmax) = u8"叩く(筋力)"s;
            ++listmax;
            list(0, listmax) = 2;
            listn(0, listmax) = u8"調べる(感知)"s;
            ++listmax;
        }
        atxinfon(1) = u8"行動回数残り "s + atxap + u8"回\n"s;
        chatesc = 1;
        txtadvmsgfix = 0;
        txtadvscreenupdate = 1;
        label_18672();
        atxinit();
        if (rtval == 1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    p = random_material(atxlv);
                    atxpic(0) = 1;
                    atxpic(1) = matref(2, p);
                    atxpic(2) = 96;
                    atxpic(3) = 96;
                    snd(41);
                    mat(p) += 1;
                    noteadd(lang(
                        u8"@BL"s + matname(p) + u8"を"s + 1
                            + u8"個手に入れた！(所持数:"s + mat(p) + u8"個)"s,
                        u8"@BLYou get "s + 1 + u8" "s + matname(p)
                            + u8"(s)! (Total:"s + mat(p) + u8")"s));
                }
            }
            atxthrough = 1;
            goto label_1875;
        }
        if (rtval == 2)
        {
            atxthrough = 1;
            goto label_1875;
        }
    }
    if (rnd(8) == 0)
    {
        if (rnd(4) == 0)
        {
            noteadd(u8"あれ…？"s);
            noteadd(u8"道に迷った！ (行動回数-2)"s);
            atxap -= 2;
            atxthrough = 1;
            goto label_1875;
        }
        if (rnd(2) == 0)
        {
            atxpic(0) = 2;
            atxpic(1) = 205;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"幽霊に脅かされた！ (行動回数-1)"s);
            snd(70);
            atxap -= 1;
            atxthrough = 1;
            goto label_1875;
        }
        if (rnd(2) == 0)
        {
            atxpic(0) = 1;
            atxpic(1) = 424;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"小石につまづいてころんでしまった！ (行動回数-1)"s);
            snd(70);
            atxap -= 1;
            atxthrough = 1;
            goto label_1875;
        }
    }
    if (rnd(8) == 0)
    {
        if (rnd(4) == 0)
        {
            atxpic(0) = 1;
            atxpic(1) = 200;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"ふかふかの藁を見つけた。"s);
            noteadd(u8"ふかふかして気持ちいい。（行動回数+3)"s);
            atxap += 2;
            atxthrough = 1;
            goto label_1875;
        }
        if (rnd(2) == 0)
        {
            atxpic(0) = 1;
            atxpic(1) = 294;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"切り株がある。"s);
            noteadd(u8"腰を下ろして疲れを癒した。（行動回数+2)"s);
            atxap += 2;
            atxthrough = 1;
            goto label_1875;
        }
        if (rnd(2) == 0)
        {
            atxpic(0) = 1;
            atxpic(1) = 127;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"綺麗な花を見つけた。"s);
            noteadd(u8"心がなごんだ…（行動回数+2)"s);
            atxap += 2;
            atxthrough = 1;
            goto label_1875;
        }
    }
    if (rnd(7) == 0)
    {
        if (rnd(3))
        {
            atxpic(0) = 2;
            atxpic(1) = 210;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"痛っ！蚊に刺された。"s);
            snd(2);
            dmghp(0, cdata(51, 0) * 5 / 100, -10);
        }
        else
        {
            atxpic(0) = 2;
            atxpic(1) = 216;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"うっ！ヘビに噛まれた。"s);
            snd(2);
            dmghp(0, cdata(51, 0) * 10 / 100, -10);
        }
        atxthrough = 1;
        goto label_1875;
    }
    if (rnd(3) == 0)
    {
        if (rnd(3))
        {
            atxpic(0) = 2;
            atxpic(1) = 210;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"痛っ！蚊に刺された。"s);
            snd(2);
            dmghp(0, cdata(51, 0) * 5 / 100, -10);
        }
        else
        {
            atxpic(0) = 2;
            atxpic(1) = 216;
            atxpic(2) = 96;
            atxpic(3) = 96;
            noteadd(u8"うっ！ヘビに噛まれた。"s);
            snd(2);
            dmghp(0, cdata(51, 0) * 10 / 100, -10);
        }
        atxthrough = 1;
        goto label_1875;
    }
    if (rnd(2) == 0)
    {
        atxpic(0) = 1;
        atxpic(1) = 220;
        atxpic(2) = 96;
        atxpic(3) = 96;
        noteadd(u8"宝箱がある。"s);
        list(0, listmax) = 1;
        listn(0, listmax) = u8"錠を解体する("s + skillname(158) + u8": "s
            + sdata(158, 0) + u8")"s;
        ++listmax;
        list(0, listmax) = 3;
        listn(0, listmax) = u8"叩き割る(筋力: "s + sdata(10, 0) + u8")"s;
        ++listmax;
        atxinfon(1) = u8"行動回数残り "s + atxap + u8"回\n"s;
        chatesc = 1;
        txtadvmsgfix = 0;
        txtadvscreenupdate = 1;
        label_18672();
        atxinit();
        goto label_1875;
    }
    if (rnd(2) == 0)
    {
        p = random_material(atxlv);
        atxpic(0) = 1;
        atxpic(1) = matref(2, p);
        atxpic(2) = 96;
        atxpic(3) = 96;
        snd(41);
        mat(p) += 1;
        noteadd(lang(
            u8"@BL"s + matname(p) + u8"を"s + 1 + u8"個手に入れた！(所持数:"s
                + mat(p) + u8"個)"s,
            u8"@BLYou get "s + 1 + u8" "s + matname(p) + u8"(s)! (Total:"s
                + mat(p) + u8")"s));
        atxthrough = 1;
        goto label_1875;
    }
    if (rnd(3) == 0)
    {
        noteadd(u8"何も見つからなかった…"s);
        atxthrough = 1;
        goto label_1875;
    }
    noteadd(u8"何も見つからなかった…"s);
    atxthrough = 1;
    goto label_1875;
}
void label_1877()
{
    atxinit();
    if (cdata(50, 0) >= 0)
    {
        noteadd(u8"探索を終えた。"s);
        list(0, listmax) = 0;
        listn(0, listmax) = u8"戻る"s;
        ++listmax;
    }
    else
    {
        noteadd(u8"ぐふ…"s);
        list(0, listmax) = 0;
        listn(0, listmax) = u8"(断末魔の叫び)"s;
        ++listmax;
    }
    atxinfon(1) = u8"行動回数残り "s + atxap + u8"回\n"s;
    chatesc = 0;
    txtadvmsgfix = 0;
    txtadvscreenupdate = 1;
    label_18672();
    label_1873();
    return;
}
void label_1878()
{
    atxbg = u8"bg14"s;
    mattile = -1;
    atxinfon(0) = lang(
        u8"カジノ《フォーチュンクッキー》"s, u8"Casino <<Fortune Cookie>>"s);
    atxinit();
    noteadd(lang(
        u8"カジノ《フォーチュンクッキー》へようこそ。"s,
        u8"Welcome to the casino, Fortune cookie!"s));
    noteadd(lang(
        u8"チップマテリアルと引き換えにゲームをすることができます。"s,
        u8"You can bet the casino chips you have and play some games."s));
    noteadd(lang(u8"ごゆっくりお楽しみ下さい。"s, u8"Enjoy your stay."s));
    if (gdata(256) == 0)
    {
        noteadd(""s);
        noteadd(lang(
            u8"お客様は初めてのご利用のようですね。"s,
            u8"Looks like you play for the first time, sir."s));
        noteadd(lang(
            u8"当店からチップマテリアルを10枚進呈します。"s,
            u8"We're offering you 10 free casino chips to try our games."s));
        gdata(256) = 1;
        snd(41);
        mat(1) += 10;
        noteadd(lang(
            u8"@BL"s + matname(1) + u8"を"s + 10 + u8"個手に入れた！(所持数:"s
                + mat(1) + u8"個)"s,
            u8"@BLYou get "s + 10 + u8" "s + matname(1) + u8"(s)! (Total:"s
                + mat(1) + u8")"s));
    }
    atxinfon(1) = lang(
        u8"カジノチップ残り "s + mat(1) + u8"枚\n"s,
        u8"Casino chips left: "s + mat(1) + u8"\n"s);
    atxinfon(2) = "";
    list(0, listmax) = 0;
    listn(0, listmax) = lang(u8"店を出る"s, u8"Later."s);
    ++listmax;
    list(0, listmax) = 1;
    listn(0, listmax) =
        lang(u8"ブラックジャック"s, u8"I want to play Blackjack."s);
    ++listmax;
    chatesc = 0;
    txtadvmsgfix = 0;
    txtadvscreenupdate = 1;
    label_18672();
    if (rtval == 0)
    {
        label_1873();
        return;
    }
    if (rtval == 1)
    {
        label_1879();
        return;
    }
    label_1878();
    return;
}
void label_1879()
{
    atxinit();
    noteadd(lang(
        u8"ブラックジャックは、カードの合計を21に近づけるゲームです。"s,
        u8"In Blackjack, the hand with the highest total wins as long as it"s));
    noteadd(lang(
        u8"J,Q,Kは10に、Aは1または11に数えられます。21を越えると負けです。"s,
        u8"doesn't exceed 21. J,Q,K are counted as 10 and A is counted as 1 or 11."s));
    noteadd(lang(
        u8"では、賭けるチップを宣言してください。"s,
        u8"More bets means better rewards."s));
    noteadd(lang(
        u8"チップが多いほど、景品の質があがります。"s,
        u8"How many tips would you like to bet?"s));
    atxinfon(1) = lang(
        u8"カジノチップ残り "s + mat(1) + u8"枚\n"s,
        u8"Casino chips left: "s + mat(1) + u8"\n"s);
    atxinfon(2) = "";
    if (mat(1) <= 0)
    {
        noteadd(""s);
        noteadd(lang(
            u8"お客様はチップをもっていません。"s,
            u8"Sorry sir, you don't seem to have casino chips."s));
    }
    list(0, listmax) = 0;
    listn(0, listmax) = lang(u8"やめる"s, u8"I quit."s);
    ++listmax;
    if (mat(1) >= 1)
    {
        list(0, listmax) = 1;
        listn(0, listmax) =
            lang(""s + 1 + u8"枚賭ける"s, u8"Bet "s + 1 + u8" chips."s);
        ++listmax;
    }
    if (mat(1) >= 5)
    {
        list(0, listmax) = 5;
        listn(0, listmax) =
            lang(""s + 5 + u8"枚賭ける"s, u8"Bet "s + 5 + u8" chips."s);
        ++listmax;
    }
    if (mat(1) >= 20)
    {
        list(0, listmax) = 20;
        listn(0, listmax) =
            lang(""s + 20 + u8"枚賭ける"s, u8"Bet "s + 20 + u8" chips."s);
        ++listmax;
    }
    chatesc = 0;
    txtadvmsgfix = 0;
    txtadvscreenupdate = 1;
    label_18672();
    if (rtval == 0)
    {
        label_1878();
        return;
    }
    stake = rtval;
    winrow = 0;
    cardround = 0;
    autosave = 1 * (gdata(20) != 35);
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            screenupdate = -1;
            label_1419();
            atxinit();
            if (cnt == 0)
            {
                mat(1) -= stake;
                noteadd(lang(
                    matname(1) + u8"を"s + stake + u8"個失った(残り:"s + mat(1)
                        + u8"個)"s,
                    u8"You lose "s + stake + u8" "s + matname(1)
                        + u8"(s). (Total:"s + mat(1) + u8")"s));
            }
            if (cardround == 0)
            {
                nojoker = 1;
                initcard(60, 160);
                cardplayerinit(2, 5);
                cardplayeradd(0, 220, 124);
                cardplayeradd(1, 220, 240);
            }
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 1);
            color(255, 255, 255);
            pos(152, 154);
            mes(lang(u8"　親"s, u8"Dealer"s));
            pos(152, 270);
            mes(lang(u8"あなた"s, u8"   You"s));
            showcardpile();
            showcardholder();
            showcard();
            if (cardround == 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                    {
                        servecard(cnt % 2);
                        if (cnt != 2)
                        {
                            opencard2(stat);
                        }
                    }
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                    {
                        if (cpcardnum(0) >= 5)
                        {
                            break;
                        }
                        if (cpscore(0) < cpscore(1)
                            || cpscore(0) - rnd(5) <= 11)
                        {
                            servecard(0);
                            opencard2(stat);
                            --cnt;
                            continue;
                        }
                    }
                }
            }
            noteadd(lang(
                u8"あなたの合計は"s + cpscore(1) + u8"です。"s,
                u8"Your hand is "s + cpscore(1) + u8"."s));
            if (cardround == -1)
            {
                noteadd(lang(
                    u8"親の合計は"s + cpscore(0) + u8"です。"s,
                    u8"The dealer's hand is "s + cpscore(0) + u8"."s));
                winner = -1;
                if (cpscore(0) <= 21)
                {
                    if (cpscore(1) > 21 || cpscore(0) > cpscore(1))
                    {
                        winner = 0;
                    }
                }
                if (cpscore(1) <= 21)
                {
                    if (cpscore(0) > 21 || cpscore(1) > cpscore(0))
                    {
                        winner = 1;
                    }
                }
                if (winner == -1)
                {
                    noteadd(lang(
                        u8"勝負は引き分けです。"s, u8"The match is a draw."s));
                }
                if (winner == 0)
                {
                    noteadd(lang(u8"あなたの負けです。"s, u8"You lose."s));
                }
                if (winner == 1)
                {
                    noteadd(lang(
                        u8"おめでとうございます。あなたの勝ちです。"s,
                        u8"Congratulations, you win."s));
                }
            }
            atxinfon(1) = lang(
                u8"カジノチップ残り "s + mat(1) + u8"枚\n"s,
                u8"Casino chips left: "s + mat(1) + u8"\n"s);
            atxinfon(2) = lang(
                u8"賭けチップ "s + stake + u8"枚 現在"s + winrow + u8"連勝中"s,
                u8"Bets: "s + stake + u8" Wins: "s + winrow + ""s);
            if (cardround == -1)
            {
                if (winner == 1)
                {
                    ++winrow;
                }
                if (winner != 0)
                {
                    list(0, listmax) = 0;
                    listn(0, listmax) =
                        lang(u8"次の勝負へ"s, u8"To the next round."s);
                    ++listmax;
                }
                if (winner == 0)
                {
                    list(0, listmax) = 0;
                    listn(0, listmax) = lang(u8"戻る"s, u8"Bah...!"s);
                    ++listmax;
                }
                chatesc = -1;
                txtadvmsgfix = 240;
                txtadvscreenupdate = 0;
                label_18672();
                if (winner == 0)
                {
                    break;
                }
                cardround = 0;
                continue;
            }
            list(0, listmax) = 0;
            listn(0, listmax) = lang(u8"これに決める"s, u8"Stay."s);
            ++listmax;
            if (pileremain() > 10)
            {
                if (cpcardnum(1) < 5)
                {
                    list(0, listmax) = 1;
                    listn(0, listmax) =
                        lang(u8"もう一枚引く(運)"s, u8"Hit me. (Luck)"s);
                    ++listmax;
                }
                list(0, listmax) = 2;
                listn(0, listmax) = lang(u8"イカサマ(器用"s, u8"Cheat. (Dex:"s)
                    + sdata(12, 0) + u8")"s;
                ++listmax;
            }
            chatesc = -1;
            txtadvmsgfix = 240;
            txtadvscreenupdate = 0;
            label_18672();
            if (rtval == 0)
            {
                opencard2(cpblackcard(0));
                cardround = -1;
                continue;
            }
            if (rtval == 1)
            {
                servecard(1);
                p = stat;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                    {
                        if (cpscore(1) >= 22)
                        {
                            if (pileremain() > 10)
                            {
                                if (rnd(sdata(19, 0)) > 40)
                                {
                                    txt(lang(
                                        u8"このカードは悪い予感がする…"s,
                                        u8"I have a bad feeling about this card..."s));
                                    trashcard(p);
                                    servecard(1);
                                    p = stat;
                                }
                            }
                        }
                    }
                }
                opencard2(p);
            }
            if (rtval == 2)
            {
                trashcard(lastcard(1));
                servecard(1);
                opencard2(stat);
                p = 20;
                if (stake == 5)
                {
                    p = 40;
                }
                if (stake == 20)
                {
                    p = 60;
                }
                if (rnd(sdata(12, 0)) < rnd(p))
                {
                    atxinit();
                    noteadd(lang(u8"イカサマだ！"s, u8"Cheater!"s));
                    atxinfon(1) = lang(
                        u8"カジノチップ残り "s + mat(1) + u8"枚\n"s,
                        u8"Casino chips left: "s + mat(1) + u8"\n"s);
                    atxinfon(2) = lang(
                        u8"賭けチップ "s + stake + u8"枚 現在"s + winrow
                            + u8"連勝中"s,
                        u8"Bets: "s + stake + u8" Wins: "s + winrow + ""s);
                    winrow = 0;
                    txt(lang(
                        u8"イカサマが見つかってしまった…"s,
                        u8"You are caught in cheating..."s));
                    modkarma(0, -5);
                    list(0, listmax) = 0;
                    listn(0, listmax) =
                        lang(u8"濡れ衣だ！"s, u8"I didn't do it!"s);
                    ++listmax;
                    chatesc = -1;
                    txtadvmsgfix = 0;
                    txtadvscreenupdate = 1;
                    label_18672();
                    break;
                }
            }
            ++cardround;
        }
    }
    if (winrow > 0)
    {
        atxinit();
        noteadd(lang(
            u8"おめでとうございます。あなたは"s + winrow + u8"連勝しました。"s,
            u8"Congratulations! You've won "s + winrow
                + u8" times in a row."s));
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                i = 2;
                if (winrow > 2)
                {
                    i = 3;
                }
                if (winrow > 7)
                {
                    if (stake >= 5)
                    {
                        i = 4;
                    }
                }
                if (winrow > 15)
                {
                    if (stake >= 20)
                    {
                        i = 5;
                    }
                }
                flt(calcobjlv(
                        rnd(stake + winrow * 2) + winrow * 3 / 2 + stake / 2),
                    i);
                flttypemajor = fsetwear(rnd(length(fsetwear)));
                itemcreate(-1, 0, -1, -1, 0);
                if (inv(0, ci) == 0)
                {
                    --cnt;
                    continue;
                }
            }
        }
        snd(41);
        noteadd(lang(
            u8"@GRアイテム："s + itemname(ci, inv(0, ci))
                + u8"を戦利品に加えた！"s,
            u8"@GR"s + itemname(ci, inv(0, ci))
                + u8" has been added to your loot list!"s));
        if (winrow > 3)
        {
            if (rnd(200) > winrow * 5 + 5)
            {
                flt();
                itemcreate(-1, 559, -1, -1, 0);
                snd(41);
                noteadd(lang(
                    u8"@GRアイテム："s + itemname(ci, inv(0, ci))
                        + u8"を戦利品に加えた！"s,
                    u8"@GR"s + itemname(ci, inv(0, ci))
                        + u8" has been added to your loot list!"s));
            }
        }
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"戻る"s, u8"Great."s);
        ++listmax;
        chatesc = 0;
        txtadvmsgfix = 0;
        txtadvscreenupdate = 1;
        label_18672();
        winrow = 0;
    }
    label_1879();
    return;
}
int modpiety(int prm_1035)
{
    if (sdata(181, 0) * 100 < cdata(62, 0))
    {
        txt(lang(
            u8"あなたの信仰は既に限界まで高まっている。"s,
            u8" Your God becomes indifferent to your gift."s));
        stat = 0;
        return stat;
    }
    if (gdata(807) == 4)
    {
        if (cdata(62, 0) >= 4000)
        {
            ++gdata(807);
            txtgod(cdata(61, 0), 8);
        }
    }
    if (gdata(807) == 2)
    {
        if (cdata(62, 0) >= 2500)
        {
            ++gdata(807);
            txtgod(cdata(61, 0), 7);
        }
    }
    if (gdata(807) == 0)
    {
        if (cdata(62, 0) >= 1500)
        {
            ++gdata(807);
            txtgod(cdata(61, 0), 7);
        }
    }
    cdata(62, 0) += prm_1035 / (1 + (gdata(20) == 35) * 9);
    stat = 1;
    return stat;
}
void label_1882()
{
    if (cdata(61, tc) != 0 || cbit(990, tc) || tc == 0)
    {
        return;
    }
    randomize(gdata(8) + gdata(20));
    cdata(61, tc) = rnd(8);
    randomize();
    if (cdata(61, tc) == 0 || rnd(4) == 0)
    {
        cbitmod(990, tc, 1);
    }
    return;
}
void label_1883()
{
    SDIM3(godname, 20, 8);
    godname(0) = lang(u8"無のエイス"s, u8"Eyth of Infidel"s);
    godname(1) = lang(u8"機械のマニ"s, u8"Mani of Machine"s);
    godname(2) = lang(u8"風のルルウィ"s, u8"Lulwy of Wind"s);
    godname(3) = lang(u8"元素のイツパロトル"s, u8"Itzpalt of Element"s);
    godname(4) = lang(u8"幸運のエヘカトル"s, u8"Ehekatl of Luck"s);
    godname(5) = lang(u8"地のオパートス"s, u8"Opatos of Earth"s);
    godname(6) = lang(u8"癒しのジュア"s, u8"Jure of Healing"s);
    godname(7) = lang(u8"収穫のクミロミ"s, u8"Kumiromi of Harvest"s);
    return;
}
void label_1884()
{
    if (cdata(61, r1) == 1)
    {
        if (sdata(12, r1) > 0)
        {
            sdata(12, r1) +=
                limit(cdata(62, r1) / 400, 1, 8 + sdata(181, 0) / 10);
        }
        if (sdata(13, r1) > 0)
        {
            sdata(13, r1) +=
                limit(cdata(62, r1) / 300, 1, 14 + sdata(181, 0) / 10);
        }
        if (sdata(154, r1) > 0)
        {
            sdata(154, r1) +=
                limit(cdata(62, r1) / 500, 1, 8 + sdata(181, 0) / 10);
        }
        if (sdata(110, r1) > 0)
        {
            sdata(110, r1) +=
                limit(cdata(62, r1) / 250, 1, 18 + sdata(181, 0) / 10);
        }
        if (sdata(159, r1) > 0)
        {
            sdata(159, r1) +=
                limit(cdata(62, r1) / 350, 1, 8 + sdata(181, 0) / 10);
        }
        if (sdata(158, r1) > 0)
        {
            sdata(158, r1) +=
                limit(cdata(62, r1) / 250, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(176, r1) > 0)
        {
            sdata(176, r1) +=
                limit(cdata(62, r1) / 300, 1, 10 + sdata(181, 0) / 10);
        }
        if (sdata(179, r1) > 0)
        {
            sdata(179, r1) +=
                limit(cdata(62, r1) / 350, 1, 12 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 2)
    {
        if (sdata(13, r1) > 0)
        {
            sdata(13, r1) +=
                limit(cdata(62, r1) / 450, 1, 10 + sdata(181, 0) / 10);
        }
        if (sdata(18, r1) > 0)
        {
            sdata(18, r1) +=
                limit(cdata(62, r1) / 350, 1, 30 + sdata(181, 0) / 10);
        }
        if (sdata(108, r1) > 0)
        {
            sdata(108, r1) +=
                limit(cdata(62, r1) / 350, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(109, r1) > 0)
        {
            sdata(109, r1) +=
                limit(cdata(62, r1) / 450, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(157, r1) > 0)
        {
            sdata(157, r1) +=
                limit(cdata(62, r1) / 450, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(174, r1) > 0)
        {
            sdata(174, r1) +=
                limit(cdata(62, r1) / 550, 1, 8 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 3)
    {
        if (sdata(16, r1) > 0)
        {
            sdata(16, r1) +=
                limit(cdata(62, r1) / 300, 1, 18 + sdata(181, 0) / 10);
        }
        if (sdata(155, r1) > 0)
        {
            sdata(155, r1) +=
                limit(cdata(62, r1) / 350, 1, 15 + sdata(181, 0) / 10);
        }
        if (sdata(50, r1) > 0)
        {
            sdata(50, r1) +=
                limit(cdata(62, r1) / 50, 1, 200 + sdata(181, 0) / 10);
        }
        if (sdata(51, r1) > 0)
        {
            sdata(51, r1) +=
                limit(cdata(62, r1) / 50, 1, 200 + sdata(181, 0) / 10);
        }
        if (sdata(52, r1) > 0)
        {
            sdata(52, r1) +=
                limit(cdata(62, r1) / 50, 1, 200 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 4)
    {
        if (sdata(17, r1) > 0)
        {
            sdata(17, r1) +=
                limit(cdata(62, r1) / 250, 1, 20 + sdata(181, 0) / 10);
        }
        if (sdata(19, r1) > 0)
        {
            sdata(19, r1) +=
                limit(cdata(62, r1) / 100, 1, 50 + sdata(181, 0) / 10);
        }
        if (sdata(173, r1) > 0)
        {
            sdata(173, r1) +=
                limit(cdata(62, r1) / 300, 1, 15 + sdata(181, 0) / 10);
        }
        if (sdata(164, r1) > 0)
        {
            sdata(164, r1) +=
                limit(cdata(62, r1) / 350, 1, 17 + sdata(181, 0) / 10);
        }
        if (sdata(185, r1) > 0)
        {
            sdata(185, r1) +=
                limit(cdata(62, r1) / 300, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(158, r1) > 0)
        {
            sdata(158, r1) +=
                limit(cdata(62, r1) / 450, 1, 8 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 5)
    {
        if (sdata(10, r1) > 0)
        {
            sdata(10, r1) +=
                limit(cdata(62, r1) / 450, 1, 11 + sdata(181, 0) / 10);
        }
        if (sdata(11, r1) > 0)
        {
            sdata(11, r1) +=
                limit(cdata(62, r1) / 350, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(168, r1) > 0)
        {
            sdata(168, r1) +=
                limit(cdata(62, r1) / 350, 1, 15 + sdata(181, 0) / 10);
        }
        if (sdata(153, r1) > 0)
        {
            sdata(153, r1) +=
                limit(cdata(62, r1) / 300, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(163, r1) > 0)
        {
            sdata(163, r1) +=
                limit(cdata(62, r1) / 350, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(174, r1) > 0)
        {
            sdata(174, r1) +=
                limit(cdata(62, r1) / 450, 1, 8 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 6)
    {
        if (sdata(15, r1) > 0)
        {
            sdata(15, r1) +=
                limit(cdata(62, r1) / 300, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(154, r1) > 0)
        {
            sdata(154, r1) +=
                limit(cdata(62, r1) / 250, 1, 18 + sdata(181, 0) / 10);
        }
        if (sdata(155, r1) > 0)
        {
            sdata(155, r1) +=
                limit(cdata(62, r1) / 400, 1, 10 + sdata(181, 0) / 10);
        }
        if (sdata(161, r1) > 0)
        {
            sdata(161, r1) +=
                limit(cdata(62, r1) / 400, 1, 9 + sdata(181, 0) / 10);
        }
        if (sdata(184, r1) > 0)
        {
            sdata(184, r1) +=
                limit(cdata(62, r1) / 450, 1, 8 + sdata(181, 0) / 10);
        }
        if (sdata(174, r1) > 0)
        {
            sdata(174, r1) +=
                limit(cdata(62, r1) / 400, 1, 10 + sdata(181, 0) / 10);
        }
        if (sdata(164, r1) > 0)
        {
            sdata(164, r1) +=
                limit(cdata(62, r1) / 400, 1, 12 + sdata(181, 0) / 10);
        }
    }
    if (cdata(61, r1) == 7)
    {
        if (sdata(13, r1) > 0)
        {
            sdata(13, r1) +=
                limit(cdata(62, r1) / 400, 1, 8 + sdata(181, 0) / 10);
        }
        if (sdata(12, r1) > 0)
        {
            sdata(12, r1) +=
                limit(cdata(62, r1) / 350, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(14, r1) > 0)
        {
            sdata(14, r1) +=
                limit(cdata(62, r1) / 250, 1, 16 + sdata(181, 0) / 10);
        }
        if (sdata(180, r1) > 0)
        {
            sdata(180, r1) +=
                limit(cdata(62, r1) / 300, 1, 12 + sdata(181, 0) / 10);
        }
        if (sdata(178, r1) > 0)
        {
            sdata(178, r1) +=
                limit(cdata(62, r1) / 350, 1, 10 + sdata(181, 0) / 10);
        }
        if (sdata(177, r1) > 0)
        {
            sdata(177, r1) +=
                limit(cdata(62, r1) / 350, 1, 9 + sdata(181, 0) / 10);
        }
        if (sdata(150, r1) > 0)
        {
            sdata(150, r1) +=
                limit(cdata(62, r1) / 350, 1, 8 + sdata(181, 0) / 10);
        }
    }
    return;
}
void label_1885()
{
    buff = u8" "s;
    if (inv(25, ci) == 1)
    {
        buff = lang(
            u8"マニは機械仕掛けの神です。マニを信仰した者は、機械や罠に対する膨大な知識を得、またそれらを効果的に利用する術を知ります。<p><p>"s,
            u8"Mani is a clockwork god of machinery. Those faithful to Mani<br>receive immense knowledge of machines and learn a way to use them<br>effectively.<p>"s);
        buff += lang(
            u8"　捧げ物: 死体 / 銃器 / 機械<p>"s,
            u8"Offering: Corpses/Guns/Machinery<p>"s);
        buff += lang(
            u8"ボーナス: 器用 / 感覚 / 銃 / 治癒 / 探知 / 宝石細工 / 鍵開け / 大工<p>"s,
            u8"Bonus   : DEX/PER/Gun/Jweller/Lockpick/Carpentry<p>"s);
        buff += lang(
            u8"特殊能力: マニの分解術(自動:罠からマテリアルを取り出す)<p>"s,
            u8"Ability : Mani's decomposition (Passive: Extracts materials<br>from traps.)<p>"s);
    }
    if (inv(25, ci) == 2)
    {
        buff = lang(
            u8"ルルウィは風を司る女神です。ルルウィを信仰した者は、風の恩恵を受け素早く動くことが可能になります。<p><p>"s,
            u8"Lulwy is a goddess of wind. Those faithful to Lulwy receive<br>the blessing of wind and can move swiftly.<p>"s);
        buff +=
            lang(u8"　捧げ物: 死体 / 弓<p>"s, u8"Offering: Corpses/Bows<p>"s);
        buff += lang(
            u8"ボーナス: 感覚 / 速度 / 弓 / クロスボウ / 隠密 / 魔道具<p>"s,
            u8"Bonus   : PER/SPD/Bow/Crossbow/Stealth/Magic Device<p>"s);
        buff += lang(
            u8"特殊能力: ルルウィの憑依(スキル:瞬間的に高速になる)<p>"s,
            u8"Ability : Lulwy's trick (Boosts your speed for a short time.)<p>"s);
    }
    if (inv(25, ci) == 3)
    {
        buff = lang(
            u8"イツパロトルは元素を司る神です。イツパロトルを信仰した者は、魔力を大気から吸収し、元素に対する保護を受けることができます。<p><p>"s,
            u8"Itzpalt is a god of elements. Those faithful to Itzpalt are<br>protected from elemental damages and learn to absorb mana from<br>their surroundings.<p>"s);
        buff +=
            lang(u8"　捧げ物: 死体 / 杖<p>"s, u8"Offering: Corpses/Stavse<p>"s);
        buff += lang(
            u8"ボーナス: 魔力 / 瞑想 / 火炎耐性 / 冷気耐性 / 電撃耐性<p>"s,
            u8"Bonus   : MAG/Meditation/RES Fire/RES Cold/RES Lightning<p>"s);
        buff += lang(
            u8"特殊能力: マナの抽出(スキル:周囲の空気からマナを吸い出す)<p>"s,
            u8"Ability : Absorb mana (Absorbs mana from the air.)<p>"s);
    }
    if (inv(25, ci) == 4)
    {
        buff = lang(
            u8"エヘカトルは幸運の女神です。エヘカトルを信仰した者は、運を味方につけます。<p><p>"s,
            u8"Ehekatl is a goddess of luck. Those faithful to Ehekatl are<br>really lucky.<p><p>"s);
        buff +=
            lang(u8"　捧げ物: 死体 / 魚<p>"s, u8"Offering: Corpses/Fish<p>"s);
        buff += lang(
            u8"ボーナス: 魅力 / 運 / 回避 / 魔力の限界 / 釣り/ 鍵開け<p>"s,
            u8"Bonus   : CHR/LUCK/Evasion/Magic Capacity/Fishing/Lockpick<p>"s);
        buff += lang(
            u8"特殊能力: エヘカトル流魔術(自動:マナの消費がランダムになる)<p>"s,
            u8"Ability : Ehekatl school of magic (Passive: randomize casting mana<br>cost.)<p>"s);
    }
    if (inv(25, ci) == 5)
    {
        buff = lang(
            u8"オパートスは大地の神です。オパートスを信仰した者は、高い防御力と破壊力を身につけます。<p><p>"s,
            u8"Opatos is a god of earth. Those faithful to Opatos have massive<br>strength and defense.<p><p>"s);
        buff +=
            lang(u8"　捧げ物: 死体 / 鉱石<p>"s, u8"Offering: Corpses/Ores<p>"s);
        buff += lang(
            u8"ボーナス: 腕力 / 耐久 / 盾 / 重量挙げ / 採掘 / 魔道具<p>"s,
            u8"Bonus   : STR/END/Shield/Weight Lifting/Mining/Magic Device<p>"s);
        buff += lang(
            u8"特殊能力: オパートスの甲殻(自動:受ける物理ダメージを減らす)<p>"s,
            u8"Ability : Opatos' shell (Passive: Reduce any physical damage you<br>receive.)<p>"s);
    }
    if (inv(25, ci) == 6)
    {
        buff = lang(
            u8"ジュアは癒しの女神です。ジュアを信仰した者は、傷ついた身体を癒すことができます。<p><p>"s,
            u8"Jure is a god of healing. Those faithful to Jure can heal wounds.<p><p>"s);
        buff +=
            lang(u8"　捧げ物: 死体 / 鉱石<p>"s, u8"Offering: Corpses/Ores<p>"s);
        buff += lang(
            u8"ボーナス: 意思 / 治癒 / 瞑想 / 解剖学 / 料理 / 魔道具 / 魔力の限界<p>"s,
            u8"Bonus   : WIL/Healing/Anatomy/Cooking/Magic Device/Magic Capacity<p>"s);
        buff += lang(
            u8"特殊能力: ジュアの祈り(スキル:失った体力を回復)<p>"s,
            u8"Ability : Prayer of Jure (Heal yourself.)<p>"s);
    }
    if (inv(25, ci) == 7)
    {
        buff = lang(
            u8"クミロミは収穫の神です。クミロミを信仰した者は、大地の恵みを収穫し、それを加工する術を知ります。<p><p>"s,
            u8"Kumiromi is a god of harvest. Those faithful to Kumiromi receive<br>the blessings of nature.<p><p>"s);
        buff += lang(
            u8"　捧げ物: 死体 / 野菜<p>"s,
            u8"Offering: Corpses/Vegetables<p>"s);
        buff += lang(
            u8"ボーナス: 感覚 / 器用 / 習得 / 栽培 / 錬金術 / 裁縫 / 読書<p>"s,
            u8"Bonus   : PER/DEX/LER/Gardening/Alchemy/Tailoring/Literacy<p>"s);
        buff += lang(
            u8"特殊能力: 生命の輪廻(自動：腐った作物から種を取り出す)<p>"s,
            u8"Ability : Kumiromi's recycle (Passive: Extracts seeds from rotten foods.)<p>"s);
    }
    return;
}
void label_1886()
{
    cs = 0;
    page = 0;
    pagemax = 0;
    pagesize = 16;
    cs_bk = -1;
    key = "";
    objprm(0, ""s);
    keylog = "";
    listmax = 0;
    chatesc = 2;
    if (cdata(61, 0) != 0)
    {
        if (inv(25, ci) == 0)
        {
            s = lang(u8"信仰を捨てる"s, u8"Abandon God"s);
        }
        else
        {
            s = lang(
                godname(inv(25, ci)) + u8"に改宗する"s,
                u8"Convert to "s + godname(inv(25, ci)));
        }
        list(0, listmax) = 0;
        listn(0, listmax) = s;
        ++listmax;
    }
    else
    {
        list(0, listmax) = 0;
        listn(0, listmax) = lang(
            godname(inv(25, ci)) + u8"を信仰する"s,
            u8"Believe in "s + godname(inv(25, ci)));
        ++listmax;
    }
    list(0, listmax) = 2;
    listn(0, listmax) = lang(u8"やめる"s, u8"Cancel"s);
    ++listmax;
    snd(62);
    redraw(0);
    gsel(4);
    gmode(0);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\bg_altar.bmp"s, 1);
    pos(0, 0);
    gzoom(windoww, windowh - inf_verh, 4, 0, 0, 600, 400, 1);
    gsel(0);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
        }
    }
label_1887_internal:
    redraw(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh - inf_verh);
    gmode(2);
    label_1421();
    dx = 520;
    dy = 270;
    window2((windoww - dx) / 2 + inf_screenx, winposy(dy), dx, dy, 4, 6);
    wx = (windoww - dx) / 2 + inf_screenx;
    wy = winposy(dy);
    font(lang(cfg_font1, cfg_font2), 18 - en * 2, 1);
    color(30, 30, 30);
    pos(wx + 20, wy + 20);
    color(0, 0, 0);
    bmes(
        lang(u8"《 "s, u8"< "s) + godname(inv(25, ci))
            + lang(u8" 》"s, u8" >"s),
        255,
        255,
        255);
    gmesx = wx + 23;
    gmesy = wy + 60;
    gmesw = dx - 60;
    gmescol(0) = 30;
    gmescol(1) = 30;
    gmescol(2) = 30;
    gmestype = 1;
    label_1885();
    gmes(buff);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            i = list(0, p);
            display_key(wx + 50, wy + dy + cnt * 20 - listmax * 20 - 18, cnt);
            s = listn(0, p);
            cs_list(
                cnt, s, wx + 80, wy + dy + cnt * 20 - listmax * 20 - 18, 19);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    rtval = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                rtval = list(0, pagesize * page + cnt);
                snd(40);
                break;
            }
        }
    }
    if (chatesc != -1)
    {
        if (key == key_cancel)
        {
            snd(40);
            rtval = chatesc;
        }
    }
    if (rtval != -1)
    {
        label_1888();
        return;
    }
    goto label_1887_internal;
}
void label_1888()
{
    if (rtval == 0)
    {
        redraw(0);
        gmode(0);
        pos(0, 0);
        gcopy(4, 0, 0, windoww, windowh - inf_verh);
        gmode(2);
        label_1421();
        redraw(1);
        if (cdata(61, 0) != 0)
        {
            mode = 9;
            txtef(8);
            txt(lang(
                godname(cdata(61, 0)) + u8"は激怒した。"s,
                godname(cdata(61, 0)) + u8" is enraged."s));
            txtgod(cdata(61, 0), 1);
            redraw(1);
            efid = 622;
            efp = 10000;
            tc = 0;
            label_2176();
            snd(63);
            mode = 0;
            await(500);
        }
        cdata(61, 0) = inv(25, ci);
        label_1889();
        msg_halt();
    }
    r1 = 0;
    label_1477();
    return;
}
void label_1889()
{
    cdata(62, 0) = 0;
    cdata(63, 0) = 500;
    gdata(807) = 0;
    spact(23) = 0;
    spact(24) = 0;
    spact(25) = 0;
    if (cdata(61, 0) == 0)
    {
        txtef(5);
        txt(lang(
            u8"あなたは今や無信仰者だ。"s, u8"You are an unbeliever now."s));
    }
    else
    {
        animeid = 19;
        animode = 100;
        label_1426();
        snd(51);
        txtef(5);
        txt(lang(
            u8"あなたは今や"s + godname(cdata(61, 0)) + u8"の信者だ！"s,
            u8"You become a follower of "s + godname(cdata(61, 0)) + u8"!"s));
        if (cdata(61, 0) == 3)
        {
            spact(24) = 1;
        }
        if (cdata(61, 0) == 6)
        {
            spact(23) = 1;
        }
        if (cdata(61, 0) == 2)
        {
            spact(25) = 1;
        }
        txtgod(cdata(61, 0), 5);
    }
    return;
}
void label_1890()
{
    if (cdata(61, 0) == 0)
    {
        txt(lang(
            name(0) + u8"は神を信仰していないが、試しに祈ってみた。"s,
            u8"You don't believe in God."s));
        label_2742();
        return;
    }
    txtnew();
    txt(lang(u8"あなたの神に祈りを乞う？"s, u8"Really pray to your God?"s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    if (rtval != 0)
    {
        label_1419();
        label_2743(false);
    }
    txt(lang(
        godname(cdata(61, 0)) + u8"に祈った。"s,
        u8"You pray to "s + godname(cdata(61, 0)) + u8"."s));
    if (cdata(62, 0) < 200 || cdata(63, 0) < 1000)
    {
        txtmore();
        txt(lang(
            godname(cdata(61, 0)) + u8"はあなたに無関心だ。"s,
            godname(cdata(61, 0)) + u8" is indifferent to you."s));
        label_2742();
        return;
    }
    animeid = 19;
    animode = 100;
    label_1426();
    snd(120);
    efid = 1120;
    efp = 100;
    tc = 0;
    label_2176();
    efid = 451;
    efp = 200;
    tc = 0;
    label_2176();
    cdata(63, 0) = 0;
    cdata(62, 0) = cdata(62, 0) * 85 / 100;
    if (gdata(807) % 2 == 1)
    {
        txtgod(cdata(61, 0), 6);
        if (gdata(807) == 1)
        {
            f = 0;
            p = 0;
            {
                int cnt = 1;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 0)
                    {
                        if (cdatan(2, cnt) == u8"servant"s)
                        {
                            ++p;
                            if (p >= 2)
                            {
                                f = 1;
                                txt(lang(
                                    u8"神の使徒は2匹までしか仲間にできない。"s,
                                    u8"No more than 2 God's servants are allowed in your party."s));
                                break;
                            }
                        }
                    }
                }
            }
            if (f == 0)
            {
                if (get_freeally() == 0)
                {
                    f = 1;
                    txt(lang(
                        u8"仲間が一杯で、神からの贈り物を受け取ることができなかった。"s,
                        u8"Your party is full. The gift is reserved."s));
                }
            }
            if (f)
            {
                txtmore();
                txt(lang(
                    u8"この贈り物を諦める？"s,
                    u8"Do you want to decline this gift?"s));
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                if (rtval == 0)
                {
                    ++gdata(807);
                }
                label_2742();
                return;
            }
            flt();
            dbid = 0;
            txtef(4);
            txtmore();
            if (cdata(61, 0) == 1)
            {
                dbid = 262;
                txt(lang(
                    u8"このアンドロイドはブーストした時に恐るべき力を発揮するようだ。"s,
                    u8"This android shows enormous strength when boosting."s));
            }
            if (cdata(61, 0) == 2)
            {
                dbid = 263;
                txt(lang(
                    u8"この黒天使はブーストした時に恐るべき力を発揮するようだ。"s,
                    u8"This black angel shows enormous strength when boosting."s));
            }
            if (cdata(61, 0) == 3)
            {
                dbid = 264;
                txt(lang(
                    u8"この追放者は連続魔法を使えるようだ。"s,
                    u8"This exile can cast several spells in a raw."s));
            }
            if (cdata(61, 0) == 4)
            {
                dbid = 260;
                txt(lang(
                    u8"この猫に舐められた武具は、エヘカトルの祝福を授かるようだ。祝福を受けた武具にはエンチャントが一つ付与される。"s,
                    u8"Weapons and armor licked by this cat receive a blessing of Ehekatl which adds an extra enchantment."s));
            }
            if (cdata(61, 0) == 5)
            {
                dbid = 265;
                txt(lang(
                    u8"この騎士はある程度重いものをもたせても文句をいわないようだ。"s,
                    u8"This knight can hold really heavy stuff for you."s));
            }
            if (cdata(61, 0) == 6)
            {
                dbid = 266;
                txt(lang(
                    u8"この防衛者は致死ダメージを受けた仲間をレイハンドで回復できるようだ。レイハンドは眠るたびに再使用可能になる。"s,
                    u8"This defender can use Lay on hand to heal a deadly wounded ally. The ability becomes re-useable after sleeping."s));
            }
            if (cdata(61, 0) == 7)
            {
                dbid = 261;
                txt(lang(
                    u8"この妖精は食後に種を吐き出すようだ。"s,
                    u8"This fairy generates a seed after eating."s));
            }
            novoidlv = 1;
            characreate(56, dbid, -3, 0);
            rc = 56;
            label_2659();
        }
        if (gdata(807) == 3)
        {
            flt();
            dbid = 0;
            if (cdata(61, 0) == 2)
            {
                dbid = 680;
            }
            if (cdata(61, 0) == 6)
            {
                dbid = 681;
            }
            if (cdata(61, 0) == 7)
            {
                dbid = 682;
            }
            if (cdata(61, 0) == 1)
            {
                dbid = 683;
            }
            if (dbid != 0)
            {
                if (itemmemory(1, dbid))
                {
                    dbid = 559;
                }
                itemcreate(-1, dbid, cdata(1, 0), cdata(2, 0), 0);
            }
            else
            {
                nostack = 1;
                itemcreate(-1, 672, cdata(1, 0), cdata(2, 0), 0);
                if (cdata(61, 0) == 3)
                {
                    inv(25, ci) = 165;
                }
                if (cdata(61, 0) == 4)
                {
                    inv(25, ci) = 163;
                }
                if (cdata(61, 0) == 5)
                {
                    inv(25, ci) = 164;
                }
            }
            if (cdata(61, 0) == 6)
            {
                flt();
                nostack = 1;
                itemcreate(-1, 672, cdata(1, 0), cdata(2, 0), 0);
                inv(25, ci) = 166;
            }
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
        }
        if (gdata(807) == 5)
        {
            flt();
            dbid = 0;
            if (cdata(61, 0) == 1)
            {
                dbid = 674;
            }
            if (cdata(61, 0) == 2)
            {
                dbid = 673;
            }
            if (cdata(61, 0) == 3)
            {
                dbid = 676;
            }
            if (cdata(61, 0) == 4)
            {
                dbid = 678;
            }
            if (cdata(61, 0) == 5)
            {
                dbid = 679;
            }
            if (cdata(61, 0) == 6)
            {
                dbid = 677;
            }
            if (cdata(61, 0) == 7)
            {
                dbid = 675;
            }
            if (itemmemory(1, dbid))
            {
                dbid = 621;
            }
            itemcreate(-1, dbid, cdata(1, 0), cdata(2, 0), 0);
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
        }
        ++gdata(807);
    }
    label_2742();
    return;
}
void label_1891()
{
    if (cdata(61, 0) == 0)
    {
        txt(lang(
            u8"あなたは神を信仰していないが、試しに捧げてみた。"s,
            u8"You don't believe in God."s));
        label_2742();
        return;
    }
    rowact_item(ci);
    item_separate(ci);
    txt(lang(
        u8"あなたは"s + itemname(ci) + u8"を"s + godname(cdata(61, 0))
            + u8"に捧げ、その名を唱えた。"s,
        u8"You put "s + itemname(ci)
            + u8" on the altar and mutter the name of "s + godname(cdata(61, 0))
            + u8"."s));
    snd(121);
    animeid = 7;
    label_1426();
    item_find(60002);
    if (stat != -1)
    {
        ti = stat;
    }
    else
    {
        label_2742();
        return;
    }
    if (inv(3, ci) == 204)
    {
        i = limit(inv(7, ci) / 200, 1, 50);
        if (inv(27, ci) < 0)
        {
            i = 1;
        }
    }
    else
    {
        i = 25;
    }
    if (inv(25, ti) != cdata(61, 0))
    {
        f = 0;
        if (inv(25, ti) == 0)
        {
            f = 1;
            txt(lang(
                u8"異世界で、"s + godname(cdata(61, 0))
                    + u8"が空白の祭壇の権利を主張した。"s,
                godname(cdata(61, 0)) + u8" claims the empty altar."s));
        }
        else
        {
            txt(lang(
                u8"異様な霧が現れ、"s + godname(cdata(61, 0)) + u8"と"s
                    + godname(inv(25, ti)) + u8"の幻影がせめぎあった。"s,
                u8"Strange fogs surround all over the place. You see shadows of "s
                    + godname(cdata(61, 0)) + u8" and "s + godname(inv(25, ti))
                    + u8" make a fierce dance."s));
            if (rnd(17) <= i)
            {
                f = 1;
            }
            else
            {
                f = 0;
            }
        }
        if (f == 1)
        {
            modpiety(i * 5);
            cdata(63, 0) += i * 30;
            animeid = 19;
            animode = 100;
            label_1426();
            snd(120);
            if (inv(25, ti) != 0)
            {
                txt(lang(
                    u8"あなたの神の幻影は、次第に色濃くなった。"s,
                    u8"The shadow of your god slowly gets bolder."s));
            }
            txtef(5);
            txt(lang(
                godname(cdata(61, 0)) + u8"は"s + itemname(ti)
                    + u8"を支配した。"s,
                godname(cdata(61, 0)) + u8" takes over the altar."s));
            txtgod(cdata(61, 0), 2);
            inv(25, ti) = cdata(61, 0);
        }
        else
        {
            txt(lang(
                godname(inv(25, ti)) + u8"は祭壇を守りきった。"s,
                godname(inv(25, ti)) + u8" keeps the altar."s));
            txtgod(inv(25, ti), 3);
            label_1892();
        }
    }
    else
    {
        txtef(2);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (i >= 15)
                {
                    txt(lang(
                        itemname(ci) + u8"はまばゆく輝いて消えた。"s,
                        itemname(ci) + u8" shine"s + _s2(inv(0, ci))
                            + u8" all around and disappear"s + _s2(inv(0, ci))
                            + u8"."s));
                    txtgod(cdata(61, 0), 4);
                    break;
                }
                if (i >= 10)
                {
                    txt(lang(
                        itemname(ci)
                            + u8"は輝いて消え、三つ葉のクローバーがふってきた。"s,
                        itemname(ci) + u8" shine"s + _s2(inv(0, ci))
                            + u8" for a moment and disappear"s + _s2(inv(0, ci))
                            + u8". A three-leaved falls from the altar."s));
                    break;
                }
                if (i >= 5)
                {
                    txt(lang(
                        itemname(ci) + u8"は一瞬輝いて消えた。"s,
                        itemname(ci) + u8" shine"s + _s2(inv(0, ci))
                            + u8" for a moment and disappear"s + _s2(inv(0, ci))
                            + u8"."s));
                    break;
                }
                if (i >= 1)
                {
                    txt(lang(
                        itemname(ci) + u8"は消えた。"s,
                        itemname(ci) + u8" disappear"s + _s2(inv(0, ci))
                            + u8"."s));
                    break;
                }
            }
        }
        modpiety(i);
        cdata(63, 0) += i * 7;
    }
    removeitem(ci, inv(0, ci));
    label_2742();
    return;
}
void label_1892()
{
    efid = 1114;
    efp = 500;
    tc = 0;
    label_2176();
    if (rnd(2))
    {
        efid = 622;
        efp = 250;
        tc = 0;
        label_2176();
        snd(63);
    }
    if (rnd(2))
    {
        efid = 1106;
        efp = 100;
        tc = 0;
        label_2176();
    }
    return;
}
int label_1893()
{
    id(0) = 0;
    id(1) = 0;
    if (gspd < 10)
    {
        stat = 0;
        return stat;
    }
    if (dbg_skipevent)
    {
        stat = 0;
        return stat;
    }
    if (mode == 12)
    {
        stat = 0;
        return stat;
    }
    if (mode == 9)
    {
        if (cdata(61, 0) != 0)
        {
            if (rnd(12) == 0)
            {
                id = 18;
            }
        }
        if (rnd(80) == 0)
        {
            id(0) = 4;
            id(1) = 120;
        }
        if (rnd(20) == 0)
        {
            id = 3;
        }
        if (rnd(25) == 0)
        {
            id = 2;
        }
        if (rnd(100) == 0)
        {
            id(0) = 5;
            id(1) = 65;
        }
        if (rnd(20) == 0)
        {
            id = 6;
        }
        if (rnd(20) == 0)
        {
            id = 7;
        }
        if (rnd(250) == 0)
        {
            if (inv_getfreeid(0) != -1)
            {
                id = 19;
            }
        }
        if (rnd(10000) == 0)
        {
            if (inv_getfreeid(0) != -1)
            {
                id = 21;
            }
        }
        if (rnd(70) == 0)
        {
            id(0) = 8;
            id(1) = 40;
        }
        if (rnd(200) == 0)
        {
            id = 20;
        }
        if (rnd(50) == 0)
        {
            id = 23;
        }
        if (rnd(300) == 0)
        {
            id = 24;
        }
        if (rnd(90) == 0)
        {
            id(0) = 22;
            id(1) = 70;
        }
        goto label_1894_internal;
    }
    if (mdata(6) != 1)
    {
        if (cdata(140, 0) != 0)
        {
            stat = 0;
            return stat;
        }
    }
    if (mdata(6) == 5)
    {
        stat = 0;
        return stat;
    }
    if (rnd(30) == 0)
    {
        id = 17;
    }
    if (rnd(25) == 0)
    {
        id = 16;
    }
    if (rnd(25) == 0)
    {
        id = 12;
    }
    if (rnd(50) == 0)
    {
        id = 9;
    }
    if (rnd(80) == 0)
    {
        id = 14;
    }
    if (rnd(50) == 0)
    {
        id(0) = 8;
        id(1) = 40;
    }
    if (rnd(80) == 0)
    {
        id(0) = 13;
        id(1) = 45;
    }
    if (mdata(6) == 3)
    {
        if (rnd(25) == 0)
        {
            id(0) = 15;
            id(1) = 80;
        }
        goto label_1894_internal;
    }
    if (mdata(6) == 1)
    {
        if (rnd(40))
        {
            stat = 0;
            return stat;
        }
        goto label_1894_internal;
    }
    if (rnd(25) == 0)
    {
        id = 10;
    }
    if (rnd(25) == 0)
    {
        id = 11;
    }
label_1894_internal:
    if (id == 0)
    {
        stat = 0;
        return stat;
    }
    cc = 0;
    tc = 0;
    listmax = 0;
    if (id(1) != 0)
    {
        if (rnd(sdata(19, 0) + 1) > id(1))
        {
            id = 1;
        }
    }
    switch (id)
    {
    case 15:
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            p = rnd(gdata(3) + 1) + 57;
            if (p >= 245)
            {
                --cnt;
                continue;
            }
            if (cdata(0, p) == 1)
            {
                txt(lang(
                    name(p) + u8"「ぎゃぁーー！」"s,
                    name(p) + u8" screams, "s + cnvtalk(u8"Ahhhhhhh!"s)));
                dmghp(p, 99999, -11);
                break;
            }
        }
    }
        s = lang(u8"殺人鬼"s, u8"Murderer"s);
        file = u8"bg_re9"s;
        buff = lang(
            u8"街のどこかで悲鳴があがった。あなたはガードが慌しく走っていくのを目撃した。「人殺し、人殺しだ！！」"s,
            u8"Suddenly, a painful shriek rises from somewhere in the town. You see several guards hastily run by."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"なむ…"s, u8"Sorry for you."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 14:
        s = lang(u8"謎のご馳走"s, u8"Strange Feast"s);
        file = u8"bg_re10"s;
        buff = lang(
            u8"あなたは目の前にご馳走をみつけた。"s,
            u8"You come across a strange feast."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"食べる"s, u8"(Eat)"s);
        ++listmax;
        list(0, listmax) = 2;
        listn(0, listmax) = lang(u8"立ち去る"s, u8"(Leave)"s);
        ++listmax;
        label_1896();
        if (rtval == 1)
        {
            cdata(22, 0) = 15000;
            txt(lang(u8"なかなか美味しかった。"s, u8"It was tasty."s),
                lang(u8"悪くない。"s, u8"Not bad at all."s),
                lang(u8"あなたは舌鼓をうった。"s, u8"You smack your lips."s));
            label_2162();
            chara_anorexia(0);
        }
        goto label_1895_internal;
    case 13:
        s = lang(u8"ご馳走の匂い"s, u8"Smell of Food"s);
        file = u8"bg_re10"s;
        buff = lang(
            u8"どこからともなく漂うご馳走の匂いで、あなたの胃は不満を叫び始めた。"s,
            u8"A sweet smell of food floats from nowhere. Your stomach growls but you can't find out where it comes from."s);
        cdata(22, 0) -= 5000;
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"腹減った…"s, u8"I'm hungry now!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 1:
        s = lang(u8"不運の回避"s, u8"Avoiding Misfortune"s);
        file = u8"bg_re8"s;
        buff = lang(
            u8"あなたは一瞬嫌な予感がしたが、それはやがて消えた。"s,
            u8"You sense a bad feeling for a moment but it fades away quickly."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"よし"s, u8"Good."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 24:
        efid = 1113;
        tc = 0;
        label_2176();
        s = lang(u8"才能の開花"s, u8"Your Potential"s);
        file = u8"bg_re4"s;
        buff = lang(
            u8"突然あなたの才能は開花した！"s,
            u8"Suddenly you develop your gift!"s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ワァオー"s, u8"Woohoo!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 18:
        skillexp(181, 0, 1000, 6, 1000);
        s = lang(u8"信仰の深まり"s, u8"Gaining Faith"s);
        file = u8"bg_re12"s;
        buff = lang(
            u8"夢の中で、あなたは偉大なる者の穏やかな威光に触れた。"s,
            u8"In your dream, a saint comes out and blesses you."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"神よ"s, u8"Great."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 12:
        s = lang(u8"マテリアルの発見"s, u8"Small Luck"s);
        file = u8"bg_re3"s;
        buff = lang(
            u8"石ころにつまずいて転んだ拍子に、あなたは幾つかのマテリアルを見つけた。"s,
            u8"You stumble over a stone and find some materials on the ground. "s);
        efid = 1117;
        efp = 100;
        tc = 0;
        label_2176();
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"よし"s, u8"Nice."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 23:
        efid = 1117;
        efp = 200;
        tc = 0;
        label_2176();
        s = lang(u8"夢の中の収穫"s, u8"Dream Harvest"s);
        file = u8"bg_re3"s;
        buff = lang(
            u8"夢の中で、あなたはのんきにマテリアルを採取していた"s,
            u8"In your dream, you harvest materials peacefully."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"るん♪"s, u8"Sweet."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 10:
        s = lang(u8"野営跡の発見"s, u8"Camping Site"s);
        file = u8"bg_re3"s;
        buff = lang(
            u8"あなたは何者かが野営した跡を見つけた。辺りには食べ残しやがらくたが散らばっている。もしかしたら、何か役に立つものがあるかもしれない。"s,
            u8"You discover a camping site someone left behind. Chunks of leftovers and junks remain here. You may possibly find some usefull items."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"調べる"s, u8"(Search)"s);
        ++listmax;
        list(0, listmax) = 2;
        listn(0, listmax) = lang(u8"立ち去る"s, u8"(Leave)"s);
        ++listmax;
        label_1896();
        if (rtval == 1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1 + rnd(4)); cnt < cnt_end; ++cnt)
                {
                    flt();
                    flttypemajor = fsetremain(rnd(length(fsetremain)));
                    itemcreate(-1, 0, cdata(1, 0), cdata(2, 0), 0);
                }
            }
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
        }
        goto label_1895_internal;
    case 4:
        snd(116);
        efid = 1118;
        efp = 100;
        tc = 0;
        label_2176();
        s = lang(u8"不気味な夢"s, u8"Creepy Dream"s);
        file = u8"bg_re5"s;
        buff = lang(
            u8"あなたは不気味な夢をみた。陰気な幾つもの瞳があなたを凝視し、どこからともなく笑い声がこだました。「ケラケラケラ…ミツケタヨ…ケラケラ」あなたが二度寝返りをうった後、その夢は終わった。"s,
            u8"In your dreams, several pairs of gloomy eyes stare at you and laughter seemingly from nowhere echos around you.  \"Keh-la keh-la keh-la I found you...I found you.. keh-la keh-la keh-la\" After tossing around a couple times, the dream is gone."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"おかしな夢だ"s, u8"Strange..."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 22:
        snd(116);
        efid = 454;
        efp = 100;
        tc = 0;
        label_2176();
        s = lang(u8"怪物の夢"s, u8"Monster Dream"s);
        file = u8"bg_re2"s;
        buff = lang(
            u8"あなたは怪物と戦っていた。醜い化け物に斬りかかろうとした時、怪物は悲鳴をあげた。「オレハオマエダ！オマエハオレダ！」あなたは自分の呻き声に起こされた。"s,
            u8"You are fighting an ugly monster. You are about to thrust a dagger into the neck of the monster. And the monster screams. \"You are me! I am you!\" You are awakened by your own low moan."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ううぅん…"s, u8"Urrgh..hh.."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 19:
        flt();
        itemcreate(0, 621, -1, -1, 0);
        txt(lang(
            itemname(ci, 1) + u8"をバックパックに入れた。"s,
            u8"You put "s + itemname(ci, 1) + u8" in your backpack."s));
        s = lang(u8"宝を埋める夢"s, u8"Treasure of Dream"s);
        file = u8"bg_re15"s;
        buff = lang(
            u8"あなたは夢の中で宝を埋めた。あなたはすぐに飛び起き、その場所を紙に書き留めた"s,
            u8"You buried treasure in your dream. You quickly get up and write down the location."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ワァオー"s, u8"Woohoo!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 20:
        addbuff(tc, 19, 777, 1500);
        s = lang(u8"幸運の日"s, u8"Lucky Day"s);
        file = u8"bg_re12"s;
        buff = lang(u8"うみみゃぁ！"s, u8"Mewmewmew!"s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ワァオー"s, u8"Woohoo!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 21:
        flt();
        itemcreate(0, 721, -1, -1, 0);
        txt(lang(
            itemname(ci, 1) + u8"をバックパックに入れた。"s,
            u8"You put "s + itemname(ci, 1) + u8" in your backpack."s));
        s = lang(u8"運命の気まぐれ"s, u8"Quirk of Fate"s);
        file = u8"bg_re15"s;
        buff =
            lang(u8"うみみゃっ、見つけたね！"s, u8"Mewmew? You've found me!"s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ワァオー"s, u8"Woohoo!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 5:
        if (trait(42))
        {
            txt(lang(
                u8"あなたは祈祷を捧げ呪いのつぶやきを無効にした。"s,
                u8"Your prayer nullifies the curse."s));
        }
        else
        {
            f = 0;
            tc = 0;
            {
                int cnt = 100;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    if (cdata(cnt, tc) % 10000 == 0)
                    {
                        continue;
                    }
                    else
                    {
                        f = 1;
                    }
                }
            }
            if (f)
            {
                efid = 1114;
                efp = 200;
                label_2176();
            }
            else
            {
                if (evid() == -1)
                {
                    evadd(26);
                }
            }
        }
        s = lang(u8"呪いのつぶやき"s, u8"Cursed Whispering"s);
        file = u8"bg_re5"s;
        buff = lang(
            u8"どこからともなく聞こえる呪いのつぶやきが、あなたの眠りを妨げた。"s,
            u8"Your sleep is disturbed by a harshly whispering that comes from nowhere."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"眠れない…"s, u8"Can't...sleep..."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 8:
        p = rnd(cdata(30, 0) / 8 + 1);
        if (cbit(15, 0))
        {
            p = 0;
        }
        if (p > 0)
        {
            txt(lang(
                u8"金貨"s + p + u8"枚を失った。"s,
                u8"You lose "s + p + u8" gold pieces."s));
            cdata(30, 0) -= p;
        }
        else
        {
            txt(lang(
                u8"損害はなかった。"s,
                u8"The thief fails to steal money from you."s));
        }
        s = lang(u8"悪意ある手"s, u8"Malicious Hand"s);
        file = u8"bg_re9"s;
        buff = lang(
            u8"悪意のある手が忍び寄り、あなたが気付かない間に金貨を奪って逃げた。"s,
            u8"A malicious hand slips and steals your money."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"盗人め…"s, u8"Bloody thieves..."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 11:
        s = lang(u8"冒険者の遺骸"s, u8"Corpse"s);
        file = u8"bg_re7"s;
        buff = lang(
            u8"この場所で力尽きた冒険者の遺骸を見つけた。既に朽ちかけている骨と、身に着けていたと思われる幾つかの装備が散らばっている。"s,
            u8"You find a corpse of an adventurer. There're bones and equipment scatters on the ground waiting to decay."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"あさる"s, u8"(Loot)"s);
        ++listmax;
        list(0, listmax) = 2;
        listn(0, listmax) = lang(u8"埋葬する"s, u8"(Bury)"s);
        ++listmax;
        label_1896();
        if (rtval == 1)
        {
            txt(lang(
                u8"あなたは遺留品をあさった。"s, u8"You loot the remains."s));
            modkarma(0, -2);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1 + rnd(3)); cnt < cnt_end; ++cnt)
                {
                    flt(0, calcfixlv(3));
                    if (rnd(3) == 0)
                    {
                        flttypemajor = fsetwear(rnd(length(fsetwear)));
                    }
                    else
                    {
                        flttypemajor = fsetremain(rnd(length(fsetremain)));
                    }
                    itemcreate(-1, 0, cdata(1, 0), cdata(2, 0), 0);
                }
            }
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
        }
        else
        {
            txt(lang(
                u8"あなたは骨と遺留品を埋葬した。"s,
                u8"You bury the corpse with respect."s));
            modkarma(0, 5);
        }
        goto label_1895_internal;
    case 2:
        efid = 1104;
        efp = 100;
        tc = 0;
        label_2176();
        s = lang(u8"魔法使いの夢"s, u8"Wizard's Dream"s);
        file = u8"bg_re6"s;
        buff = lang(
            u8"夢の中であなたは赤い髪の魔術師に出会った。「誰じゃ、お主は？ふむ、間違った者の夢に現れてしまったようじゃ。すまぬな。お詫びといってはなんじゃが…」魔法使いは指をくるりと回した。あなたは軽い頭痛を覚えた。"s,
            u8"In your dream, you meet a wizard with a red mustache. \"Who are you? Hmm, I guess I picked up the wrong man's dream. My apology for disturbing your sleep. To make up for this...\" The wizard draws a circle in the air and vanishs. You feel the effects of a faint headache."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"おかしな夢だ"s, u8"A weird dream."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 3:
        efid = 1119;
        efp = 100;
        tc = 0;
        label_2176();
        s = lang(u8"成長のきざし"s, u8"Development"s);
        file = u8"bg_re4"s;
        buff = lang(
            u8"長年の鍛錬の成果が実ったようだ。なかなか眠りにつけず考えごとをしていたあなたは、ふと、自らの技術に関する新しいアイデアを思いついた。"s,
            u8"You lie awake, sunk deep into thought. As memories of your journey flow from one into another, you chance upon a new theory to improve one of your skills."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"よし！"s, u8"Good!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 6:
        skillexp(154, 0, 1000);
        s = lang(u8"自然治癒力の向上"s, u8"Regeneration"s);
        file = u8"bg_re4"s;
        buff = lang(
            u8"身体が妙に火照ってあなたは目を覚ました。気がつくと、腕にあった傷跡が完全に消えていた。"s,
            u8"Your entire body flushs. When you wake up, a scar in your arm is gone."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"よし"s, u8"Good."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 7:
        skillexp(155, 0, 1000);
        s = lang(u8"瞑想力の向上"s, u8"Meditation"s);
        file = u8"bg_re4"s;
        buff = lang(
            u8"あなたは、夢の中でも驚くほど理性を保っていた。まるで瞑想を行っている時のように、あなたは心の平和を感じた。"s,
            u8"In your dream, you meditate and feel inner peace."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"よし"s, u8"Good."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 9:
        ++cdata(31, 0);
        s = lang(u8"路上に転がる幸運"s, u8"Great Luck"s);
        file = u8"bg_re1"s;
        buff = lang(
            u8"下を向いて歩いていると、幸運にもプラチナ硬貨を見つけた。"s,
            u8"You stumble over a stone and find a platinum coin."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ラッキー！"s, u8"What a luck!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 16:
        p = rnd(cdata(30, 0) / 10 + 1000) + 1;
        cdata(30, 0) += p;
        txt(lang(
            u8"金貨"s + p + u8"枚を手に入れた。"s,
            u8"You pick up "s + p + u8" gold pieces."s));
        s = lang(u8"発狂した金持ち"s, u8"Mad Millionaire"s);
        file = u8"bg_re1"s;
        buff = lang(
            u8"発狂した金持ちが、何か叫びながら金貨をばらまいている…"s,
            u8"A rich mad man is scattering his money all over the ground."s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ラッキー！"s, u8"What a luck!"s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    case 17:
        efid = 451;
        efp = 800;
        tc = 0;
        label_2176();
        s = lang(u8"辻プリースト"s, u8"Wandering Priest"s);
        file = u8"bg_re11"s;
        buff = lang(
            u8"突然、向かいからやって来た一人の神官が、すれ違いざまにあなたに魔法をかけた。「ノープロブレム」"s,
            u8"A priest comes up to you and casts a spell on you. \"No problem.\""s);
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"ありがとう"s, u8"Thanks."s);
        ++listmax;
        label_1896();
        goto label_1895_internal;
    }
label_1895_internal:
    cc = 0;
    label_1422();
    stat = 1;
    return stat;
}
int label_1896()
{
    if (cfg_skiprandevents)
    {
        if (listmax <= 1)
        {
            snd(62);
            txt(""s + buff);
            txt(lang(u8"「"s, u8"\""s) + listn(0, 0) + lang(u8"」"s, u8"\""s));
            rtval = -1;
            stat = rtval;
            return stat;
        }
    }
    keyhalt = 1;
    cs = 0;
    page = 0;
    pagemax = 0;
    pagesize = 16;
    cs_bk = -1;
    key = "";
    objprm(0, ""s);
    keylog = "";
    if (listmax <= 1)
    {
        chatesc = 0;
    }
    else
    {
        chatesc = -1;
    }
    gsel(7);
    gmode(0);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\"s + file + u8".bmp"s, 0);
    tx = ginfo(12);
    ty = ginfo(13);
    gsel(0);
    snd(62);
    dx = tx + 36;
    talk_conv(buff, (dx - 80) / (7 - en) - en * 4);
    notesel(buff);
    dy = ty + noteinfo(0) * 15 + 80 + listmax * 20;
label_1897_internal:
    redraw(0);
    gmode(2);
    window(
        (windoww - dx) / 2 + inf_screenx + 4, winposy(dy) - 12, dx, dy, 0, -1);
    window((windoww - dx) / 2 + inf_screenx, winposy(dy) - 16, dx, dy);
    wx = (windoww - dx) / 2 + inf_screenx;
    wy = winposy(dy);
    gmode(0);
    pos(wx + 12, wy + 6);
    gcopy(7, 0, 0, tx, ty);
    gmode(2);
    color(240, 230, 220);
    boxl(wx + 12, wy + 6, wx + tx + 12, wy + ty + 6);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    q = lang(u8"《 "s + s + u8" 》"s, u8" < "s + s + u8" > "s);
    pos(wx + 40, wy + 16);
    color(30, 20, 10);
    bmes(q, 245, 235, 225);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(30, 30, 30);
    pos(wx + 24, wy + ty + 20);
    mes(buff);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            i = list(0, p);
            display_key(wx + 30, wy + dy + cnt * 20 - listmax * 20 - 52, cnt);
            q = listn(0, p);
            cs_list(
                cnt, q, wx + 60, wy + dy + cnt * 20 - listmax * 20 - 52, 19);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    rtval = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                rtval = list(0, pagesize * page + cnt);
                snd(40);
                break;
            }
        }
    }
    if (chatesc != -1)
    {
        if (key == key_cancel)
        {
            snd(40);
            rtval = chatesc;
        }
    }
    if (rtval != -1)
    {
        label_1898();
        stat = 0;
        return stat;
    }
    goto label_1897_internal;
}
int label_1898()
{
    key = "";
    stat = rtval;
    return stat;
}
int calcincome(int prm_1036)
{
    int p_at_m176 = 0;
    p_at_m176 = 100 - gdata((120 + prm_1036)) / 100;
    if (p_at_m176 == 99)
    {
        p_at_m176 = p_at_m176 * 70;
    }
    else
    {
        p_at_m176 = p_at_m176 * 50;
    }
    if (prm_1036 == 2)
    {
        p_at_m176 = p_at_m176 * 120 / 100;
    }
    if (prm_1036 == 4)
    {
        p_at_m176 = p_at_m176 * 60 / 100;
    }
    if (prm_1036 == 0)
    {
        p_at_m176 = p_at_m176 * 80 / 100;
    }
    if (prm_1036 == 1)
    {
        p_at_m176 = p_at_m176 * 70 / 100;
    }
    if (prm_1036 == 6)
    {
        p_at_m176 = p_at_m176 * 25 / 100;
    }
    if (prm_1036 == 5)
    {
        p_at_m176 = p_at_m176 * 20 / 100;
    }
    if (prm_1036 == 8)
    {
        p_at_m176 = p_at_m176 * 15 / 100;
    }
    stat = p_at_m176;
    return stat;
}
void label_1901()
{
    invfile = 4;
    file = u8"shoptmp.s2"s;
    fmode = 4;
    label_2107();
    file = u8"shop"s + 4 + u8".s2"s;
    exist(exedir + u8"tmp\\"s + file);
    if (strsize != -1)
    {
        fmode = 3;
        label_2107();
    }
    else
    {
        inv_getheader(-1);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                inv(0, cnt) = 0;
            }
        }
    }
    mode = 6;
    income(0) = 0;
    income(1) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
        {
            if (gdata(120 + cnt) >= 10000)
            {
                continue;
            }
            p = calcincome(cnt) + rnd((calcincome(cnt) / 3 + 1))
                - rnd((calcincome(cnt) / 3 + 1));
            income += p;
            flt();
            itemcreate(-1, 54, -1, -1, p);
            if (cnt == 5 || cnt == 6)
            {
                continue;
            }
            if (cnt == 5 || cnt == 6 || cnt == 3)
            {
                continue;
            }
            p = rnd(rnd(3) + 1) + 1;
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
                {
                    dbid = 0;
                    flt(calcobjlv((100 - gdata((120 + cnt2)) / 100) / 2 + 1),
                        calcfixlv(3 + (rnd(12) < trait(39))));
                    flttypemajor = fsetincome(rnd(length(fsetincome)));
                    if (rnd(5) == 0)
                    {
                        flttypemajor = fsetwear(rnd(length(fsetwear)));
                    }
                    if (rnd(100 + gdata((120 + cnt2)) / 5) < 2)
                    {
                        dbid = 559;
                    }
                    itemcreate(-1, dbid, -1, -1, 0);
                    ++income(1);
                }
            }
        }
    }
    if (cdata(34, 0) > 0)
    {
        p = limit(cdata(34, 0) / 10, 100, 25000);
        if (cdata(34, 0) >= 25000)
        {
            p += (cdata(34, 0) - 25000) / 100;
        }
        income += p;
        flt();
        itemcreate(-1, 54, -1, -1, p);
    }
    s = ""s + income + lang(u8"gold"s, u8" gold pieces"s);
    if (income(1) != 0)
    {
        s += lang(
            u8"と"s + income(1) + u8"個のアイテム"s,
            u8" and "s + income(1) + u8" items"s);
    }
    if (income != 0 || income(1) != 0)
    {
        snd(24);
        txtmore();
        txtef(5);
        txt(lang(
            s + u8"が給料として振り込まれた。"s,
            u8"As a salary, "s + s + u8" have been sent to your house."s));
        autosave = 1 * (gdata(20) != 35);
    }
    if (gdata(12) == 1)
    {
        if (cdata(38, 0) > 5)
        {
            autosave = 1 * (gdata(20) != 35);
            inv_getheader(-1);
            p = -1;
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (inv(0, cnt) == 0)
                    {
                        p = cnt;
                        break;
                    }
                }
            }
            if (p == -1)
            {
                item_compress(-1);
            }
            flt();
            itemcreate(-1, 615, -1, -1, 0);
            inv(23, ci) = gdata(170) + calccostbuilding() + calccosttax();
            inv(23, ci) = inv(23, ci) * (100 + rnd(20)) / 100;
            mode = 0;
            ++gdata(179);
            txtmore();
            txt(lang(
                u8"請求書が送られてきた。"s,
                u8"A bill has been sent to your house."s));
            if (gdata(179) > 1)
            {
                if (gdata(179) <= 4)
                {
                    txtmore();
                    txtef(3);
                    if (gdata(179) > 3)
                    {
                        s(0) = lang(u8"警告！！"s, u8"Warning!! "s);
                        s(1) = lang(
                            u8"早急にパルミア大使館まで行き、税金を納めなければならない。"s,
                            u8"You have to go to the Embassy of Palmia and pay tax at once. "s);
                    }
                    else
                    {
                        s(0) = lang(u8"注意！"s, u8"Caution! "s);
                        s(1) = "";
                    }
                    txt(s
                        + lang(
                              (u8"税金を"s + (gdata(179) - 1)
                               + u8"ヶ月分滞納している。"s),
                              (u8"You are in arrears with your tax for "s
                               + (gdata(179) - 1) + u8" months."s))
                        + s(1));
                }
            }
            if (gdata(179) > 4)
            {
                txtmore();
                txtef(3);
                txt(lang(
                    u8"あなたは税金を"s + (gdata(179) - 1)
                        + u8"ヶ月滞納した罪で訴えられた。"s,
                    u8"You have been accused for being in arrears with your tax for"s
                        + (gdata(179) - 1) + u8" months."s));
                decfame(0, 50);
                p = stat;
                txtmore();
                txtef(3);
                txt(lang(
                    u8"名声値を"s + p + u8"失った。"s,
                    u8"You lose "s + p + u8" fame."s));
                txtmore();
                modkarma(0, -30 * 2);
            }
        }
        else
        {
            txtmore();
            txt(lang(
                u8"レベルが6に達していないので納税の義務はない。"s,
                u8"You don't have to pay tax until you hit level 6."s));
        }
    }
    file = u8"shop"s + invfile + u8".s2"s;
    fmode = 4;
    label_2107();
    file = u8"shoptmp.s2"s;
    fmode = 3;
    label_2107();
    mode = 0;
    if (cfg_extrahelp)
    {
        if (gdata(216) == 0)
        {
            if (mode == 0)
            {
                if (cdata(141, 0) == 0)
                {
                    gdata(216) = 1;
                    ghelp = 16;
                    label_2701();
                }
            }
        }
    }
    return;
}
std::string rpmatname(int prm_1037)
{
    std::string s_at_m177;
    int p_at_m177 = 0;
    s_at_m177 = u8"?????"s;
    if (rpdata(20 + prm_1037, rpid) < 9000)
    {
        s_at_m177 = ioriginalnameref(rpdata(20 + prm_1037, rpid));
    }
    else
    {
        if (rpdata(20 + prm_1037, rpid) < 10000)
        {
            s_at_m177 = rfnameorg(1, rpdata(20 + prm_1037, rpid) - 9000);
        }
        else
        {
            s_at_m177 = fltname(rpdata(20 + prm_1037, rpid));
        }
    }
    if (rpdata(40 + prm_1037, rpid) == 0)
    {
        return s_at_m177;
    }
    if (rpdata(40 + prm_1037, rpid) >= 10000)
    {
        p_at_m177 = rpdata((40 + prm_1037), rpid) % 10000;
        if (p_at_m177 < 0 || p_at_m177 >= 800)
        {
            s_at_m177 += u8"/bugged/"s;
            return s_at_m177;
        }
        s_at_m177 =
            refchara_str(p_at_m177, 2) + lang(u8"の死体"s, u8" corpse"s);
        return s_at_m177;
    }
    return s_at_m177;
}
int blendcheckext(int prm_1038, int prm_1039)
{
    int p_at_m178 = 0;
    if (rpdata(40 + prm_1039, rpid) >= 10000)
    {
        p_at_m178 = rpdata((40 + prm_1039), rpid) % 10000;
        if (p_at_m178 < 0 || p_at_m178 >= 800)
        {
            stat = 0;
            return stat;
        }
        if (inv(23, prm_1038) == p_at_m178)
        {
            stat = 1;
            return stat;
        }
        else
        {
            stat = 0;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
std::string rpsuccessrate(int prm_1040)
{
    if (prm_1040 == 100)
    {
        return lang(u8"もう完璧！"s, u8"Perfect!"s);
    }
    if (prm_1040 >= 90)
    {
        return lang(u8"朝飯前！"s, u8"A piece of cake!"s);
    }
    if (prm_1040 >= 80)
    {
        return lang(u8"かんたんね"s, u8"Very likely"s);
    }
    if (prm_1040 >= 70)
    {
        return lang(u8"まず大丈夫"s, u8"No problem"s);
    }
    if (prm_1040 >= 60)
    {
        return lang(u8"たぶんいける"s, u8"Probably OK"s);
    }
    if (prm_1040 >= 50)
    {
        return lang(u8"ちょっと不安"s, u8"Maybe"s);
    }
    if (prm_1040 >= 40)
    {
        return lang(u8"だめかも"s, u8"Bad"s);
    }
    if (prm_1040 >= 30)
    {
        return lang(u8"やばい"s, u8"Very bad"s);
    }
    if (prm_1040 >= 20)
    {
        return lang(u8"まず無理"s, u8"Almost impossible"s);
    }
    return lang(u8"絶対ムリ！"s, u8"Impossible!"s);
}
int rpdiff(int, int prm_1042, int prm_1043)
{
    int p1_at_m180 = 0;
    int f_at_m180 = 0;
    int f2_at_m180 = 0;
    int i_at_m180 = 0;
    int d_at_m180 = 0;
    int p_at_m180 = 0;
    p1_at_m180 = 80;
    f_at_m180 = 100;
    if (prm_1042 > 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (prm_1042); cnt < cnt_end; ++cnt)
            {
                f2_at_m180 = 0;
                if (rpref(10 + cnt * 2) == -1)
                {
                    break;
                }
                i_at_m180 = rpref(10 + cnt * 2);
                if (inv(17, i_at_m180) >= 1)
                {
                    f2_at_m180 -= 10;
                }
                if (inv(17, i_at_m180) <= -1)
                {
                    f2_at_m180 += 20;
                }
                f_at_m180 += f2_at_m180;
                if (prm_1043 == cnt)
                {
                    {
                        int cnt = 0;
                        for (;; ++cnt)
                        {
                            if (f2_at_m180 < 0)
                            {
                                txtef(2);
                                txt(lang(
                                    u8"調合の成功率が上がった。"s,
                                    u8"The success rate goes up."s));
                                break;
                            }
                            if (f2_at_m180 > 0)
                            {
                                txtef(3);
                                txt(lang(
                                    u8"調合の成功率が下がった。"s,
                                    u8"The success rate goes down."s));
                                break;
                            }
                            break;
                        }
                    }
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            if (rpdata(10 + cnt * 2, rpid) == 0)
            {
                break;
            }
            if (sdata(rpdata(10 + cnt * 2, rpid), 0) <= 0)
            {
                p1_at_m180 -= 125;
                continue;
            }
            d_at_m180 = rpdata(11 + cnt * 2, rpid);
            if (prm_1042 > 0)
            {
                d_at_m180 = d_at_m180 * f_at_m180 / 100;
                if (d_at_m180 < 1)
                {
                    d_at_m180 = 1;
                }
            }
            p_at_m180 =
                (d_at_m180 * 200 / sdata(rpdata((10 + cnt * 2), rpid), 0) - 200)
                * -1;
            if (p_at_m180 > 0)
            {
                p_at_m180 /= 5;
            }
            if (p_at_m180 < -125)
            {
                p_at_m180 = -125;
            }
            p1_at_m180 += p_at_m180;
        }
    }
    if (p1_at_m180 < 25)
    {
        p1_at_m180 = 0;
    }
    if (p1_at_m180 > 100)
    {
        p1_at_m180 = 100;
    }
    stat = p1_at_m180;
    return stat;
}
int blendcheckmat(int prm_1044)
{
    int f_at_m181 = 0;
    int step_at_m181 = 0;
    int id_at_m181 = 0;
    int rp_at_m181 = 0;
    int o_at_m181 = 0;
    rpid = prm_1044;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (rpdata(20 + cnt, rpid) == 0)
            {
                break;
            }
            f_at_m181 = 0;
            step_at_m181 = cnt;
            id_at_m181 = rpdata(20 + cnt, rpid);
            rp_at_m181 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                {
                    if (cnt == 0)
                    {
                        o_at_m181 = -1;
                    }
                    if (cnt == 1)
                    {
                        o_at_m181 = 0;
                    }
                    inv_getheader(o_at_m181);
                    {
                        int cnt = invhead;
                        for (int cnt_end = cnt + (invrange); cnt < cnt_end;
                             ++cnt)
                        {
                            if (inv(0, cnt) <= 0)
                            {
                                continue;
                            }
                            if (rpdata(2, rpid) > 0 && step_at_m181 == 0)
                            {
                            }
                            else
                            {
                                if (inv(21, cnt) > 0)
                                {
                                    continue;
                                }
                            }
                            if (o_at_m181 == -1)
                            {
                                if (dist(
                                        inv(5, cnt),
                                        inv(6, cnt),
                                        cdata(1, 0),
                                        cdata(2, 0))
                                    > 4)
                                {
                                    continue;
                                }
                            }
                            if (rpdata(40 + rp_at_m181, rpid))
                            {
                                blendcheckext(cnt, rp_at_m181);
                                if (stat == 0)
                                {
                                    continue;
                                }
                            }
                            if (id_at_m181 < 9000)
                            {
                                if (inv(3, cnt) == id_at_m181)
                                {
                                    f_at_m181 = 1;
                                    break;
                                }
                                continue;
                            }
                            if (id_at_m181 < 10000)
                            {
                                if (instr(
                                        rffilter_item(inv(3, cnt)),
                                        0,
                                        u8"/"s
                                            + rfnameorg(0, (id_at_m181 - 9000))
                                            + u8"/"s)
                                        != -1
                                    || id_at_m181 == 9004)
                                {
                                    f_at_m181 = 1;
                                    break;
                                }
                                continue;
                            }
                            if (refitem(inv(3, cnt), 5) == id_at_m181)
                            {
                                f_at_m181 = 1;
                                break;
                            }
                        }
                    }
                    if (f_at_m181 == 1)
                    {
                        break;
                    }
                }
            }
            if (f_at_m181 == 0)
            {
                break;
            }
        }
    }
    stat = f_at_m181;
    return stat;
}
int blendmatnum(int prm_1045, int prm_1046)
{
    int m_at_m182 = 0;
    int o_at_m182 = 0;
    m_at_m182 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                o_at_m182 = -1;
            }
            if (cnt == 1)
            {
                o_at_m182 = 0;
            }
            inv_getheader(o_at_m182);
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (inv(0, cnt) <= 0)
                    {
                        continue;
                    }
                    if (rpdata(2, rpid) > 0 && prm_1046 == 0)
                    {
                    }
                    else
                    {
                        if (inv(21, cnt) > 0)
                        {
                            continue;
                        }
                    }
                    if (o_at_m182 == -1)
                    {
                        if (dist(
                                inv(5, cnt),
                                inv(6, cnt),
                                cdata(1, 0),
                                cdata(2, 0))
                            > 4)
                        {
                            continue;
                        }
                    }
                    if (rpdata(40 + prm_1046, rpid))
                    {
                        blendcheckext(cnt, prm_1046);
                        if (stat == 0)
                        {
                            continue;
                        }
                    }
                    if (prm_1045 < 9000)
                    {
                        if (inv(3, cnt) == prm_1045)
                        {
                            m_at_m182 += inv(0, cnt);
                        }
                        continue;
                    }
                    if (prm_1045 < 10000)
                    {
                        if (instr(
                                rffilter_item(inv(3, cnt)),
                                0,
                                u8"/"s + rfnameorg(0, (prm_1045 - 9000))
                                    + u8"/"s)
                                != -1
                            || prm_1045 == 9004)
                        {
                            m_at_m182 += inv(0, cnt);
                        }
                        continue;
                    }
                    if (refitem(inv(3, cnt), 5) == prm_1045)
                    {
                        m_at_m182 += inv(0, cnt);
                        continue;
                    }
                }
            }
        }
    }
    stat = m_at_m182;
    return stat;
}
int blendlist(elona_vector2<int>& prm_1047, int prm_1048)
{
    int id_at_m183 = 0;
    int m_at_m183 = 0;
    int o_at_m183 = 0;
    int reftype_at_m183 = 0;
    int f_at_m183 = 0;
    id_at_m183 = rpdata(20 + prm_1048, rpid);
    m_at_m183 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                o_at_m183 = -1;
            }
            if (cnt == 1)
            {
                o_at_m183 = 0;
            }
            inv_getheader(o_at_m183);
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    if (m_at_m183 >= 500)
                    {
                        break;
                    }
                    if (inv(0, cnt) <= 0)
                    {
                        continue;
                    }
                    if (rpdata(2, rpid) > 0 && step == 0)
                    {
                    }
                    else
                    {
                        if (inv(21, cnt) > 0)
                        {
                            continue;
                        }
                    }
                    if (o_at_m183 == -1)
                    {
                        if (dist(
                                inv(5, cnt),
                                inv(6, cnt),
                                cdata(1, 0),
                                cdata(2, 0))
                            > 4)
                        {
                            continue;
                        }
                    }
                    reftype_at_m183 = refitem(inv(3, cnt), 5);
                    if (rpdata(40 + prm_1048, rpid))
                    {
                        blendcheckext(cnt, prm_1048);
                        if (stat == 0)
                        {
                            continue;
                        }
                    }
                    if (id_at_m183 < 9000)
                    {
                        if (inv(3, cnt) != id_at_m183)
                        {
                            continue;
                        }
                    }
                    else
                    {
                        if (id_at_m183 < 10000)
                        {
                            if (instr(
                                    rffilter_item(inv(3, cnt)),
                                    0,
                                    u8"/"s + rfnameorg(0, (id_at_m183 - 9000))
                                        + u8"/"s)
                                    == -1
                                && id_at_m183 != 9004)
                            {
                                continue;
                            }
                        }
                        else
                        {
                            if (reftype_at_m183 != id_at_m183)
                            {
                                continue;
                            }
                        }
                    }
                    if (step > 0)
                    {
                        f_at_m183 = cnt;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (step); cnt < cnt_end;
                                 ++cnt)
                            {
                                if (rpref(10 + cnt * 2) == f_at_m183)
                                {
                                    f_at_m183 = -999;
                                    break;
                                }
                            }
                        }
                        if (f_at_m183 == -999)
                        {
                            continue;
                        }
                    }
                    prm_1047(0, m_at_m183) = cnt;
                    prm_1047(1, m_at_m183) =
                        reftype_at_m183 * 1000 + inv(3, cnt);
                    ++m_at_m183;
                }
            }
        }
    }
    return m_at_m183;
}
void window_recipe2()
{
    int x_at_m183 = 0;
    int w_at_m183 = 0;
    int dx_at_m183 = 0;
    int dy_at_m183 = 0;
    std::string s_at_m183;
    int p_at_m183 = 0;
    x_at_m183 = wx + ww;
    w_at_m183 = 400;
    gmode(2);
    pos(x_at_m183 + w_at_m183 - 520, 0);
    gcopy(3, 960, 288, 480, 68);
    dx_at_m183 = x_at_m183 + w_at_m183 - 500;
    dy_at_m183 = 10;
    font(lang(cfg_font1, cfg_font2), 15 - en * 2, 1);
    s_at_m183 = ""s + rpsuccessrate(rpdiff(rpid, step, -1));
    pos(dx_at_m183 + 140, dy_at_m183);
    color(30, 30, 30);
    bmes(lang(u8"成功率: "s, u8"Success Rate: "s) + s_at_m183, 235, 235, 235);
    p_at_m183 = rpdata(1, rpid);
    if (rpmode)
    {
        if (p_at_m183 < 10000)
        {
            p_at_m183 = p_at_m183 * val;
        }
        else
        {
            p_at_m183 = p_at_m183 % 10000;
        }
        p_at_m183 += rpdata(1, rpid) / 10000 * val * 10000;
    }
    s_at_m183 = ""s + p_at_m183 % 10000 + lang(u8"ターン"s, u8" turns"s);
    if (p_at_m183 >= 10000)
    {
        s_at_m183 += lang(u8"と"s, u8" and "s) + p_at_m183 / 10000
            + lang(u8"時間"s, u8" hours"s);
    }
    pos(dx_at_m183 + 140, dy_at_m183 + 20);
    color(40, 40, 40);
    bmes(lang(u8"必要時間: "s, u8"Time: "s) + s_at_m183, 235, 235, 235);
    return;
}
void window_recipe_(
    int prm_1050,
    int prm_1051,
    int prm_1052,
    int prm_1053,
    int prm_1054)
{
    elona_vector1<std::string> s_at_m184;
    int xfix2_at_m184 = 0;
    int dx_at_m184 = 0;
    int dy_at_m184 = 0;
    int i_at_m184 = 0;
    int p_at_m184 = 0;
    int cnt2_at_m184 = 0;
    SDIM1(s_at_m184);
    if (windowshadow == 1)
    {
        window(
            prm_1051 + 4,
            prm_1052 + 4,
            prm_1053,
            prm_1054 - prm_1054 % 8,
            0,
            -1);
        pos(prm_1051 + prm_1053 - 522, 0);
        gfini(486, 69);
        gfdec(40, 40, 40);
        windowshadow = 0;
    }
    window(prm_1051, prm_1052, prm_1053, prm_1054 - prm_1054 % 8, 0, 0);
    window_recipe2();
    gmode(2);
    color(194, 170, 146);
    line(
        prm_1051 + 50 + 0,
        prm_1052 + prm_1054 - 48 - prm_1054 % 8,
        prm_1051 + prm_1053 - 40,
        prm_1052 + prm_1054 - 48 - prm_1054 % 8);
    color(234, 220, 188);
    line(
        prm_1051 + 50 + 0,
        prm_1052 + prm_1054 - 49 - prm_1054 % 8,
        prm_1051 + prm_1053 - 40,
        prm_1052 + prm_1054 - 49 - prm_1054 % 8);
    s_at_m184(0) = u8"Page."s + (rppage + 1) + u8"/"s + (rppage(1) + 1);
    s_at_m184(1) = ""s + key_prev + u8","s + key_next + ""s
        + lang(u8"[ページ切替]  "s, u8"[Page]  "s);
    if (step == -1)
    {
        s_at_m184(1) += strhint3;
    }
    else
    {
        s_at_m184(1) += strhint3b;
    }
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    color(0, 0, 0);
    pos(prm_1051 + 25 + 0, prm_1052 + prm_1054 - 43 - prm_1054 % 8);
    mes(s_at_m184(1));
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    color(0, 0, 0);
    pos(prm_1051 + prm_1053 - strlen_u(s_at_m184) * 7 - 40 - xfix2_at_m184,
        prm_1052 + prm_1054 - 65 - prm_1054 % 8);
    mes(s_at_m184);
    dx_at_m184 = prm_1051 + 35;
    dy_at_m184 = 120;
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
    color(0, 0, 0);
    pos(dx_at_m184 - 10, dy_at_m184);
    mes(lang(u8"調合の手順"s, u8"Blending Procedure"s));
    dy_at_m184 = dy_at_m184 + 18;
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(0, 0, 0);
    i_at_m184 = 1;
    pos(dx_at_m184 - 10, dy_at_m184 - 2);
    gfini(prm_1053 - 60, 17);
    if (step == i_at_m184 - 2)
    {
        gfdec2(10, 20, 30);
    }
    else
    {
        if (step > i_at_m184 - 2)
        {
            gfdec2(25, 30, 35);
        }
    }
    if (step == -1)
    {
        pos(dx_at_m184, dy_at_m184);
        mes(""s + i_at_m184 + u8"."s
            + lang(u8"レシピを選ぶ"s, u8"Choose a recipe"s));
    }
    else
    {
        pos(dx_at_m184, dy_at_m184);
        mes(""s + i_at_m184 + u8"."s
            + lang(
                  (rpname(rpid) + u8"のレシピを選んだ"s),
                  (u8"Chose the recipe of "s + rpname(rpid))));
    }
    dy_at_m184 += 17;
    ++i_at_m184;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (rpdata(20 + cnt, rpid) == 0)
            {
                break;
            }
            pos(dx_at_m184 - 10, dy_at_m184 - 2);
            gfini(prm_1053 - 60, 17);
            if (step == i_at_m184 - 2)
            {
                gfdec2(10, 20, 30);
            }
            else
            {
                if (step > i_at_m184 - 2)
                {
                    gfdec2(25, 30, 35);
                }
            }
            if (step <= cnt)
            {
                blendmatnum(rpdata(20 + cnt, rpid), cnt);
                p_at_m184 = stat;
                s_at_m184 = lang(
                                rpmatname(cnt) + u8"を加える"s,
                                u8"Add "s + rpmatname(cnt) + ""s)
                    + u8"("s + lang(u8"所持:"s, u8"Stock:"s) + p_at_m184
                    + u8")"s;
            }
            else
            {
                s_at_m184 = lang(""s, u8"Selected "s)
                    + itemname(rpref((10 + cnt * 2)))
                    + lang(u8"を選んだ"s, ""s);
                s_at_m184 = strmid(s_at_m184, 0, 44);
            }
            pos(dx_at_m184, dy_at_m184);
            mes(""s + i_at_m184 + u8"."s + s_at_m184);
            dy_at_m184 += 17;
            ++i_at_m184;
        }
    }
    pos(wx + ww + 243, wy - 4);
    gcopy(3, 1040, 96, 160, 70);
    pos(dx_at_m184 - 10, dy_at_m184 - 2);
    gfini(prm_1053 - 60, 17);
    if (step == i_at_m184 - 2)
    {
        gfdec2(10, 20, 30);
    }
    else
    {
        if (step > i_at_m184 - 2)
        {
            gfdec2(25, 30, 35);
        }
    }
    pos(dx_at_m184, dy_at_m184);
    mes(""s + i_at_m184 + u8"."s
        + lang(u8"調合を始める！"s, u8"Start blending!"s));
    dy_at_m184 += 30;
    if (rppage == 0)
    {
        font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
        color(0, 0, 0);
        pos(dx_at_m184 - 10, dy_at_m184);
        mes(lang(
            rpname(rpid) + u8"のレシピ"s, u8"The recipe of "s + rpname(rpid)));
        dy_at_m184 += 20;
        pos(dx_at_m184 - 10, dy_at_m184);
        mes(lang(u8"必要なスキル:"s, u8"Required Skills:"s));
        dy_at_m184 = dy_at_m184 + 18;
        font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                if (rpdata(10 + cnt * 2, rpid) == 0)
                {
                    break;
                }
                if (rpdata(11 + cnt * 2, rpid)
                    > sdata(rpdata(10 + cnt * 2, rpid), 0))
                {
                    color(150, 0, 0);
                }
                else
                {
                    color(0, 120, 0);
                }
                pos(dx_at_m184 + cnt % 2 * 140, dy_at_m184 + cnt / 2 * 17);
                mes(skillname(rpdata(10 + cnt * 2, rpid)) + u8"  "s
                    + rpdata((11 + cnt * 2), rpid) + u8"("s
                    + sdata(rpdata((10 + cnt * 2), rpid), 0) + u8")"s);
            }
        }
        dy_at_m184 += 50;
        font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
        color(0, 0, 0);
        pos(dx_at_m184 - 10, dy_at_m184);
        mes(lang(u8"必要な機材:"s, u8"Required equipment:"s));
        return;
    }
    if (prm_1050 == -1)
    {
        return;
    }
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
    color(0, 0, 0);
    pos(dx_at_m184 - 10, dy_at_m184);
    mes(itemname(prm_1050));
    dy_at_m184 += 20;
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(0, 0, 0);
    if (inv(8, prm_1050) < 2)
    {
        pos(dx_at_m184, dy_at_m184);
        mes(lang(
            u8"このアイテムは鑑定されていない。"s,
            u8"You haven't identified it yet."s));
        dy_at_m184 += 16;
        return;
    }
    getinheritance(prm_1050, inhlist_at_m184, p_at_m184);
    if (p_at_m184 > 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p_at_m184); cnt < cnt_end; ++cnt)
            {
                cnt2_at_m184 = inhlist_at_m184(cnt);
                if (inv(40 + cnt2_at_m184 * 2, prm_1050) == 0)
                {
                    break;
                }
                val(0) = inv(40 + cnt2_at_m184 * 2, prm_1050);
                val(1) = inv(40 + cnt2_at_m184 * 2 + 1, prm_1050);
                val(2) = 0;
                val(3) = refitem(inv(3, prm_1050), 5);
                label_0247();
                color(0, 0, 100);
                if (inv(40 + cnt2_at_m184 * 2 + 1, prm_1050) < 0)
                {
                    color(180, 0, 0);
                }
                pos(dx_at_m184, dy_at_m184);
                mes(cnven(s));
                dy_at_m184 += 16;
            }
        }
    }
    else
    {
        pos(dx_at_m184, dy_at_m184);
        mes(lang(u8"継承効果なし"s, u8"No inheritance effects"s));
        dy_at_m184 += 16;
        ++p_at_m184;
    }
    color(0, 0, 0);
    return;
}
void clear_rprefmat()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            rpref(10 + cnt * 2) = -1;
        }
    }
    return;
}
void label_1920()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            recipememory(200 + cnt) = 1;
        }
    }
    return;
}
void label_1921()
{
    DIM3(rpdata, 100, 1200);
    SDIM4(rfnameorg, 20, 2, 6);
    SDIM3(rpdatan, 40, 1200);
    DIM2(rpref, 100);
    rpsourcelist(0) = 0;
    rpsourcelist(1) = 898;
    rpsourcelist(2) = 1156;
    rpsourcelist(3) = 1187;
    rpsourcelist(4) = 209;
    rpsourcelist(5) = 210;
    rpid = 200;
    rpdatan(rpid) = lang(u8"媚薬混入食品"s, u8"love food"s);
    rpdata(0, rpid) = 10000;
    rpdata(1, rpid) = 10;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 8;
    rpdata(12, rpid) = 178;
    rpdata(13, rpid) = 3;
    rpdata(20, rpid) = 57000;
    rpdata(21, rpid) = 620;
    rpid = 201;
    rpdatan(rpid) = lang(u8"染色"s, u8"dyeing"s);
    rpdata(0, rpid) = 10001;
    rpdata(1, rpid) = 4;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 6;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 519;
    rpid = 202;
    rpdatan(rpid) = lang(u8"特製毒入り食品"s, u8"poisoned food"s);
    rpdata(0, rpid) = 10002;
    rpdata(1, rpid) = 7;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 3;
    rpdata(20, rpid) = 57000;
    rpdata(21, rpid) = 262;
    rpid = 203;
    rpdatan(rpid) = lang(u8"耐火コーティング"s, u8"fireproof coating"s);
    rpdata(0, rpid) = 10003;
    rpdata(1, rpid) = 15;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 18;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 736;
    rpid = 204;
    rpdatan(rpid) = lang(u8"耐酸コーティング"s, u8"acidproof coating"s);
    rpdata(0, rpid) = 10004;
    rpdata(1, rpid) = 15;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 10;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 566;
    rpid = 205;
    rpdatan(rpid) = lang(u8"釣り餌の装着"s, u8"bait attachment"s);
    rpdata(0, rpid) = 10005;
    rpdata(1, rpid) = 10;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 185;
    rpdata(11, rpid) = 2;
    rpdata(12, rpid) = 12;
    rpdata(13, rpid) = 10;
    rpdata(20, rpid) = 342;
    rpdata(21, rpid) = 617;
    rpid = 206;
    rpdatan(rpid) = lang(u8"アイテムの祝福"s, u8"blessed item"s);
    rpdata(0, rpid) = 10006;
    rpdata(1, rpid) = 5;
    rpdata(2, rpid) = 1;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 5;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 516;
    rpid = 207;
    rpdatan(rpid) = lang(u8"井戸水の回復"s, u8"well refill"s);
    rpdata(0, rpid) = 10007;
    rpdata(1, rpid) = 3;
    rpdata(2, rpid) = 2;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 3;
    rpdata(20, rpid) = 60001;
    rpdata(21, rpid) = 52000;
    rpid = 208;
    rpdatan(rpid) = lang(u8"天然ポーション"s, u8"natural potion"s);
    rpdata(0, rpid) = 10008;
    rpdata(1, rpid) = 16;
    rpdata(2, rpid) = 2;
    rpdata(10, rpid) = 12;
    rpdata(11, rpid) = 24;
    rpdata(20, rpid) = 60001;
    rpdata(21, rpid) = 601;
    rpid = 209;
    rpdatan(rpid) = lang(u8"2種アーティファクト合成"s, u8"2 artifacts fusion"s);
    rpdata(0, rpid) = 10009;
    rpdata(1, rpid) = 16;
    rpdata(2, rpid) = 2;
    rpdata(10, rpid) = 178;
    rpdata(11, rpid) = 999;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 9004;
    rpid = 210;
    rpdatan(rpid) = lang(u8"3種アーティファクト合成"s, u8"3 artifacts fusion"s);
    rpdata(0, rpid) = 10009;
    rpdata(1, rpid) = 16;
    rpdata(2, rpid) = 2;
    rpdata(10, rpid) = 178;
    rpdata(11, rpid) = 999;
    rpdata(20, rpid) = 9004;
    rpdata(21, rpid) = 9004;
    rpdata(22, rpid) = 9004;
    rpid = 898;
    rpdata(0, rpid) = 498;
    rpdata(1, rpid) = 150060;
    rpdata(10, rpid) = 175;
    rpdata(11, rpid) = 4;
    rpdata(12, rpid) = 457;
    rpdata(13, rpid) = 20;
    rpdata(14, rpid) = 12;
    rpdata(15, rpid) = 8;
    rpdata(30, rpid) = 0;
    rpdata(20, rpid) = 260;
    rpdata(21, rpid) = 9001;
    rpid = 1156;
    rpdata(0, rpid) = 756;
    rpdata(1, rpid) = 20020;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 4;
    rpdata(12, rpid) = 179;
    rpdata(13, rpid) = 20;
    rpdata(14, rpid) = 157;
    rpdata(15, rpid) = 8;
    rpdata(30, rpid) = 0;
    rpdata(20, rpid) = 260;
    ++rpid;
    rpid = 1187;
    rpdata(0, rpid) = 787;
    rpdata(1, rpid) = 30;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 10;
    rpdata(12, rpid) = 178;
    rpdata(13, rpid) = 5;
    rpdata(30, rpid) = 0;
    rpdata(20, rpid) = 9004;
    rpid = 1191;
    rpdata(0, rpid) = 791;
    rpdata(1, rpid) = 160045;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 10;
    rpdata(12, rpid) = 178;
    rpdata(13, rpid) = 65;
    rpdata(14, rpid) = 10;
    rpdata(15, rpid) = 105;
    rpdata(30, rpid) = 0;
    rpdata(20, rpid) = 10000;
    rpdata(21, rpid) = 748;
    rpdata(22, rpid) = 716;
    rpid = 1192;
    rpdata(0, rpid) = 792;
    rpdata(1, rpid) = 10024;
    rpdata(10, rpid) = 184;
    rpdata(11, rpid) = 20;
    rpdata(12, rpid) = 0;
    rpdata(13, rpid) = 10;
    rpdata(14, rpid) = 151;
    rpdata(15, rpid) = 5;
    rpdata(30, rpid) = 0;
    rpdata(20, rpid) = 204;
    rpdata(21, rpid) = 9005;
    rpdata(40, rpid) = 10003;
    rpdata(50, rpid) = 10017;
    rpdata(51, rpid) = 500;
    rpdata(52, rpid) = 60017;
    rpdata(53, rpid) = 500;
    rpdata(54, rpid) = 10010;
    rpdata(55, rpid) = 100;
    rpdata(56, rpid) = 60010;
    rpdata(57, rpid) = 100;
    rpdata(58, rpid) = 10016;
    rpdata(59, rpid) = 300;
    rpdata(60, rpid) = 60016;
    rpdata(61, rpid) = 300;
    rpdata(62, rpid) = 10011;
    rpdata(63, rpid) = 200;
    rpdata(64, rpid) = 60011;
    rpdata(65, rpid) = 200;
    rfnameorg(0, 1) = u8"flavor"s;
    rfnameorg(1, 1) = lang(u8"適当な調味料"s, u8"suitable flavoring"s);
    rfnameorg(0, 2) = u8"ore"s;
    rfnameorg(1, 2) = lang(u8"適当な鉱石"s, u8"any ore"s);
    rfnameorg(0, 3) = u8"wood"s;
    rfnameorg(1, 3) = lang(u8"木材を含む何か"s, u8"something made of wood"s);
    rfnameorg(0, 5) = u8"fish"s;
    rfnameorg(1, 5) = lang(u8"魚介類"s, u8"fish"s);
    rfnameorg(0, 4) = "";
    rfnameorg(1, 4) = lang(u8"何か物体"s, u8"any item"s);
    return;
}
void label_1922()
{
    step = -1;
    rpid = 0;
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_blend.bmp"s, 1);
    gsel(0);
    clear_rprefmat();
label_1923:
    if (step != -1)
    {
        if (rpdata(20 + step, rpid) == 0)
        {
            rppage = 0;
            window_recipe(list2, -1, wx + ww, wy, 400, wh);
            txtnew();
            txt(lang(
                u8"幾つ作る？"s, u8"How many items do you want to create?"s));
            promptl(0, promptmax) =
                lang(u8"調合を始める"s, u8"Start blending"s);
            promptl(1, promptmax) = u8"a"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            promptl(0, promptmax) = lang(u8"前に戻る"s, u8"Go back"s);
            promptl(1, promptmax) = u8"b"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            promptl(0, promptmax) = lang(u8"最初から"s, u8"From the start"s);
            promptl(1, promptmax) = u8"c"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            p = 10;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    if (rpref(10 + cnt * 2) == -1)
                    {
                        break;
                    }
                    if (rpdata(2, rpid) == 2 && cnt == 0)
                    {
                        continue;
                    }
                    if (inv(0, rpref(10 + cnt * 2)) < p)
                    {
                        p = inv(0, rpref(10 + cnt * 2));
                    }
                }
            }
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 220;
            val(3) = 2;
            val(4) = p;
            rpmode = 1;
            label_2131();
            rpmode = 0;
            if (rtval == 0)
            {
                rpref(1) = val;
                rpref(2) = rpdata(1, rpid);
                rpref(3) = rpdiff(rpid, step, -1);
                label_19342();
                label_2742();
                return;
            }
            if (rtval == 2)
            {
                step = -1;
                goto label_1923;
            }
            --step;
            goto label_1923;
        }
    }
    page = 0;
    pagesize = 16;
    listmax = 0;
    cs = 0;
    cs_bk = -1;
    cc = 0;
    screenupdate = -1;
    label_1419();
    if (step == -1)
    {
        rppage(0) = 0;
        rppage(1) = 0;
        listmax = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1200); cnt < cnt_end; ++cnt)
            {
                if (rpdata(0, cnt) == 0)
                {
                    continue;
                }
                if (recipememory(cnt) > 0)
                {
                    list(0, listmax) = cnt;
                    list(1, listmax) = cnt;
                    ++listmax;
                }
            }
        }
        label_2056();
        windowshadow(1) = 1;
        txtnew();
        txt(lang(
            u8"(製作中)だめまだ"s,
            u8"(*) The feature is not implemented yet."s));
        txtnew();
        txt(lang(
            u8"どのレシピを使う？"s, u8"Which recipe do you want to use?"s));
        goto label_1924_internal;
        return;
    }
    rppage = 1;
    blendlist(list, step);
    listmax = stat;
    label_2056();
    goto label_1927_internal;
    return;
label_1924_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    DIM2(blendchecklist, pagesize);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            blendchecklist(cnt) = blendcheckmat(list(0, p));
        }
    }
label_1925_internal:
    redraw(0);
    s(0) = lang(u8"レシピの選択"s, u8"Choose a recipe"s);
    s(1) = strhint2;
    windowshadow = windowshadow(1);
    display_window(
        (windoww - 780) / 2 + inf_screenx, winposy(445), 380, 432, 74);
    display_topic(lang(u8"レシピの名称"s, u8"Name"s), wx + 28, wy + 30);
    s = ""s + listmax + u8" recipes"s;
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    pos(wx + 130, wy + wh - 65 - wh % 8);
    mes(s);
    keyrange = 0;
    gmode(2);
    gsel(1);
    color(0);
    boxf(0, 960, chipi(2, 550), chipi(3, 550) + 960);
    pos(0, 960);
    gcopy(1, chipi(0, 550), chipi(1, 550), chipi(2, 550), chipi(3, 550));
    gfini(chipi(2, 550), chipi(3, 550));
    gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
    gsel(selcur);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 60 + cnt * 19);
                gfini(ww - 100, 18);
                gfdec2(12, 14, 16);
            }
            pos(wx + 37, wy + 70 + cnt * 19);
            gmode(2, chipi(2, 550), chipi(3, 550));
            grotate(1, 0, 960, 0, inf_tiles, inf_tiles);
            pos(wx + 330, wy + 53 + cnt * 19);
            if (blendchecklist(cnt) == 1)
            {
                gcopy(3, 336, 360, 24, 24);
            }
            rpid = list(0, p);
            pos(wx + 317, wy + 60 + cnt * 19);
            gcopy(3, 64 + (4 - rpdiff(rpid, -1, -1) / 25) * 16, 624, 16, 16);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            p = list(0, p);
            rpid = p;
            s = lang(""s, u8"Recipe of "s) + cnven(rpname(rpid))
                + lang(u8"のレシピ"s, ""s);
            display_key(wx + 58, wy + 60 + cnt * 19 - 2, cnt);
            cs_list(cnt, s, wx + 84, wy + 60 + cnt * 19 - 1, 19, 0, 1, p);
        }
    }
    if (cs_bk != cs)
    {
        rpid = list(0, pagesize * page + cs);
        windowshadow = windowshadow(1);
        window_recipe(list2, -1, wx + ww, wy, 400, wh);
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    windowshadow(1) = 0;
    pos(wx + 10, wy + wh - 100);
    gcopy(3, 960, 96, 80, 90);
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        rpid = p;
        step = 0;
        rppage(0) = 1;
        rppage(1) = 1;
        rpref(0) = rpid;
        goto label_1923;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1924_internal;
            return;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1924_internal;
            return;
        }
    }
    if (key == key_cancel)
    {
        screenupdate = 0;
        label_1419();
        label_2743(false);
    }
    goto label_1925_internal;
label_1927_internal:
    windowshadow(1) = 1;
    txtnew();
    txt(lang(
        rpmatname(step) + u8"を追加しよう。"s,
        u8"Add \""s + rpmatname(step) + u8"\"."s));
label_1928_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    redraw(0);
    if (jp)
    {
        s = rpmatname(step) + u8"を追加"s;
    }
    else
    {
        s = u8"Add "s + rpmatname(step);
    }
    s(1) = strhint2;
    windowshadow = windowshadow(1);
    display_window(
        (windoww - 780) / 2 + inf_screenx, winposy(445), 380, 432, 74);
    display_topic(lang(u8"アイテムの名称"s, u8"Name"s), wx + 28, wy + 30);
    s = ""s + listmax + u8" items"s;
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    pos(wx + 130, wy + wh - 65 - wh % 8);
    mes(s);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 60 + cnt * 19);
                gfini(ww - 100, 18);
                gfdec2(12, 14, 16);
            }
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            p = list(0, p);
            s = itemname(p, inv(0, p));
            s = strmid(s, 0, 28);
            if (p >= 5080)
            {
                s += lang(u8"(地面)"s, u8" (Ground)"s);
            }
            display_key(wx + 58, wy + 60 + cnt * 19 - 2, cnt);
            p(1) = inv(2, p) % 1000;
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, p(1)), chipi(3, p(1)) + 960);
            if (p(1) == 528)
            {
                gmode(2);
                pos(0, 960);
                gcopy(1, 0, 768, inf_tiles, inf_tiles);
                pos(0, 1008);
                gzoom(
                    22,
                    20,
                    5,
                    chipc(0, inv(22, p)) + 8,
                    chipc(1, inv(22, p)) + 4
                        + (chipc(3, inv(22, p)) > inf_tiles) * 8,
                    chipc(2, inv(22, p)) - 16,
                    chipc(3, inv(22, p)) - 8
                        - (chipc(3, inv(22, p)) > inf_tiles) * 10,
                    1);
                pos(6, 974);
                gcopy(1, 0, 1008, 22, 20);
                gsel(selcur);
            }
            else
            {
                if (p(1) == 531)
                {
                    pos(8, 1058 - chipc(3, inv(22, p)));
                    gcopy(
                        5,
                        chipc(0, inv(22, p)) + 8,
                        chipc(1, inv(22, p)) + 2,
                        chipc(2, inv(22, p)) - 16,
                        chipc(3, inv(22, p)) - 8);
                    gmode(4 - 1, -1, 150);
                    color(0, 0, 0);
                    pos(0, 960 + (chipc(3, inv(22, p)) == inf_tiles) * 48);
                    gcopy(
                        1,
                        144,
                        768 + (chipc(3, inv(22, p)) > inf_tiles) * 48,
                        inf_tiles,
                        chipc(3, inv(22, p))
                            + (chipc(3, inv(22, p)) > inf_tiles) * 48);
                    gmode(2);
                    gsel(selcur);
                }
                else
                {
                    pos(0, 960);
                    gcopy(
                        1,
                        chipi(0, p(1)),
                        chipi(1, p(1)),
                        chipi(2, p(1)),
                        chipi(3, p(1)));
                    gfini(chipi(2, p(1)), chipi(3, p(1)));
                    gfdec2(
                        c_col(0, inv(22, p)),
                        c_col(1, inv(22, p)),
                        c_col(2, inv(22, p)));
                    gsel(selcur);
                }
            }
            pos(wx + 37, wy + 69 + cnt * 19);
            gmode(2, chipi(2, p(1)), chipi(3, p(1)));
            grotate(
                1,
                0,
                960,
                0,
                chipi(2, p(1)) * inf_tiles / chipi(3, p(1)),
                inf_tiles);
            if (inv(18, p) != 0)
            {
                pos(wx + 46, wy + 72 + cnt * 18 - 3);
                gcopy(3, 12, 348, 12, 12);
            }
            cs_list(cnt, s, wx + 84, wy + 60 + cnt * 19 - 1, 19, 0, 1, p);
        }
    }
    p = list(0, pagesize * page + cs);
    if (listmax == 0)
    {
        p = -1;
    }
    if (cs_bk != cs)
    {
        windowshadow = windowshadow(1);
        window_recipe(list2, p, wx + ww, wy, 400, wh);
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    windowshadow(1) = 0;
    pos(wx + 10, wy + wh - 100);
    gcopy(3, 960, 96, 80, 90);
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1928_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1928_internal;
        }
    }
    if (p != -1)
    {
        snd(17);
        ci = p;
        rpref(10 + step * 2 + 0) = ci;
        rpref(10 + step * 2 + 1) = inv(3, ci);
        txt(lang(
            itemname(ci) + u8"を選んだ。"s,
            u8"You add "s + itemname(ci) + u8"."s));
        ++step;
        p = rpdiff(rpid, step, step - 1);
        goto label_1923;
    }
    if (key == key_prev)
    {
        snd(1);
        --rppage;
        cs_bk = -1;
        if (rppage < 0)
        {
            rppage = rppage(1);
        }
    }
    if (key == key_next)
    {
        snd(1);
        ++rppage;
        cs_bk = -1;
        if (rppage > rppage(1))
        {
            rppage = 0;
        }
    }
    if (key == key_cancel)
    {
        --step;
        goto label_1923;
    }
    goto label_1928_internal;
}
int label_1931()
{
    f = 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (rpref(10 + cnt * 2) == -1)
            {
                break;
            }
            if (rpref(10 + cnt * 2) == -2)
            {
                f = 0;
                break;
            }
            if (inv(0, rpref(10 + cnt * 2)) <= 0
                || inv(3, rpref(10 + cnt * 2)) != rpref(11 + cnt * 2))
            {
                f = 0;
                break;
            }
        }
    }
    stat = f;
    return stat;
}
int label_1932()
{
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (rpref(10 + cnt * 2) == -1)
            {
                break;
            }
            if (rpref(10 + cnt * 2) == -2)
            {
                continue;
            }
            if (rpdata(2, rpid) > 0 && cnt == 0)
            {
            }
            else
            {
                if (rpresult)
                {
                    --inv(0, rpref(10 + cnt * 2));
                }
                else
                {
                    if (rnd(3) == 0)
                    {
                        txt(lang(
                            itemname(rpref(10 + cnt * 2), 1) + u8"を失った。"s,
                            u8"You lose "s + itemname(rpref((10 + cnt * 2)), 1)
                                + u8"."s));
                        --inv(0, rpref(10 + cnt * 2));
                    }
                }
            }
            cell_refresh(
                inv(5, rpref(10 + cnt * 2)), inv(6, rpref(10 + cnt * 2)));
        }
    }
    label_1521();
    stat = 1;
    return stat;
}
void label_1933()
{
    rpresult = 1;
    if (rpdiff(rpid, -1, -1) < rnd(100))
    {
        rpresult = 0;
        txtef(3);
        txt(lang(u8"調合失敗！"s, u8"The blending attempt failed!"s));
    }
    else
    {
        if (rpdata(0, rpid) >= 10000)
        {
            label_1935();
        }
        else
        {
            flt();
            nostack = 1;
            itemcreate(-1, rpdata(0, rpid), cdata(1, 0), cdata(2, 0), 0);
            if (stat != 0)
            {
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        if (rpdata(50 + cnt * 2, rpid) == 0)
                        {
                            break;
                        }
                        encadd(
                            ci,
                            rpdata(50 + cnt * 2, rpid),
                            rpdata(51 + cnt * 2, rpid),
                            0,
                            1);
                    }
                }
            }
            txtef(2);
            txt(lang(
                itemname(ci, 1) + u8"の作成に成功した！"s,
                u8"You successfully create "s + itemname(ci, 1) + u8"!"s));
            snd(17);
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                if (rpdata(10 + cnt * 2, rpid) == 0)
                {
                    break;
                }
                skillexp(
                    rpdata(10 + cnt * 2, rpid),
                    0,
                    50 + rpdata((11 + cnt * 2), rpid) + rpref(2) / 10000 * 25,
                    2,
                    50);
            }
        }
    }
    --rpref(1);
    label_1932();
    return;
}
void label_19342()
{
label_19341_internal:
    rpid = rpref(0);
    if (rpid == 0)
    {
        rowactend(cc);
        return;
    }
    if (cdata(140, cc) == 0)
    {
        txtnew();
        txt(lang(
            name(cc) + u8"は"s + rpname(rpid) + u8"の調合をはじめた。"s,
            name(cc) + u8" start"s + _s(cc) + u8" blending of "s + rpname(rpid)
                + u8"."s));
        cdata(140, cc) = 12;
        cdata(141, cc) = rpref(2) % 10000;
        return;
    }
    if (cdata(141, cc) > 0)
    {
        if (rnd(30) == 0)
        {
            txtef(4);
            txt(lang(u8" *こねこね* "s, u8"*pug*"s),
                lang(u8" *トントン* "s, u8"*clank*"s));
        }
        return;
    }
    if (rpref(2) >= 10000)
    {
        cdata(141, cc) = rpref(2) / 10000;
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                mode = 12;
                ++gdata(13);
                label_2736();
                redraw(0);
                label_1421();
                if (cnt % 5 == 0)
                {
                    txtef(4);
                    txt(lang(u8" *こねこね* "s, u8"*pug*"s),
                        lang(u8" *トントン* "s, u8"*clank*"s));
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
                    {
                        redraw(0);
                        redraw(1);
                        await(30);
                    }
                }
                gdata(14) = 0;
                cc = 0;
                --cdata(141, cc);
                if (cdata(141, cc) <= 0)
                {
                    label_1931();
                    if (stat == 0)
                    {
                        txt(lang(
                            u8"調合に必要な材料が見つからない。"s,
                            u8"A requied material cannot be found."s));
                        break;
                    }
                    label_1933();
                    if (rpref(1) > 0)
                    {
                        cdata(141, cc) = rpref(2) / 10000;
                        cnt = 0 - 1;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
            }
        }
        rowactend(cc);
        mode = 0;
        return;
    }
    label_1931();
    if (stat == 0)
    {
        txt(lang(
            u8"調合に必要な材料が見つからない。"s,
            u8"A requied material cannot be found."s));
        rowactend(cc);
        return;
    }
    label_1933();
    if (rpref(1) > 0)
    {
        cdata(140, cc) = 0;
        goto label_19341_internal;
    }
    rowactend(cc);
    return;
}
void label_1935()
{
    ci = rpref(10);
    ti = rpref(12);
    if (rpdata(2, rpid) == 2)
    {
        item_separate(ci);
    }
    else
    {
        if (inv(0, ci) <= 1)
        {
            rpref(10) = -2;
        }
        else
        {
            item_separate(ci);
            if (rpref(10) == stat)
            {
                rpref(10) = -2;
            }
            else
            {
                rpref(10) = stat;
            }
        }
    }
    switch (rpdata(0, rpid))
    {
    case 10000:
        ibitmod(6, ci, 1);
        txtef(2);
        txt(lang(
            itemname(ci, 1) + u8"の作成に成功した！"s,
            u8"You successfully create "s + itemname(ci, 1) + u8"!"s));
        txt(lang(
            u8"あなたはうしろめたさを感じた…"s,
            u8"You kind of feel guilty..."s));
        snd(65);
        goto label_1936_internal;
    case 10001:
        inv(22, ci) = inv(22, ti);
        txtef(2);
        txt(lang(
            u8"あなたは"s + itemname(ci) + u8"を染めた。"s,
            u8"You dye "s + itemname(ci) + u8"."s));
        snd(17);
        goto label_1936_internal;
    case 10002:
        ibitmod(14, ci, 1);
        txtef(2);
        txt(lang(
            itemname(ci, 1) + u8"の作成に成功した！"s,
            u8"You successfully create "s + itemname(ci, 1) + u8"!"s));
        txt(lang(u8"あなたはにやりと口元を歪めた。"s, u8"You grin."s));
        snd(65);
        goto label_1936_internal;
    case 10003:
        txtef(2);
        txt(lang(
            itemname(ci) + u8"に"s + itemname(ti, 1) + u8"を塗りたくった。"s,
            u8"You put "s + itemname(ti, 1) + u8" on "s + itemname(ci)
                + u8"."s));
        if (inv(3, ci) == 567)
        {
            txt(lang(u8"いいアイデアだ！しかし…"s, u8"A good idea! But..."s));
        }
        else
        {
            ibitmod(2, ci, 1);
            txt(lang(
                itemname(ci) + u8"は熱から守られた。"s,
                itemname(ci) + u8" gain"s + _s2(in) + u8" fireproof."s));
        }
        snd(17);
        goto label_1936_internal;
    case 10004:
        txtef(2);
        txt(lang(
            itemname(ci) + u8"に"s + itemname(ti, 1) + u8"を塗りたくった。"s,
            u8"You put "s + itemname(ti, 1) + u8" on "s + itemname(ci)
                + u8"."s));
        ibitmod(1, ci, 1);
        txt(lang(
            itemname(ci) + u8"は酸から守られた。"s,
            itemname(ci) + u8" gain"s + _s2(in) + u8" acidproof."s));
        snd(17);
        goto label_1936_internal;
    case 10005:
        txtef(2);
        txt(lang(
            itemname(ti, 1) + u8"を"s + itemname(ci) + u8"に装着した。"s,
            u8"You bait "s + itemname(ci) + u8" with "s + itemname(ti, 1)
                + u8"."s));
        if (inv(28, ci) == inv(25, ti))
        {
            inv(9, ci) += rnd(10) + 15;
        }
        else
        {
            inv(9, ci) = rnd(10) + 15;
            inv(28, ci) = inv(25, ti);
        }
        snd(13);
        goto label_1936_internal;
    case 10006:
        txtef(2);
        txt(lang(
            itemname(ti, 1) + u8"を"s + itemname(ci) + u8"に降りかけた。"s,
            u8"You shower "s + itemname(ci) + u8" on "s + itemname(ti, 1)
                + u8"."s));
        if (inv(17, ti) >= 1)
        {
            txtef(5);
            txt(lang(
                itemname(ci) + u8"は銀色に輝いた。"s,
                itemname(ci) + u8" shine"s + _s2(inv(0, ci)) + u8" silvery."s));
            inv(17, ci) = 1;
        }
        if (inv(17, ti) <= -1)
        {
            txtef(8);
            txt(lang(
                itemname(ci) + u8"は黒いオーラに包まれた。"s,
                itemname(ci) + u8" "s + is2(inv(0, ci))
                    + u8" wrapped by a dark aura."s));
            inv(17, ci) = -1;
        }
        snd(17);
        goto label_1936_internal;
    case 10007:
        txt(lang(
            itemname(ti, 1) + u8"を"s + itemname(ci) + u8"に放り込んだ。"s,
            u8"You throw "s + itemname(ci) + u8" into "s + itemname(ti, 1)
                + u8"."s));
        if (inv(3, ti) == 601)
        {
            txt(lang(
                u8"空き瓶の割れる音がした。"s,
                u8"You hear the sound of the empty bottle shatters."s));
            goto label_1936_internal;
        }
        snd(17);
        if (inv(3, ci) == 602)
        {
            txt(lang(u8"井戸は汚れた。"s, u8"The holy well is polluted."s));
            goto label_1936_internal;
        }
        if (inv(27, ci) >= 20)
        {
            txt(lang(
                itemname(ci) + u8"は完全に枯れている。"s,
                itemname(ci) + u8" is completely dry."s));
            goto label_1936_internal;
        }
        txtef(2);
        txt(lang(
            itemname(ci) + u8"は一瞬輝いた。"s,
            itemname(ci) + u8" shines for a moment."s));
        if (inv(3, ti) == 587)
        {
            txt(lang(u8"しかしこんな量では… "s, u8"But the snow just melts."s));
        }
        else
        {
            inv(25, ci) += rnd(3);
        }
        goto label_1936_internal;
    case 10008:
        if (inv(25, ci) < -5 || inv(27, ci) >= 20
            || inv(3, ci) == 602 && gdata(260) <= 0)
        {
            valn = itemname(ci);
            txt(lang(valn + u8"は涸れている。"s, valn + u8" is dry."s));
            txtmore();
            txt(lang(
                u8"あっ！空き瓶を井戸に落としてしまった…"s,
                u8"Ops! You drop the empty bottle into the well..."s));
            goto label_1936_internal;
        }
        cibk = ci;
        if (inv(3, ci) == 602)
        {
            --gdata(260);
            flt();
            itemcreate(0, 516, -1, -1, 0);
            if (stat != 0)
            {
                inv(17, ci) = 1;
            }
        }
        else
        {
            inv(25, ci) -= 3;
            flt(20);
            flttypemajor = 52000;
            itemcreate(0, 0, -1, -1, 0);
        }
        txt(lang(
            u8"空き瓶に水をすくった。"s,
            u8"You draw water from the well into the empty bottle."s));
        txtef(2);
        txt(lang(
            itemname(ci, 1) + u8"を手に入れた。"s,
            u8"You get "s + itemname(ci, 1) + u8"."s));
        item_stack(0, ci, 1);
        item_stack(0, ci);
        ci = cibk;
        snd(17);
        goto label_1936_internal;
    }
label_1936_internal:
    item_stack(0, ci);
    if (inv(18, ci) != 0)
    {
        create_pcpic(0, 1);
    }
    if (inv_getowner(ci) == -1)
    {
        cell_refresh(inv(5, ci), inv(6, ci));
    }
    r1 = 0;
    label_1477();
    return;
}
std::string txtitemoncell(int prm_1055, int prm_1056)
{
    elona_vector1<int> p_at_m185;
    elona_vector1<int> i_at_m185;
    cell_itemoncell(prm_1055, prm_1056);
    if (stat <= 3)
    {
        if (map(prm_1055, prm_1056, 5) < 0)
        {
            rtvaln = "";
            p_at_m185(0) = -map(prm_1055, prm_1056, 5);
            p_at_m185(1) = 0;
            i_at_m185(0) = p_at_m185 % 1000 + 5080;
            i_at_m185(1) = p_at_m185 / 1000 % 1000 + 5080;
            i_at_m185(2) = p_at_m185 / 1000000 % 1000 + 5080;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    if (i_at_m185(cnt) == 6079)
                    {
                        continue;
                    }
                    if (p_at_m185(1) != 0)
                    {
                        rtvaln += lang(u8"と"s, u8" and "s);
                    }
                    rtvaln += itemname(i_at_m185(cnt));
                    ++p_at_m185(1);
                }
            }
        }
        else
        {
            rtvaln = itemname(rtval(1));
        }
        if (inv(21, rtval(1)) <= 0)
        {
            return lang(
                rtvaln + u8"が落ちている。"s,
                u8"You see "s + rtvaln + u8" here."s);
        }
        else
        {
            if (inv(21, rtval(1)) == 3)
            {
                return lang(
                    rtvaln + u8"が設置されている。"s,
                    ""s + rtvaln + u8" is constructed here."s);
            }
            else
            {
                return lang(
                    rtvaln + u8"がある。"s,
                    u8"You see "s + rtvaln + u8" placed here."s);
            }
        }
    }
    else
    {
        return lang(
            u8"ここには"s + rtval + u8"種類のアイテムがある。"s,
            u8"There are "s + rtval + u8" items lying here."s);
    }
}
void txttargetnpc(int prm_1057, int prm_1058, int prm_1059)
{
    int dy_at_m186 = 0;
    int i_at_m186 = 0;
    int p_at_m186 = 0;
    dy_at_m186 = 0;
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    if (prm_1059 == 0)
    {
        if (fov_los(cdata(1, 0), cdata(2, 0), prm_1057, prm_1058) == 0
            || dist(cdata(1, 0), cdata(2, 0), prm_1057, prm_1058)
                > cdata(28, 0) / 2)
        {
            pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
            ++dy_at_m186;
            color(0, 0, 0);
            bmes(
                lang(u8"視界範囲外"s, u8"This location is out of sight."s),
                255,
                2552,
                255);
            cansee = 0;
            return;
        }
    }
    if (map(prm_1057, prm_1058, 1) != 0)
    {
        i_at_m186 = map(prm_1057, prm_1058, 1) - 1;
        if (cbit(6, i_at_m186) == 0 || cbit(7, 0) || cdata(259, i_at_m186))
        {
            tc = i_at_m186;
            txttargetlevel();
            color(0, 0, 0);
            pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
            ++dy_at_m186;
            bmes(s, 255, 2552, 255);
            color(0, 0, 0);
            pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
            ++dy_at_m186;
            bmes(
                lang(u8"現在のターゲットは"s, u8"You are targeting "s)
                    + name(i_at_m186) + lang(u8" (距離 "s, u8".(Distance "s)
                    + dist(
                          cdata(1, 0),
                          cdata(2, 0),
                          cdata(1, i_at_m186),
                          cdata(2, i_at_m186))
                    + u8")"s,
                255,
                2552,
                255);
        }
    }
    if (map(prm_1057, prm_1058, 5) != 0)
    {
        color(0, 0, 0);
        pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
        ++dy_at_m186;
        bmes(txtitemoncell(prm_1057, prm_1058), 255, 2552, 255);
    }
    if (map(prm_1057, prm_1058, 6) != 0)
    {
        if (mdata(6) == 1)
        {
            if (map(prm_1057, prm_1058, 6) / 1000 % 100 == 15)
            {
                p_at_m186 = map(prm_1057, prm_1058, 6) / 100000 % 100
                    + map(prm_1057, prm_1058, 6) / 10000000 * 100;
                color(0, 0, 0);
                pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
                ++dy_at_m186;
                bmes(mapname(p_at_m186, 1), 255, 2552, 255);
            }
            if (map(prm_1057, prm_1058, 6) / 1000 % 100 == 34)
            {
                color(0, 0, 0);
                pos(100, windowh - inf_verh - 45 - dy_at_m186 * 20);
                ++dy_at_m186;
                bmes(
                    txtbuilding(
                        map(prm_1057, prm_1058, 6) / 100000 % 100,
                        map(prm_1057, prm_1058, 6) / 10000000),
                    255,
                    2552,
                    255);
            }
        }
    }
    cansee = 1;
    return;
}
int key_direction()
{
    kdx = 0;
    kdy = 0;
    if (key == key_north)
    {
        --kdy;
        stat = 1;
        return stat;
    }
    if (key == key_south)
    {
        ++kdy;
        stat = 1;
        return stat;
    }
    if (key == key_west)
    {
        --kdx;
        stat = 1;
        return stat;
    }
    if (key == key_east)
    {
        ++kdx;
        stat = 1;
        return stat;
    }
    if (key == key_northwest)
    {
        --kdx;
        --kdy;
        stat = 1;
        return stat;
    }
    if (key == key_northeast)
    {
        ++kdx;
        --kdy;
        stat = 1;
        return stat;
    }
    if (key == key_southwest)
    {
        --kdx;
        ++kdy;
        stat = 1;
        return stat;
    }
    if (key == key_southeast)
    {
        ++kdx;
        ++kdy;
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
void label_1942()
{
    if (cfg_extrahelp)
    {
        if (gdata(217) == 0)
        {
            if (mode == 0)
            {
                if (cdata(141, 0) == 0)
                {
                    gdata(217) = 1;
                    ghelp = 17;
                    label_2701();
                    screenupdate = -1;
                    label_1419();
                    label_2743(false);
                }
            }
        }
    }
    if (1 && gdata(828) == 0)
    {
        snd(44);
        label_2113();
        txtmore();
        txtef(5);
        txt(lang(u8" *保存* "s, u8"*saving*"s));
    }
    txt(lang(
        u8"あなたはゲートに足を踏み入れた。ゲートはあなたの背後で消滅した。"s,
        u8"You stepped into the gate. The gate disappears."s));
    --inv(0, ci);
    cell_refresh(inv(5, ci), inv(6, ci));
    if (cfg_net == 0)
    {
        if (jp)
        {
            txt(lang(
                u8"ネット機能をONにする必要がある。"s,
                u8"You have to turn on network setting."s));
            label_1419();
            label_2743(false);
        }
    }
    listmax = 0;
    net_dllist(u8".eum"s, 0);
    if (listmax == 0 || stat == 0)
    {
        txt(lang(
            u8"あれ…どこにも繋がっていない… "s,
            u8"Hmmm...the gate isn't connected to anywhere."s));
        label_1419();
        label_2743(false);
    }
    p = rnd(listmax);
    net_dl(""s + list(1, p) + u8".eum"s, u8"temp.eum"s);
    usermapid = list(1, p);
    if (stat == 0)
    {
        txt(lang(
            u8"ファイルの取得に失敗した。"s,
            u8"Failed to retreive designated files."s));
        label_1419();
        label_2743(false);
    }
    userfile = u8"temp.eum"s;
    bload(exedir + u8"user\\"s + userfile, headtemp, 1024);
    notesel(headtemp);
    noteget(s, 5);
    noteget(s(1), 6);
    username = ""s + s;
    userrelation = elona_int(s(1));
    msg_halt();
    label_2114();
    return;
}
int label_19432()
{
label_19431_internal:
    if (1 && gdata(828) == 0)
    {
        snd(44);
        label_2113();
        txtmore();
        txtef(5);
        txt(lang(u8" *保存* "s, u8"*saving*"s));
    }
    snd(26);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    SDIM2(headtemp, 1024);
    folder = exedir + u8"user\\"s;
    if (comctrl == 0 || comctrl == 2)
    {
        dirlist(buff, folder + u8"*.eum"s);
    }
    if (comctrl == 1)
    {
        dirlist(buff, folder + u8"*.ept"s);
    }
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
        {
            noteget(file, cnt);
            if (file == u8"temp.eum"s || file == u8"temp.ept"s)
            {
                continue;
            }
            bload(folder + file, headtemp, 1024);
            notesel(headtemp);
            noteget(s, 0);
            noteget(s(1), 1);
            noteget(s(2), 4);
            list(0, listmax) = listmax;
            list(1, listmax) = 0;
            list(2, listmax) = elona_int(s(2));
            listn(0, listmax) = u8"("s + file + u8") "s + s + u8" "s + s(1);
            listn(1, listmax) = file;
            ++listmax;
            noteunsel();
        }
    }
    if (cfg_net != 0)
    {
        if (comctrl == 1)
        {
            net_dllist(u8".ept"s, 1);
        }
        if (comctrl == 2)
        {
            net_dllist(u8".eum"s, 1);
        }
    }
    if (comctrl == 0 || comctrl == 2)
    {
        txt(lang(
            u8"どのルームを訪問する？ "s,
            u8"Which room do you want to visit? "s));
    }
    if (comctrl == 1)
    {
        txt(lang(
            u8"どのチームと対戦する？"s,
            u8"Which team do you want to play a match? "s));
    }
    windowshadow = 1;
label_1944_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1945_internal:
    redraw(0);
    if (comctrl == 0 || comctrl == 2)
    {
        s = lang(u8"ルーム一覧"s, u8"Room List"s);
    }
    if (comctrl == 1)
    {
        s = lang(u8"ペットチーム一覧"s, u8"Team List"s);
    }
    s(1) = lang(u8"BackSpace [削除]  "s, u8"BackSpace [Delete]  "s) + strhint2
        + strhint3;
    display_window((windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448);
    if (comctrl == 0 || comctrl == 2)
    {
        s = lang(u8"ルームの名称"s, u8"Name"s);
    }
    if (comctrl == 1)
    {
        s = lang(u8"チームの名称"s, u8"Name"s);
    }
    display_topic(s, wx + 28, wy + 36);
    display_topic(u8"Ver"s, wx + 534, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(540, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            s = listn(0, p);
            cutname(s, 64);
            cs_list(cnt, s, wx + 84, wy + 66 + cnt * 19 - 1, 19);
            pos(wx + 570, wy + 66 + cnt * 19);
            mes(""s + (list(2, p) % 1000 + 1) + u8".0"s);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        if (p == -999)
        {
            snd(27);
            txt(lang(
                u8"互換性のないバージョンのファイルです。"s,
                u8"Selected item is incompatible."s));
            goto label_1944_internal;
        }
        folder = exedir + u8"user\\"s;
        if (listn(1, p) == u8"net"s)
        {
            if (comctrl == 1)
            {
                s = u8".ept"s;
            }
            else
            {
                s = u8".eum"s;
            }
            net_dl(""s + list(1, p) + s, u8"temp"s + s);
            usermapid = list(1, p);
            if (stat == 0)
            {
                txt(lang(
                    u8"ファイルの取得に失敗した。"s,
                    u8"Failed to retrieve designated files."s));
                goto label_1944_internal;
            }
            userfile = u8"temp"s + s;
        }
        else
        {
            userfile = listn(1, p);
        }
        bload(folder + userfile, headtemp, 1024);
        notesel(headtemp);
        noteget(s, 5);
        noteget(s(1), 6);
        if (comctrl == 0 || comctrl == 2)
        {
            username = ""s + s;
            userrelation = elona_int(s(1));
        }
        if (comctrl == 1)
        {
            rtval(0) = elona_int(s);
            rtval(1) = elona_int(s(1));
        }
        stat = 1;
        return stat;
    }
    getkey(a, 8);
    if (ginfo(2) == 0)
    {
        if (noteinfo(0) != 0)
        {
            if (a == 1)
            {
                userfile = listn(1, cs + pagesize * page);
                exist(exedir + u8"user\\"s + userfile);
                if (strsize == -1)
                {
                    goto label_1944_internal;
                }
                txt(lang(
                    u8"本当に"s + userfile + u8"を削除する？ "s,
                    u8"Do you really want to delete "s + userfile + u8"? "s));
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                if (rtval == 0)
                {
                    elona_delete(exedir + u8"user\\"s + userfile);
                    goto label_19431_internal;
                }
                goto label_1944_internal;
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1944_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1944_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        stat = 0;
        return stat;
    }
    goto label_1945_internal;
}
int label_1947()
{
    if (tlocinitx != 0 || tlocinity != 0)
    {
        tlocx = tlocinitx;
        tlocy = tlocinity;
    }
    else
    {
        tlocx = cdata(1, cc);
        tlocy = cdata(2, cc);
    }
    if (homemapmode)
    {
        scposval = 0;
    }
    else
    {
        scposval = 1;
        if (cdata(29, 0) == 0)
        {
            label_2072();
        }
        label_2076();
        if (listmax == 0)
        {
            txt(lang(
                u8"視界内にターゲットは存在しない。"s,
                u8"You look around and find nothing."s));
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (list(0, cnt) == 0)
                {
                    continue;
                }
                if (list(0, cnt) == cdata(29, 0))
                {
                    tlocx = cdata(1, list(0, cnt));
                    tlocy = cdata(2, list(0, cnt));
                    break;
                }
            }
        }
    }
label_1948_internal:
    screenupdate = -1;
    label_1419();
    dx = (tlocx - scx) * inf_tiles + inf_screenx;
    dy = (tlocy - scy) * inf_tiles + inf_screeny;
    if (dy + inf_tiles <= windowh - inf_verh)
    {
        pos(dx, dy * (dy > 0));
        gfini(
            inf_tiles - (dx + inf_tiles > windoww) * (dx + inf_tiles - windoww),
            inf_tiles + (dy < 0) * inf_screeny
                - (dy + inf_tiles > windowh - inf_verh)
                    * (dy + inf_tiles - windowh + inf_verh));
        gfinc(50, 50, 100);
    }
    if (homemapmode == 1)
    {
        pos(windoww - 80, 20);
        gcopy(
            2,
            tile % 33 * inf_tiles,
            tile / 33 * inf_tiles,
            inf_tiles,
            inf_tiles);
    }
    else
    {
        rc = -1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (map(tlocx, tlocy, 1) <= 1)
                {
                    break;
                }
                rc = map(tlocx, tlocy, 1) - 1;
                if (synccheck(rc, -1) == 0)
                {
                    break;
                }
                if (fov_los(
                        cdata(1, cc), cdata(2, cc), cdata(1, rc), cdata(2, rc))
                    == 0)
                {
                    break;
                }
                if ((cbit(6, rc) == 0 || cbit(7, 0) || cdata(259, rc)) == 0)
                {
                    break;
                }
                get_route(
                    cdata(1, cc), cdata(2, cc), cdata(1, rc), cdata(2, rc));
                dx = (tlocx - scx) * inf_tiles + inf_screenx;
                dy = (tlocy - scy) * inf_tiles + inf_screeny;
                if (maxroute != 0)
                {
                    dx = cdata(1, cc);
                    dy = cdata(2, cc);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
                        {
                            route_info(dx, dy, cnt);
                            if (stat == 0)
                            {
                                break;
                            }
                            else
                            {
                                if (stat == -1)
                                {
                                    continue;
                                }
                            }
                            sx = (dx - scx) * inf_tiles + inf_screenx;
                            sy = (dy - scy) * inf_tiles + inf_screeny;
                            if (sy + inf_tiles <= windowh - inf_verh)
                            {
                                pos(sx, sy * (sy > 0));
                                gfini(
                                    inf_tiles
                                        - (sx + inf_tiles > windoww)
                                            * (sx + inf_tiles - windoww),
                                    inf_tiles + (sy < 0) * inf_screeny
                                        - (sy + inf_tiles > windowh - inf_verh)
                                            * (sy + inf_tiles - windowh
                                               + inf_verh));
                                gfinc(25, 25, 25);
                            }
                        }
                    }
                }
            }
        }
    }
    txttargetnpc(tlocx, tlocy);
    redraw(1);
    await(cfg_wait1);
    key_check();
    if (homemapmode == 1)
    {
        if (key == key_enter)
        {
            label_1955();
            keyrelease();
            goto label_1948_internal;
        }
        stick(a, 768);
        if (a == 256)
        {
            key = key_enter;
        }
        if (a == 512)
        {
            if (chipm(0, map(tlocx, tlocy, 0)) == 2
                || chipm(0, map(tlocx, tlocy, 0)) == 1)
            {
                snd(27);
                keyrelease();
                goto label_1948_internal;
            }
            tile = map(tlocx, tlocy, 0);
            snd(5);
            keyrelease();
        }
        tx = limit((mousex - inf_screenx), 0, windoww) / 48;
        ty = limit((mousey - inf_screeny), 0, (windowh - inf_verh)) / 48;
        key_direction();
        if (stat == 1)
        {
            cdata(1, 0) += kdx;
            cdata(2, 0) += kdy;
            if (cdata(1, 0) < 0)
            {
                cdata(1, 0) = 0;
            }
            else
            {
                if (cdata(1, 0) >= mdata(0))
                {
                    cdata(1, 0) = mdata(0) - 1;
                }
            }
            if (cdata(2, 0) < 0)
            {
                cdata(2, 0) = 0;
            }
            else
            {
                if (cdata(2, 0) >= mdata(1))
                {
                    cdata(2, 0) = mdata(1) - 1;
                }
            }
        }
        tlocx = tx + scx;
        if (tlocx < 0)
        {
            tlocx = 0;
        }
        else
        {
            if (tlocx >= mdata(0))
            {
                tlocx = mdata(0) - 1;
            }
        }
        tlocy = ty + scy;
        if (tlocy < 0)
        {
            tlocy = 0;
        }
        else
        {
            if (tlocy >= mdata(1))
            {
                tlocy = mdata(1) - 1;
            }
        }
    }
    else
    {
        key_direction();
        if (stat == 1)
        {
            x = tlocx + kdx;
            y = tlocy + kdy;
            if (x >= 0 && y >= 0 && x < mdata(0) && y < mdata(1))
            {
                tlocx += kdx;
                tlocy += kdy;
            }
        }
    }
    if (findlocmode == 1)
    {
        if (rc == -1)
        {
            i = 0;
        }
        else
        {
            i = rc;
        }
        f = 0;
        p = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (cdata(1, list(0, cnt)) == cdata(1, i))
                {
                    if (cdata(2, list(0, cnt)) == cdata(2, i))
                    {
                        p = cnt;
                        break;
                    }
                }
            }
        }
        if (key == key_pageup)
        {
            ++p;
            f = 1;
            if (p >= listmax)
            {
                p = 0;
            }
        }
        if (key == key_pagedown)
        {
            --p;
            f = 1;
            if (p < 0)
            {
                p = listmax - 1;
                if (p < 0)
                {
                    p = 0;
                }
            }
        }
        i = list(0, p);
        if (f)
        {
            snd(5);
            tlocx = cdata(1, list(0, p));
            tlocy = cdata(2, list(0, p));
        }
    }
    if (key == key_enter)
    {
        if (findlocmode == 1)
        {
            if (cansee == 0 || chipm(7, map(tlocx, tlocy, 0)) && 4)
            {
                txt(lang(
                    u8"その場所は見えない。"s,
                    u8"You can't see the location."s));
                goto label_1948_internal;
            }
            snd(20);
            if (rc > 0)
            {
                cdata(29, 0) = rc;
                txt(lang(
                    name(rc) + u8"をターゲットにした。"s,
                    u8"You target "s + name(rc) + u8"."s));
            }
            else
            {
                tgloc = 1;
                tglocx = tlocx;
                tglocy = tlocy;
                txt(lang(
                    u8"地面をターゲットにした。"s,
                    u8"You target the ground."s));
            }
        }
        else
        {
            if (homemapmode == 0)
            {
                snd(5);
            }
        }
        scposval = 0;
        if (tlocinitx == 0 && tlocinity == 0)
        {
            scposval = 0;
            label_1419();
        }
        tlocinitx = 0;
        tlocinity = 0;
        stat = cansee;
        return stat;
    }
    if (key == key_cancel)
    {
        tlocinitx = 0;
        tlocinity = 0;
        scposval = 0;
        label_1419();
        stat = -1;
        return stat;
    }
    goto label_1948_internal;
}
void label_1951()
{
    page = 0;
    pagesize = 16;
    cs_bk = -1;
    label_2076();
    if (listmax == 0)
    {
        ++msgdup;
        txt(lang(
            u8"視界内にターゲットは存在しない。"s,
            u8"You look around and find nothing."s));
        label_1419();
        label_2743(false);
    }
    cs = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            if (list(0, cnt) == cdata(29, 0))
            {
                cs = cnt % pagesize;
                page = cnt / pagesize;
            }
        }
    }
label_1952_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1953_internal:
    if (cs != cs_bk)
    {
        screenupdate = -1;
        label_1419();
        keyrange = 0;
        font(lang(cfg_font1, cfg_font2), 20 - en * 2, 1);
        color(255, 255, 255);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
            {
                p = pagesize * page + cnt;
                if (p >= listmax)
                {
                    break;
                }
                key_list(cnt) = key_select(cnt);
                ++keyrange;
                x = list(1, p) - scx;
                y = list(2, p) - scy;
                if (cs == cnt)
                {
                    i = p;
                    get_route(
                        cdata(1, cc),
                        cdata(2, cc),
                        cdata(1, list(0, p)),
                        cdata(2, list(0, p)));
                    dx = (tlocx - scx) * inf_tiles + inf_screenx;
                    dy = (tlocy - scy) * inf_tiles + inf_screeny;
                    if (maxroute != 0)
                    {
                        dx = cdata(1, cc);
                        dy = cdata(2, cc);
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (100); cnt < cnt_end;
                                 ++cnt)
                            {
                                route_info(dx, dy, cnt);
                                if (stat == 0)
                                {
                                    break;
                                }
                                else
                                {
                                    if (stat == -1)
                                    {
                                        continue;
                                    }
                                }
                                sx = (dx - scx) * inf_tiles + inf_screenx;
                                sy = (dy - scy) * inf_tiles + inf_screeny;
                                if (sy + inf_tiles <= windowh - inf_verh)
                                {
                                    pos(sx, sy * (sy > 0));
                                    gfini(
                                        inf_tiles
                                            - (sx + inf_tiles > windoww)
                                                * (sx + inf_tiles - windoww),
                                        inf_tiles + (sy < 0) * inf_screeny
                                            - (sy + inf_tiles
                                               > windowh - inf_verh)
                                                * (sy + inf_tiles - windowh
                                                   + inf_verh));
                                    gfinc(25, 25, 25);
                                }
                                await();
                            }
                        }
                    }
                    sx = x * inf_tiles + inf_screenx;
                    sy = y * inf_tiles + inf_screeny;
                    if (sy + inf_tiles <= windowh - inf_verh)
                    {
                        pos(sx, sy * (sy > 0));
                        gfini(
                            inf_tiles,
                            inf_tiles + (sy < 0) * inf_screeny
                                - (sy + inf_tiles > windowh - inf_verh)
                                    * (sy + inf_tiles - windowh + inf_verh));
                        gfinc(50, 50, 100);
                    }
                }
                display_key(
                    x * inf_tiles + inf_screenx - 12, y * inf_tiles - 12, cnt);
            }
        }
        txttargetnpc(cdata(1, list(0, i)), cdata(2, list(0, i)));
        cs_bk = cs;
        label_1421();
        redraw(1);
    }
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == key_target)
    {
        key = key_list(cs);
    }
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        cdata(29, 0) = p;
        snd(20);
        txt(lang(
            name(p) + u8"をターゲットにした。"s,
            u8"You target "s + name(p) + u8"."s));
        label_1419();
        label_2743(false);
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1952_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1952_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        label_2743(false);
    }
    goto label_1953_internal;
}
void label_1955()
{
    ww = 33;
    wh = 20;
    wx = 0;
    wy = 0;
    snd(26);
label_1956_internal:
    redraw(0);
    gmode(0);
    color(200, 200, 200);
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (wh); cnt < cnt_end; ++cnt)
        {
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (ww); cnt < cnt_end; ++cnt)
                {
                    if (p < listmax)
                    {
                        pos(wx + cnt * 24, wy + cnt2 * 24);
                        gzoom(
                            24,
                            24,
                            2,
                            list(0, p) % ww * 48,
                            list(0, p) / ww * 48,
                            48,
                            48);
                        if (chipm(7, list(0, p)) && 4)
                        {
                            color(240, 230, 220);
                            boxl(
                                wx + cnt * 24,
                                wy + cnt2 * 24,
                                wx + cnt * 24 + 24,
                                wy + cnt2 * 24 + 24);
                        }
                    }
                    ++p;
                }
            }
        }
    }
    gmode(2);
    redraw(1);
    await(cfg_wait1);
    stick(a);
    if (a == 256)
    {
        p = mousex / 24 + mousey / 24 * ww;
        if (p >= listmax)
        {
            snd(27);
            goto label_1956_internal;
        }
        tile = list(0, p);
        snd(20);
        label_1958();
        return;
    }
    if (a == 512)
    {
        label_1958();
        return;
    }
    goto label_1956_internal;
}
void label_1958()
{
    screenupdate = -1;
    label_1419();
    return;
}
int label_1959()
{
    snd(26);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    if (allyctrl == 2)
    {
        list(0, listmax) = 99;
        list(1, listmax) = -9999;
        ++listmax;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                continue;
            }
            if (allyctrl == 1)
            {
                if (cdata(0, cnt) == 6)
                {
                    continue;
                }
            }
            if (allyctrl == 3 || allyctrl == 5)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
            }
            if (allyctrl == 5)
            {
                if (cnt == rc)
                {
                    continue;
                }
            }
            if (cdata(80, cnt) != 0)
            {
                if (allyctrl == 1 || allyctrl == 2)
                {
                    continue;
                }
            }
            if (allyctrl != 1)
            {
                if (cbit(963, cnt) == 1)
                {
                    continue;
                }
            }
            if (cbit(975, cnt))
            {
                continue;
            }
            if (cnt == 0)
            {
                continue;
            }
            list(0, listmax) = cnt;
            list(1, listmax) = -cdata(38, cnt);
            ++listmax;
        }
    }
    label_2056();
    if (allyctrl == 2)
    {
        p = 0;
        DIM2(followerin, 16);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (cnt == 0)
                {
                    continue;
                }
                i = list(0, cnt);
                if (cdata(0, i) != 6)
                {
                    followerin(i) = 1;
                    ++p;
                    if (p == arenaop(1))
                    {
                        break;
                    }
                }
            }
        }
    }
    windowshadow = 1;
label_1960_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
            txtnew();
        }
    }
    if (allyctrl == 0)
    {
        txt(lang(u8"誰を呼び戻す？"s, u8"Call who?"s));
        s(10) = lang(u8"呼び戻す仲間"s, u8"Ally List"s);
        s(11) = strhint2 + strhint3;
        s(12) = lang(u8"仲間の情報"s, u8"Name"s);
        s(13) = lang(u8"状態"s, u8"Status"s);
        x = 0;
    }
    if (allyctrl == 1)
    {
        txt(lang(u8"誰を売り飛ばす？"s, u8"Sell who?"s));
        s(10) = lang(u8"売り飛ばす仲間"s, u8"Ally List"s);
        s(11) = strhint2 + strhint3;
        s(12) = lang(u8"仲間の情報"s, u8"Name"s);
        s(13) = lang(u8"値段"s, u8"Value"s);
        x = 20;
    }
    if (allyctrl == 2)
    {
        i = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                i += followerin(cnt) == 1;
            }
        }
        if (i < arenaop(1))
        {
            txtef(3);
        }
        else
        {
            txtef(4);
        }
        txt(lang(u8"試合の規定人数: "s, u8"Participant: "s) + i + u8" / "s
            + arenaop(1));
        s(10) = lang(u8"出場する仲間"s, u8"Ally List"s);
        s(11) = strhint2 + strhint3;
        s(12) = lang(u8"仲間の情報"s, u8"Name"s);
        s(13) = lang(u8"状態"s, u8"Status"s);
        x = 20;
    }
    if (allyctrl == 3)
    {
        if (adata(16, gdata(20)) == 102)
        {
            txt(lang(
                u8"誰を店長にする？"s, u8"Who takes the role of shopkeeper?"s));
            s(10) = lang(u8"店長候補"s, u8"Ally List"s);
            s(11) = strhint2 + strhint3;
            s(12) = lang(u8"仲間の情報"s, u8"Name"s);
            s(13) = lang(u8"魅力/交渉"s, u8"CHR/Negotiation"s);
        }
        if (adata(16, gdata(20)) == 31)
        {
            txt(lang(
                u8"誰をブリーダーにする？"s,
                u8"Who takes the role of breeder?"s));
            s(10) = lang(u8"ブリーダー候補"s, u8"Ally List"s);
            s(11) = strhint2 + strhint3;
            s(12) = lang(u8"仲間の情報"s, u8"Name"s);
            s(13) = lang(u8"繁殖力"s, u8"Breed Power"s);
        }
        if (gdata(20) == 7)
        {
            txt(lang(u8"誰を滞在させる？"s, u8"Who stays in your home?"s));
            s(10) = lang(u8"滞在状態の変更"s, u8"Ally List"s);
            s(11) = strhint2 + strhint3;
            s(12) = lang(u8"仲間の情報"s, u8"Name"s);
            s(13) = lang(u8"状態"s, u8"Status"s);
        }
        x = 20;
    }
    if (allyctrl == 4 || allyctrl == 5)
    {
        txt(lang(u8"対象にする仲間は？"s, u8"Who is the subject?"s));
        s(10) = lang(u8"仲間"s, u8"Ally List"s);
        s(11) = strhint2 + strhint3;
        s(12) = lang(u8"仲間の情報"s, u8"Name"s);
        s(13) = lang(u8"状態"s, u8"Status"s);
        if (allyctrl == 5)
        {
            if (rc != 0)
            {
                s(13) = lang(u8"獲得部位/技能"s, u8"Body/Skill"s);
            }
        }
        x = 0;
    }
label_1961_internal:
    redraw(0);
    s(0) = s(10);
    s(1) = s(11);
    display_window((windoww - 620) / 2 + inf_screenx, winposy(400), 620, 400);
    display_topic(s(12), wx + 28, wy + 36);
    display_topic(s(13), wx + 350 + x, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(500, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            if (list(0, p) != 99)
            {
                i(0) = cdata(7, list(0, p)) % 1000;
                i(1) = cdata(7, list(0, p)) / 1000;
                chara_preparepic(i, i(1));
                pos(wx + 40, wy + 74 + cnt * 19 - 8);
                gmode(2, chipc(2, i), chipc(3, i));
                grotate(
                    5,
                    0,
                    960,
                    0,
                    chipc(2, i) / (1 + (chipc(3, i) > inf_tiles)),
                    inf_tiles);
            }
            i = list(0, p);
            if (i == 99)
            {
                cs_list(
                    cnt,
                    lang(u8"決定"s, u8"Proceed"s),
                    wx + 84,
                    wy + 66 + cnt * 19 - 1,
                    19);
                continue;
            }
            if (allyctrl == 0 || allyctrl == 2 || allyctrl == 3 || allyctrl == 4
                || allyctrl == 5)
            {
                s = ""s + cdatan(1, i) + u8" "s + cdatan(0, i);
                if (cdata(80, i) != 0)
                {
                    s = s + u8"("s + mapname(cdata(80, i)) + u8")"s;
                }
                if (allyctrl == 2)
                {
                    if (followerin(i) == 1)
                    {
                        s += lang(u8" *出場* "s, u8" *In* "s);
                    }
                }
                n = 0;
                if (allyctrl == 5)
                {
                    if (cdata(38, i) > sdata(151, 0) + 5)
                    {
                        n = 3;
                    }
                }
                cs_list(cnt, s, wx + 84, wy + 66 + cnt * 19 - 1, 19, 0, n);
                if (allyctrl != 3 || allyctrl == 3 && gdata(20) == 7)
                {
                    s = u8"Lv."s + cdata(38, i) + u8" "s;
                    if (cdata(0, i) == 6)
                    {
                        s += lang(u8"(死んでいる)"s, u8"(Dead"s);
                    }
                    if (cdata(0, i) == 7)
                    {
                        if (allyctrl == 0)
                        {
                            s += lang(u8"(待機している)"s, u8"(Waiting)"s);
                        }
                        else
                        {
                            s += u8"(Hp: "s + cdata(50, i) * 100 / cdata(51, i)
                                + u8"%) "s + lang(u8"待機"s, u8"Waiting"s);
                        }
                    }
                    if (cdata(0, i) == 1)
                    {
                        if (allyctrl == 0)
                        {
                            s += lang(u8"(生きている)"s, u8"(Alive)"s);
                        }
                        else
                        {
                            s += u8"(Hp: "s + cdata(50, i) * 100 / cdata(51, i)
                                + u8"%)"s;
                        }
                    }
                }
                else
                {
                    if (adata(16, gdata(20)) == 102)
                    {
                        s = u8"   "s + sdata(17, i) + u8" / "s + sdata(156, i);
                    }
                    if (adata(16, gdata(20)) == 31)
                    {
                        s = u8"   "s + cbreeder(i);
                    }
                }
                if (allyctrl == 5)
                {
                    if (rc != 0)
                    {
                        tc = i;
                        label_2231();
                        if (stat == -1)
                        {
                            s = lang(u8"なし"s, u8"None"s);
                        }
                        else
                        {
                            s = bodyn(rtval);
                        }
                        s += u8"/"s;
                        label_2230();
                        if (stat == 0)
                        {
                            s += lang(u8"なし"s, u8"None"s);
                        }
                        else
                        {
                            s += ""s + skillname(rtval);
                            if (rtval(1) != -1)
                            {
                                s += u8", "s + skillname(rtval(1));
                            }
                        }
                    }
                }
                pos(wx + 370, wy + 66 + cnt * 19 + 2);
                mes(s);
            }
            if (allyctrl == 1)
            {
                s = ""s + cdatan(1, i) + u8" "s + cdatan(0, i);
                s += u8" Lv."s + cdata(38, i);
                cs_list(cnt, s, wx + 84, wy + 66 + cnt * 19 - 1, 19);
                s = ""s + calcslavevalue(i) * 2 / 3 + strgold;
                pos(wx + 390, wy + 66 + cnt * 19 + 2);
                mes(s);
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        if (allyctrl == 5)
        {
            if (cdata(38, p) > sdata(151, 0) + 5)
            {
                snd(27);
                txt(lang(
                    u8"遺伝子学のスキルが足りない。"s,
                    u8"You need to be a better gene engineer."s));
                goto label_1960_internal;
            }
        }
        if (allyctrl == 2)
        {
            i = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (followerin(cnt) == 1)
                    {
                        ++i;
                    }
                }
            }
            if (p == 99)
            {
                if (i == 0)
                {
                    txt(lang(
                        u8"最低でも一人の参加者が必要だ。"s,
                        u8"You need at least 1 pet to start the battle."s));
                    snd(27);
                    goto label_1961_internal;
                }
                snd(20);
                stat = 1;
                return stat;
            }
            if (cdata(0, p) == 6)
            {
                txt(lang(
                    u8"死んでいる。"s, he(p) + u8" "s + is(p) + u8" dead."s));
                snd(27);
                goto label_1961_internal;
            }
            if (followerin(p) == 0)
            {
                if (i >= arenaop(1))
                {
                    snd(27);
                    txt(lang(
                        u8"参加枠を超えている。"s,
                        u8"Too many participants."s));
                    goto label_1961_internal;
                }
                else
                {
                    followerin(p) = 1;
                    snd(20);
                }
            }
            else
            {
                followerin(p) = 0;
                snd(20);
            }
            goto label_1960_internal;
        }
        stat = p;
        return stat;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1960_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1960_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_1961_internal;
}
void label_1964()
{
    if (rc < 0)
    {
        rc = tc;
        if (rc < 0)
        {
            rc = 0;
        }
    }
    listmax = 0;
    page = 0;
    pagesize = 14;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    snd(26);
    buff = "";
    notesel(buff);
    del_chara(56);
    r1 = 56;
    cdata(62, r1) = cdata(62, 0);
    cdata(61, r1) = cdata(61, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
        {
            sdata(cnt, rc) = 1;
        }
    }
    label_1884();
    if (cdata(61, 0) != 0)
    {
        buff += u8"<title1>◆ "s + godname(cdata(61, 0))
            + u8"による能力の恩恵<def>\n"s;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
            {
                p = sdata(cnt, rc) - 1;
                cnvbonus(cnt, p);
            }
        }
    }
    r1 = 0;
    refreshmode = 1;
    label_1477();
    refreshmode = 0;
    buff += u8"\n"s;
    buff += u8"<title1>◆ 特徴と特殊状態による能力の恩恵<def>\n"s;
    listmax = noteinfo(0);
label_1965_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    s(0) = u8"自己の分析"s;
    s(1) = strhint2 + strhint3b;
    display_window((windoww - 400) / 2 + inf_screenx, winposy(448), 400, 448);
    s = u8"分析結果"s;
    display_topic(s, wx + 28, wy + 36);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            noteget(s, p);
            gmesx = wx + 40;
            gmesy = wy + 66 + cnt * 19 + 2;
            gmesw = 600;
            gmescol(0) = 30;
            gmescol(1) = 30;
            gmescol(2) = 30;
            gmestype = 0;
            pos(wx + 54, wy + 66 + cnt * 19 + 2);
            gmes(s);
        }
    }
    redraw(1);
label_1966_internal:
    redraw(0);
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1965_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1965_internal;
        }
    }
    if (key == key_cancel)
    {
        return;
    }
    goto label_1966_internal;
}
void label_19672()
{
label_19671:
    label_1968();
    label_196902();
    return;
}
void label_1969()
{
    label_196902();
    return;
}
void label_1968()
{
    listmax = 0;
    page = 0;
    pagesize = 15;
    cs = 0;
    tc = 0;
    cs_bk = -1;
    curmenu = 2;
    snd(96);
    drawmenu();
    ww = 700;
    wh = 400;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
    windowanime(wx, wy, ww, wh, 10, 4);
    redraw(0);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_feat.bmp"s, 1);
    gsel(0);
    windowshadow = 1;
    return;
}
int label_196902()
{
label_196901_internal:
    listmax = 0;
    if (gdata(93) > 0)
    {
        list(0, listmax) = -1;
        list(1, listmax) = 0;
        ++listmax;
    }
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (217); cnt < cnt_end; ++cnt)
        {
            if (tc != 0)
            {
                break;
            }
            traitmode = 0;
            tid = cnt;
            label_0042();
            if (stat == 0)
            {
                continue;
            }
            if (stat == 1)
            {
                if (traitref == 0)
                {
                    if (gdata(93) > 0)
                    {
                        list(0, listmax) = cnt;
                        list(1, listmax) = cnt + 1;
                        ++listmax;
                    }
                }
            }
            if (trait(cnt) != 0)
            {
                list(0, listmax) = cnt;
                list(1, listmax) = 10000 + cnt + 1;
                ++listmax;
                ++f;
            }
        }
    }
    if (f != 0)
    {
        list(0, listmax) = -2;
        list(1, listmax) = 10000;
        ++listmax;
    }
    label_2056();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            i = list(0, cnt);
            if (i < 0)
            {
                if (i == -1)
                {
                    if (jp)
                    {
                        s = u8"◆ 取得できるフィート"s;
                    }
                    else
                    {
                        s = u8"[Available feats]"s;
                    }
                }
                if (i == -2)
                {
                    if (jp)
                    {
                        s = u8"◆ 特徴と体質"s;
                    }
                    else
                    {
                        s = u8"[Feats and traits]"s;
                    }
                }
                listn(0, cnt) = s;
                continue;
            }
            tid = i;
            traitmode = 0;
            label_0042();
            featrq = stat;
            s = "";
            if (list(1, cnt) < 10000)
            {
                if (trait(tid) < traitref(2))
                {
                    s = traitrefn2(trait(tid));
                }
                else
                {
                    s = traitrefn2(traitref(2) - 1) + u8"(MAX)"s;
                }
                if (featrq == -1)
                {
                    if (jp)
                    {
                        s += u8"(条件不足)"s;
                    }
                    else
                    {
                        s += u8"(requirement)"s;
                    }
                }
                pos(wx + 30, wy + 61 + cnt * 19);
                x = 84;
            }
            else
            {
                pos(wx + 45, wy + 61 + cnt * 19);
                x = 70;
                if (traitref == 0)
                {
                    if (jp)
                    {
                        s = u8"[フィート]"s;
                    }
                    else
                    {
                        s = u8"[Feat]"s;
                    }
                }
                if (traitref == 1)
                {
                    if (jp)
                    {
                        s = u8"[変異]"s;
                    }
                    else
                    {
                        s = u8"[Mutation]"s;
                    }
                }
                if (traitref == 2)
                {
                    if (jp)
                    {
                        s = u8"[先天]"s;
                    }
                    else
                    {
                        s = u8"[Race]"s;
                    }
                }
                if (traitref == 3)
                {
                    if (jp)
                    {
                        s = u8"[ｴｰﾃﾙ病]"s;
                    }
                    else
                    {
                        s = u8"[Disease]"s;
                    }
                }
                s += traitrefn(2 + abs(trait(tid)));
            }
            listn(0, cnt) = s;
        }
    }
    r1 = tc;
    if (cdata(158, r1) == 0)
    {
        label_2295();
    }
    if (cbit(16, tc) == 1)
    {
        list(0, listmax) = 1;
        list(1, listmax) = 99999;
        listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
            + lang(u8"あなたは変装している"s,
                   u8"You are disguising yourself."s);
        ++listmax;
    }
    if (cbit(978, tc) == 1)
    {
        list(0, listmax) = 1;
        list(1, listmax) = 99999;
        listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
            + lang(u8"あなたは寄生されている"s, u8"You are pregnant."s);
        ++listmax;
    }
    if (cbit(986, tc) == 1)
    {
        list(0, listmax) = 1;
        list(1, listmax) = 99999;
        listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
            + lang(u8"あなたは拒食症だ"s, u8"You have anorexia."s);
        ++listmax;
    }
    if (cdata(68, tc) != 0)
    {
        list(0, listmax) = 1;
        list(1, listmax) = 99999;
        listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
            + lang((u8"あなたは複雑な体をしている[速度-"s + cdata(68, tc)
                    + u8"%]"s),
                   (u8"Your body is complicated. [SPD-"s + cdata(68, tc)
                    + u8"%]"s));
        ++listmax;
    }
    if (gdata(800) != 0)
    {
        if (gdata(800) > 0)
        {
            list(0, listmax) = 1;
            list(1, listmax) = 99999;
            listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
                + lang(u8"あなたのエーテル病の進行は早い。"s,
                       u8"Your Ether disease grows fast."s);
            ++listmax;
        }
        else
        {
            list(0, listmax) = 1;
            list(1, listmax) = 99999;
            listn(0, listmax) = lang(u8"[その他]"s, u8"[ETC]"s)
                + lang(u8"あなたのエーテル病の進行は遅い。"s,
                       u8"Your Ether disease grows slow."s);
            ++listmax;
        }
    }
    if (dump_return == 1)
    {
        dump_return = 0;
        stat = 0;
        return stat;
    }
    xnotesel(buff);
    buff = "";
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, tc) % 10000 != 0)
            {
                ci = cdata(cnt, tc) % 10000 - 1;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                {
                    if (inv(40 + cnt * 2, ci) == 0)
                    {
                        break;
                    }
                    val(0) = inv(40 + cnt * 2, ci);
                    val(1) = inv(40 + cnt * 2 + 1, ci);
                    val(2) = 1;
                    val(3) = 0;
                    label_0247();
                    if (s == ""s)
                    {
                        continue;
                    }
                    xnoteadd(s);
                }
            }
        }
    }
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            list(0, listmax) = 1;
            list(1, listmax) = 99999;
            listn(0, listmax) = lang(
                                    his(tc, 1) + u8"装備は"s,
                                    cnven(his(tc, 1)) + u8" equipment "s)
                + s;
            ++listmax;
        }
    }
    if (tc != 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (jp)
                {
                    cnv_str(listn(0, cnt), u8"あなた"s, he(tc, 1));
                }
                if (en)
                {
                    cnv_str(listn(0, cnt), u8" your"s, his(tc, 1));
                    cnv_str(listn(0, cnt), u8" you"s, him(tc, 1));
                }
            }
        }
    }
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    if (cs < 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
            {
                if (list(1, cnt) >= 10000)
                {
                    if (list(0, cnt) - 10000 == cs)
                    {
                        page = cnt / pagesize;
                        cs = cnt % pagesize;
                        break;
                    }
                }
            }
        }
        if (cs < 0)
        {
            cs = 0;
        }
    }
label_1970_internal:
    redraw(0);
    s(0) = lang(u8"特徴と体質"s, u8"Feats and Traits"s);
    s(1) = lang(
               u8"決定 [フィート取得]  "s + strhint2 + strhint3,
               u8"Enter [Gain Feat]  "s + strhint2 + strhint3)
        + u8"z,x ["s + lang(u8"仲間"s, u8"Ally"s) + u8"]"s;
    if (mode == 1)
    {
        i = 1;
    }
    else
    {
        i = 0;
    }
    display_window(
        (windoww - 730) / 2 + inf_screenx,
        winposy(430, i) + i * 15,
        730,
        430,
        55,
        40);
    if (jp)
    {
        s(0) = u8"特徴の名称"s;
        s(1) = u8"段階"s;
        s(2) = u8"特徴の効果"s;
    }
    else
    {
        s(0) = u8"Name"s;
        s(1) = u8"Level"s;
        s(2) = u8"Detail"s;
    }
    display_topic(s, wx + 46, wy + 36);
    display_topic(s(2), wx + 255, wy + 36);
    pos(wx + 46, wy - 16);
    gcopy(3, 816, 48, 48, 48);
    pos(wx + ww - 56, wy + wh - 198);
    gcopy(3, 960, 96, 48, 192);
    pos(wx, wy);
    gcopy(3, 1008, 96, 48, 144);
    pos(wx + ww - 108, wy);
    gcopy(3, 960, 288, 96, 72);
    pos(wx, wy + wh - 70);
    gcopy(3, 1008, 240, 96, 48);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (list(0, p) < 0)
            {
                continue;
            }
            if (cnt % 2 == 0)
            {
                pos(wx + 57, wy + 66 + cnt * 19);
                gfini(640, 18);
                gfdec2(12, 14, 16);
            }
            if (list(1, p) >= 10000 || list(0, p) < 0)
            {
                continue;
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    if (tc == 0)
    {
        s = lang(
            u8"残り "s + gdata(93) + u8"個のフィートを取得できる"s,
            u8"You can acquire "s + gdata(93) + u8" feats"s);
    }
    else
    {
        s = cnven(cdatan(0, tc)) + lang(u8"の特性"s, u8"'s Trait"s);
    }
    display_note(s, 50);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            if (i < 0)
            {
                color(0, 0, 0);
                cs_list(
                    cnt,
                    listn(0, p),
                    wx + 114,
                    wy + 66 + cnt * 19 - 1,
                    19,
                    0,
                    -1);
                continue;
            }
            if (list(1, p) != 99999)
            {
                tid = i;
                traitmode = 0;
                label_0042();
                featrq = stat;
                if (trait(tid) == 0)
                {
                    color(0, 0, 0);
                }
                else
                {
                    if (trait(tid) > 0)
                    {
                        color(0, 0, 200);
                    }
                    else
                    {
                        color(200, 0, 0);
                    }
                }
            }
            else
            {
                traitref = 5;
                color(0, 0, 0);
            }
            if (list(1, p) < 10000)
            {
                pos(wx + 30, wy + 61 + cnt * 19);
                x = 84;
            }
            else
            {
                pos(wx + 45, wy + 61 + cnt * 19);
                x = 70;
            }
            gcopy(3, 384 + traitref * 24, 336, 24, 24);
            cs_list(
                cnt, listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, -1);
            if (list(1, p) < 10000)
            {
                pos(wx + 270, wy + 66 + cnt * 19 + 2);
                mes(traitrefn(2));
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = pagesize * page + cnt;
                break;
            }
        }
    }
    if (tc == 0)
    {
        if (gdata(93) > 0)
        {
            if (p > 0)
            {
                if (list(1, p) < 10000)
                {
                    tid = list(0, p);
                    traitmode = 0;
                    label_0042();
                    if (traitref(2) <= trait(tid))
                    {
                        if (mode != 1)
                        {
                            txt(lang(
                                u8"これ以上取得できない。"s,
                                u8"You already have maxed out the feat."s));
                        }
                        goto label_196901_internal;
                    }
                    --gdata(93);
                    cs = -10000 + tid;
                    snd(61);
                    ++trait(tid);
                    r1 = tc;
                    label_1477();
                    if (mode == 1)
                    {
                        if (gdata(93) == 0)
                        {
                            stat = 1;
                            return stat;
                        }
                    }
                    else
                    {
                        redraw(0);
                        label_1421();
                    }
                    goto label_196901_internal;
                }
            }
        }
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 3)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 3;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    csctrl = 0;
                    label_20332();
                    stat = 0;
                    return stat;
                }
                if (curmenu == 1)
                {
                    label_2050();
                    stat = 0;
                    return stat;
                }
                if (curmenu == 2)
                {
                    label_19672();
                    stat = 0;
                    return stat;
                }
                if (curmenu == 3)
                {
                    label_1859();
                    stat = 0;
                    return stat;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_196901_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_196901_internal;
        }
    }
    if (key == u8"z"s || key == u8"x"s)
    {
        p = tc;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (key == u8"z"s)
                {
                    --p;
                    if (p < 0)
                    {
                        p = 15;
                    }
                }
                if (key == u8"x"s)
                {
                    ++p;
                    if (p == 16)
                    {
                        p = 0;
                    }
                }
                if (cdata(0, p) != 1)
                {
                    continue;
                }
                break;
            }
        }
        tc = p;
        snd(1);
        page = 0;
        cs = 0;
        goto label_196901_internal;
    }
    if (key == key_cancel)
    {
        if (mode == 1)
        {
            stat = 0;
            return stat;
        }
        label_1419();
        label_2743(false);
    }
    if (mode == 1)
    {
        getkey(p, 112);
        if (p)
        {
            label_2703();
            stat = -1;
            return stat;
        }
    }
    goto label_1970_internal;
}
void label_1972()
{
    curmenu = 1;
    listmax = 0;
    page = 99;
    pagesize = 40;
    cs = 0;
    cc = 0;
    listmax = noteinfo(0);
    keyrange = 0;
    key_list(0) = key_enter;
    buff = newsbuff;
    if (newsbuff == ""s)
    {
        buff = u8"No news"s;
    }
    notesel(buff);
    noteadd(u8" - News - "s, 0);
    noteadd(""s, 1);
    if (noteinfo(0) / (pagesize / 2) % 2 == 1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (pagesize / 2); cnt < cnt_end; ++cnt)
            {
                noteadd(""s, 2);
            }
        }
    }
    page = noteinfo(0) / pagesize;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize / 2 - noteinfo(0) % (pagesize / 2));
             cnt < cnt_end;
             ++cnt)
        {
            noteadd(""s);
        }
    }
    noteadd(u8" - Quest - "s);
    noteadd(""s);
    label_0180();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
        {
            if (qdata(8, cnt) == 0)
            {
                continue;
            }
            rq = cnt;
            val = 2;
            label_0184();
        }
    }
    val = 0;
    label_0181();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize / 2 - noteinfo(0) % (pagesize / 2));
             cnt < cnt_end;
             ++cnt)
        {
            noteadd(""s);
        }
    }
    noteadd(u8" - Quest Item - "s);
    noteadd(""s);
    label_0182();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize / 2 - noteinfo(0) % (pagesize / 2));
             cnt < cnt_end;
             ++cnt)
        {
            noteadd(""s);
        }
    }
    gold = 0;
    p = limit(cdata(34, 0) / 10, 100, 25000);
    if (cdata(34, 0) >= 25000)
    {
        p += (cdata(34, 0) - 25000) / 100;
    }
    gold += p;
    noteadd(u8" - Title & Ranking - "s);
    noteadd(""s);
    noteadd(lang(u8"名声: "s, u8"Fame: "s) + cdata(34, 0));
    noteadd(""s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
        {
            if (gdata(120 + cnt) < 10000)
            {
                noteadd(
                    ""s + ranktitle(cnt) + u8" Rank."s
                    + gdata((120 + cnt)) / 100);
                s = lang(
                    u8"給料: 約 "s + calcincome(cnt) + u8" gold  "s,
                    u8"Pay: About "s + calcincome(cnt) + u8" gold pieces "s);
                gold += calcincome(cnt);
                if (cnt == 3 || cnt == 4 || cnt == 5 || cnt == 8)
                {
                }
                else
                {
                    s += lang(u8"ノルマ: "s, u8"\nDeadline: "s)
                        + gdata((140 + cnt))
                        + lang(u8"日以内"s, u8" Days left"s);
                }
                noteadd(s);
                noteadd(""s);
            }
        }
    }
    noteadd(lang(
        u8"EXバトル: 勝利 "s + gdata(802) + u8"回 最高Lv"s + gdata(803),
        u8"EX Arena Wins:"s + gdata(802) + u8"  Highest Level:"s
            + cnvrank(gdata(803))));
    noteadd(""s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize / 2 - noteinfo(0) % (pagesize / 2));
             cnt < cnt_end;
             ++cnt)
        {
            noteadd(""s);
        }
    }
    noteadd(u8" - Income & Expense - "s);
    noteadd(""s);
    if (jp)
    {
        noteadd(u8"◆ 給料(毎月1日と15日に支給)"s);
        noteadd(u8"@BL　合計　　 : 約 "s + gold + strgold);
        noteadd(""s);
        noteadd(u8"◆ 請求書内訳(毎月1日に発行)"s);
        noteadd(u8"@RE　人件費  : 約 "s + gdata(170) + strgold);
        noteadd(u8"@RE　運営費  : 約 "s + calccostbuilding() + strgold);
        noteadd(u8"@RE　税金    : 約 "s + calccosttax() + strgold);
        noteadd(
            u8"@RE　合計　  : 約 "s
            + (gdata(170) + calccostbuilding() + calccosttax()) + strgold);
        noteadd(""s);
        noteadd(u8"現在未払いの請求書は"s + gdata(179) + u8"枚"s);
    }
    else
    {
        noteadd(u8"Salary (Paid every 1st and 15th day)"s);
        noteadd(u8"@BL  Sum    : About "s + gold + u8" GP"s);
        noteadd(""s);
        noteadd(u8"Bills  (Issued every 1st day)"s);
        noteadd(u8"@RE  Labor  : About "s + gdata(170) + u8" GP"s);
        noteadd(u8"@RE  Maint. : About "s + calccostbuilding() + u8" GP"s);
        noteadd(u8"@RE  Tax    : About "s + calccosttax() + u8" GP"s);
        noteadd(
            u8"@RE  Sum    : About "s
            + (gdata(170) + calccostbuilding() + calccosttax()) + u8" GP"s);
        noteadd(""s);
        noteadd(u8"You have "s + gdata(179) + u8" unpaid bills."s);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize / 2 - noteinfo(0) % (pagesize / 2));
             cnt < cnt_end;
             ++cnt)
        {
            noteadd(""s);
        }
    }
    noteadd(u8" - Completed Quests - "s);
    noteadd(""s);
    val = 1;
    label_0181();
    listmax = noteinfo(0);
    redraw(0);
    showtitle(lang(u8"ジャーナル"s, u8"Journal"s), strhint2 + strhint3, 236, 1);
    drawmenu(2);
    wx = (windoww - 736) / 2 + inf_screenx;
    wy = winposy(448);
    snd(59);
    windowanime(wx, wy, 736, 448, 10, 4);
label_1973_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\book.bmp"s, 1);
    gsel(0);
    pos(wx, wy);
    gcopy(4, 0, 0, 736, 448);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            x = wx + 80 + cnt / 20 * 306;
            y = wy + 45 + cnt % 20 * 16;
            noteget(s, p);
            if (strmid(s, 0, 1) == u8"@"s)
            {
                s(1) = strmid(s, 1, 2);
                s = strmid(s, 3, strlen(s) - 3);
                font(lang(cfg_font1, cfg_font2), 10 + en - en * 2, 1);
                color(0, 0, 200);
                if (s(1) == u8"QL"s)
                {
                    color(100, 100, 0);
                }
                if (s(1) == u8"QC"s)
                {
                    color(0, 100, 100);
                }
                if (s(1) == u8"QM"s)
                {
                    color(0, 100, 0);
                }
                if (s(1) == u8"RE"s)
                {
                    color(100, 0, 0);
                    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
                }
                if (s(1) == u8"BL"s)
                {
                    color(0, 0, 100);
                    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
                }
            }
            else
            {
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
                color(0, 0, 0);
            }
            pos(x, y);
            mes(s);
            if (p % 20 == 0)
            {
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
                color(0, 0, 0);
                pos(x + 90, y + 330);
                mes(u8"- "s + (p / 20 + 1) + u8" -"s);
                if (p % 40 == 20)
                {
                    if (page < pagemax)
                    {
                        pos(x + 200, y + 330);
                        mes(u8"(more)"s);
                    }
                }
            }
        }
    }
label_1974_internal:
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    label_2710();
                    return;
                }
                if (curmenu == 1)
                {
                    label_1972();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2707();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(71);
            ++page;
            goto label_1973_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(71);
            --page;
            goto label_1973_internal;
        }
    }
    if (key == key_cancel || key == key_enter)
    {
        menucycle = 0;
        label_1419();
        label_2743(false);
    }
    goto label_1974_internal;
}
void label_1976()
{
    if (cfg_extrahelp)
    {
        if (gdata(204) == 0)
        {
            if (mode == 0)
            {
                if (cdata(141, 0) == 0)
                {
                    gdata(204) = 1;
                    ghelp = 4;
                    label_2701();
                    screenupdate = -1;
                    label_1419();
                }
            }
        }
    }
    label_2671();
    listmax = 0;
    page = 0;
    pagesize = 4;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
        {
            if (qdata(1, cnt) != gdata(20))
            {
                continue;
            }
            if (qdata(3, cnt) == 0)
            {
                continue;
            }
            if (qdata(8, cnt) != 0)
            {
                continue;
            }
            rc = qdata(0, cnt);
            if (cdata(0, rc) != 1)
            {
                continue;
            }
            list(0, listmax) = cnt;
            list(1, listmax) = qdata(5, cnt);
            ++listmax;
        }
    }
    if (listmax == 0)
    {
        txt(lang(
            u8"新しい依頼は掲示されていないようだ。"s,
            u8"It seems there are no new notices."s));
        label_2742();
        return;
    }
    label_2056();
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_board.bmp"s, 1);
    gsel(0);
    redraw(0);
    gsel(4);
    fillbg(3, 960, 96, 128, 128);
    ww = 560;
    h = 140;
    wh = h * 4;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
        {
            y = wy + cnt * 120;
            window(wx + 4, y + 4, ww, h, 0, -1);
            window(wx, y, ww, h);
            pos(wx + 20, y + 8);
            gcopy(3, 960, 240, 48, 84);
        }
    }
    label_1421();
    gsel(0);
label_1977_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1978_internal:
    redraw(0);
    s(0) = lang(u8"掲載されている依頼"s, u8"Notice Board"s);
    s(1) = strhint2 + strhint3b;
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, inf_ver);
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
    pos(wx + ww + 20, wy);
    color(0, 0, 0);
    bmes(u8"Page "s + (page + 1) + u8"/"s + (pagemax + 1), 255, 255, 255);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            y = wy + cnt * 120 + 20;
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            pos(wx + 70, y);
            gfini(460, 18);
            gfdec2(12, 14, 16);
            display_key(wx + 70, y - 2, cnt);
        }
    }
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            y = wy + cnt * 120 + 20;
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            rq = list(0, p);
            tc = qdata(0, rq);
            val = 0;
            label_0184();
            p = pagesize * page + cnt;
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            cnt2 = cnt;
            cs_list(cnt, s(3), wx + 96, y - 1, 19);
            color(0, 0, 0);
            s(2) = u8"("s + nquestdate + u8")"s;
            pos(wx + 344, y + 2);
            mes(s(2));
            color(0, 0, 0);
            s(4) = cdatan(0, tc);
            cutname(s(4), 20);
            pos(wx + 392, y + 2);
            mes(s(4));
            talk_conv(buff, 70);
            p(0) = qdata(5, rq) / 5 + 1;
            p(1) = 14;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                {
                    if (cdata(38, 0) * 2 < qdata(5, rq))
                    {
                        color(205, 0, 0);
                        break;
                    }
                    if (cdata(38, 0) * 3 / 2 < qdata(5, rq))
                    {
                        color(140, 80, 0);
                        break;
                    }
                    if (cdata(38, 0) < qdata(5, rq))
                    {
                        color(0, 0, 205);
                        break;
                    }
                    color(0, 155, 0);
                }
            }
            if (p < 11)
            {
                dy = 0;
                if (p > 5)
                {
                    font(lang(cfg_font1, cfg_font2), 10 - en * 2, 0);
                    dy = -3;
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
                    {
                        pos(wx + 270 + cnt % 5 * 13, y + dy + cnt / 5 * 8 + 2);
                        mes(lang(u8"★"s, u8"$"s));
                    }
                }
            }
            else
            {
                pos(wx + 270, y + 2);
                mes(lang(u8"★?"s, u8"$ x "s) + p);
            }
            font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
            color(0, 0, 0);
            pos(wx + 20, y + 20);
            mes(buff);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        txtnew();
        txt(lang(u8"依頼主に会う？"s, u8"Do you want to meet the client?"s));
        promptl(0, 0) = stryes;
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptl(0, 1) = strno;
        promptl(1, 1) = u8"n"s;
        promptl(2, 1) = u8"1"s;
        promptmax = 2;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 160;
        val(3) = 1;
        label_2131();
        if (rtval != 0)
        {
            goto label_1977_internal;
        }
        tc = qdata(0, p);
        rq = p;
        client = tc;
        efid = 619;
        label_2176();
        tc = client;
        questteleport = 1;
        label_2242();
        if (chatteleport == 1)
        {
            chatteleport = 0;
            label_1737();
            return;
        }
        label_2742();
        return;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1977_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1977_internal;
        }
    }
    if (key == key_cancel)
    {
        label_2742();
        return;
    }
    goto label_1978_internal;
}
int label_1980()
{
    snd(26);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (allyctrl == 2)
            {
                if (cdata(0, cnt) != 6 && cdata(0, cnt) != 2)
                {
                    continue;
                }
            }
            else
            {
                if (allyctrl == 1)
                {
                    if (allyctrl == 1)
                    {
                        if (cdata(0, cnt) != 10)
                        {
                            continue;
                        }
                    }
                }
                else
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                }
                if (cnt < 16)
                {
                    if (cdata(80, cnt) != gdata(20))
                    {
                        continue;
                    }
                }
            }
            if (cnt == 0)
            {
                continue;
            }
            if (cbit(971, cnt) == 1)
            {
                continue;
            }
            list(0, listmax) = cnt;
            list(1, listmax) = -cdata(38, cnt);
            ++listmax;
        }
    }
    label_2056();
    windowshadow = 1;
label_1981_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1982_internal:
    redraw(0);
    s(0) = lang(u8"NPC一覧"s, u8"NPC List"s);
    s(1) = strhint2 + strhint3;
    display_window((windoww - 700) / 2 + inf_screenx, winposy(448), 700, 448);
    if (allyctrl == 0)
    {
        s = lang(u8"給料"s, u8"Wage"s);
    }
    else
    {
        s = lang(u8"雇用費(給料)"s, u8"Init. Cost(Wage)"s);
    }
    display_topic(lang(u8"NPCの名前"s, u8"Name"s), wx + 28, wy + 36);
    display_topic(lang(u8"情報"s, u8"Info"s), wx + 350, wy + 36);
    if (allyctrl != 2)
    {
        display_topic(s, wx + 490, wy + 36);
    }
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(600, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i(0) = cdata(7, list(0, p)) % 1000;
            i(1) = cdata(7, list(0, p)) / 1000;
            chara_preparepic(i, i(1));
            pos(wx + 40, wy + 74 + cnt * 19 - 8);
            gmode(2, chipc(2, i), chipc(3, i));
            grotate(
                5,
                0,
                960,
                0,
                chipc(2, i) / (1 + (chipc(3, i) > inf_tiles)),
                inf_tiles);
            i = list(0, p);
            s = cdatan(0, i);
            cutname(s, 36);
            cs_list(cnt, s, wx + 84, wy + 66 + cnt * 19 - 1, 19);
            s = u8"Lv."s + cdata(38, i) + u8" "s;
            if (cdata(8, i) == 0)
            {
                s += cnven(strmale);
            }
            else
            {
                s += cnven(strfemale);
            }
            s +=
                lang(u8" "s, u8"("s) + calcage(i) + ""s + lang(u8"歳"s, u8")"s);
            pos(wx + 372, wy + 66 + cnt * 19 + 2);
            mes(s);
            if (allyctrl != 2)
            {
                if (allyctrl == 1)
                {
                    s = ""s + calchirecost(i) * 20 + u8"("s + calchirecost(i)
                        + u8")"s;
                }
                else
                {
                    s = ""s + calchirecost(i);
                }
                pos(wx + 512, wy + 66 + cnt * 19 + 2);
                mes(s + lang(u8" gold"s, u8"gp"s));
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        stat = p;
        return stat;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1981_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1981_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_1982_internal;
}
int label_1984()
{
    snd(26);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (800); cnt < cnt_end; ++cnt)
        {
            if (itemmemory(2, cnt) == 0)
            {
                continue;
            }
            list(0, listmax) = cnt;
            list(1, listmax) = cnt;
            ++listmax;
        }
    }
    label_2056();
    windowshadow = 1;
label_1985_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1986_internal:
    redraw(0);
    s(0) = lang(u8"予約リスト"s, u8"Reserve List"s);
    s(1) = strhint2 + strhint3;
    display_window((windoww - 540) / 2 + inf_screenx, winposy(448), 540, 448);
    display_topic(lang(u8"アイテムの名前"s, u8"Name"s), wx + 28, wy + 36);
    display_topic(lang(u8"予約状況"s, u8"Status"s), wx + 390, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(440, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            gsel(1);
            color(0);
            boxf(0, 960, chipi(2, 429), chipi(3, 429) + 960);
            pos(0, 960);
            gcopy(
                1, chipi(0, 429), chipi(1, 429), chipi(2, 429), chipi(3, 429));
            gfini(chipi(2, 429), chipi(3, 429));
            gfdec2(c_col(0, 0), c_col(1, 0), c_col(2, 0));
            gsel(selcur);
            pos(wx + 38, wy + 73 + cnt * 19);
            gmode(2, inf_tiles, inf_tiles);
            grotate(1, 0, 960, 0, inf_tiles, inf_tiles);
            s = ioriginalnameref(i);
            cs_list(cnt, s, wx + 84, wy + 66 + cnt * 19 - 1, 19);
            pos(wx + 400, wy + 66 + cnt * 19 + 2);
            if (itemmemory(2, i) == 1)
            {
                color(120, 120, 120);
                mes(lang(u8"入荷なし"s, u8"-"s));
            }
            else
            {
                color(55, 55, 255);
                mes(lang(u8"入荷予定"s, u8"Reserved"s));
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        if (p == 289 || p == 732)
        {
            snd(27);
            txt(lang(
                u8"「その本は入手できないね」"s,
                cnvtalk(u8"Ah, that book is unavailable."s)));
            goto label_1985_internal;
        }
        snd(20);
        if (itemmemory(2, p) == 1)
        {
            itemmemory(2, p) = 2;
        }
        else
        {
            itemmemory(2, p) = 1;
        }
        goto label_1985_internal;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1985_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1985_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_1986_internal;
}
void label_1988()
{
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (56); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                continue;
            }
            list(0, listmax) = cnt;
            list(1, listmax) = -cdata(34, cnt);
            ++listmax;
        }
    }
    label_2056();
    windowshadow = 1;
label_1989_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_1990_internal:
    redraw(0);
    s(0) = lang(u8"冒険者ランク"s, u8"Adventurer Rank"s);
    s(1) = strhint2 + strhint3;
    display_window((windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448);
    display_topic(
        lang(u8"冒険者の名前とランク"s, u8"Name and Rank"s), wx + 28, wy + 36);
    display_topic(lang(u8"名声(Lv)"s, u8"Fame(Lv)"s), wx + 320, wy + 36);
    display_topic(lang(u8"現在地"s, u8"Location"s), wx + 420, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(540, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i(0) = cdata(7, list(0, p)) % 1000;
            i(1) = cdata(7, list(0, p)) / 1000;
            chara_preparepic(i, i(1));
            pos(wx + 40, wy + 74 + cnt * 19 - 8);
            gmode(2, chipc(2, i), chipc(3, i));
            grotate(
                5,
                0,
                960,
                0,
                chipc(2, i) / (1 + (chipc(3, i) > inf_tiles)),
                inf_tiles);
            pos(wx + 84, wy + 66 + cnt * 19 + 2);
            mes(cnvrank(p + 1) + lang(u8"位"s, ""s));
            i = list(0, p);
            s = ""s + cdatan(1, i) + u8" "s + cdatan(0, i);
            cutname(s, 26);
            cs_list(cnt, s, wx + 118, wy + 66 + cnt * 19 - 1, 19);
            s = ""s + cdata(34, i) + u8"("s + cdata(38, i) + u8")"s;
            pos(wx + 402 - strlen_u(s) * 7, wy + 66 + cnt * 19 + 2);
            mes(s);
            s = mapname(cdata(80, i));
            if (s == ""s)
            {
                s = lang(u8"不明"s, u8"Unknown"s);
            }
            if (cdata(0, i) == 4)
            {
                s = lang(u8"病院"s, u8"Hospital"s);
            }
            pos(wx + 435, wy + 66 + cnt * 19 + 2);
            mes(s);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_1989_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_1989_internal;
        }
    }
    if (key == key_cancel)
    {
        return;
    }
    goto label_1990_internal;
}
void label_1992()
{
    if (jp)
    {
        inputlog = del_str(inputlog, u8","s);
        inputlog = del_str(inputlog, u8" "s);
        inputlog = del_str(inputlog, u8"　"s);
    }
    else
    {
        inputlog = getpath(inputlog, 16);
    }
    inputlog = del_str(inputlog, lang(u8"アイテム"s, u8"item"s));
    inputlog = del_str(inputlog, lang(u8"スキル"s, u8"skill "s));
    inputlog = del_str(inputlog, lang(u8"スキル"s, u8"skill"s));
    return;
}
int label_1993()
{
    redraw(0);
    cs = 0;
    cs_bk = -1;
    list(0, 0) = -1;
    windowshadow = 1;
    i = 10500;
label_1994_internal:
    redraw(0);
    if (cs != cs_bk)
    {
        s(0) = lang(u8"異名の選択"s, u8"Alias Selection"s);
        s(1) = strhint3b;
        display_window(
            (windoww - 400) / 2 + inf_screenx, winposy(458), 400, 458);
        display_topic(lang(u8"異名の候補"s, u8"Alias List"s), wx + 28, wy + 30);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (17); cnt < cnt_end; ++cnt)
            {
                key_list(cnt) = key_select(cnt);
                keyrange = cnt + 1;
                if (val == 3)
                {
                    randomize(i + cnt);
                }
                if (list(0, 0) == -1)
                {
                    listn(0, cnt) = random_title(val);
                    list(1, cnt) = i + cnt;
                }
                if (cnt == 0)
                {
                    listn(0, cnt) = lang(u8"別の名前を考える"s, u8"Reroll"s);
                }
                pos(wx + 38, wy + 66 + cnt * 19 - 2);
                gcopy(3, cnt * 24 + 72, 30, 24, 18);
                cs_list(
                    cnt, listn(0, cnt), wx + 64, wy + 66 + cnt * 19 - 1, 19);
            }
        }
        i += 17;
        cs_bk = cs;
        list(0, 0) = 0;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = cnt;
                break;
            }
            else
            {
                p = -1;
            }
        }
    }
    if (p != -1)
    {
        if (key == key_select(0))
        {
            list(0, 0) = -1;
            snd(103);
            cs_bk = -1;
        }
        else
        {
            if (val == 3)
            {
                stat = p;
                return stat;
            }
            cmaka = listn(0, p);
            stat = 1;
            return stat;
        }
    }
    if (key == key_cancel)
    {
        snd(26);
        stat = 0;
        return stat;
    }
    goto label_1994_internal;
}
void label_1996()
{
    s = lang(
        cdatan(1, 0) + cdatan(0, 0) + u8"は狂喜して叫んだ。「"s + inputlog
            + u8"！！」"s + txtcopy,
        cdatan(1, 0) + u8" "s + cdatan(0, 0) + u8" goes wild with joy, \""s
            + inputlog + u8"!!\" "s + cnven(txtcopy));
    if (gdata(828) == 0)
    {
        if (wishfilter == 0 || 0)
        {
            net_send(u8"wish"s + s);
            wishfilter = 1;
        }
    }
    return;
}
void label_1997()
{
    txtcopy = "";
    txtef(5);
    txt(lang(u8"何を望む？"s, u8"What do you wish for? "s));
    val(0) = (windoww - 290) / 2 + inf_screenx;
    val(1) = winposy(90);
    val(2) = 16;
    val(3) = 0;
    val(4) = 0;
    inputlog = "";
    label_21262();
    txtmore();
    txt(lang(u8"「"s + inputlog + u8"！！」"s, cnvtalk(inputlog + u8"!!"s)));
    msgtemp = "";
    autosave = 1 * (gdata(20) != 35);
    tcopy = 1;
    if (inputlog == ""s || inputlog == u8" "s)
    {
        txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
        return;
    }
    if (en)
    {
        inputlog = getpath(inputlog, 16);
    }
    snd(24);
    if (instr(inputlog, 0, u8"中の神"s) != -1
        || instr(inputlog, 0, u8"god inside"s) != -1)
    {
        txt(lang(
            u8"中の神も大変…あ…中の神なんているわけないじゃない！…ねえ、聞かなかったことにしてね。"s,
            u8"There's no God inside."s));
        label_1996();
        return;
    }
    if (instr(inputlog, 0, u8"中の人"s) != -1
        || instr(inputlog, 0, u8"man inside"s) != -1)
    {
        txt(lang(u8"中の人も大変ね。"s, u8"There's no man inside."s));
        label_1996();
        return;
    }
    if (inputlog == u8"エヘカトル"s || inputlog == u8"ehekatl"s)
    {
        txt(lang(u8"「うみみゅみゅぁ！」"s, cnvtalk(u8"Meeewmew!"s)));
        flt();
        characreate(-1, 331, cdata(1, 0), cdata(2, 0));
        label_1996();
        return;
    }
    if (inputlog == u8"ルルウィ"s || inputlog == u8"lulwy"s)
    {
        txt(lang(
            u8"「アタシを呼びつけるとは生意気ね。」"s,
            cnvtalk(u8"You dare to call my name?"s)));
        flt();
        characreate(-1, 306, cdata(1, 0), cdata(2, 0));
        label_1996();
        return;
    }
    if (inputlog == u8"オパートス"s || inputlog == u8"opatos"s)
    {
        txt(lang(u8"工事中。"s, cnvtalk(u8"Under construction."s)));
        flt();
        characreate(-1, 338, cdata(1, 0), cdata(2, 0));
        label_1996();
        return;
    }
    if (inputlog == u8"クミロミ"s || inputlog == u8"kumiromi"s)
    {
        txt(lang(u8"工事中。"s, cnvtalk(u8"Under construction."s)));
        flt();
        characreate(-1, 339, cdata(1, 0), cdata(2, 0));
        label_1996();
        return;
    }
    if (inputlog == u8"マニ"s || inputlog == u8"mani"s)
    {
        txt(lang(u8"工事中。"s, cnvtalk(u8"Under construction."s)));
        flt();
        characreate(-1, 342, cdata(1, 0), cdata(2, 0));
        label_1996();
        return;
    }
    if (inputlog == u8"若さ"s || inputlog == u8"若返り"s || inputlog == u8"年"s
        || inputlog == u8"美貌"s || inputlog == u8"youth"s
        || inputlog == u8"age"s || inputlog == u8"beauty"s)
    {
        txt(lang(u8"ふぅん…そんな願いでいいんだ。"s, u8"A typical wish."s));
        cdata(21, 0) += 20;
        if (cdata(21, 0) + 12 > gdata(10))
        {
            cdata(21, 0) = gdata(10) - 12;
        }
        label_1996();
        return;
    }
    if (inputlog == u8"通り名"s || inputlog == u8"異名"s || inputlog == u8"aka"s
        || inputlog == u8"title"s || inputlog == u8"name"s
        || inputlog == u8"alias"s)
    {
        if (gdata(828))
        {
            txt(lang(u8"だめよ。"s, u8"*laugh*"s));
            label_1996();
            return;
        }
        txt(lang(u8"新しい異名は？"s, u8"What's your new alias?"s));
        val = 0;
        label_1993();
        if (stat == 1)
        {
            txt(lang(
                u8"あなたの新しい異名は「"s + cmaka + u8"」。満足したかしら？"s,
                u8"You will be known as <"s + cmaka + u8">."s));
            msgtemp = cdatan(1, 0) + cdatan(0, 0) + u8"は今後"s + cmaka
                + u8"と名乗ることにした。"s;
            cdatan(1, 0) = cmaka;
        }
        else
        {
            txtmore();
            txt(lang(
                u8"あら、そのままでいいの？"s, u8"What a waste of a wish!"s));
            msgtemp = u8"あら、そのままでいいの？"s;
        }
        label_1996();
        return;
    }
    if (inputlog == u8"性転換"s || inputlog == u8"性"s || inputlog == u8"異性"s
        || inputlog == u8"sex"s)
    {
        if (cdata(8, 0) == 0)
        {
            cdata(8, 0) = 1;
        }
        else
        {
            cdata(8, 0) = 0;
        }
        txt(lang(
            name(0) + u8"は"s + _sex(cdata(8, 0))
                + u8"になった！ …もう後戻りはできないわよ。"s,
            name(0) + u8" become "s + _sex(cdata(8, 0)) + u8"!"s));
        label_1996();
        return;
    }
    if (inputlog == u8"贖罪"s || inputlog == u8"redemption"s
        || inputlog == u8"atonement"s)
    {
        if (cdata(49, 0) >= 0)
        {
            txt(lang(
                u8"…罪なんて犯してないじゃない。"s, u8"You aren't a sinner."s));
            label_1996();
            return;
        }
        modkarma(0, cdata(49, 0) / 2 * -1);
        txt(lang(
            u8"あら…都合のいいことを言うのね。"s,
            u8"What a convenient wish!"s));
        label_1996();
        return;
    }
    if (inputlog == u8"死"s || inputlog == u8"death"s)
    {
        txt(lang(u8"それがお望みなら…"s, u8"If you wish so..."s));
        dmghp(0, 99999, -11);
        label_1996();
        return;
    }
    if (inputlog == u8"仲間"s || inputlog == u8"friend"s
        || inputlog == u8"company"s || inputlog == u8"ally"s)
    {
        evadd(12);
        label_1996();
        return;
    }
    if (inputlog == u8"金"s || inputlog == u8"金貨"s || inputlog == u8"富"s
        || inputlog == u8"財産"s || inputlog == u8"money"s
        || inputlog == u8"gold"s || inputlog == u8"wealth"s
        || inputlog == u8"fortune"s)
    {
        txtef(5);
        txt(lang(u8"金貨が降ってきた！"s, u8"Lots of gold pieces appear."s));
        flt();
        itemcreate(
            -1, 54, cdata(1, 0), cdata(2, 0), (cdata(38, 0) / 3 + 1) * 10000);
        label_1996();
        return;
    }
    if (inputlog == u8"メダル"s || inputlog == u8"小さなメダル"s
        || inputlog == u8"ちいさなメダル"s || inputlog == u8"coin"s
        || inputlog == u8"medal"s || inputlog == u8"small coin"s
        || inputlog == u8"small medal"s)
    {
        txtef(5);
        txt(lang(u8"小さなメダルが降ってきた！"s, u8"A small coin appears."s));
        flt();
        itemcreate(-1, 622, cdata(1, 0), cdata(2, 0), 3 + rnd(3));
        label_1996();
        return;
    }
    if (inputlog == u8"プラチナ"s || inputlog == u8"プラチナ硬貨"s
        || inputlog == u8"platina"s || inputlog == u8"platinum"s)
    {
        txtef(5);
        txt(lang(
            u8"プラチナ硬貨が降ってきた！"s, u8"Platinum pieces appear."s));
        flt();
        itemcreate(-1, 55, cdata(1, 0), cdata(2, 0), 5);
        label_1996();
        return;
    }
    if (instr(inputlog, 0, lang(u8"スキル"s, u8"skill"s)) != -1)
    {
        goto label_1999_internal;
    }
    if (instr(inputlog, 0, lang(u8"アイテム"s, u8"item"s)) != -1)
    {
        goto label_1998_internal;
    }
    if (instr(inputlog, 0, lang(u8"カード"s, u8"card"s)) != -1)
    {
        label_2000();
        return;
    }
    if (instr(inputlog, 0, lang(u8"剥製"s, u8"figure"s)) != -1
        || instr(inputlog, 0, u8"はく製"s) != -1)
    {
        label_2001();
        return;
    }
label_1998_internal:
    label_1992();
    i = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (length(ioriginalnameref)); cnt < cnt_end;
             ++cnt)
        {
            if (cnt == 0)
            {
                continue;
            }
            if (cnt == 23)
            {
                continue;
            }
            if (cnt == 290)
            {
                continue;
            }
            if (cnt == 289)
            {
                continue;
            }
            if (cnt == 361)
            {
                continue;
            }
            p = 0;
            cnt2 = cnt;
            if (ioriginalnameref(cnt) == inputlog)
            {
                p = 10000;
            }
            s = cnvitemname(cnt2);
            if (en)
            {
                s = getpath(s, 16);
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (strlen(inputlog)); cnt < cnt_end;
                     ++cnt)
                {
                    if (instr(s, 0, strmid(inputlog, 0, cnt * (1 + jp))) != -1)
                    {
                        p = p + 50 * (cnt + 1) + rnd(15);
                    }
                }
            }
            if (p != 0)
            {
                dblist(0, i) = cnt;
                dblist(1, i) = p;
                ++i;
            }
        }
    }
    if (i != 0)
    {
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                p(0) = 0;
                p(1) = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (i); cnt < cnt_end; ++cnt)
                    {
                        if (dblist(1, cnt) > p(1))
                        {
                            p(0) = dblist(0, cnt);
                            p(1) = dblist(1, cnt);
                            wishid = cnt;
                        }
                    }
                }
                if (p == 0)
                {
                    f = 0;
                    break;
                }
                flt(cdata(38, 0) + 10, 4);
                if (p == 558 || p == 556 || p == 557 || p == 664)
                {
                    fixlv = calcobjlv(3);
                }
                if (p == 630)
                {
                    objfix = 2;
                }
                nostack = 1;
                nooracle = 1;
                itemcreate(-1, p, cdata(1, cc), cdata(2, cc), 0);
                nooracle = 0;
                if (ibit(5, ci) == 1 || inv(4, ci) == 6)
                {
                    if (gdata(828) == 0 && 1)
                    {
                        dblist(1, wishid) = 0;
                        inv(0, ci) = 0;
                        --itemmemory(1, inv(3, ci));
                        cell_refresh(inv(5, ci), inv(6, ci));
                        continue;
                    }
                }
                if (inv(3, ci) == 54)
                {
                    inv(0, ci) = cdata(38, 0) * cdata(38, 0) * 50 + 20000;
                }
                if (inv(3, ci) == 55)
                {
                    inv(0, ci) = 8 + rnd(5);
                }
                if (inv(3, ci) == 602)
                {
                    inv(0, ci) = 0;
                    flt();
                    itemcreate(-1, 516, cdata(1, cc), cdata(2, cc), 3);
                    inv(17, ci) = 1;
                    txt(lang(u8"あ、それ在庫切れ。"s, u8"It's sold out."s));
                    txtmore();
                }
                if (refitem(inv(3, ci), 5) == 52000
                    || refitem(inv(3, ci), 5) == 53000)
                {
                    inv(0, ci) = 3 + rnd(2);
                    if (inv(3, ci) == 559)
                    {
                        inv(0, ci) = 2 + rnd(2);
                    }
                    if (inv(3, ci) == 502)
                    {
                        inv(0, ci) = 2;
                    }
                    if (inv(3, ci) == 243)
                    {
                        inv(0, ci) = 1;
                    }
                    if (inv(3, ci) == 621)
                    {
                        inv(0, ci) = 1;
                    }
                    if (inv(3, ci) == 706)
                    {
                        inv(0, ci) = 1;
                    }
                    if (inv(1, ci) >= 5000)
                    {
                        inv(0, ci) = 3;
                    }
                    if (inv(1, ci) >= 10000)
                    {
                        inv(0, ci) = 2;
                    }
                    if (inv(1, ci) >= 20000)
                    {
                        inv(0, ci) = 1;
                    }
                }
                item_identify(ci, 3);
                txt(lang(
                    u8"足元に"s + itemname(ci) + u8"が転がってきた。"s,
                    ""s + itemname(ci) + u8" appear"s + _s2(inv(0, ci))
                        + u8"."s));
                f = 1;
                break;
            }
        }
        if (f)
        {
            label_1996();
            return;
        }
    }
label_1999_internal:
    label_1992();
    i = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
        {
            f = 0;
            if (cnt >= 10 && cnt < 20)
            {
                f = 1;
            }
            if (cnt >= 100 && cnt < 400)
            {
                f = 1;
            }
            if (f == 0)
            {
                continue;
            }
            p = 0;
            cnt2 = cnt;
            if (skillname(cnt) == inputlog)
            {
                p = 10000;
            }
            s = skillname(cnt2);
            if (en)
            {
                s = getpath(s, 16);
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (strlen(inputlog) / (1 + jp));
                     cnt < cnt_end;
                     ++cnt)
                {
                    if (instr(s, 0, strmid(inputlog, cnt * (1 + jp), 1 + jp))
                        != -1)
                    {
                        p += 50 + rnd(15);
                    }
                }
            }
            if (p != 0)
            {
                dblist(0, i) = cnt;
                dblist(1, i) = p;
                ++i;
            }
        }
    }
    if (i != 0)
    {
        p(0) = 0;
        p(1) = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (i); cnt < cnt_end; ++cnt)
            {
                if (dblist(1, cnt) > p(1))
                {
                    p(0) = dblist(0, cnt);
                    p(1) = dblist(1, cnt);
                }
            }
        }
        if (skillname(p) != ""s)
        {
            txtef(5);
            if (sorg(p, 0) == 0)
            {
                txt(lang(
                    skillname(p) + u8"の技術を会得した！"s,
                    u8"You learn "s + skillname(p) + u8"!"s));
                skillgain(0, p, 1);
            }
            else
            {
                txt(lang(
                    skillname(p) + u8"が上昇した！"s,
                    u8"Your "s + skillname(p) + u8" skill improves!"s));
                skillmod(p, 0, 1000);
                modgrowth(0, p, 25);
            }
        }
        else
        {
            txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
        }
        label_1996();
        return;
    }
    txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
    label_1996();
    return;
}
void label_2000()
{
    label_2002();
    flt();
    characreate(56, dbid, -3, 0);
    flt();
    itemcreate(-1, 504, cdata(1, 0), cdata(2, 0), 0);
    inv(23, ci) = cdata(27, 56);
    inv(22, ci) = cdata(7, 56) % 1000;
    chara_vanquish(56);
    cell_refresh(cdata(1, 0), cdata(2, 0));
    txt(lang(
        u8"足元に"s + itemname(ci) + u8"が転がってきた。"s,
        ""s + itemname(ci) + u8" appear"s + _s2(inv(0, ci))
            + u8" from nowhere."s));
    label_1996();
    return;
}
void label_2001()
{
    label_2002();
    flt();
    characreate(56, dbid, -3, 0);
    flt();
    itemcreate(-1, 503, cdata(1, 0), cdata(2, 0), 0);
    inv(23, ci) = cdata(27, 56);
    inv(22, ci) = cdata(7, 56) % 1000;
    chara_vanquish(56);
    cell_refresh(cdata(1, 0), cdata(2, 0));
    txt(lang(
        u8"足元に"s + itemname(ci) + u8"が転がってきた。"s,
        ""s + itemname(ci) + u8" appear"s + _s2(inv(0, ci))
            + u8" from nowhere."s));
    label_1996();
    return;
}
void label_2002()
{
    i = 0;
    s2 = inputlog;
    fix_wish(s2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (800); cnt < cnt_end; ++cnt)
        {
            p = 0;
            s = refchara_str(cnt, 2);
            if (en)
            {
                s = getpath(s, 16);
            }
            if (instr(s, 0, s2) != -1)
            {
                p = 1000 - (strlen(s) - strlen(s2)) * 10;
            }
            if (p != 0)
            {
                dblist(0, i) = cnt;
                dblist(1, i) = p;
                ++i;
            }
        }
    }
    p(0) = 0;
    p(1) = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (i); cnt < cnt_end; ++cnt)
        {
            if (dblist(1, cnt) > p(1))
            {
                p(0) = dblist(0, cnt);
                p(1) = dblist(1, cnt);
            }
        }
    }
    dbid = p;
    if (dbid == 0)
    {
        dbid = 37;
    }
    return;
}
void label_2003()
{
    menucycle = 0;
    if (gdata(40 + sc) == 0)
    {
        ++msgdup;
        txt(lang(
            u8"そのキーにはショートカットが割り当てられていない。"s,
            u8"The key is unassigned."s));
        label_1419();
        label_2743(false);
    }
    if (gdata(40 + sc) >= 10000)
    {
        invsc = gdata((40 + sc)) % 10000;
        invctrl(0) = gdata((40 + sc)) / 10000;
        invctrl(1) = 0;
        label_20592();
        return;
    }
    efid = gdata(40 + sc);
    if (efid >= 300 && efid < 400)
    {
        label_2006();
        return;
    }
    if (efid >= 600)
    {
        if (mdata(6) == 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            label_2743(false);
        }
        if (efid < 661)
        {
            if (spact(efid - 600) == 0)
            {
                txt(lang(
                    u8"もうその行動はできない。"s,
                    u8"You can't use this shortcut any more."s));
                label_1419();
                label_2743(false);
            }
        }
        label_2006();
        return;
    }
    if (efid >= 400)
    {
        if (mdata(6) == 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            label_2743(false);
        }
        if (spell(efid - 400) <= 0)
        {
            ++msgdup;
            txt(lang(
                u8"その魔法はもう使えない。"s,
                u8"You can't use that spell anymore."s));
            label_1419();
            label_2743(false);
        }
        label_2026();
        return;
    }
    label_2743(false);
}
void label_2004()
{
    txt(lang(
        u8"どの方向を掘る？ "s, u8"Which direction do you want to dig? "s));
    val = 0;
    label_2127();
    if (stat == 0)
    {
        txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        label_1419();
        label_2743(false);
    }
    refx = x;
    refy = y;
    tlocx = x;
    tlocy = y;
    if (tlocx == cdata(1, 0))
    {
        if (tlocy == cdata(2, 0))
        {
            rowactre = 0;
            label_2158();
            label_2742();
            return;
        }
    }
    if ((chipm(7, map(x, y, 0)) && 4) == 0 || chipm(0, map(x, y, 0)) == 3
        || mdata(6) == 1)
    {
        txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        label_1419();
        label_2743(false);
    }
    screenupdate = -1;
    label_1419();
    label_2224();
    return;
}
void label_2005()
{
    txt(lang(
        u8"どの方向に体当たりする？ "s,
        u8"Which direction do you want to bash? "s));
    val = 0;
    label_2127();
    if (stat == 0)
    {
        txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        label_1419();
        label_2743(false);
    }
    label_2201();
    return;
}
void label_2006()
{
    label_2174();
    if (stat == 0)
    {
        label_1419();
        label_2743(false);
    }
    label_2742();
    return;
}
void label_2007()
{
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    cs = commark(0) % 1000;
    page = commark(0) / 1000;
    curmenu = 1;
    {
        int cnt = 300;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            if (sdata(cnt, cc) > 0)
            {
                list(0, listmax) = cnt;
                list(1, listmax) = sdataref(0, cnt) * 1000 + cnt;
                ++listmax;
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (61); cnt < cnt_end; ++cnt)
        {
            if (spact(cnt) != 0)
            {
                list(0, listmax) = cnt + 600;
                list(1, listmax) = sdataref(0, cnt) * 1000 + cnt;
                ++listmax;
            }
        }
    }
    label_2056();
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_skill.bmp"s, 1);
    gsel(0);
    windowshadow = 1;
label_2008_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    drawmenu(1);
label_2009_internal:
    redraw(0);
    s(0) = lang(u8"能力の発動"s, u8"Skill"s);
    s(1) = strhint2 + strhint3 + strhint7;
    display_window(
        (windoww - 600) / 2 + inf_screenx, winposy(438), 600, 438, 0, 60);
    display_topic(lang(u8"能力の名称"s, u8"Name"s), wx + 28, wy + 36);
    display_topic(lang(u8"コスト"s, u8"Cost"s), wx + 220, wy + 36);
    display_topic(lang(u8"能力の効果"s, u8"Detail"s), wx + 320, wy + 36);
    pos(wx + 46, wy - 16);
    gcopy(3, 960, 48, 48, 48);
    pos(wx + ww - 78, wy + wh - 165);
    gcopy(3, 960, 96, 72, 144);
    pos(wx + ww - 168, wy);
    gcopy(3, 1032, 96, 102, 48);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(490, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            pos(wx + 40, wy + 74 + cnt * 19);
            gmode(2, inf_tiles, inf_tiles);
            grotate(
                1,
                (sdataref(0, list(0, p)) - 10) * inf_tiles,
                672,
                0,
                inf_tiles,
                inf_tiles);
            s = "";
            {
                int cnt = 0;
                for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
                {
                    if (gdata(40 + cnt) == list(0, p))
                    {
                        s = u8"{"s + cnt + u8"}"s;
                    }
                }
            }
            cs_list(
                cnt,
                skillname(list(0, p)) + s,
                wx + 84,
                wy + 66 + cnt * 19 - 1,
                19);
            s = ""s + sdataref(2, list(0, p)) + u8" Sp"s;
            pos(wx + 288 - strlen_u(s) * 7, wy + 66 + cnt * 19 + 2);
            mes(s);
            label_2031();
            pos(wx + 325, wy + 66 + cnt * 19 + 2);
            mes(strmid(s, 0, 34));
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    commark(0) = page * 1000 + cs;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        menucycle = 0;
        efid = p;
        screenupdate = -1;
        label_1419();
        label_2006();
        return;
    }
    if (key == u8"sc"s)
    {
        snd(20);
        p = list(0, pagesize * page + cs);
        if (gdata(40 + sc) == p)
        {
            gdata(40 + sc) = 0;
            goto label_2008_internal;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                if (gdata(40 + cnt) == p)
                {
                    gdata(40 + cnt) = 0;
                }
            }
        }
        gdata(40 + sc) = p;
        txt(lang(
            u8"{"s + sc + u8"}キーにショートカットを割り当てた。"s,
            u8"You have assigned the shortcut to {"s + sc + u8"} key."s));
        display_msg(inf_screeny + inf_tiles);
        goto label_2008_internal;
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 1)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 1;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    snd(102);
                    label_2027();
                    return;
                }
                if (curmenu == 1)
                {
                    snd(101);
                    label_2007();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2008_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2008_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        label_2743(false);
    }
    goto label_2009_internal;
}
void label_2011()
{
    txt(lang(u8"どの方向に？ "s, u8"Which direction? "s));
    label_1419();
    val = 0;
    label_2127();
    if (stat == 0)
    {
        txt(strinteractfail);
        label_1419();
        label_2743(false);
    }
    tc = map(x, y, 1);
    if (tc == 0)
    {
        txt(strinteractfail);
        label_1419();
        label_2743(false);
    }
    tc -= 1;
    if (tc == 0)
    {
        if (gdata(183) != 0)
        {
            tc = gdata(183);
        }
    }
    if (tc != 0)
    {
        if (tc < 16)
        {
            if (cbit(963, tc) == 0)
            {
                label_2055();
                return;
            }
        }
        label_1419();
        invctrl = 10;
        snd(100);
        label_20592();
        return;
    }
    txt(strinteractfail);
    label_1419();
    label_2743(false);
}
void label_2012()
{
    txt(lang(
        u8"操作する対象の方向は？"s, u8"Choose the direction of the target."s));
    val = 0;
    label_2127();
    if (stat == 0)
    {
        txt(strinteractfail);
        label_1419();
        label_2743(false);
    }
    tc = map(x, y, 1);
    if (tc == 0)
    {
        txt(strinteractfail);
        label_1419();
        label_2743(false);
    }
    tc -= 1;
    txt(lang(
        name(tc) + u8"に何をする？ "s,
        u8"What action do you want to perform to "s + him(tc) + u8"? "s));
    p = 0;
    if (tc != 0)
    {
        if (cdata(254, 0) == 0)
        {
            promptl(0, promptmax) = lang(u8"話しかける"s, u8"Talk"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 0;
            ++promptmax;
            promptl(0, promptmax) = lang(u8"攻撃する"s, u8"Attack"s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 1;
            ++promptmax;
        }
        if (cbit(963, tc) == 0)
        {
            if (cbit(971, tc) == 0)
            {
                if (tc < 16)
                {
                    promptl(0, promptmax) = lang(u8"所持品"s, u8"Inventory"s);
                    promptl(1, promptmax) = u8"null"s;
                    promptl(2, promptmax) = ""s + 4;
                    ++promptmax;
                }
                else
                {
                    promptl(0, promptmax) = lang(u8"何かを渡す"s, u8"Give"s);
                    promptl(1, promptmax) = u8"null"s;
                    promptl(2, promptmax) = ""s + 2;
                    ++promptmax;
                }
                if (cbit(960, tc) == 1)
                {
                    promptl(0, promptmax) = lang(u8"連れ出す"s, u8"Bring Out"s);
                    promptl(1, promptmax) = u8"null"s;
                    promptl(2, promptmax) = ""s + 5;
                    ++promptmax;
                }
                if (tc < 16)
                {
                    promptl(0, promptmax) =
                        lang(u8"着替えさせる"s, u8"Appearence"s);
                    promptl(1, promptmax) = u8"null"s;
                    promptl(2, promptmax) = ""s + 8;
                    ++promptmax;
                }
            }
        }
        promptl(0, promptmax) = lang(u8"言葉を教える"s, u8"Teach Words"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 7;
        ++promptmax;
        promptl(0, promptmax) = lang(u8"口調を変える"s, u8"Change Tone"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 10;
        ++promptmax;
        if (gdata(20) != 35)
        {
            if (cbit(985, tc))
            {
                promptl(0, promptmax) = lang(u8"縄を解く"s, u8"Release"s);
                promptl(1, promptmax) = u8"null"s;
                promptl(2, promptmax) = ""s + 9;
                ++promptmax;
            }
        }
    }
    promptl(0, promptmax) = lang(u8"名前をつける"s, u8"Name"s);
    promptl(1, promptmax) = u8"null"s;
    promptl(2, promptmax) = ""s + 3;
    ++promptmax;
    if (0 || gdata(828))
    {
        promptl(0, promptmax) = lang(u8"情報"s, u8"Info"s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 6;
        ++promptmax;
    }
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 200;
    val(3) = 1;
    label_2131();
    if (stat == 0)
    {
        label_1419();
        label_2743(false);
    }
    p = rtval;
    screenupdate = -1;
    if (p == 0)
    {
        label_1419();
        label_2242();
        if (chatteleport == 1)
        {
            chatteleport = 0;
            label_1737();
            return;
        }
        else
        {
            label_2742();
            return;
        }
    }
    if (p == 1)
    {
        label_1419();
        label_2218();
        label_2742();
        return;
    }
    if (p == 2)
    {
        label_1419();
        invctrl = 10;
        snd(100);
        label_20592();
        return;
    }
    if (p == 3)
    {
        label_1419();
        label_2013();
        return;
    }
    if (p == 4)
    {
        label_2055();
        return;
    }
    if (p == 5)
    {
        rc = tc;
        label_2659();
        label_1419();
        label_2742();
        return;
    }
    if (p == 6)
    {
        csctrl = 4;
        snd(26);
        cc = tc;
        label_20332();
        cc = 0;
        label_2743(false);
    }
    if (p == 7)
    {
        txt(lang(
            u8"どんな言葉を教えようか。"s,
            u8"What sentence should "s + name(tc) + u8" learn? "s));
        val(0) = (windoww - 360) / 2 + inf_screenx;
        val(1) = winposy(90);
        val(2) = 20;
        val(3) = 1;
        val(4) = 0;
        inputlog = "";
        label_21262();
        cbitmod(989, tc, 0);
        if (inputlog == ""s)
        {
            cdatan(4, tc) = "";
        }
        else
        {
            cdatan(4, tc) = inputlog;
            txtef(9);
            txt(""s + cdatan(4, tc));
        }
        label_1419();
        label_2743(false);
    }
    if (p == 8)
    {
        gsel(4);
        pos(0, 0);
        picload(exedir + u8"graphic\\face1"s + devfile + u8".bmp"s, 1);
        gsel(0);
        ccbk = cc;
        cc = tc;
        label_2039();
        cc = ccbk;
        label_1419();
        label_2743(false);
    }
    if (p == 9)
    {
        snd(58);
        cbitmod(985, tc, 0);
        txt(lang(
            name(tc) + u8"の縄を解いた。"s,
            u8"You release "s + name(tc) + u8"."s));
        flt();
        itemcreate(-1, 733, cdata(1, tc), cdata(2, tc), 0);
    }
    if (p == 10)
    {
        label_2014();
    }
    label_1419();
    label_2743(false);
}
void label_2013()
{
    txt(lang(
        name(tc) + u8"を何と呼ぶ？ "s,
        u8"What do you want to call "s + him(tc) + u8"? "s));
    val(0) = (windoww - 220) / 2 + inf_screenx;
    val(1) = winposy(90);
    val(2) = 12;
    val(3) = 1;
    val(4) = 0;
    inputlog = "";
    input_mode = 1;
    label_21262();
    if (inputlog == ""s)
    {
        txt(lang(u8"名前をつけるのはやめた。"s, u8"You changed your mind."s));
    }
    else
    {
        cdatan(0, tc) = ""s + inputlog;
        cbitmod(977, tc, 1);
        txt(lang(
            ""s + cdatan(0, tc) + u8"という名前で呼ぶことにした。"s,
            u8"You named "s + him(tc) + u8" "s + cdatan(0, tc) + u8"."s));
    }
    label_1416();
    label_2743(false);
}
int label_2014()
{
    gsel(4);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            pos(cnt % 4 * 180, cnt / 4 * 300);
            picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
        }
    }
    gsel(0);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    folder = exedir + u8"user\\talk\\"s;
    dirlist(buff, folder + u8"*.txt"s);
    notesel(buff);
    list(0, 0) = -999;
    listn(0, 0) = lang(u8"デフォルトの口調"s, u8"Default Tone"s);
    ++listmax;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            list(0, listmax) = listmax;
            listn(0, listmax) = s;
            ++listmax;
        }
    }
    windowshadow = 1;
label_2015_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2016_internal:
    redraw(0);
    s(0) = lang(u8"口調一覧"s, u8"Tone of Voice"s);
    s(1) = lang(u8"決定 [口調の変更]  "s, u8"Enter [Change Tone] "s) + strhint2
        + strhint3;
    display_window((windoww - 500) / 2 + inf_screenx, winposy(400), 500, 400);
    x = ww / 5 * 3;
    y = wh - 80;
    gmode(4, 180, 300, 50);
    pos(wx + ww / 3 * 2, wy + wh / 2);
    grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
    gmode(2);
    display_topic(lang(u8"題名"s, u8"Title"s), wx + 28, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(ww - 100, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s = ""s + listn(0, p);
            cs_list(cnt, s, wx + 138, wy + 66 + cnt * 19 - 1, 19);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                cs = cnt;
                break;
            }
        }
    }
    if (p != -1)
    {
        snd(20);
        txt(lang(
            name(tc) + u8"の口調が変わった気がする。"s,
            name(tc) + u8" is somewhat different."s));
        if (p == -999)
        {
            cbitmod(989, tc, 0);
            cdatan(4, tc) = "";
            stat = 1;
            return stat;
        }
        cbitmod(989, tc, 1);
        cdatan(4, tc) = listn(0, p);
        stat = 1;
        return stat;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2015_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2015_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_2016_internal;
}
int label_2018()
{
    snd(94);
    gsel(4);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            pos(cnt % 4 * 180, cnt / 4 * 300);
            picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
        }
    }
    gsel(0);
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    if (allyctrl == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (usernpcmax); cnt < cnt_end; ++cnt)
            {
                if (instr(userdatan(6, cnt), 0, u8"_tmp_"s) == -1)
                {
                    continue;
                }
                list(0, listmax) = listmax;
                listn(0, listmax) = lang(
                    userdatan(1, cnt) + u8"("s + userdatan(0, cnt) + u8")"s,
                    userdatan(0, cnt));
                listn(1, listmax) = userdatan(6, cnt);
                ++listmax;
            }
        }
    }
    txt(lang(
        u8"どの者を召喚したいと願うか？"s,
        u8"Which one do you wish to summon?"s));
    windowshadow = 1;
label_2019_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2020_internal:
    redraw(0);
    s(0) = lang(u8"カスタムNPC一覧"s, u8"Custom NPC"s);
    s(1) = lang(u8"決定 [召喚]  "s, u8"Enter [Summon] "s) + strhint2 + strhint3;
    display_window((windoww - 500) / 2 + inf_screenx, winposy(400), 500, 400);
    x = ww / 5 * 3;
    y = wh - 80;
    gmode(4, 180, 300, 50);
    pos(wx + ww / 3 * 2, wy + wh / 2);
    grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
    gmode(2);
    display_topic(lang(u8"名前"s, u8"Name"s), wx + 28, wy + 36);
    display_topic(lang(u8"Level"s, u8"Level"s), wx + 348, wy + 36);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(ww - 100, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s = ""s + listn(0, p);
            pos(wx + 380, wy + 66 + cnt * 19);
            mes(""s + userdata(2, i));
            cs_list(cnt, s, wx + 85, wy + 66 + cnt * 19 - 1, 19);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                cs = cnt;
                break;
            }
        }
    }
    if (p != -1)
    {
        listmax = p;
        snd(64);
        txt(listn(0, listmax)
            + lang(
                  u8"は、あなたの世界に召喚された！"s,
                  u8" has been summoned to your world!"s));
        file = ""s + userfile;
        label_2095();
        bcopy(
            exedir + u8"user\\"s + listn(1, listmax),
            exedir + u8"user\\"s + listn(0, listmax) + u8".npc"s);
        label_2105();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(27, cnt) == 343)
                {
                    getunid(cnt);
                }
            }
        }
        label_2111();
        label_2110();
        stat = 1;
        return stat;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2019_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2019_internal;
        }
    }
    if (key == key_cancel)
    {
        stat = -1;
        return stat;
    }
    goto label_2020_internal;
}
void label_2022()
{
    snd(59);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\book.bmp"s, 1);
    gsel(0);
    notesel(buff);
    noteload(exedir + u8"data\\book.txt"s);
    p = instr(buff, 0, ""s + inv(25, ci) + u8","s + lang(u8"JP"s, u8"EN"s));
    if (p == -1)
    {
        return;
    }
    buff = strmid(buff, p, instr(buff, p, u8"%END"s));
    notedel(0);
    listmax = 0;
    page = 0;
    pagesize = 40;
    cs = 0;
    cc = 0;
    listmax = noteinfo(0);
    keyrange = 0;
    key_list(0) = key_enter;
    color(0, 0, 0);
label_2023_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    wx = (windoww - 720) / 2 + inf_screenx;
    wy = winposy(468);
    pos(wx, wy);
    gcopy(4, 0, 0, 736, 448);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            x = wx + 80 + cnt / 20 * 306;
            y = wy + 45 + cnt % 20 * 16;
            noteget(s, p);
            if (p == 0)
            {
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
            }
            if (p == 1)
            {
                font(lang(cfg_font1, cfg_font2), 10 + sizefix - en * 2, 0);
            }
            if (p > 2)
            {
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
            }
            pos(x, y);
            mes(s);
            if (p % 20 == 0)
            {
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
                pos(x + 90, y + 330);
                mes(u8"- "s + (p / 20 + 1) + u8" -"s);
            }
        }
    }
label_2024_internal:
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(71);
            ++page;
            goto label_2023_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(71);
            --page;
            goto label_2023_internal;
        }
    }
    if (key == key_cancel || key == key_enter)
    {
        label_1419();
        return;
    }
    goto label_2024_internal;
}
void label_2026()
{
    tc = cc;
    label_2167();
    if (stat == 0)
    {
        label_2743(false);
    }
    label_2742();
    return;
}
void label_2027()
{
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    cs = commark(1) % 1000;
    page = commark(1) / 1000;
    curmenu = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
        {
            if (spell(cnt) > 0)
            {
                list(0, listmax) = cnt + 400;
                list(1, listmax) = sdataref(0, 400 + cnt);
                ++listmax;
            }
        }
    }
    label_2056();
    redraw(0);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_spell.bmp"s, 1);
    gsel(0);
    windowshadow = 1;
label_2028_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    drawmenu(1);
label_2029_internal:
    redraw(0);
    s(0) = lang(u8"魔法の詠唱"s, u8"Spell"s);
    s(1) = strhint2 + strhint3 + strhint7;
    display_window((windoww - 720) / 2 + inf_screenx, winposy(438), 720, 438);
    display_topic(lang(u8"魔法の名称"s, u8"Name"s), wx + 28, wy + 36);
    display_topic(
        lang(u8"消費MP(ｽﾄｯｸ) LV/成功"s, u8"Cost(Stock) Lv/Chance"s),
        wx + 220,
        wy + 36);
    display_topic(lang(u8"効果"s, u8"Effect"s), wx + 400, wy + 36);
    pos(wx + 46, wy - 16);
    gcopy(3, 912, 48, 48, 48);
    pos(wx + ww - 78, wy);
    gcopy(3, 960, 96, 72, 144);
    pos(wx + ww - 180, wy);
    gcopy(3, 1032, 96, 72, 96);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 70, wy + 66 + cnt * 19);
                gfini(620, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 58, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            pos(wx + 40, wy + 74 + cnt * 19);
            gmode(2, inf_tiles, inf_tiles);
            grotate(
                1,
                (sdataref(0, i) - 10) * inf_tiles,
                672,
                0,
                inf_tiles,
                inf_tiles);
            s = "";
            {
                int cnt = 0;
                for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
                {
                    if (gdata(40 + cnt) == list(0, p))
                    {
                        s = u8"{"s + cnt + u8"}"s;
                    }
                }
            }
            cs_list(cnt, skillname(i) + s, wx + 84, wy + 66 + cnt * 19 - 1, 19);
            s = ""s + calcspellcostmp(i, cc) + u8" ("s + spell((i - 400))
                + u8")"s;
            pos(wx + 328 - strlen_u(s) * 7, wy + 66 + cnt * 19 + 2);
            mes(s);
            label_2031();
            s = strmid(s, 0, 40);
            pos(wx + 340, wy + 66 + cnt * 19 + 2);
            mes(""s + sdata(i, cc) + u8"/"s + calcspellfail(i, cc) + u8"%"s);
            pos(wx + 420, wy + 66 + cnt * 19 + 2);
            mes(s);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    commark(1) = page * 1000 + cs;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        menucycle = 0;
        efid = p;
        label_2026();
        return;
    }
    if (key == u8"sc"s)
    {
        snd(20);
        p = list(0, pagesize * page + cs);
        if (gdata(40 + sc) == p)
        {
            gdata(40 + sc) = 0;
            goto label_2028_internal;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                if (gdata(40 + cnt) == p)
                {
                    gdata(40 + cnt) = 0;
                }
            }
        }
        gdata(40 + sc) = p;
        txt(lang(
            u8"{"s + sc + u8"}キーにショートカットを割り当てた。"s,
            u8"You have assigned the shortcut to {"s + sc + u8"} key."s));
        display_msg(inf_screeny + inf_tiles);
        goto label_2028_internal;
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 1)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 1;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    snd(102);
                    label_2027();
                    return;
                }
                if (curmenu == 1)
                {
                    snd(101);
                    label_2007();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2028_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2028_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        label_2743(false);
    }
    goto label_2029_internal;
}
void label_2031()
{
    s = "";
    if (sdataref(1, i) / 1000 == 1)
    {
        p = sdataref(1, i) % 1000;
        calcbuff(-2, p, calcspellpower(i, cc));
        s = ""s + dur + lang(u8"ﾀｰﾝ "s, u8"t "s) + buffdesc;
        return;
    }
    calcskill(i, cc, calcspellpower(i, cc));
    if (cc == 0)
    {
        if (trait(165) != 0)
        {
            if (ele == 50 || ele == 51 || ele == 52)
            {
                dice2 = dice2 * 125 / 100;
            }
        }
    }
    if (stat == 1)
    {
        if (dice1 != 0)
        {
            s += ""s + dice1 + u8"d"s + dice2;
            if (bonus != 0)
            {
                if (bonus > 0)
                {
                    s += u8"+"s + bonus;
                }
                else
                {
                    s += bonus;
                }
            }
        }
        else
        {
            if (i == 461)
            {
                s += ""s + limit(bonus, 1, 100) + u8"%"s;
            }
            else
            {
                s += lang(u8"ﾊﾟﾜｰ"s, u8"Power:"s) + bonus;
            }
        }
        s += u8" "s;
    }
    s += skilldesc(i);
    return;
}
void label_2032()
{
    dbmax = 0;
    dblist(0, dbmax) = 159;
    ++dbmax;
    dblist(0, dbmax) = 173;
    ++dbmax;
    if (gdata(20) == 12)
    {
        dblist(0, dbmax) = 154;
        ++dbmax;
        dblist(0, dbmax) = 162;
        ++dbmax;
        dblist(0, dbmax) = 184;
        ++dbmax;
        dblist(0, dbmax) = 176;
        ++dbmax;
        dblist(0, dbmax) = 177;
        ++dbmax;
        dblist(0, dbmax) = 180;
        ++dbmax;
        dblist(0, dbmax) = 301;
        ++dbmax;
        dblist(0, dbmax) = 167;
        ++dbmax;
        dblist(0, dbmax) = 153;
        ++dbmax;
    }
    if (gdata(20) == 5)
    {
        dblist(0, dbmax) = 178;
        ++dbmax;
        dblist(0, dbmax) = 154;
        ++dbmax;
        dblist(0, dbmax) = 184;
        ++dbmax;
        dblist(0, dbmax) = 163;
        ++dbmax;
        dblist(0, dbmax) = 182;
        ++dbmax;
        dblist(0, dbmax) = 185;
        ++dbmax;
        dblist(0, dbmax) = 158;
        ++dbmax;
    }
    if (gdata(20) == 15)
    {
        dblist(0, dbmax) = 151;
        ++dbmax;
        dblist(0, dbmax) = 150;
        ++dbmax;
        dblist(0, dbmax) = 161;
        ++dbmax;
        dblist(0, dbmax) = 179;
        ++dbmax;
        dblist(0, dbmax) = 301;
        ++dbmax;
        dblist(0, dbmax) = 156;
        ++dbmax;
        dblist(0, dbmax) = 160;
        ++dbmax;
        dblist(0, dbmax) = 172;
        ++dbmax;
        dblist(0, dbmax) = 178;
        ++dbmax;
    }
    if (gdata(20) == 33)
    {
        dblist(0, dbmax) = 181;
        ++dbmax;
        dblist(0, dbmax) = 150;
        ++dbmax;
        dblist(0, dbmax) = 162;
        ++dbmax;
        dblist(0, dbmax) = 184;
        ++dbmax;
        dblist(0, dbmax) = 182;
        ++dbmax;
        dblist(0, dbmax) = 155;
        ++dbmax;
        dblist(0, dbmax) = 153;
        ++dbmax;
    }
    if (gdata(20) == 36)
    {
        if (gdata(22) == 1)
        {
            dblist(0, dbmax) = 172;
            ++dbmax;
            dblist(0, dbmax) = 154;
            ++dbmax;
            dblist(0, dbmax) = 150;
            ++dbmax;
            dblist(0, dbmax) = 174;
            ++dbmax;
            dblist(0, dbmax) = 185;
            ++dbmax;
            dblist(0, dbmax) = 171;
            ++dbmax;
            dblist(0, dbmax) = 160;
            ++dbmax;
            dblist(0, dbmax) = 167;
            ++dbmax;
        }
    }
    if (gdata(20) == 36)
    {
        if (gdata(22) == 3)
        {
            dblist(0, dbmax) = 172;
            ++dbmax;
            dblist(0, dbmax) = 165;
            ++dbmax;
            dblist(0, dbmax) = 155;
            ++dbmax;
            dblist(0, dbmax) = 164;
            ++dbmax;
            dblist(0, dbmax) = 178;
            ++dbmax;
            dblist(0, dbmax) = 188;
            ++dbmax;
            dblist(0, dbmax) = 171;
            ++dbmax;
            dblist(0, dbmax) = 187;
            ++dbmax;
        }
    }
    if (gdata(20) == 14)
    {
        if (gdata(22) == 1)
        {
            dblist(0, dbmax) = 158;
            ++dbmax;
            dblist(0, dbmax) = 157;
            ++dbmax;
            dblist(0, dbmax) = 170;
            ++dbmax;
            dblist(0, dbmax) = 171;
            ++dbmax;
            dblist(0, dbmax) = 176;
            ++dbmax;
            dblist(0, dbmax) = 174;
            ++dbmax;
            dblist(0, dbmax) = 183;
            ++dbmax;
            dblist(0, dbmax) = 163;
            ++dbmax;
        }
    }
    if (gdata(20) == 14)
    {
        if (gdata(22) == 3)
        {
            dblist(0, dbmax) = 300;
            ++dbmax;
            dblist(0, dbmax) = 175;
            ++dbmax;
            dblist(0, dbmax) = 158;
            ++dbmax;
            dblist(0, dbmax) = 157;
            ++dbmax;
            dblist(0, dbmax) = 189;
            ++dbmax;
        }
    }
    if (gdata(20) == 11)
    {
        if (gdata(22) == 1)
        {
            dblist(0, dbmax) = 156;
            ++dbmax;
            dblist(0, dbmax) = 160;
            ++dbmax;
            dblist(0, dbmax) = 183;
            ++dbmax;
            dblist(0, dbmax) = 185;
            ++dbmax;
            dblist(0, dbmax) = 174;
            ++dbmax;
            dblist(0, dbmax) = 151;
            ++dbmax;
        }
    }
    if (gdata(20) == 11)
    {
        if (gdata(22) == 3)
        {
            dblist(0, dbmax) = 153;
            ++dbmax;
            dblist(0, dbmax) = 166;
            ++dbmax;
            dblist(0, dbmax) = 167;
            ++dbmax;
            dblist(0, dbmax) = 169;
            ++dbmax;
            dblist(0, dbmax) = 152;
            ++dbmax;
            dblist(0, dbmax) = 189;
            ++dbmax;
            dblist(0, dbmax) = 168;
            ++dbmax;
            dblist(0, dbmax) = 186;
            ++dbmax;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (dbmax); cnt < cnt_end; ++cnt)
        {
            p = dblist(0, cnt);
            f = 0;
            if (sorg(p, cc) == 0)
            {
                if (sdataref(0, p) != 0)
                {
                    f = 1;
                }
            }
            if (f)
            {
                list(0, listmax) = p;
                list(1, listmax) = sdataref(0, p) + 21000;
                ++listmax;
            }
        }
    }
    return;
}
int label_20332()
{
label_20331:
    page = 0;
    pagesize = 16;
    listmax = 0;
    cs = 0;
    if (csctrl != 4)
    {
        cc = 0;
    }
    csskill = -1;
    cs_buff = 0;
    curmenu = 0;
    if (csctrl == 2 || csctrl == 3)
    {
        page = 1;
    }
    list(0, listmax) = -1;
    list(1, listmax) = 20000;
    listn(0, listmax) = lang(u8"◆ スキルと特殊能力"s, u8"Skill"s);
    ++listmax;
    if (csctrl == 3)
    {
        label_2032();
    }
    else
    {
        {
            int cnt = 150;
            for (int cnt_end = cnt + (250); cnt < cnt_end; ++cnt)
            {
                f = 0;
                if (sdata(cnt, cc) != 0)
                {
                    f = 1;
                    if (csctrl == 2)
                    {
                        if (sorg(cnt, cc) == 0)
                        {
                            f = 0;
                        }
                    }
                }
                if (f)
                {
                    list(0, listmax) = cnt;
                    list(1, listmax) = sdataref(0, cnt) + 21000;
                    ++listmax;
                }
            }
        }
    }
    list(0, listmax) = -1;
    list(1, listmax) = 30000;
    listn(0, listmax) = lang(u8"◆ 武器の専門"s, u8"Weapon Proficiency"s);
    ++listmax;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
        {
            f = 0;
            if (csctrl != 3)
            {
                if (sdata(cnt, cc) != 0)
                {
                    f = 1;
                }
            }
            else
            {
                if (sdata(cnt, cc) == 0)
                {
                    if (sdataref(0, cnt) != 0)
                    {
                        f = 1;
                    }
                }
            }
            if (f)
            {
                list(0, listmax) = cnt;
                list(1, listmax) = sdataref(0, cnt) + 31000;
                ++listmax;
            }
        }
    }
    if (csctrl != 2 && csctrl != 3)
    {
        list(0, listmax) = -1;
        list(1, listmax) = 40000;
        listn(0, listmax) = lang(u8"◆ 耐性と抵抗力"s, u8"Resistance"s);
        ++listmax;
        {
            int cnt = 50;
            for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
            {
                if (sdata(cnt, cc) != 0)
                {
                    list(0, listmax) = cnt;
                    list(1, listmax) = sdataref(0, cnt) + 41000;
                    ++listmax;
                }
            }
        }
    }
    label_2056();
    gsel(7);
    picload(exedir + u8"graphic\\ie_sheet.bmp"s);
    gsel(0);
    wx = (windoww - 700) / 2 + inf_screenx;
    wy = winposy(400) - 10;
    ww = 700;
    wh = 400;
    redraw(0);
    s = lang(u8"キャラクターシート"s, u8"Character Sheet"s);
    if (csctrl == 2)
    {
        s = lang(u8"能力訓練"s, u8"Skill Training"s);
    }
    if (csctrl == 3)
    {
        s = lang(u8"能力の習得"s, u8"Skill Learning"s);
    }
    drawmenu(0);
    if (mode != 1)
    {
        snd(94);
    }
    windowanime(wx, wy, ww, wh, 10, 4);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\face1"s + devfile + u8".bmp"s, 1);
    if (cdata(13, cc) < 0)
    {
        s = exedir + u8"user\\graphic\\face"s + abs((cdata(13, cc) + 1))
            + u8".bmp"s;
        exist(s);
        if (cdata(13, cc) != -1)
        {
            if (strsize != -1)
            {
                pos(0, 0);
                picload(s, 1);
            }
        }
    }
    gsel(0);
    if (returnfromportrait == 0)
    {
        redraw(0);
        gmode(6 - 1, -1, 80);
        pos(wx + 4, wy + 4);
        gcopy(7, 0, 0, 700, 400);
        gmode(2);
    }
    if (csctrl == 2)
    {
        txtnew();
        txt(lang(u8"どの能力を訓練する？"s, u8"Train which skill?"s));
    }
    returnfromportrait = 0;
label_2034_internal:
    if (csctrl != 1)
    {
        display_msg(inf_tiles + inf_screeny);
    }
    pagemax = (listmax - 1) / pagesize + 1;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    if (csctrl == 1)
    {
        pagemax = 0;
    }
    cs_bk = -1;
    redraw(0);
    if (csctrl == 0)
    {
        if (page == 0)
        {
            s = lang(u8"ｶｰｿﾙ [祝福と呪いの情報]  "s, u8"Cursor [Hint]  "s)
                + strhint6 + strhint2 + strhint3;
        }
        else
        {
            s = lang(u8"決定 [ボーナスの分配]  "s, u8"Enter [Spend Bonus]  "s)
                + strhint2 + strhint3;
        }
    }
    if (csctrl == 1)
    {
        s = lang(
            u8"決定ｷｰ [リロール]  "s + strhint6 + u8"Shift,Esc [最終確認]"s,
            u8"Enter Key [Reroll]  "s + strhint6 + u8"Shift,Esc [Confirm]"s);
    }
    if (csctrl == 2)
    {
        if (page == 0)
        {
            s = strhint6 + strhint2 + strhint3;
        }
        else
        {
            s = lang(u8"決定 [スキルを訓練]  "s, u8"Enter [Train Skill]  "s)
                + strhint2 + strhint3;
        }
    }
    if (csctrl == 3)
    {
        if (page == 0)
        {
            s = strhint6 + strhint2 + strhint3;
        }
        else
        {
            s = lang(u8"決定 [スキルを習得]  "s, u8"Enter [Learn Skill]  "s)
                + strhint2 + strhint3;
        }
    }
    if (csctrl == 4)
    {
        if (page == 0)
        {
            s = u8"ｶｰｿﾙ [祝福と呪いの情報] "s + strhint6 + strhint2 + strhint3;
        }
        else
        {
            s = strhint2 + strhint3;
        }
    }
    if (csctrl != 1)
    {
        if (page != 0)
        {
            s += ""s + key_mode2 + u8" ["s
                + lang(u8"スキルトラック"s, u8"Track Skill"s) + u8"]"s;
        }
    }
    showtitle(s, s, 236, 1);
label_2035_internal:
    redraw(0);
    s = "";
    if (csctrl == 0)
    {
        if (page != 0)
        {
            s = lang(
                u8"残り "s + cdata(41, cc)
                    + u8" のボーナスをスキルに分配できる"s,
                u8"You can spend "s + cdata(41, cc) + u8" bonus points."s);
        }
    }
    display_window2(
        (windoww - 700) / 2 + inf_screenx, winposy(400) - 10, 700, 400, 7);
    if (page == 0)
    {
        keyrange = 0;
        key_list = key_enter;
        display_topic(
            lang(
                u8"能力(元の値)  - 潜在能力"s,
                u8"Attributes(Org) - Potential"s),
            wx + 28,
            wy + 122);
        display_topic(
            lang(u8"各種修正"s, u8"Combat Rolls"s), wx + 400, wy + 253);
        display_topic(lang(u8"冒険の軌跡"s, u8"Trace"s), wx + 28, wy + 273);
        display_topic(
            lang(u8"祝福と呪い"s, u8"Blessing and Hex"s), wx + 400, wy + 122);
        display_topic(lang(u8"その他"s, u8"Extra Info"s), wx + 220, wy + 273);
        if (cdata(13, cc) >= 0)
        {
            p = cdata(8, cc) * 64 + cdata(13, cc);
            pos(wx + 560, wy + 27);
            gzoom(80, 112, 4, p % 16 * 48, p / 16 * 72, 48, 72);
        }
        else
        {
            s = exedir + u8"user\\graphic\\face"s + abs((cdata(13, cc) + 1))
                + u8".bmp"s;
            exist(s);
            if (cdata(13, cc) != -1)
            {
                if (strsize != -1)
                {
                    pos(wx + 560, wy + 27);
                    gzoom(80, 112, 4, 0, 0, 80, 112);
                }
            }
        }
        window2(wx + 557, wy + 23, 87, 120, 1, 10);
        if (cbit(967, cc) == 1)
        {
            pos(wx + 596 + 22, wy + 86 + 24);
            gmode(2, 32, 48);
            grotate(10 + cc, 32, 0, 0, 24, 40);
        }
        else
        {
            i = cdata(7, cc) % 1000;
            chara_preparepic(cdata(7, cc) % 1000, cdata(7, cc) / 1000);
            pos(wx + 596 + 22, wy + 86 + 24);
            gmode(2, chipc(2, i), chipc(3, i));
            grotate(
                5,
                0,
                960,
                0,
                chipc(2, i) / (1 + (chipc(3, i) > inf_tiles)),
                inf_tiles);
        }
        font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
        color(20, 10, 0);
        s(0) = lang(u8"レベル"s, u8"Level"s);
        s(1) = lang(u8"経験"s, u8"EXP"s);
        s(2) = lang(u8"必要値"s, u8"Next Lv"s);
        s(3) = lang(u8"信仰"s, u8"God"s);
        s(4) = lang(u8"所属"s, u8"Guild"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                pos(wx + 355, wy + 46 + cnt * 15);
                mes(s(cnt));
            }
        }
        s(0) = lang(u8"名前"s, u8"Name"s);
        s(1) = lang(u8"異名"s, u8"Aka"s);
        s(2) = lang(u8"種族"s, u8"Race"s);
        s(3) = lang(u8"性別"s, u8"Sex"s);
        s(4) = lang(u8"職業"s, u8"Class"s);
        s(5) = lang(u8"年齢"s, u8"Age"s);
        s(6) = lang(u8"身長"s, u8"Height"s);
        s(7) = lang(u8"体重"s, u8"Weight"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(wx + 30 + cnt / 4 * 190, wy + 61 + cnt % 4 * 15);
                mes(s(cnt));
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(wx + 37, wy + 157 + cnt * 15);
                gmode(2, inf_tiles, inf_tiles);
                grotate(1, cnt * inf_tiles, 672, 0, inf_tiles, inf_tiles);
                pos(wx + 54, wy + 151 + cnt * 15);
                mes(_stats2(cnt));
            }
        }
        s(0) = lang(u8"生命力"s, u8"Life"s);
        s(1) = lang(u8"マナ"s, u8"Mana"s);
        s(2) = lang(u8"狂気度"s, u8"Sanity"s);
        s(3) = lang(u8"速度"s, u8"Speed"s);
        s(4) = "";
        s(5) = lang(u8"名声"s, u8"Fame"s);
        s(6) = lang(u8"カルマ"s, u8"Karma"s);
        s(7) = "";
        s(8) = lang(u8"打撃修正"s, u8"Melee"s);
        s(9) = lang(u8"射撃修正"s, u8"Shoot"s);
        s(10) = "";
        s(11) = "";
        s(12) = "";
        s(13) = "";
        s(14) = "";
        s(15) = "";
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(wx + 255, wy + 151 + cnt * 15);
                mes(s(cnt));
            }
        }
        s(0) = lang(u8"ターン"s, u8"Turns"s);
        s(1) = lang(u8"経過日"s, u8"Days"s);
        s(2) = lang(u8"殺害数"s, u8"Kills"s);
        s(3) = lang(u8"総時間"s, u8"Time"s);
        s(4) = "";
        s(5) = "";
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                pos(wx + 32, wy + 301 + cnt * 15);
                mes(s(cnt));
            }
        }
        s(0) = lang(u8"荷車重量"s, u8"Cargo Wt"s);
        s(1) = lang(u8"荷車限界"s, u8"Cargo Lmt"s);
        s(2) = lang(u8"装備重量"s, u8"Equip Wt"s);
        s(3) = lang(u8"最深到達"s, u8"Deepest Lv"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
            {
                pos(wx + 224, wy + 301 + cnt * 15);
                mes(s(cnt));
            }
        }
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        s(0) = ""s + cdata(38, cc);
        s(1) = ""s + cdata(35, cc);
        s(2) = ""s + cdata(36, cc);
        s(3) = godname(cdata(61, cc));
        s(4) = guildname();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                pos(wx + 410 + en * 5, wy + 45 + cnt * 15);
                mes(s(cnt));
            }
        }
        s(0) = cdatan(0, cc);
        s(1) = cdatan(1, cc);
        dbidn = cdatan(2, cc);
        dbmode = 2;
        label_2297();
        s(2) = cnven(lang(""s + racename, cdatan(2, cc)));
        dbidn = cdatan(3, cc);
        dbmode = 2;
        label_2298();
        s(4) = cnven(lang(""s + classname, cdatan(3, cc)));
        if (cdata(8, cc) == 0)
        {
            s(3) = cnven(strmale);
        }
        else
        {
            s(3) = cnven(strfemale);
        }
        s(5) = ""s + calcage(cc) + u8" "s + lang(u8"歳"s, ""s);
        s(6) = ""s + cdata(19, cc) + u8" cm"s;
        s(7) = ""s + cdata(20, cc) + u8" kg"s;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(wx + 68 + cnt / 4 * 190 + en * ((cnt > 3) * 12),
                    wy + 60 + cnt % 4 * 15);
                mes(s(cnt));
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                s = u8"("s + sdata((10 + cnt + 600), cc) / 1000000 + u8")"s;
                if (encfind(cc, 60010 + cnt) != -1)
                {
                    s += u8"*"s;
                }
                pos(wx + 92, wy + 151 + cnt * 15);
                mes(""s + sdata((10 + cnt), cc));
                pos(wx + 124, wy + 151 + cnt * 15);
                mes(s);
                p = sdata((10 + cnt + 600), cc) % 1000;
                pos(wx + 176, wy + 152 + cnt * 15);
                if (p >= 200)
                {
                    mes(u8"Superb"s);
                    continue;
                }
                if (p >= 150)
                {
                    mes(u8"Great"s);
                    continue;
                }
                if (p >= 100)
                {
                    mes(u8"Good"s);
                    continue;
                }
                if (p >= 50)
                {
                    mes(u8"Bad"s);
                    continue;
                }
                mes(u8"Hopeless"s);
            }
        }
        s(0) = ""s + sdata(2, cc) + u8"("s + sorg(2, cc) + u8")"s;
        s(1) = ""s + sdata(3, cc) + u8"("s + sorg(3, cc) + u8")"s;
        s(2) = ""s + cdata(86, cc);
        s(3) = ""s + cdata(11, cc) + u8"("s + sorg(18, cc) + u8")"s;
        s(4) = "";
        s(5) = ""s + cdata(34, cc);
        s(6) = ""s + cdata(49, cc);
        s(7) = "";
        s(8) = "";
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(wx + 310, wy + 151 + cnt * 15);
                mes(s(cnt));
            }
        }
        val = 0;
        label_2047();
        tc = cc;
        font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
        color(20, 10, 0);
        pos(wx + 417, wy + 281 + p(2) * 16);
        mes(lang(u8"軽減"s, u8"Prot"s));
        pos(wx + 590 - en * 16, wy + 281 + p(2) * 16);
        mes(lang(u8"回避"s, u8"Evade"s));
        attackskill = 106;
        evade = calcattackhit(2);
        prot = calcattackdmg(2);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        pos(wx + 460 + en * 8, wy + 279 + p(2) * 16);
        mes(""s + (100 - 10000 / (prot + 100)) + u8"% + "s + protdice1 + u8"d"s
            + protdice2);
        pos(wx + 625 - en * 8, wy + 279 + p(2) * 16);
        mes(""s + evade + u8"%"s);
        ++p(2);
        s(0) = ""s + gdata(4) + ""s + lang(u8"ターン"s, u8" Turns"s);
        s(1) = ""s + gdata(7) + ""s + lang(u8"日"s, u8" Days"s);
        s(2) = ""s + gdata(2);
        s(3) =
            ""s + cnvplaytime((gdata(805) + timeGetTime() / 1000 - time_begin));
        s(4) = "";
        s(5) = "";
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                pos(wx + 80, wy + 299 + cnt * 15);
                mes(s(cnt));
            }
        }
        s(0) = ""s + cnvweight(gdata(80));
        s(1) = cnvweight(gdata(82));
        s(2) = cnvweight(cdata(64, cc)) + u8" "s + cnveqweight(cc);
        s(3) = cnvrank(gdata(1)) + lang(u8"階相当"s, u8" Level"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
            {
                pos(wx + 287 + en * 14, wy + 299 + cnt * 15);
                mes(s(cnt));
            }
        }
        cs_buffmax = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
            {
                x = wx + 430 + cnt / 3 * 40;
                y = wy + 151 + cnt % 3 * 32;
                if (cdata(280 + cnt * 3, cc) == 0)
                {
                    gmode(4 - 1, -1, 120);
                    pos(x, y);
                    gcopy(3, 320, 160, 32, 32);
                    gmode(2);
                    continue;
                }
                ++cs_buffmax;
                pos(x, y);
                gcopy(5, cdata((280 + cnt * 3), cc) * 32, 1120, 32, 32);
                if (cs_buff == cnt)
                {
                    pos(x, y);
                    gfini(32, 32);
                    gfinc(20, 20, 50);
                }
            }
        }
        if (cs_buffmax != 0)
        {
            calcbuff(
                -2,
                cdata(280 + cs_buff * 3, cc),
                cdata(280 + cs_buff * 3 + 1, cc));
            s = ""s + buffname(cdata((280 + cs_buff * 3), cc)) + u8": "s
                + cdata((280 + cs_buff * 3 + 2), cc)
                + lang(
                      (u8"("s + dur + u8")ﾀｰﾝの間、"s),
                      (u8"("s + dur + u8") "s))
                + buffdesc;
        }
        else
        {
            s = lang(
                u8"今は持続効果を受けていない"s,
                u8"This character isn't currently blessed or hexed."s);
        }
        font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
        pos(wx + 108, wy + 366);
        mes(s);
        font(lang(cfg_font1, cfg_font2), 11 + sizefix * 2 - en * 2, 1);
        color(20, 10, 0);
        pos(wx + 70, wy + 369 - en * 3);
        mes(lang(u8"説明:"s, u8"Hint:"s));
    }
    else
    {
        display_topic(lang(u8"能力の名称"s, u8"Name"s), wx + 28, wy + 36);
        display_topic(
            lang(u8"Lv(潜在)"s, u8"Lv(Potential)"s), wx + 182, wy + 36);
        display_topic(lang(u8"効果"s, u8"Detail"s), wx + 320, wy + 36);
        keyrange = 0;
        p(1) = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
            {
                p = pagesize * (page - 1) + cnt;
                if (p >= listmax)
                {
                    break;
                }
                key_list(cnt) = key_select(cnt);
                ++keyrange;
                if (list(0, p) < 0)
                {
                    p(1) = 1;
                    continue;
                }
                ++p(1);
                if (list(0, p) < 100)
                {
                    x = 52;
                    dx = 18;
                }
                else
                {
                    x = 70;
                    dx = 0;
                }
                if (p(1) % 2 == 0)
                {
                    pos(wx + x, wy + 66 + cnt * 19);
                    gfini(595 + dx, 18);
                    gfdec2(12, 14, 16);
                }
                if (list(0, p) < 100)
                {
                    continue;
                }
                display_key(wx + 58, wy + 64 + cnt * 19, cnt);
            }
        }
    }
    if (page > 0)
    {
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        cs_listbk();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
            {
                p = pagesize * (page - 1) + cnt;
                if (p >= listmax)
                {
                    break;
                }
                if (list(0, p) >= 0)
                {
                    i = list(0, p);
                    if (i < 100)
                    {
                        x = 54;
                        p(1) = 10;
                    }
                    else
                    {
                        x = 84;
                        p(1) = sdataref(0, i) - 10;
                    }
                    pos(wx + 38, wy + 75 + cnt * 19);
                    gmode(2, inf_tiles, inf_tiles);
                    grotate(1, p(1) * inf_tiles, 672, 0, inf_tiles, inf_tiles);
                    s = skillname(i);
                    if (i >= 50 && i < 100)
                    {
                        s = lang(""s, u8"Resist "s) + cnven(s)
                            + lang(u8"耐性"s, ""s);
                    }
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                        {
                            if (gdata(750 + cnt) == cc * 10000 + i)
                            {
                                s = u8"*"s + s;
                            }
                        }
                    }
                    cs_list(cnt, s, wx + x, wy + 66 + cnt * 19 - 1, 19);
                    if (list(0, p) >= 50 && list(0, p) < 100)
                    {
                        p(1) = limit(sdata(list(0, p), cc) / 50, 0, 6);
                        s = _resist(p(1));
                    }
                    else
                    {
                        s = elona_str(sdata(list(0, p) + 600, cc));
                        s = strmid(s, -1, 6);
                        s = ""s + sorg(i, cc) + u8"."s + strmid(s, 0, 3);
                        if (sorg(i, cc) != sdata(i, cc))
                        {
                            p(1) = sdata(i, cc) - sorg(i, cc);
                        }
                        s += u8"("s + sgrowth(i, cc) + u8"%)"s;
                    }
                    pos(wx + 280 - strlen_u(s) * 7, wy + 66 + cnt * 19 + 2);
                    mes(s);
                    pos(wx + 330, wy + 66 + cnt * 19 + 2);
                    mes(skilldesc(i));
                    if (csctrl == 2 || csctrl == 3)
                    {
                        if (csctrl == 2)
                        {
                            s = ""s + calctraincost(i, cc) + u8"p "s;
                        }
                        else
                        {
                            s = ""s + calclearncost(i, cc) + u8"p "s;
                        }
                        pos(wx + 322 - strlen_u(s) * 7, wy + 66 + cnt * 19 + 2);
                        mes(s);
                    }
                    else
                    {
                        if (sorg(i, cc) != sdata(i, cc))
                        {
                            i = sdata(i, cc) - sorg(i, cc);
                            if (list(0, p) >= 50)
                            {
                                i = i / 50;
                            }
                            else
                            {
                                i = i / 5;
                            }
                            s = "";
                            putenclv(i);
                            pos(wx + 282, wy + 66 + cnt * 19 + 2);
                            mes(s);
                        }
                    }
                }
                else
                {
                    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
                    cs_list(cnt, listn(0, p), wx + 88, wy + 66 + cnt * 19, 19);
                    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
                }
            }
        }
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (page == 0)
    {
        if (key == u8"p"s)
        {
            if (cc < 16)
            {
                label_2039();
                if (mode != 1)
                {
                    nowindowanime = 1;
                }
                returnfromportrait = 1;
                goto label_20331;
            }
        }
        if (key == key_north)
        {
            --cs_buff;
            if (cs_buff < 0)
            {
                cs_buff = cs_buffmax - 1;
            }
            goto label_2034_internal;
        }
        if (key == key_south)
        {
            ++cs_buff;
            if (cs_buff >= cs_buffmax)
            {
                cs_buff = 0;
            }
            goto label_2034_internal;
        }
    }
    else
    {
        if (csctrl != 1)
        {
            if (key == key_mode2)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
                    {
                        i = list(0, pagesize * (page - 1) + cs);
                        break;
                    }
                }
                if (i != -1)
                {
                    p = 750;
                    {
                        int cnt = 750;
                        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                        {
                            if (gdata(cnt) % 10000 == 0)
                            {
                                p = cnt;
                            }
                            if (gdata(cnt) == cc * 10000 + i)
                            {
                                p = cnt;
                                i = 0;
                                break;
                            }
                        }
                    }
                    gdata(p) = cc * 10000 + i;
                    snd(20);
                }
            }
        }
    }
    if (csctrl == 1)
    {
        if (key == key_enter)
        {
            snd(103);
            stat = 0;
            return stat;
        }
        if (key == key_cancel)
        {
            stat = 1;
            return stat;
        }
        goto label_2035_internal;
    }
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * (page - 1) + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        if (csctrl != 4)
        {
            csskill = p;
            if (csctrl == 2 || csctrl == 3)
            {
                screenupdate = -1;
                label_1419();
                tc = tcbk;
                stat = 0;
                return stat;
            }
            if (cdata(41, 0) < 1 || p < 0 || p < 100)
            {
                goto label_2034_internal;
            }
            if (sorg(csskill, 0) == 0)
            {
                snd(27);
                goto label_2034_internal;
            }
            --cdata(41, 0);
            snd(19);
            skillexp(csskill, cc, 400, 2, 1000);
            modgrowth(
                cc, csskill, limit(15 - sgrowth(csskill, cc) / 15, 2, 15));
            redraw(0);
            label_1421();
            goto label_2034_internal;
        }
    }
    if (key == key_pageup)
    {
        ++page;
        snd(1);
        goto label_2034_internal;
    }
    if (key == key_pagedown)
    {
        --page;
        snd(1);
        goto label_2034_internal;
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 3)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 3;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    csctrl = 0;
                    goto label_20331;
                }
                if (curmenu == 1)
                {
                    label_2050();
                    stat = 0;
                    return stat;
                }
                if (curmenu == 2)
                {
                    label_19672();
                    stat = 0;
                    return stat;
                }
                if (curmenu == 3)
                {
                    label_1859();
                    stat = 0;
                    return stat;
                }
            }
        }
    }
    if (key == key_cancel)
    {
        menucycle = 0;
        if (csctrl == 0)
        {
            label_1419();
            label_2743(false);
        }
        else
        {
            screenupdate = -1;
            label_1419();
            tc = tcbk;
            stat = 0;
            return stat;
        }
    }
    goto label_2035_internal;
}
void label_2038()
{
    rtval = -2;
    if (page == 0)
    {
        if (val == 0)
        {
            rtval = -2;
        }
        if (val == 1)
        {
            rtval(0) = 100;
            rtval(1) = 0;
            rtval(2) = cdata(13, cc);
        }
        if (val == 2)
        {
            rtval(0) = 1;
            rtval(1) = 0;
            rtval(2) = pcc(1, cc) % 1000;
            rtvaln = u8"hair"s;
        }
        if (val == 3)
        {
            rtval(0) = 10;
            rtval(1) = 0;
            rtval(2) = pcc(10, cc) % 1000;
            rtvaln = u8"subhair"s;
        }
        if (val == 4)
        {
            rtval(0) = 1;
            rtval(1) = 1;
            rtval(2) = pcc(1, cc) / 1000;
        }
        if (val == 5)
        {
            rtval(0) = 15;
            rtval(1) = 0;
            rtval(2) = pcc(15, cc) % 1000;
            rtvaln = u8"body"s;
        }
        if (val == 6)
        {
            rtval(0) = 9;
            rtval(1) = 0;
            rtval(2) = pcc(9, cc) % 1000;
            rtvaln = u8"cloth"s;
        }
        if (val == 7)
        {
            rtval(0) = 7;
            rtval(1) = 0;
            rtval(2) = pcc(7, cc) % 1000;
            rtvaln = u8"pants"s;
        }
        if (val == 8)
        {
            rtval = -1;
            rtvaln = "";
        }
        if (val == 9)
        {
            if (cc != 0)
            {
                rtval(0) = 101;
                rtval(1) = 0;
                rtval(2) = cbit(967, cc);
            }
            else
            {
                rtval(0) = 16;
                rtval(1) = 0;
                rtval(2) = pcc(16, cc) % 1000;
                rtvaln = u8"ride"s;
            }
        }
    }
    else
    {
        if (val == 0)
        {
            rtval(0) = 15;
            rtval(1) = 1;
            rtval(2) = pcc(15, cc) / 1000;
        }
        if (val == 1)
        {
            rtval(0) = 9;
            rtval(1) = 1;
            rtval(2) = pcc(9, cc) / 1000;
        }
        if (val == 2)
        {
            rtval(0) = 7;
            rtval(1) = 1;
            rtval(2) = pcc(7, cc) / 1000;
        }
        if (val == 3)
        {
            rtval(0) = 11;
            rtval(1) = 0;
            rtval(2) = pcc(11, cc) % 1000;
            rtvaln = u8"etc"s;
        }
        if (val == 4)
        {
            rtval(0) = 12;
            rtval(1) = 0;
            rtval(2) = pcc(12, cc) % 1000;
            rtvaln = u8"etc"s;
        }
        if (val == 5)
        {
            rtval(0) = 13;
            rtval(1) = 0;
            rtval(2) = pcc(13, cc) % 1000;
            rtvaln = u8"etc"s;
        }
        if (val == 6)
        {
            rtval(0) = 14;
            rtval(1) = 0;
            rtval(2) = pcc(14, cc) % 1000;
            rtvaln = u8"eye"s;
        }
        if (val == 7)
        {
            rtval = -1;
            rtvaln = "";
        }
    }
    return;
}
int label_2039()
{
    create_pcpic(cc, 0);
    page = 0;
    pagesize = 19;
    cs = 0;
    cs_bk = -1;
    ww = 380;
    wh = 340;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
    snd(97);
    windowanime(wx, wy, ww, wh, 10, 7);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\face1"s + devfile + u8".bmp"s, 1);
    buffer(7, 800, 112);
    color(0, 0, 0);
    boxf();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            s = exedir + u8"user\\graphic\\face"s + (cnt + 1) + u8".bmp"s;
            exist(s);
            if (strsize != -1)
            {
                pos(cnt * 80, 0);
                picload(s, 1);
            }
        }
    }
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_mirror.bmp"s, 1);
    gsel(0);
    windowshadow = 1;
label_2040_internal:
    listmax = 0;
    if (page == 0)
    {
        if (jp)
        {
            s(0) = u8"決定    "s;
            s(1) = u8"肖像　　"s;
            s(2) = u8"髪　　　"s;
            s(3) = u8"副髪　　"s;
            s(4) = u8"髪の色　"s;
            s(5) = u8"体　　　"s;
            s(6) = u8"服　　　"s;
            s(7) = u8"ﾊﾟﾝﾂ　　"s;
            s(8) = u8"詳細設定"s;
        }
        if (en)
        {
            s(0) = u8"Done    "s;
            s(1) = u8"Portrait"s;
            s(2) = u8"Hair    "s;
            s(3) = u8"Sub Hair"s;
            s(4) = u8"Hair CL "s;
            s(5) = u8"Body    "s;
            s(6) = u8"Cloth   "s;
            s(7) = u8"Pants   "s;
            s(8) = u8"Set Detail"s;
        }
        if (cc != 0)
        {
            s(9) = lang(u8"ｶｽﾀﾑｷｬﾗ "s, u8"Custom  "s);
        }
        else
        {
            s(9) = lang(u8"乗馬時　"s, u8"Riding  "s);
        }
        p = 9 + (cc != 0) + (cc == 0) * (gdata(183) != 0);
    }
    else
    {
        if (jp)
        {
            s(0) = u8"体の色　"s;
            s(1) = u8"服の色　"s;
            s(2) = u8"ﾊﾟﾝﾂの色"s;
            s(3) = u8"ｱｸｾｻﾘ1　"s;
            s(4) = u8"ｱｸｾｻﾘ2　"s;
            s(5) = u8"ｱｸｾｻﾘ3　"s;
            s(6) = u8"目　　　"s;
            s(7) = u8"基本設定"s;
        }
        if (en)
        {
            s(0) = u8"Body CL "s;
            s(1) = u8"Cloth CL"s;
            s(2) = u8"Pants CL"s;
            s(3) = u8"Etc1    "s;
            s(4) = u8"Etc2    "s;
            s(5) = u8"Etc3    "s;
            s(6) = u8"Eyes    "s;
            s(7) = u8"Set Basic"s;
        }
        p = 8;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            list(0, cnt) = cnt;
            listn(0, cnt) = s(cnt);
            ++listmax;
        }
    }
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_enter;
            ++keyrange;
        }
    }
label_2041_internal:
    redraw(0);
    pagesize = 0;
    s(0) = lang(u8"肖像の変更"s, u8"Appearence"s);
    s(1) = lang(
        u8"左右キー [変更]  ｷｬﾝｾﾙ [閉じる]"s,
        u8"Right,left [Change]  Shift,Esc [Close]"s);
    display_window(
        (windoww - 380) / 2 + inf_screenx, winposy(340) - 12, 380, 340);
    pagesize = listmax;
    display_topic(lang(u8"項目"s, u8"Category"s), wx + 34, wy + 36);
    pos(wx + ww - 40, wy);
    gcopy(3, 960, 96, 48, 120);
    ++i;
    if (i % 100 < 45)
    {
        f = i % 16;
    }
    else
    {
        ++f;
    }
    window2(wx + 234, wy + 71, 88, 120, 1, 1);
    if (cs == 1 && page == 0)
    {
        if (cdata(13, cc) >= 0)
        {
            p = cdata(8, cc) * 64 + cdata(13, cc);
            pos(wx + 238, wy + 75);
            gzoom(80, 112, 4, p % 16 * 48, p / 16 * 72, 48, 72);
        }
        else
        {
            if (cdata(13, cc) != -1)
            {
                pos(wx + 238, wy + 75);
                gzoom(80, 112, 7, abs((cdata(13, cc) + 2)) * 80, 0, 80, 112);
            }
        }
    }
    else
    {
        if (cbit(967, cc) == 1)
        {
            pos(wx + 280, wy + 130);
            gmode(2, 32, 48);
            grotate(10 + cc, f / 4 % 4 * 32, f / 16 % 4 * 48, 0, 48, 80);
        }
        else
        {
            i = cdata(7, cc) % 1000;
            chara_preparepic(cdata(7, cc) % 1000, cdata(7, cc) / 1000);
            pos(wx + 280, wy + 130);
            gmode(2, chipc(2, i), chipc(3, i));
            grotate(5, 0, 960, 0, chipc(2, i), chipc(3, i));
        }
    }
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            if (p >= listmax)
            {
                break;
            }
            val(0) = cnt;
            val(1) = 0;
            label_2038();
            s = listn(0, p);
            if (rtval >= 0)
            {
                if (rtval(2) >= 0)
                {
                    s += u8" "s + rtval(2);
                }
                else
                {
                    if (rtval(2) == -1)
                    {
                        s += u8" N/A"s;
                    }
                    else
                    {
                        s += u8" u"s + (abs(rtval(2)) - 1);
                    }
                }
            }
            cs_list(cnt, s, wx + 60, wy + 66 + cnt * 21 - 1, 19, 0);
            if (rtval != -2)
            {
                pos(wx + 30, wy + 66 + cnt * 21 - 5);
                gcopy(3, 312, 336, 24, 24);
                pos(wx + 175, wy + 66 + cnt * 21 - 5);
                gcopy(3, 336, 336, 24, 24);
            }
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    val(0) = cs;
    val(1) = 0;
    label_2038();
    p = 0;
    if (rtval == -2)
    {
        if (key == key_enter)
        {
            create_pcpic(cc, 1);
            stat = 1;
            return stat;
        }
        if (key == key_pageup || key == key_pagedown)
        {
            key = ""s;
        }
    }
    else
    {
        if (key == key_enter)
        {
            key = key_pageup;
        }
    }
    if (rtval == -1)
    {
        if (key == key_pageup || key == key_pagedown)
        {
            snd(5);
            if (page == 0)
            {
                page = 1;
            }
            else
            {
                page = 0;
                cs = 8;
            }
            goto label_2040_internal;
        }
    }
    if (key == key_pageup)
    {
        snd(5);
        if (rtval == 100)
        {
            if (cdata(13, cc) < 31)
            {
                ++cdata(13, cc);
            }
            goto label_2041_internal;
        }
        if (rtval == 101)
        {
            cbitmod(967, cc, 1);
            goto label_2041_internal;
        }
        if (rtval(1) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + rtvaln + u8"_"s
                + (pcc(rtval, cc) % 1000 + 1) + u8".bmp"s);
            if (strsize != -1)
            {
                ++pcc(rtval, cc);
                p = 1;
            }
        }
        else
        {
            if (pcc(rtval, cc) / 1000 < 21)
            {
                pcc(rtval, cc) += 1000;
                p = 1;
            }
        }
    }
    if (key == key_pagedown)
    {
        snd(5);
        if (rtval == 100)
        {
            if (cdata(13, cc) > -10)
            {
                --cdata(13, cc);
            }
            goto label_2041_internal;
        }
        if (rtval == 101)
        {
            cbitmod(967, cc, 0);
            goto label_2041_internal;
        }
        if (rtval(1) == 0)
        {
            exist(
                exedir + u8"\\graphic\\pcc_"s + rtvaln + u8"_"s
                + (pcc(rtval, cc) % 1000 - 1) + u8".bmp"s);
            if (pcc(rtval, cc) % 1000 == 1 && rtval != 15 || strsize != -1)
            {
                --pcc(rtval, cc);
                p = 1;
            }
        }
        else
        {
            if (pcc(rtval, cc) / 1000 > 0)
            {
                pcc(rtval, cc) -= 1000;
                p = 1;
            }
        }
    }
    create_pcpic(cc, 0);
    if (key == key_cancel)
    {
        create_pcpic(cc, 1);
        stat = 0;
        return stat;
    }
    if (mode == 1)
    {
        getkey(p, 112);
        if (p)
        {
            stat = -1;
            return stat;
        }
    }
    goto label_2041_internal;
}
int label_2044()
{
    create_pcpic(cc, 1);
    snd(26);
    page = 0;
    pagesize = 18;
    cs = 0;
    cs_bk = -1;
    windowshadow = 1;
    listmax = 0;
    if (jp)
    {
        s(0) = u8"決定    "s;
        s(1) = u8"胸部鎧　"s;
        s(2) = u8"脚部鎧　"s;
        s(3) = u8"ベルト　"s;
        s(4) = u8"ｸﾞﾛｰﾌﾞ　"s;
        s(5) = u8"マント　"s;
    }
    if (en)
    {
        s(0) = u8"Done    "s;
        s(1) = u8"Chest   "s;
        s(2) = u8"Leg     "s;
        s(3) = u8"Belt    "s;
        s(4) = u8"Glove   "s;
        s(5) = u8"Mantle  "s;
    }
    p = 6;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            list(0, cnt) = cnt;
            listn(0, cnt) = s(cnt);
            ++listmax;
        }
    }
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_enter;
            ++keyrange;
        }
    }
label_2045_internal:
    redraw(0);
    pagesize = 0;
    s(0) = lang(u8"装備表示の変更"s, u8"Parts to hide"s);
    s(1) = lang(
        u8"左右キー [変更]  ｷｬﾝｾﾙ [閉じる]"s,
        u8"Right,left [Change]  Shift,Esc [Close]"s);
    display_window(
        (windoww - 360) / 2 + inf_screenx, winposy(289) - 12, 360, 289);
    s = lang(u8"項目"s, u8"Part"s);
    pagesize = listmax;
    display_topic(s, wx + 34, wy + 36);
    ++i;
    if (i % 100 < 45)
    {
        f = i % 16;
    }
    else
    {
        ++f;
    }
    window2(wx + 234, wy + 60, 88, 120, 1, 1);
    pos(wx + 280, wy + 120);
    gmode(2, 32, 48);
    grotate(10 + cc, f / 4 % 4 * 32, f / 16 % 4 * 48, 0, 48, 80);
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            if (p >= listmax)
            {
                break;
            }
            s = listn(0, p);
            if (cnt != 0)
            {
                if (pcc(20 + cnt - 1, cc) == 0)
                {
                    s += u8"On"s;
                }
                else
                {
                    s += u8"Off"s;
                }
                pos(wx + 30, wy + 66 + cnt * 21 - 5);
                gcopy(3, 312, 336, 24, 24);
                pos(wx + 175, wy + 66 + cnt * 21 - 5);
                gcopy(3, 336, 336, 24, 24);
            }
            cs_list(cnt, s, wx + 60, wy + 66 + cnt * 21 - 1, 19, 0);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (cs != 0)
    {
        if (key == key_enter)
        {
            key = key_pageup;
        }
        if (key == key_pageup || key == key_pagedown)
        {
            if (pcc(20 + cs - 1, cc) == 0)
            {
                pcc(20 + cs - 1, cc) = 1;
            }
            else
            {
                pcc(20 + cs - 1, cc) = 0;
            }
            create_pcpic(cc, 1);
            snd(5);
        }
    }
    if (cs == 0 && key == key_enter || key == key_cancel)
    {
        snd(20);
        create_pcpic(cc, 1);
        stat = 1;
        return stat;
    }
    goto label_2045_internal;
}
void label_2047()
{
    p(1) = 0;
    p(2) = 0;
    attackskill = 106;
    ammo = -1;
    attacknum = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            body = 100 + cnt;
            if (cdata(body, cc) % 10000 == 0)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 10)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 11)
            {
                continue;
            }
            cw = cdata(body, cc) % 10000 - 1;
            if (inv(10, cw) > 0)
            {
                attackskill = inv(16, cw);
                ++p(1);
                s(1) = lang(u8"武器"s, u8"Melee"s) + p(1);
                ++attacknum;
                label_2048();
            }
        }
    }
    if (attackskill == 106)
    {
        s(1) = lang(u8"格闘"s, u8"Unarmed"s);
        label_2048();
    }
    attacknum = 0;
    label_2075();
    if (stat == 1)
    {
        s(1) = lang(u8"射撃"s, u8"Dist"s);
        label_2048();
    }
    return;
}
void label_2048()
{
    tc = cc;
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    color(20, 10, 0);
    if (val == 0)
    {
        pos(wx + 590, wy + 281 + p(2) * 16);
        mes(lang(u8"命中"s, u8"Hit"s));
        pos(wx + 417, wy + 281 + p(2) * 16);
        mes(s(1));
    }
    attackrange = 0;
    if (refitem(inv(3, cw), 5) == 24000)
    {
        attackrange = 1;
    }
    attackvar = 0;
    hit = calcattackhit(1);
    dmg = calcattackdmg(1);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    s(2) = ""s + dmgmulti;
    s = ""s + tohit + u8"%"s;
    if (val == 0)
    {
        pos(wx + 625 - en * 8, wy + 279 + p(2) * 16);
        mes(s);
    }
    else
    {
        s(3) = s;
    }
    s = ""s + dice1 + u8"d"s + dice2 + cnvfix(dmgfix) + u8" x"s
        + strmid(s(2), 0, (3 + (elona_int(s(2)) >= 10)));
    if (val == 0)
    {
        pos(wx + 460 + en * 8, wy + 279 + p(2) * 16);
        mes(s);
    }
    else
    {
        noteadd(s(1) + u8"   : "s + fixtxt(s(3), 12) + u8" "s + fixtxt(s, 20));
    }
    ++p(2);
    return;
}
void label_2049()
{
    attacknum = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            body = 100 + cnt;
            if (cdata(body, cc) / 10000 != 5)
            {
                continue;
            }
            if (cdata(body, cc) % 10000 == 0)
            {
                continue;
            }
            cw = cdata(body, cc) % 10000 - 1;
            if (inv(10, cw) == 0)
            {
                continue;
            }
            ++attacknum;
            if (cdata(32, cc) && 2)
            {
                if (inv(7, cw) >= 4000)
                {
                    txt(lang(
                        u8"装備中の"s + itemname(cw)
                            + u8"は両手にしっくりとおさまる。"s,
                        itemname(cw)
                            + u8" fits well for two-hand fighting style."s));
                }
                else
                {
                    txt(lang(
                        u8"装備中の"s + itemname(cw)
                            + u8"は両手持ちにはやや軽すぎる。"s,
                        itemname(cw)
                            + u8" is too light for two-hand fighting style."s));
                }
            }
            if (cdata(32, cc) && 4)
            {
                if (attacknum == 1)
                {
                    if (inv(7, cw) >= 4000)
                    {
                        txt(lang(
                            u8"装備中の"s + itemname(cw)
                                + u8"は利手で扱うにも重すぎる。"s,
                            itemname(cw)
                                + u8" is too heavy for two-wield fighting style."s));
                    }
                }
                else
                {
                    if (inv(7, cw) > 1500)
                    {
                        txt(lang(
                            u8"装備中の"s + itemname(cw)
                                + u8"は片手で扱うには重すぎる。"s,
                            itemname(cw)
                                + u8" is too heavy for two-wield fighting style."s));
                    }
                }
            }
        }
    }
    if (cc == 0)
    {
        if (gdata(183) != 0)
        {
            if (inv(7, cw) >= 4000)
            {
                txt(lang(
                    u8"装備中の"s + itemname(cw)
                        + u8"は乗馬中に扱うには重過ぎる。"s,
                    itemname(cw) + u8" is too heavy to use when riding."s));
            }
        }
    }
    return;
}
void label_2050()
{
    cc = 0;
    page = 0;
    pagesize = 14;
    listmax = 0;
    cs = 0;
    cs_bk = -1;
    if (cs_prev != 0)
    {
        cs = cs_prev;
        cs_prev = 0;
    }
    curmenu = 1;
    mainhand = 0;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, cc) != 0)
            {
                if (trait(206) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 2)
                    {
                        continue;
                    }
                }
                if (trait(203) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 9)
                    {
                        continue;
                    }
                }
                if (trait(205) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 3)
                    {
                        continue;
                    }
                }
                if (mainhand == 0)
                {
                    if (cdata(cnt, cc) / 10000 == 5)
                    {
                        mainhand = cnt;
                    }
                }
                list(0, listmax) = cnt;
                list(1, listmax) = cdata(cnt, cc) / 10000;
                ++listmax;
            }
        }
    }
    label_2056();
    redraw(0);
    drawmenu();
    ww = 690;
    wh = 380;
    wx = (windoww - 690) / 2 + inf_screenx;
    wy = winposy(380);
    if (nowindowanime == 0)
    {
        snd(95);
    }
    windowanime(wx, wy, ww, wh, 10, 4);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_wear.bmp"s, 1);
    gsel(0);
    windowshadow = 1;
label_2051_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2052_internal:
    redraw(0);
    s(0) = lang(u8"装備品"s, u8"Equipment"s);
    s(1) = strhint5 + strhint5b + strhint3;
    display_window(
        (windoww - 690) / 2 + inf_screenx, winposy(428), 690, 428, 64);
    display_topic(
        lang(u8"部位/装備品名称"s, u8"Category/Name"s), wx + 28, wy + 30);
    if (showresist == 0)
    {
        display_topic(lang(u8"重さ"s, u8"Weight"s), wx + 524, wy + 30);
    }
    pos(wx + 46, wy - 16);
    gcopy(3, 768, 48, 48, 48);
    pos(wx + ww - 106, wy);
    gcopy(3, 960, 96, 96, 120);
    pos(wx, wy + wh - 164);
    gcopy(3, 960, 216, 72, 144);
    if (showresist)
    {
        pos(wx + 320, wy + 40);
        color(0, 0, 0);
        mes(lang(
            u8"火 冷 雷 闇 幻 毒 獄 音 神 沌 魔"s,
            u8"Fi Co Li Da Mi Po Nt So Nr Ch Ma"s));
    }
    display_note(
        lang(u8"装備重量: "s, u8"Equip weight: "s) + cnvweight(cdata(64, cc))
        + cnveqweight(cc) + lang(u8" 命中修正:"s, u8" Hit Bonus:"s)
        + cdata(72, cc) + lang(u8" ダメージ修正:"s, u8" Damage Bonus:"s)
        + cdata(73, cc) + u8"  DV/PV:"s + cdata(71, cc) + u8"/"s
        + cdata(70, cc));
    color(0, 0, 0);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    gmode(2);
    keyrange = 0;
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 100, wy + 60 + cnt * 19);
                gfini(558, 18);
                gfdec(12, 14, 16);
            }
            q = bodyn(list(1, p));
            if (list(0, p) == mainhand)
            {
                q = lang(u8"利手"s, u8"Hand*"s);
            }
            pos(wx + 22, wy + 60 + cnt * 19 - 4);
            gcopy(3, 600 + (list(1, p) - 1) * 24, 336, 24, 24);
            pos(wx + 46, wy + 60 + cnt * 19 + 3);
            mes(q);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            display_key(wx + 88, wy + 60 + cnt * 19 - 2, cnt);
            p(1) = cdata(list(0, p), cc);
            s(0) = u8"-    "s;
            s(1) = u8"-"s;
            if (p(1) % 10000 != 0)
            {
                p(1) = p(1) % 10000 - 1;
                s(0) = itemname(p(1));
                s(1) = cnvweight(inv(7, p(1)));
                p(2) = inv(2, p(1));
                gsel(1);
                color(0);
                boxf(0, 960, chipi(2, p(2)), chipi(3, p(2)) + 960);
                if (p(2) == 528)
                {
                    gmode(2);
                    pos(0, 960);
                    gcopy(1, 0, 768, inf_tiles, inf_tiles);
                    pos(0, 1008);
                    gzoom(
                        22,
                        20,
                        5,
                        chipc(0, inv(22, p(1))) + 8,
                        chipc(1, inv(22, p(1))) + 4
                            + (chipc(3, inv(22, p(1))) > inf_tiles) * 8,
                        chipc(2, inv(22, p(1))) - 16,
                        chipc(3, inv(22, p(1))) - 8
                            - (chipc(3, inv(22, p(1))) > inf_tiles) * 10,
                        1);
                    pos(6, 974);
                    gcopy(1, 0, 1008, 22, 20);
                    gsel(selcur);
                }
                else
                {
                    if (p(2) == 531)
                    {
                        pos(8, 1058 - chipc(3, inv(22, p(1))));
                        gcopy(
                            5,
                            chipc(0, inv(22, p(1))) + 8,
                            chipc(1, inv(22, p(1))) + 2,
                            chipc(2, inv(22, p(1))) - 16,
                            chipc(3, inv(22, p(1))) - 8);
                        gmode(4 - 1, -1, 150);
                        color(0, 0, 0);
                        pos(0,
                            960 + (chipc(3, inv(22, p(1))) == inf_tiles) * 48);
                        gcopy(
                            1,
                            144,
                            768 + (chipc(3, inv(22, p(1))) > inf_tiles) * 48,
                            inf_tiles,
                            chipc(3, inv(22, p(1)))
                                + (chipc(3, inv(22, p(1))) > inf_tiles) * 48);
                        gmode(2);
                        gsel(selcur);
                    }
                    else
                    {
                        pos(0, 960);
                        gcopy(
                            1,
                            chipi(0, p(2)),
                            chipi(1, p(2)),
                            chipi(2, p(2)),
                            chipi(3, p(2)));
                        gfini(chipi(2, p(2)), chipi(3, p(2)));
                        gfdec2(
                            c_col(0, inv(22, p(1))),
                            c_col(1, inv(22, p(1))),
                            c_col(2, inv(22, p(1))));
                        gsel(selcur);
                    }
                }
                pos(wx + 126, wy + 70 + cnt * 19);
                gmode(2, inf_tiles, inf_tiles);
                grotate(1, 0, 960, 0, chipi(2, p(2)), chipi(3, p(2)));
                if (showresist)
                {
                    equipinfo(p(1), wx + 320, wy + 60 + cnt * 19 + 2);
                    s = strmid(s, 0, 22);
                }
            }
            else
            {
                p(1) = -1;
            }
            cs_list(
                cnt,
                s,
                wx + 140 - 26,
                wy + 60 + cnt * 19 - 1,
                19,
                30,
                p(1) != -1,
                p(1));
            pos(wx + 640 - strlen_u(s(1)) * 7, wy + 60 + cnt * 19 + 2);
            mes(s(1));
        }
    }
    cs_bk = cs;
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        cs_prev = cs;
        body = p;
        if (cdata(body, cc) % 10000 != 0)
        {
            gdata(808) = 1;
            ci = cdata(body, cc) % 10000 - 1;
            if (inv(17, ci) == -1 || inv(17, ci) == -2)
            {
                txt(lang(
                    itemname(ci) + u8"は外せない。"s,
                    ""s + itemname(ci) + u8" can't be taken off."s));
                goto label_2051_internal;
            }
            r1 = cc;
            label_2195();
            r1 = cc;
            label_1477();
            snd(13);
            txtnew();
            txt(lang(
                itemname(ci) + u8"を外した。"s,
                u8"You unequip "s + itemname(ci) + u8"."s));
            if (cdata(body, cc) / 10000 == 5)
            {
                label_2049();
            }
            redraw(0);
            label_1421();
            goto label_2051_internal;
        }
        nowindowanime = 1;
        menucycle = 0;
        invctrl = 6;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_identify)
    {
        p = list(0, pagesize * page + cs);
        if (cdata(p, cc) % 10000 != 0)
        {
            ci = cdata(p, cc) % 10000 - 1;
            cs_prev = cs;
            label_2068();
            nowindowanime = 1;
            returnfromidentify = 0;
            screenupdate = -1;
            label_1419();
            label_2050();
            return;
        }
    }
    if (key == key_mode)
    {
        if (showresist == 1)
        {
            showresist = 0;
        }
        else
        {
            showresist = 1;
        }
        snd(1);
        goto label_2051_internal;
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 3)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 3;
                }
            }
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    csctrl = 0;
                    label_20332();
                    return;
                }
                if (curmenu == 1)
                {
                    label_2050();
                    return;
                }
                if (curmenu == 2)
                {
                    label_19672();
                    return;
                }
                if (curmenu == 3)
                {
                    label_1859();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2051_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2051_internal;
        }
    }
    if (key == key_cancel)
    {
        menucycle = 0;
        create_pcpic(cc, 1);
        label_1419();
        label_2743(false);
    }
    goto label_2052_internal;
}
void label_2054()
{
    if (map(cdata(1, 0), cdata(2, 0), 6) != 0)
    {
        if (gdata(20) != 35 || 0)
        {
            cell_itemoncell(cdata(1, 0), cdata(2, 0));
            if (stat == 0)
            {
                cell_featread(cdata(1, 0), cdata(2, 0));
                if (feat(1) == 29)
                {
                    if (gdata(20) != 35)
                    {
                        if (feat < tile_plant + 2)
                        {
                            txt(lang(
                                u8"芽を摘み取った。"s,
                                u8"You nip a young plant."s));
                            map(cdata(1, 0), cdata(2, 0), 6) = 0;
                            label_2742();
                            return;
                        }
                        if (feat == tile_plant + 3)
                        {
                            txt(lang(
                                u8"枯れた草を摘み取った。"s,
                                u8"You nip a dead plant."s));
                            map(cdata(1, 0), cdata(2, 0), 6) = 0;
                            label_2742();
                            return;
                        }
                        if (inv_getspace(0) == 0)
                        {
                            txt(lang(
                                u8"バックパックが一杯だ。"s,
                                u8"Your inventory is full."s));
                            label_1419();
                            label_2743(false);
                        }
                        label_2236();
                        if (chipm(0, map(cdata(1, 0), cdata(2, 0), 0)) == 2)
                        {
                            val = 1;
                        }
                        else
                        {
                            val = 0;
                        }
                        label_2235();
                        if (feat(2) == 40)
                        {
                            autosave = 1 * (gdata(20) != 35);
                        }
                        label_1521();
                        label_2742();
                        return;
                    }
                }
                if (mdata(6) == 1)
                {
                    if (feat(1) == 15)
                    {
                        if (feat(2) + feat(3) * 100 >= 300
                            && feat(2) + feat(3) * 100 < 450)
                        {
                            txt(lang(
                                u8"本当にこの建物を撤去する？（注意！建物と中の物は完全に失われます）"s,
                                u8"Really remove this building?"s));
                            promptl(0, 0) = stryes;
                            promptl(1, 0) = u8"y"s;
                            promptl(2, 0) = u8"0"s;
                            promptl(0, 1) = strno;
                            promptl(1, 1) = u8"n"s;
                            promptl(2, 1) = u8"1"s;
                            promptmax = 2;
                            val(0) = promptx;
                            val(1) = prompty;
                            val(2) = 160;
                            val(3) = 1;
                            label_2131();
                            if (rtval != 0)
                            {
                                label_1419();
                                label_2743(false);
                            }
                            area = feat(2) + feat(3) * 100;
                            map(cdata(1, 0), cdata(2, 0), 6) = 0;
                            adata(16, area) = 0;
                            removeworker(area);
                            label_1749();
                            fmode = 13;
                            label_2107();
                            snd(58);
                            txt(lang(
                                u8"建物を撤去した。"s,
                                u8"You remove the building."s));
                            label_2742();
                            return;
                        }
                    }
                }
            }
        }
    }
    cell_itemoncell(cdata(1, 0), cdata(2, 0));
    if (stat == 0)
    {
        if (mdata(6) == 3 || mdata(6) == 2)
        {
            if (chipm(0, map(cdata(1, 0), cdata(2, 0), 0)) == 4)
            {
                snd(83);
                txt(lang(
                    u8"雪をかきあつめた。"s,
                    u8"You rake up a handful of snow."s));
                actionsp(0, 10);
                if (stat == 0)
                {
                    txt(lang(
                        u8"疲労し過ぎて失敗した！"s,
                        u8"You are too exhausted!"s));
                    label_2742();
                    return;
                }
                flt();
                itemcreate(0, 587, -1, -1, 0);
                if (stat != 0)
                {
                    inv(17, ci) = 0;
                    inv(8, ci) = 3;
                    item_stack(0, ci, 1);
                }
                label_2742();
                return;
            }
        }
        ++msgdup;
        txt(lang(u8"あなたは空気をつかんだ。"s, u8"You grasp at the air."s));
        label_1419();
        label_2743(false);
    }
    ci = rtval(1);
    if (rtval > 1)
    {
        invctrl = 3;
        snd(100);
        label_20592();
        return;
    }
    if (inv(21, ci) > 0 && inv(21, ci) < 3 || inv(21, ci) == 5)
    {
        snd(27);
        ++msgdup;
        if (inv(21, ci) == 2)
        {
            txt(lang(u8"それは持ち運べない。"s, u8"You can't carry it."s));
        }
        if (inv(21, ci) == 1 || inv(21, ci) == 5)
        {
            txt(lang(
                    u8"それはあなたの物ではない。"s,
                    u8"It's not your property."s),
                lang(
                    u8"盗むなんてとんでもない。"s,
                    u8"You can't just take it."s),
                lang(u8"それは拾えない。"s, u8"It's not yours."s));
        }
        label_1419();
        label_2743(false);
    }
    in = inv(0, ci);
    label_2192();
    if (stat == 1 || stat == -1)
    {
        label_2742();
        return;
    }
    else
    {
        label_1419();
        label_2743(false);
    }
}
void label_2055()
{
    if (cdata(141, tc) != 0)
    {
        txt(lang(
            name(tc) + u8"は忙しい。"s,
            name(tc) + u8" "s + is(tc) + u8" busy now."s));
        label_1419();
        label_2743(false);
    }
    menucycle = 1;
    invally = 1;
    invctrl = 10;
    snd(100);
    label_20592();
    return;
}
void label_2056()
{
    if (listmax < 1)
    {
        return;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            p = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (listmax - 1); cnt < cnt_end; ++cnt)
                {
                    if (list(1, cnt) > list(1, cnt + 1))
                    {
                        p(0) = list(0, cnt);
                        p(1) = list(1, cnt);
                        list(0, cnt) = list(0, cnt + 1);
                        list(1, cnt) = list(1, cnt + 1);
                        list(0, cnt + 1) = p;
                        list(1, cnt + 1) = p(1);
                        p = 1;
                    }
                }
            }
            if (p == 0)
            {
                break;
            }
        }
    }
    return;
}
void label_2057()
{
    if (listmax < 1)
    {
        return;
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            p = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (listmax - 1); cnt < cnt_end; ++cnt)
                {
                    if (list(1, cnt) > list(1, cnt + 1))
                    {
                        p(0) = list(0, cnt);
                        p(1) = list(1, cnt);
                        list(0, cnt) = list(0, cnt + 1);
                        list(1, cnt) = list(1, cnt + 1);
                        list(0, cnt + 1) = p;
                        list(1, cnt + 1) = p(1);
                        s(0) = listn(0, cnt);
                        s(1) = listn(1, cnt);
                        listn(0, cnt) = listn(0, cnt + 1);
                        listn(1, cnt) = listn(1, cnt + 1);
                        listn(0, cnt + 1) = s;
                        listn(1, cnt + 1) = s(1);
                        p = 1;
                    }
                }
            }
            if (p == 0)
            {
                break;
            }
        }
    }
    return;
}
void savecycle()
{
    if (menucycle == 1)
    {
        menucycle = 0;
        if (invally == 0 && invcontainer == 0)
        {
            lastctrl = invctrl;
        }
    }
    return;
}
std::string trimdesc(const std::string& prm_1060, int prm_1061)
{
    std::string q_at_m187;
    int p_at_m187 = 0;
    q_at_m187 = prm_1060;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            await();
            p_at_m187 = instr(q_at_m187, 0, u8"\t"s);
            if (p_at_m187 != -1)
            {
                q_at_m187 = strmid(q_at_m187, 0, p_at_m187)
                    + strmid(q_at_m187, (p_at_m187 + 1), 999);
                continue;
            }
            if (prm_1061 == 1)
            {
                p_at_m187 = instr(q_at_m187, 0, u8"\n"s);
                if (p_at_m187 != -1)
                {
                    q_at_m187 = strmid(q_at_m187, 0, p_at_m187)
                        + strmid(q_at_m187, (p_at_m187 + 1), 999);
                    continue;
                }
                p_at_m187 = instr(q_at_m187, 0, u8"#"s);
                if (p_at_m187 != -1)
                {
                    q_at_m187 = strmid(q_at_m187, 0, p_at_m187);
                }
                if (jp)
                {
                    if (strmid(q_at_m187, strlen(q_at_m187) - 3, 2) == u8"。"s)
                    {
                        q_at_m187 = strmid(q_at_m187, 0, strlen(q_at_m187) - 3);
                    }
                }
                else
                {
                    p_at_m187 = instr(q_at_m187, 0, u8","s);
                    if (p_at_m187 != -1)
                    {
                        q_at_m187 = strmid(q_at_m187, 0, p_at_m187) + u8"."s
                            + strmid(q_at_m187, (p_at_m187 + 1), 999);
                        continue;
                    }
                }
            }
            if (prm_1061 == 2)
            {
                p_at_m187 = instr(q_at_m187, 0, u8"#"s);
                if (p_at_m187 != -1)
                {
                    q_at_m187 = strmid(q_at_m187, 0, p_at_m187)
                        + strmid(q_at_m187, (p_at_m187 + 1), 999);
                    continue;
                }
            }
            break;
        }
    }
    return q_at_m187;
}
void label_2068()
{
    if (ci < 0)
    {
        dialog(
            u8"暫定エラー回避処置です。お手数ですが、どの持ち物メニュー(例えば飲む、振る、食べるなど）から調査(xキー)を押したか報告お願いします。"s);
        return;
    }
    snd(26);
    page_save();
    page = 0;
    pagesize = 15;
    listmax = 0;
    p = 0;
    s = "";
    reftype = refitem(inv(3, ci), 5);
    getinheritance(ci, inhlist, inhmax);
    dbid = inv(3, ci);
    dbmode = 2;
    label_0481();
    dbmode = 17;
    label_0481();
    if (inv(8, ci) >= 3)
    {
        buf = trimdesc(description(3), 1);
        if (buf != ""s)
        {
            list(0, p) = 7;
            listn(0, p) = buf;
            ++p;
        }
    }
    if (inv(8, ci) >= 2)
    {
        if (inv(24, ci) != 0)
        {
            list(0, p) = 7;
            listn(0, p) = lang(
                u8"それは"s + mtname(0, inv(24, ci)) + u8"で作られている"s,
                u8"It is made of "s + mtname(0, inv(24, ci)) + u8"."s);
            ++p;
        }
        if (inv(24, ci) == 8)
        {
            list(0, p) = 7;
            listn(0, p) = lang(
                u8"それは装備している間、エーテルの病の進行を早める"s,
                u8"It speeds up the ether disease while equipping."s);
            ++p;
        }
        if (ibit(1, ci))
        {
            list(0, p) = 7;
            listn(0, p) =
                lang(u8"それは酸では傷つかない"s, u8"It is acidproof."s);
            ++p;
        }
        if (ibit(2, ci))
        {
            list(0, p) = 7;
            listn(0, p) =
                lang(u8"それは炎では燃えない"s, u8"It is fireproof."s);
            ++p;
        }
        if (ibit(5, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(u8"それは貴重な品だ"s, u8"It is precious."s);
            ++p;
        }
        if (ibit(8, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(
                u8"それはエヘカトルの祝福を受けている"s,
                u8"It is blessed by Ehekatl."s);
            ++p;
        }
        if (ibit(9, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(u8"それは盗品だ"s, u8"It is a stolen item."s);
            ++p;
        }
        if (ibit(10, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(u8"それは生きている"s, u8"It is alive."s)
                + u8" [Lv:"s + inv(25, ci) + u8" Exp:"s
                + limit(inv(26, ci) * 100 / calcexpalive(inv(25, ci)), 0, 100)
                + u8"%]"s;
            ++p;
        }
        if (ibit(16, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(
                u8"それはショウルームでのみ使用できる。"s,
                u8"It can be only used in a show room."s);
            ++p;
        }
        if (ibit(17, ci))
        {
            list(0, p) = 7;
            listn(0, p) = lang(
                u8"それは心温まる手作り品だ"s, u8"It is a hand-made item."s);
            ++p;
        }
        calcweaponfix(inv(3, ci));
        if (inv(10, ci) != 0)
        {
            list(0, p) = 5;
            listn(0, p) = lang(
                              u8"それは武器として扱うことができる"s,
                              u8"It can be wielded as a weapon."s)
                + u8" ("s + inv(10, ci) + u8"d"s + inv(11, ci)
                + lang(u8" 貫通 "s, u8" Pierce "s) + pierce + u8"%)"s;
            ++p;
            if (reftype == 10000)
            {
                if (inv(7, ci) <= 1500)
                {
                    list(0, p) = 5;
                    listn(0, p) = lang(
                        u8"それは片手でも扱いやすい"s,
                        u8"It is a light weapon."s);
                    ++p;
                }
                if (inv(7, ci) >= 4000)
                {
                    list(0, p) = 5;
                    listn(0, p) = lang(
                        u8"それは両手持ちに適している"s,
                        u8"It is a heavy weapon."s);
                    ++p;
                }
            }
        }
        if (inv(13, ci) != 0 || inv(12, ci) != 0)
        {
            list(0, p) = 5;
            listn(0, p) = lang(
                u8"それは攻撃修正に"s + inv(13, ci) + u8"を加え、ダメージを"s
                    + inv(12, ci) + u8"増加させる"s,
                u8"It modifies hit bonus by "s + inv(13, ci)
                    + u8" and damage bonus by "s + inv(12, ci) + u8"."s);
            ++p;
        }
        if (inv(15, ci) != 0 || inv(14, ci) != 0)
        {
            list(0, p) = 6;
            listn(0, p) = lang(
                u8"それはDVを"s + inv(14, ci) + u8"上昇させ、PVを"s
                    + inv(15, ci) + u8"上昇させる"s,
                u8"It modifies DV by "s + inv(14, ci) + u8" and PV by "s
                    + inv(15, ci) + u8"."s);
            ++p;
        }
    }
    if (inv(8, ci) < 2)
    {
        list(0, p) = 0;
        listn(0, p) = lang(
            u8"このアイテムに関する知識を得るには、鑑定する必要がある。"s,
            u8"You have to identify the item to gain knowledge."s);
        ++p;
    }
    if (inv(8, ci) >= 3)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
            {
                if (inv(40 + cnt * 2, ci) == 0)
                {
                    break;
                }
                val(0) = inv(40 + cnt * 2, ci);
                val(1) = inv(40 + cnt * 2 + 1, ci);
                val(2) = 0;
                val(3) = reftype;
                label_0247();
                listn(0, p) = lang(u8"それは"s, u8"It "s) + s;
                list(0, p) = rtval;
                list(1, p) = rtval(1);
                if (inhmax > 0)
                {
                    cnt2 = cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (inhmax); cnt < cnt_end; ++cnt)
                        {
                            if (cnt2 == inhlist(cnt))
                            {
                                list(0, p) += 10000;
                                break;
                            }
                        }
                    }
                }
                ++p;
            }
        }
        if (ibit(15, ci))
        {
            list(0, p) = 4;
            listn(0, p) = lang(u8"相手は死ぬ"s, u8"The enemy dies."s);
            ++p;
        }
        if (jp)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    if (description(cnt) == ""s)
                    {
                        continue;
                    }
                    list(0, p) = 0;
                    listn(0, p) = "";
                    ++p;
                    buf = trimdesc(description(cnt), 2);
                    notesel(buf);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end;
                             ++cnt)
                        {
                            noteget(q, cnt);
                            p(1) = 66;
                            p(2) = 0;
                            if (strlen_u(q) > p(1))
                            {
                                {
                                    int cnt = 0;
                                    for (int cnt_end =
                                             cnt + (strlen(q) / p(1) + 1);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        if (strmid(q, p(2) + p(1), 2) == u8"。"s
                                            || strmid(q, p(2) + p(1), 2)
                                                == u8"、"s)
                                        {
                                            p(1) += 2;
                                        }
                                        if (strmid(q, p(2), p(1)) == ""s)
                                        {
                                            break;
                                        }
                                        list(0, p) = -1;
                                        listn(0, p) = strmid(q, p(2), p(1));
                                        ++p;
                                        p(2) += p(1);
                                    }
                                }
                            }
                            else
                            {
                                list(0, p) = 0;
                                listn(0, p) = q;
                                if (cnt == noteinfo(0) - 1)
                                {
                                    list(0, p) = -2;
                                }
                                ++p;
                            }
                        }
                    }
                }
            }
        }
    }
    if (p == 0)
    {
        list(0, p) = 0;
        listn(0, p) = lang(
            u8"特に情報はない"s,
            u8"There is no information about this object."s);
        ++p;
    }
    listmax = p;
    pagemax = (listmax - 1) / pagesize;
    if (dump_return == 1)
    {
        dump_return = 0;
        return;
    }
    windowshadow = 1;
label_2069_internal:
    key_list = key_enter;
    keyrange = 0;
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2070_internal:
    redraw(0);
    s(0) = lang(u8"アイテムの知識"s, u8"Known Information"s);
    s(1) = strhint4 + strhint3;
    display_window((windoww - 600) / 2 + inf_screenx, winposy(408), 600, 408);
    display_topic(itemname(ci), wx + 28, wy + 34);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            color(0, 0, 0);
            pos(wx + 68, wy + 68 + cnt * 18);
            if (list(0, p) % 10000 == 1)
            {
                color(0, 100, 0);
            }
            if (list(0, p) % 10000 == 2)
            {
                color(0, 0, 100);
            }
            if (list(0, p) % 10000 == 3)
            {
                color(80, 100, 0);
            }
            if (list(0, p) % 10000 == 4)
            {
                color(80, 50, 0);
            }
            if (list(0, p) % 10000 == 9)
            {
                color(180, 0, 0);
            }
            if (list(0, p) % 10000 == 8)
            {
                color(0, 100, 100);
            }
            if (list(0, p) == -1)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
            }
            if (list(0, p) == -2)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 2);
                pos(wx + ww - strlen_u(listn(0, p)) * 6 - 80,
                    wy + 68 + cnt * 18);
            }
            mes(listn(0, p));
            if (list(0, p) > 0)
            {
                pos(wx + 40, wy + 61 + cnt * 18);
                gcopy(3, 72 + list(0, p) % 10000 * 24, 336, 24, 24);
            }
            if (list(0, p) > 10000)
            {
                pos(wx + 15, wy + 63 + cnt * 18);
                gcopy(3, 384, 360, 24, 24);
            }
        }
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2069_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2069_internal;
        }
    }
    if (key == key_cancel || key == key_enter)
    {
        returnfromidentify = 1;
        return;
    }
    goto label_2070_internal;
}
int label_2072()
{
    if (cdata(0, cdata(29, cc)) != 1)
    {
        cdata(29, cc) = 0;
    }
    else
    {
        if (synccheck(cdata(29, cc), -1) == 0)
        {
            cdata(29, cc) = 0;
        }
    }
    if (cdata(29, cc) == 0)
    {
        label_2076();
        if (listmax != 0)
        {
            f = 0;
            if (cc == 0 || cdata(9, cc) >= 0)
            {
                p(0) = -3;
                p(1) = -1;
                p(2) = 0;
            }
            else
            {
                p(0) = 10;
                p(1) = 0;
                p(2) = 0;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    cnt2 = cnt;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (listmax); cnt < cnt_end;
                             ++cnt)
                        {
                            if (cdata(9, list(0, cnt)) <= p(cnt2))
                            {
                                cdata(29, cc) = list(0, cnt);
                                f = 1;
                                break;
                            }
                        }
                    }
                    if (f == 1)
                    {
                        break;
                    }
                }
            }
        }
    }
    if (cdata(29, cc) == 0 || cdata(253, cc) != 0)
    {
        if (cc == 0)
        {
            txt(lang(
                u8"ターゲットが見当たらない。"s, u8"You find no target."s));
            label_1419();
        }
        stat = 0;
        return stat;
    }
    if (cdata(29, cc) < 0)
    {
        cdata(29, cc) = 0;
    }
    stat = 1;
    return stat;
}
int label_2073()
{
    txttargetlevel();
    txt(s);
    txtmore();
    txt(lang(
        u8"本当に"s + name(tc) + u8"を攻撃する？ "s,
        u8"Really attack "s + name(tc) + u8"? "s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    if (rtval == 0)
    {
        label_1419();
        stat = 1;
        return stat;
    }
    else
    {
        label_1419();
        stat = 0;
        return stat;
    }
}
void label_2074()
{
    cc = 0;
    label_2072();
    if (stat == 0)
    {
        label_2743(false);
    }
    tc = cdata(29, 0);
    if (cdata(9, tc) >= 0)
    {
        label_2073();
        if (stat == 0)
        {
            label_2743(false);
        }
    }
    label_2075();
    if (stat == -1)
    {
        ++msgdup;
        txt(lang(
            u8"射撃用の道具を装備していない。"s,
            u8"You need to equip a firing weapon."s));
        label_1419();
        label_2743(false);
    }
    if (stat == -2)
    {
        ++msgdup;
        txt(lang(
            u8"矢/弾丸を装備する必要がある。"s,
            u8"You need to equip ammos or arrows."s));
        label_1419();
        label_2743(false);
    }
    if (stat == -3)
    {
        ++msgdup;
        txt(lang(
            u8"矢/弾丸の種類が適していない。"s,
            u8"You're equipped with wrong type of ammos."s));
        label_1419();
        label_2743(false);
    }
    label_2217();
    label_2742();
    return;
}
int label_2075()
{
    cw = -1;
    ammo = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            body = 100 + cnt;
            if (cdata(body, cc) % 10000 == 0)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 10)
            {
                cw = cdata(body, cc) % 10000 - 1;
            }
            if (cdata(body, cc) / 10000 == 11)
            {
                ammo = cdata(body, cc) % 10000 - 1;
            }
        }
    }
    if (cw == -1)
    {
        cw = 0;
        stat = -1;
        return stat;
    }
    if (ammo == -1)
    {
        if (inv(16, cw) != 111)
        {
            cw = 0;
            stat = -2;
            return stat;
        }
    }
    if (ammo != -1)
    {
        if (inv(16, cw) != inv(16, ammo))
        {
            stat = -3;
            return stat;
        }
    }
    attackskill = inv(16, cw);
    stat = 1;
    return stat;
}
void label_2076()
{
    listmax = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (synccheck(cnt, -1) == 0)
                    {
                        continue;
                    }
                    if (cc == 0 || cdata(9, cc) >= 0)
                    {
                        if (cdata(9, cnt) == 10)
                        {
                            if (cnt == 0)
                            {
                                continue;
                            }
                        }
                    }
                    x = cdata(1, cnt);
                    y = cdata(2, cnt);
                    if (x == cdata(1, cc) && y == cdata(2, cc))
                    {
                        continue;
                    }
                    if (fov_los(cdata(1, cc), cdata(2, cc), x, y) == 0)
                    {
                        continue;
                    }
                    if (cbit(6, cnt) == 1)
                    {
                        if (cbit(7, cc) == 0)
                        {
                            if (cdata(259, cnt) == 0)
                            {
                                continue;
                            }
                        }
                    }
                    list(0, listmax) = cnt;
                    list(1, listmax) = x;
                    list(2, listmax) = y;
                    ++listmax;
                    if (listmax >= 499)
                    {
                        break;
                    }
                }
            }
            if (listmax != 0)
            {
                break;
            }
        }
    }
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            if (listmax < 2)
            {
                break;
            }
            i = 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (listmax - 1); cnt < cnt_end; ++cnt)
                {
                    p = dist(
                        cdata(1, cc), cdata(2, cc), list(1, cnt), list(2, cnt));
                    p(1) = dist(
                        cdata(1, cc),
                        cdata(2, cc),
                        list(1, cnt + 1),
                        list(2, cnt + 1));
                    if (p(1) < p)
                    {
                        p(0) = list(0, cnt);
                        p(1) = list(1, cnt);
                        p(2) = list(2, cnt);
                        list(0, cnt) = list(0, cnt + 1);
                        list(1, cnt) = list(1, cnt + 1);
                        list(2, cnt) = list(2, cnt + 1);
                        list(0, cnt + 1) = p;
                        list(1, cnt + 1) = p(1);
                        list(2, cnt + 1) = p(2);
                        i = 0;
                        break;
                    }
                }
            }
            if (i == 1)
            {
                break;
            }
        }
    }
    return;
}
void label_2077()
{
    r1 = 50;
    label_2152();
    label_2742();
    return;
}
void label_2078()
{
    txt(lang(
        actlistn(cdata(140, cc)) + u8"を中断したほうがいいだろうか？ "s,
        u8"Do you want to cancel "s + actlistn(cdata(140, cc)) + u8"? "s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    return;
}
void label_2079()
{
    txtnew();
    if (gdata(20) == 35)
    {
        txtef(3);
        txt(lang(
            u8"ユーザーマップの中ではセーブできない。それでも終了する？"s,
            u8"You can't save the game in a user made map. Exit anyway?"s));
    }
    else
    {
        txt(lang(
            u8"これまでの冒険を記録して終了する？"s,
            u8"Do you want to save the game and exit?"s));
    }
    promptl(0, promptmax) = lang(u8"はい"s, u8"Exit"s);
    promptl(1, promptmax) = u8"a"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"いいえ"s, u8"Cancel"s);
    promptl(1, promptmax) = u8"b"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"ゲーム設定"s, u8"Game Setting"s);
    promptl(1, promptmax) = u8"c"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 190;
    val(3) = 1;
    label_2131();
    if (rtval == 0)
    {
        if (gdata(20) != 35)
        {
            snd(44);
            label_2113();
            txt(lang(
                u8"無事に記録された。"s,
                u8"Your game has been saved successfully."s));
            txt(lang(
                name(cc)
                    + u8"は静かに目を閉じた… (キーを押すと自動終了します)"s,
                u8"You close your eyes and peacefully fade away. (Hit any key to exit)"s));
            msg_halt();
            label_1419();
        }
        await(300);
        label_0193();
        return;
    }
    if (rtval == 2)
    {
        snd(20);
        label_2723();
        return;
    }
    label_1419();
    label_2743(false);
}
int label_2080()
{
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            p = gdata(160 + cnt);
            if (qdata(8, p) == 1)
            {
                if (qdata(3, p) == 1007 || qdata(3, p) == 1002)
                {
                    f = 1;
                    break;
                }
            }
        }
    }
    stat = f;
    return stat;
}
void label_2081()
{
    label_2080();
    if (stat == 1)
    {
        txt(lang(
            u8"依頼請負中の帰還は法律で禁止されている。それでも帰還する？"s,
            u8"Returning while taking a quest if forbidden. Are you sure you want to return?"s));
        promptl(0, 0) = stryes;
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptl(0, 1) = strno;
        promptl(1, 1) = u8"n"s;
        promptl(2, 1) = u8"1"s;
        promptmax = 2;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 160;
        val(3) = 1;
        label_2131();
        if (rtval != 0)
        {
            label_1419();
            return;
        }
    }
    p = 0;
    p = 0;
    i = 7;
    if (adata(30, i) == gdata(850))
    {
        list(0, p) = i;
        list(1, p) = 1;
        promptl(0, promptmax) = mapname(i);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + promptmax;
        ++promptmax;
        ++p;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            i = 500 - (cnt + 1);
            if (adata(16, i) == 3)
            {
            }
            if (adata(16, i) == 0)
            {
                continue;
            }
            if (adata(30, i) != gdata(850))
            {
                continue;
            }
            if (adata(16, i) == 7)
            {
                continue;
            }
            if (adata(6, i) == 0)
            {
                continue;
            }
            f = 0;
            if (adata(16, i) == 3 || adata(16, i) == 25 || adata(16, i) == 29
                || adata(16, i) == 42)
            {
                f = 1;
            }
            if (gdata(828) || 0)
            {
                if (adata(0, i) == 3 || adata(0, i) == 2)
                {
                    f = 1;
                }
            }
            if (f == 1)
            {
                list(0, p) = i;
                list(1, p) = adata(6, i);
                promptl(0, promptmax) = mapname(i) + u8" "s
                    + cnvrank((adata(6, i) - adata(17, i) + 1))
                    + lang(u8"階"s, u8" Lv"s);
                promptl(1, promptmax) = u8"null"s;
                promptl(2, promptmax) = ""s + promptmax;
                ++promptmax;
                ++p;
            }
        }
    }
    listmax = p;
    if (listmax == 0)
    {
        txt(lang(
            u8"この大陸には帰還できる場所が無い。"s,
            u8"You don't know any location you can return to"s));
        return;
    }
    txt(lang(u8"どの場所に帰還する？"s, u8"Where do you want to go?"s));
    display_msg(inf_screeny + inf_tiles);
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 240;
    val(3) = 1;
    label_2131();
    label_1419();
    if (rtval >= 0)
    {
        txt(lang(
            u8"周囲の大気がざわめきだした。"s,
            u8"The air around you becomes charged."s));
        if (adata(16, gdata(20)) == 8)
        {
            if (gdata(22) == adata(10, gdata(20)))
            {
                if (adata(20, gdata(20)) != -1)
                {
                    txt(lang(
                        u8"このままダンジョンを出ると、この階のクエストは達成できない…"s,
                        u8"The lord of the dungeon might disappear if you escape now."s));
                }
            }
        }
        gdata(64) = list(0, rtval);
        gdata(65) = list(1, rtval);
        gdata(63) = 15 + rnd(15);
    }
    label_1419();
    return;
}
void label_2082()
{
    screenupdate = -1;
    label_1419();
    if (inv(3, ci) == 413)
    {
        tmat = 40;
    }
    if (inv(3, ci) == 414)
    {
        tmat = 41;
    }
    txt(lang(
        ""s + matname(tmat) + u8"を使ってガシャガシャする？"s,
        u8"Pay "s + matname(tmat) + u8" to gasha-gasha?"s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    if (rtval == 0)
    {
        if (mat(tmat) > 0)
        {
            snd(56);
            matdelmain(tmat);
            if (inv(3, ci) == 413)
            {
                p = 415;
            }
            else
            {
                p = 416;
            }
            itemcreate(-1, p, cdata(1, cc), cdata(2, cc), 0);
            if (stat != 0)
            {
                inv(26, ci) = 0;
            }
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
        }
        else
        {
            txt(lang(
                ""s + matname(tmat) + u8"を持っていない…"s,
                u8"You don't have "s + matname(tmat) + u8"."s));
        }
    }
    label_2742();
    return;
}
int label_2083()
{
    if (inv(3, ci) == 563)
    {
        if (sorg(inv(25, ci), 0) == 0)
        {
            txt(lang(
                u8"この本の内容には興味がない。それでも読む？ "s,
                u8"You are not interested in this book. Do you want to read it anyway? "s));
            promptl(0, 0) = stryes;
            promptl(1, 0) = u8"y"s;
            promptl(2, 0) = u8"0"s;
            promptl(0, 1) = strno;
            promptl(1, 1) = u8"n"s;
            promptl(2, 1) = u8"1"s;
            promptmax = 2;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 160;
            val(3) = 1;
            label_2131();
            if (rtval != 0)
            {
                stat = 0;
                return stat;
            }
        }
    }
    gdata(91) = 104;
    label_2148();
    stat = 1;
    return stat;
}
void label_2084()
{
    if (gdata(828))
    {
        snd(27);
        txt(lang(
            u8"デバッグモードでは無効だ。"s,
            u8"This function is disabled in the wizard's mode."s));
        return;
    }
    if (gdata(20) == 35 || gdata(20) == 6 || gdata(20) == 40)
    {
        redraw(0);
        snd(27);
        txt(lang(
            u8"このマップでは利用できない。"s,
            u8"You can't user it in this area."s));
        return;
    }
    label_2719();
    redraw(0);
    if (gdatan(0) == ""s)
    {
        gdatan(0) = random_title(2);
        txt(lang(
            u8"チームネームが決まっていないので、自動的に"s + gdatan(0)
                + u8"という名前が付けられた。"s,
            u8"Your initial team name is "s + gdatan(0)
                + u8". You can change it any time."s));
    }
    txtnew();
    txt(lang(
        u8"[カスタム機能]何をする？"s,
        u8"[Customize Menu] What do you want to do?"s));
    promptl(0, promptmax) =
        lang(u8"ショウルームを記録"s, u8"Save current area"s);
    promptl(1, promptmax) = u8"a"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) =
        lang(u8"ペットチームを記録"s, u8"Save your pet team"s);
    promptl(1, promptmax) = u8"b"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) =
        lang(u8"チームネーム変更"s, u8"Change your team name"s);
    promptl(1, promptmax) = u8"c"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"カスタムNPCを作成"s, u8"Make custom NPC"s);
    promptl(1, promptmax) = u8"d"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    if (gdata(828) == 0)
    {
        promptl(0, promptmax) = lang(u8"アップロード"s, u8"Upload"s);
        promptl(1, promptmax) = u8"e"s;
        promptl(2, promptmax) = ""s + promptmax;
        ++promptmax;
        promptl(0, promptmax) = lang(u8"設定"s, u8"Setting"s);
        promptl(1, promptmax) = u8"f"s;
        promptl(2, promptmax) = ""s + promptmax;
        ++promptmax;
    }
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 240;
    val(3) = 1;
    label_2131();
    label_1419();
    label_2719();
    if (rtval == 0)
    {
        if (mdata(6) == 1 || gdata(20) == 35)
        {
            redraw(0);
            snd(27);
            txt(lang(
                u8"このマップは保存できない。"s,
                u8"You can't save this area."s));
            return;
        }
        txt(lang(u8"どのファイル名で保存する？"s, u8"Enter file name."s));
        redraw(1);
        fileext = u8"eum"s;
        filedsc = u8"Elona User Map"s;
        _fdialog(fileext, 17, filedsc, exedir + u8"user"s, u8"default.eum"s);
        if (stat == 0)
        {
            return;
        }
        userfile = refstr;
        label_2108();
        txtef(2);
        txt(lang(
            u8"現在地の情報を"s + userfile + u8"に保存した。"s,
            u8"Current area is saved to "s + userfile + u8"."s));
        return;
    }
    if (rtval == 1)
    {
        txt(lang(
            u8"どのメンバー構成を記録する？"s,
            u8"Which members do you want to save?"s));
        DIM2(followerexist, 16);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                followerexist(cnt) = cdata(0, cnt);
            }
        }
        arenaop(0) = 1;
        arenaop(1) = 6;
        allyctrl = 2;
        label_1959();
        if (stat == -1)
        {
            return;
        }
        lv = 0;
        n = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                list(0, cnt) = 0;
                if (cnt < 16)
                {
                    if (followerin(cnt) == 1)
                    {
                        list(0, cnt) = 1;
                        lv += cdata(38, cnt);
                        ++n;
                    }
                }
            }
        }
        if (listmax == 0)
        {
            return;
        }
        else
        {
            lv = lv / n;
        }
        txt(lang(u8"どのファイル名で保存する？"s, u8"Enter file name."s));
        redraw(1);
        fileext = u8"ept"s;
        filedsc = u8"Elona Pet Team"s;
        _fdialog(fileext, 17, filedsc, exedir + u8"user"s, u8"default.ept"s);
        if (stat == 0)
        {
            return;
        }
        userfile = refstr;
        label_2109();
        txtef(2);
        txt(lang(
            u8"ペットチームを"s + userfile + u8"に保存した。"s,
            u8"Your team is saved to "s + userfile + u8"."s));
        return;
    }
    if (rtval == 2)
    {
        val = 2;
        label_1993();
        if (stat == 0)
        {
            return;
        }
        gnname1 = cmaka;
        txt(lang(
            u8"あなたはチーム名を"s + gnname1 + u8"に決めた。"s,
            u8"Your team name is "s + gnname1 + u8" now."s));
        return;
    }
    if (rtval == 3)
    {
        label_2106();
        return;
    }
    if (rtval == 4)
    {
        if (gdata(20) == 35)
        {
            txt(lang(
                u8"この場所からはできない。"s,
                u8"You can't do it in this area."s));
            return;
        }
        if (cdata(38, 0) < 10)
        {
            txt(lang(
                u8"それはレベルが10以上でないとできない。"s,
                u8"You need to be at least level 10 to upload."s));
            return;
        }
        if (gdata(804) > gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12)
        {
            snd(27);
            txt(lang(
                u8"まだ次のアップロードはできない("s + cnvdate(gdata(804), 1)
                    + u8"まで)"s,
                u8"You can't do this till "s + cnvdate(gdata(804), 1)
                    + u8"."s));
            return;
        }
        return;
    }
    if (rtval == 5)
    {
        exec(exedir + u8"user\\export.txt"s, 16);
    }
    return;
}
void label_2085()
{
    cc = 0;
    dbidn = cdatan(2, 0);
    dbmode = 2;
    label_2297();
    dbidn = cdatan(3, 0);
    dbmode = 2;
    label_2298();
    buff = "";
    notesel(buff);
    noteadd(
        u8"Elona Version 1.22 キャラクター情報 "s + gdata(10) + u8"年"s
        + gdata(11) + u8"月"s + gdata(12) + u8"日 "s + gdata(13) + u8"時"s
        + gdata(14) + u8"分  "s + mdatan(0));
    noteadd(""s);
    noteadd(
        u8"  "s + fixtxt((""s + cdatan(1, 0) + cdatan(0, 0)), 34)
        + _sex(cdata(8, 0)) + u8" "s + calcage(0) + u8"歳"s + u8"  "s
        + cdata(19, 0) + u8"cm"s + u8" "s + cdata(20, 0) + u8"kg"s);
    noteadd(""s);
    noteadd(
        fixtxt(u8"種族       : "s + racename, 30)
        + fixtxt((u8"信仰      : "s + godname(cdata(61, 0))), 32));
    noteadd(
        fixtxt(u8"職業       : "s + classname, 30)
        + fixtxt((u8"所属      : "s + guildname()), 32));
    noteadd(
        fixtxt(u8"レベル     : "s + cdata(38, 0), 30)
        + fixtxt((u8"経過日数  : "s + gdata(7)), 32));
    noteadd(
        fixtxt(u8"残りBP     : "s + cdata(41, 0), 30)
        + fixtxt((u8"経過ターン: "s + gdata(4)), 32));
    noteadd(
        fixtxt(u8"金貨       : "s + cdata(30, 0), 30)
        + fixtxt((u8"殺害数    : "s + gdata(2)), 32));
    noteadd(
        fixtxt(u8"プラチナ   : "s + cdata(31, 0), 30)
        + fixtxt((u8"最深到達  : "s + gdata(1) + u8"階相当"s), 32));
    noteadd(fixtxt(
        u8"プレイ時間 : "s
            + cnvplaytime((gdata(805) + timeGetTime() / 1000 - time_begin)),
        30));
    noteadd(""s);
    s(1) = u8"生命力    : "s + sdata(2, 0) + u8"("s + sorg(2, 0) + u8")"s;
    s(2) = u8"マナ      : "s + sdata(3, 0) + u8"("s + sorg(3, 0) + u8")"s;
    s(3) = u8"狂気度    : 0"s;
    s(4) = u8"速度      : "s + cdata(11, 0);
    s(5) = u8"名声度    : "s + cdata(34, 0);
    s(6) = u8"カルマ    : "s + cdata(49, 0);
    s(7) = u8"DV        : "s + cdata(71, 0);
    s(8) = u8"PV        : "s + cdata(70, 0);
    s(9) = "";
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            s = "";
            p = sdata((10 + cnt + 600), 0) % 1000;
            if (p >= 200)
            {
                s += u8"superb"s;
            }
            else
            {
                if (p >= 150)
                {
                    s += u8"great"s;
                }
                else
                {
                    if (p >= 100)
                    {
                        s += u8"good"s;
                    }
                    else
                    {
                        if (p >= 50)
                        {
                            s += u8"bad"s;
                        }
                        else
                        {
                            s += u8"hopeless"s;
                        }
                    }
                }
            }
            s = fixtxt(s, 15);
            s = fixtxt(
                    _stats2(cnt) + u8"    : "s + sdata((10 + cnt), 0) + u8"("s
                        + sdata((10 + cnt + 600), 0) / 1000000 + u8")"s,
                    24)
                + s;
            noteadd(s + s((1 + cnt)));
        }
    }
    noteadd(""s);
    val = 1;
    label_2047();
    tc = 0;
    attackskill = 106;
    evade = calcattackhit(2);
    prot = calcattackdmg(2);
    noteadd(u8"回避    : "s + evade + u8"%"s);
    noteadd(
        u8"軽減    : "s + (100 - 10000 / (prot + 100)) + u8"% + "s + protdice1
        + u8"d"s + protdice2);
    noteadd(""s);
    noteadd(
        u8"------------------------------ 装備品 合計重量"s
        + cnvweight(cdata(64, cc)) + u8" "s + cnveqweight(cc));
    noteadd(""s);
    listmax = 0;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, cc) != 0)
            {
                if (trait(206) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 2)
                    {
                        continue;
                    }
                }
                if (trait(203) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 9)
                    {
                        continue;
                    }
                }
                if (trait(205) != 0)
                {
                    if (cdata(cnt, cc) / 10000 == 3)
                    {
                        continue;
                    }
                }
                p(1) = cdata(cnt, cc);
                q(0) = u8"装備なし"s;
                q(1) = "";
                if (p(1) % 10000 != 0)
                {
                    p(1) = p(1) % 10000 - 1;
                    q(0) = itemname(p(1));
                    q(1) = cnvweight(inv(7, p(1)));
                    ci = p(1);
                    dump_return = 1;
                    label_2068();
                }
                else
                {
                    listmax = 0;
                }
                s = bodyn(cdata(cnt, cc) / 10000);
                if (strmid(s, 0, 2) == u8"　"s)
                {
                    s = strmid(s, 2, 2);
                }
                noteadd(s + u8":"s);
                noteadd(q + u8" "s + q(1));
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
                    {
                        noteadd(listn(0, cnt));
                    }
                }
                noteadd(""s);
            }
        }
    }
    noteadd(u8"------------------------------ 特徴"s);
    noteadd(""s);
    dump_return = 1;
    tc = 0;
    label_1969();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            if (list(0, cnt) < 0)
            {
                continue;
            }
            if (list(1, cnt) < 10000)
            {
                continue;
            }
            noteadd(listn(0, cnt));
        }
    }
    noteadd(""s);
    noteadd(u8"------------------------------ 仲間"s);
    noteadd(""s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                continue;
            }
            if (cnt == 0)
            {
                continue;
            }
            dbidn = cdatan(2, cnt);
            dbmode = 2;
            label_2297();
            dbidn = cdatan(3, cnt);
            dbmode = 2;
            label_2298();
            noteadd(
                cdatan(0, cnt) + u8" "s + racename + u8"の"s + classname
                + u8" "s + _sex(cdata(8, cnt)) + u8" "s + calcage(cnt) + u8"歳"s
                + u8"  "s + cdata(19, cnt) + u8"cm"s + u8" "s + cdata(20, cnt)
                + u8"kg"s);
            s = u8"レベル "s + cdata(38, cnt) + u8" "s;
            if (cbit(961, cnt) == 1)
            {
                s += u8"婚約済み "s;
            }
            noteadd(s);
            noteadd(""s);
        }
    }
    noteadd(u8"------------------------------ 称号"s);
    noteadd(""s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
        {
            if (gdata(120 + cnt) < 10000)
            {
                noteadd(
                    ""s + ranktitle(cnt) + u8" Rank."s
                    + gdata((120 + cnt)) / 100);
                s = u8"給料: 約 "s + calcincome(cnt) + u8" gold  "s
                    + u8"ノルマ: "s;
                gold += calcincome(cnt);
                if (cnt == 3 || cnt == 4 || cnt == 5 || cnt == 8)
                {
                    s += u8"なし"s;
                }
                else
                {
                    s += ""s + gdata((140 + cnt)) + u8"日以内"s;
                }
                noteadd(s);
                noteadd(""s);
            }
        }
    }
    s = exedir + u8"\\save\\"s + playerid + u8".txt"s;
    notesave(s);
    exec(s, 16);
    return;
}
void label_2086()
{
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            body = 100 + cnt;
            if (cdata(body, cc) % 10000 == 0)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 11)
            {
                ci = cdata(body, cc) % 10000 - 1;
                f = 1;
                break;
            }
        }
    }
    if (f == 0)
    {
        txt(lang(u8"矢弾を装備していない。"s, u8"You need to equip an ammo."s));
        label_2743(false);
    }
    listmax = 0;
    cs = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            if (inv(40 + cnt * 2, ci) == 0)
            {
                break;
            }
            enc = inv(40 + cnt * 2, ci);
            i = enc / 10000;
            if (i != 0)
            {
                enc = enc % 10000;
                if (i == 9)
                {
                    if (inv(9, ci) == cnt)
                    {
                        cs = cnt;
                    }
                    list(0, listmax) = cnt;
                    ++listmax;
                    continue;
                }
            }
        }
    }
    if (listmax == 0)
    {
        inv(9, ci) = -1;
        txt(lang(
            itemname(ci) + u8"は切り替えに対応していない。"s,
            itemname(ci) + u8" isn't capable of changing ammos."s));
        label_2743(false);
    }
    snd(90);
    ++cs;
    if (cs >= listmax)
    {
        inv(9, ci) = -1;
    }
    else
    {
        inv(9, ci) = list(0, cs);
    }
    txt(lang(u8"現在の装填弾:"s, u8"Current Ammo Type:"s));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax + 1); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                s(0) = lang(u8"通常弾"s, u8"Normal"s);
                s(1) = lang(u8"無限"s, u8"Unlimited"s);
            }
            else
            {
                p = list(0, cnt - 1);
                i(0) = inv((40 + p * 2 + 1), ci) % 1000;
                i(1) = inv((40 + p * 2 + 1), ci) / 1000;
                s(0) = ammoname(inv((40 + p * 2), ci) % 10000);
                s(1) = ""s + i + u8"/"s + i(1);
            }
            s = s + u8":"s + s(1);
            if (inv(9, ci) == cnt - 1)
            {
                s = u8"["s + s + u8"]"s;
                txtef(4);
            }
            else
            {
                s = u8" "s + s + u8" "s;
            }
            txtmore();
            txt(u8" "s + s);
        }
    }
    label_2743(false);
}
void label_2087()
{
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(3, cnt) == 504 || inv(3, cnt) == 503)
            {
                inv(0, cnt) = 0;
            }
        }
    }
    return;
}
void label_2088()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 1)
            {
                if (cdata(1, cnt) < 0 || cdata(1, cnt) >= mdata(0)
                    || cdata(2, cnt) < 0 || cdata(2, cnt) >= mdata(1))
                {
                    cdata(1, cnt) = 0;
                    cdata(2, cnt) = 0;
                }
            }
        }
    }
    if (mdata(6) != 5)
    {
        if (mdata(18) != 0)
        {
            mdata(18) = 0;
        }
    }
    if (gdata(20) == 7)
    {
        adata(17, gdata(20)) = 0;
        adata(10, gdata(20)) = 10;
        adata(12, gdata(20)) = 1;
        mdata(8) = 1;
        evadd(17);
        calccosthire();
    }
    return;
}
void label_2089()
{
    if (gdata(96) != elona_int(elona_double(u8"1.22"s) * 1000))
    {
        dialog(lang(
            u8"Ver."s + gdata(96) + u8"のセーブデータをアップデートします。"s,
            u8"Updating your save data from Ver."s + gdata(96) + u8" now."s));
    }
    if (gdata(97) < 0)
    {
        gdata(97) = 1;
    }
    if (gdata(181) == 0)
    {
        gdata(181) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12;
    }
    if (gdata(96) == 940)
    {
        if (gdata(124) != 0)
        {
            gdata(122) = gdata(124);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            if (gdata(120 + cnt) == 0)
            {
                gdata(120 + cnt) = 10000;
            }
        }
    }
    itemmemory(2, 289) = 0;
    itemmemory(2, 732) = 0;
    if (gdata(96) < 950)
    {
        itemcreate(0, 576, -1, -1, 0);
        itemcreate(0, 579, -1, -1, 0);
        inv(9, ci) = 6;
    }
    if (gdata(96) < 952)
    {
        gdata(79) = 1;
    }
    if (gdata(96) < 954)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (cnt == 0 || cdata(0, cnt) == 0)
                {
                    continue;
                }
                inv_getheader(cnt);
                cnt2 = cnt;
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) != 0)
                        {
                            if (inv(3, cnt) == 54)
                            {
                                inv(7, cnt) = 0;
                            }
                            item_stack(cnt2, cnt);
                        }
                    }
                }
            }
        }
        gdata(89) = 90;
    }
    if (gdata(96) < 960)
    {
        gdata(260) = 2;
    }
    if (gdata(96) < 973)
    {
        gdata(85) = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (217); cnt < cnt_end; ++cnt)
            {
                if (trait(cnt) != 0)
                {
                    if (cnt > 37)
                    {
                        trait(cnt) = 0;
                    }
                }
            }
        }
        label_0043();
    }
    if (gdata(96) < 975)
    {
        file = exedir + u8"tmp\\"s;
        exist(file + u8"mdata_5_103.s2"s);
        if (strsize != -1)
        {
            elona_delete(file + u8"mdata_5_103.s2"s);
        }
        if (gdata(20) == 5)
        {
            dialog(
                u8"マップをアップデートするため、一度ヴェルニースに出入りしてください。"s);
        }
    }
    if (gdata(96) < 1010)
    {
        gdata(810) = 0;
    }
    if (gdata(96) < 1060)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
            {
                cdata(69, cnt) = 10;
            }
        }
    }
    if (gdata(96) < 1070)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
            {
                cdata(48, cnt) = cdata(38, cnt);
                if (cnt >= 16)
                {
                    cdata(9, cnt) = 0;
                    cdata(69, cnt) = 0;
                }
                else
                {
                    cdata(9, cnt) = 10;
                    cdata(69, cnt) = 10;
                }
            }
        }
    }
    if (gdata(96) < 1100)
    {
        gdata(95) = 0;
        label_0043();
    }
    if (gdata(96) < 1110)
    {
        gdata(814) = 0;
        gdata(79) = 1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
            {
                if (cdata(150, cnt) == 13)
                {
                    cdata(156, cnt) = 100;
                }
            }
        }
    }
    if (gdata(96) < 1111)
    {
        gdata(79) = 1;
        dialog(lang(
            u8"ユーザー物件の情報をアップデートするため、ゲーム開始後一度ワールドマップに出てください。"s,
            u8"Please exit the current area and enter the world map once to update game data."s));
    }
    if (gdata(96) < 1130)
    {
        cfg_net = 1;
        valn(0) = u8"net."s;
        valn(1) = u8"1"s;
        label_2713();
        cfg_netwish = 1;
        valn(0) = u8"netWish."s;
        valn(1) = u8"1"s;
        label_2713();
        cfg_netchat = 0;
        valn(0) = u8"netChat."s;
        valn(1) = u8"0"s;
        label_2713();
    }
    if (gdata(96) < 1140)
    {
        cfg_exanime = 1;
        valn(0) = u8"exAnime."s;
        valn(1) = u8"1"s;
        label_2713();
        gdata(79) = 1;
        label_2090();
    }
    if (gdata(96) < 1150)
    {
        if (gdata(805) < 0)
        {
            gdata(805) = 2160000;
        }
        else
        {
            gdata(805) /= 1000;
        }
    }
    if (gdata(96) < 1170)
    {
        if (adata(0, gdata(20)) != 3)
        {
            dialog(lang(
                u8"アップデートを行うには、街中でセーブしたセーブデータが必要です。"s,
                u8"To update your game, please save your game in a town in the previous version then retry."s));
            label_0193();
            return;
        }
        dialog(lang(
            u8"次のプロセスの完了までには、しばらく時間がかかることがあります。"s,
            u8"The next updating process may take a while to complete."s));
        memcpy(adata, 0, 300, adata, 0, 100, 8000);
        memcpy(adata, 0, 450, adata, 0, 150, 8000);
        {
            int cnt = 100;
            for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
            {
                p = cnt;
                SDIM1(file_cnv);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
                    {
                        adata(cnt, p) = 0;
                    }
                }
                folder = exedir + u8"tmp"s;
                dirlist(buff, folder + u8"\\*_"s + p + u8"_*.*"s);
                if (stat != 0)
                {
                    notesel(buff);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
                        {
                            noteget(file, cnt);
                            p1 = instr(file, 0, u8"_"s);
                            p2 = instr(file, p1 + 1, u8"_"s);
                            if (p >= 150)
                            {
                                p3 = p - 150 + 450;
                            }
                            else
                            {
                                p3 = p - 100 + 300;
                            }
                            file_cnv = folder + u8"\\"s
                                + strmid(file, 0, (p1 + 1)) + p3
                                + strmid(file, (p1 + p2 + 1), 20);
                            file = folder + u8"\\"s + file;
                            bcopy(file, file_cnv);
                            fileadd(file_cnv);
                            elona_delete(file);
                            fileadd(file, 1);
                        }
                    }
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
            {
                if (adata(16, cnt) != 0)
                {
                    if (adata(30, cnt) == 0)
                    {
                        adata(30, cnt) = 4;
                    }
                }
            }
        }
        gdata(850) = 4;
    }
    if (gdata(96) != elona_int(elona_double(u8"1.22"s) * 1000))
    {
        gdata(79) = 1;
    }
    del_chara(56);
    if (gdata(96) > elona_int(elona_double(u8"1.22"s) * 1000))
    {
        dialog(u8"invalid version"s);
        label_0193();
        return;
    }
    gdata(96) = elona_int(elona_double(u8"1.22"s) * 1000);
    cbitmod(967, 0, 1);
    label_1920();
    return;
}
void label_2090()
{
    ++gdata(184);
    DIM3(qdata, 20, 500);
    SDIM3(qname, 40, 500);
    gdata(75) = 0;
    label_1752();
    return;
}
void label_2091()
{
    file = u8"shop"s + 3 + u8".s2"s;
    fmode = 4;
    label_2107();
    p = 0;
    i = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (600); cnt < cnt_end; ++cnt)
        {
            if (cnt >= 10 && cnt < 20)
            {
                p += sorg(cnt, 56);
            }
            if (cnt >= 100 && cnt < 400)
            {
                i += sorg(cnt, 56);
            }
        }
    }
    p = (p - 250) / 7;
    if (p < 5)
    {
        p = 5;
    }
    else
    {
        if (p > 50)
        {
            p = 50;
        }
    }
    i = (p - 250) / 8;
    if (i < 5)
    {
        i = 5;
    }
    else
    {
        if (i > 40)
        {
            i = 40;
        }
    }
    cdata(30, 0) += limit(cdata(30, 56) / 100, 1000, 100000);
    cdata(31, 0) += p;
    cdata(41, 0) += i;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
        {
            mat(cnt) = mat(cnt) / 3;
        }
    }
    return;
}
void label_2092()
{
    fmode = 15;
    label_2107();
    DIM2(spell, 200);
    DIM2(spact, 500);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            cdata(0, cnt) = 0;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1200); cnt < cnt_end; ++cnt)
        {
            sdata(cnt, 56) = sdata(cnt, 0);
            sdata(cnt, 0) = 0;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            cdata(cnt, 56) = cdata(cnt, 0);
            cdata(cnt, 0) = 0;
        }
    }
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            inv(0, cnt) = 0;
        }
    }
    inv_getheader(0);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            if (inv(0, cnt) == 0)
            {
                continue;
            }
            if (inv(3, cnt) == 717)
            {
                lomiaseaster = 1;
            }
            if (inv(3, cnt) == 511 || refitem(inv(3, cnt), 9) == 53100)
            {
                continue;
            }
            if (inv(3, cnt) == 578)
            {
                continue;
            }
            if (inv(4, cnt) == 6)
            {
                continue;
            }
            if (ibit(5, cnt))
            {
                continue;
            }
            if (refitem(inv(3, cnt), 5) == 25000)
            {
                inv(9, cnt) = -1;
            }
            inv(18, cnt) = 0;
            item_copy(cnt, inv_getfreeid(-1));
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            del_chara(cnt);
        }
    }
    gdata(805) = genetemp(805);
    return;
}
void label_2093()
{
    fmode = 14;
    label_2107();
    return;
}
void zipadd(const std::string& prm_1062)
{
    p = 12;
    exist(folder + prm_1062);
    len = strsize + p * 2;
    lenhead = lensum;
    lensum += len;
    SDIM2(ziptmp1, p);
    ziptmp1 += prm_1062;
    SDIM2(ziptmp2, p);
    ziptmp2 += elona_str(len);
    memexpand(filebuff, lensum);
    memcpy_(filebuff, ziptmp1, p, lenhead);
    memcpy_(filebuff, ziptmp2, p, lenhead + p);
    SDIM2(filetemp, len - p * 2);
    bload(folder + prm_1062, filetemp, 0, 0);
    memcpy_(filebuff, filetemp, len - p * 2, lenhead + p * 2);
    return;
}
void label_2095()
{
    p = 12;
    folder = exedir + u8"user\\"s;
    bload(folder + file, headtemp, 1024);
    label_2720();
    exist(folder + file);
    zipsize = strsize;
    SDIM2(filebuff, zipsize);
    bload(folder + file, filebuff, zipsize);
    lenhead = 1024;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10000); cnt < cnt_end; ++cnt)
        {
            SDIM2(ziptmp1, p);
            SDIM2(ziptmp2, p);
            memcpy_(ziptmp1, filebuff, p, 0, lenhead);
            memcpy_(ziptmp2, filebuff, p, 0, lenhead + p);
            len = elona_int(ziptmp2);
            SDIM2(filetemp, len - p * 2);
            memcpy_(filetemp, filebuff, len - p * 2, 0, lenhead + p * 2);
            bsave(folder + ziptmp1, filetemp);
            lenhead += len;
            if (lenhead >= zipsize)
            {
                break;
            }
        }
    }
    return;
}
void zipinit2(const std::string& prm_1063, const std::string& prm_1064)
{
    lensum_at_m188 = 0;
    zipfolder_at_m188 = prm_1063;
    zipfinalfile_at_m188 = prm_1064;
    SDIM1(filebuff_at_m188);
    return;
}
void zipadd2(const std::string& prm_1065)
{
    p_at_m188(0) = 50;
    p_at_m188(1) = 40;
    p_at_m188(2) = 10;
    exist(zipfolder_at_m188 + prm_1065);
    len_at_m188 = strsize + p_at_m188;
    lenhead_at_m188 = lensum_at_m188;
    lensum_at_m188 += len_at_m188;
    SDIM2(ziptmp1_at_m188, p_at_m188(1));
    ziptmp1_at_m188 += prm_1065;
    SDIM2(ziptmp2_at_m188, p_at_m188(2));
    ziptmp2_at_m188 += elona_str(len_at_m188);
    memexpand(filebuff_at_m188, lensum_at_m188);
    memcpy_(filebuff_at_m188, ziptmp1_at_m188, p_at_m188(1), lenhead_at_m188);
    memcpy_(
        filebuff_at_m188,
        ziptmp2_at_m188,
        p_at_m188(2),
        lenhead_at_m188 + p_at_m188(1));
    SDIM2(filetemp_at_m188, len_at_m188 - p_at_m188);
    bload(zipfolder_at_m188 + prm_1065, filetemp_at_m188, 0, 0);
    memcpy_(
        filebuff_at_m188,
        filetemp_at_m188,
        len_at_m188 - p_at_m188,
        lenhead_at_m188 + p_at_m188);
    return;
}
void zipend2()
{
    bsave(zipfolder_at_m188 + zipfinalfile_at_m188, filebuff_at_m188);
    return;
}
void unzip2(const std::string& prm_1066, const std::string& prm_1067)
{
    int zipsize_at_m188 = 0;
    p_at_m188(0) = 50;
    p_at_m188(1) = 40;
    p_at_m188(2) = 10;
    exist(prm_1066 + prm_1067);
    zipsize_at_m188 = strsize;
    SDIM2(filebuff_at_m188, zipsize_at_m188);
    bload(prm_1066 + prm_1067, filebuff_at_m188, zipsize_at_m188);
    lenhead_at_m188 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10000); cnt < cnt_end; ++cnt)
        {
            SDIM2(ziptmp1_at_m188, p_at_m188(1));
            SDIM2(ziptmp2_at_m188, p_at_m188(2));
            memcpy_(
                ziptmp1_at_m188,
                filebuff_at_m188,
                p_at_m188(1),
                0,
                lenhead_at_m188);
            memcpy_(
                ziptmp2_at_m188,
                filebuff_at_m188,
                p_at_m188(2),
                0,
                lenhead_at_m188 + p_at_m188(1));
            len_at_m188 = elona_int(ziptmp2_at_m188);
            if (len_at_m188 == 0)
            {
                break;
            }
            SDIM2(filetemp_at_m188, len_at_m188 - p_at_m188);
            memcpy_(
                filetemp_at_m188,
                filebuff_at_m188,
                len_at_m188 - p_at_m188,
                0,
                lenhead_at_m188 + p_at_m188);
            bsave(prm_1066 + ziptmp1_at_m188, filetemp_at_m188);
            lenhead_at_m188 += len_at_m188;
            if (lenhead_at_m188 >= zipsize_at_m188)
            {
                break;
            }
        }
    }
    return;
}
std::string getnpctxt(const std::string& prm_1068, const std::string& prm_1069)
{
    int p_at_m189 = 0;
    p_at_m189 = instr(txtbuff, 0, prm_1068);
    if (p_at_m189 == -1)
    {
        return prm_1069;
    }
    p_at_m189 += instr(txtbuff, p_at_m189, u8"\""s);
    if (p_at_m189 == -1)
    {
        return prm_1069;
    }
    return strmid(
        txtbuff,
        p_at_m189 + 1,
        limit(instr(txtbuff, p_at_m189 + 1, u8"\""s), 0, 70));
}
void label_2104()
{
    if (initunid)
    {
        cdata(157, rc) = initunid - 1;
        initunid = 0;
    }
    cun = cdata(157, rc);
    cdata(27, rc) = 343;
    if (initlv != 0)
    {
        cdata(38, rc) = initlv;
    }
    else
    {
        cdata(38, rc) = limit(userdata(2, cun), 1, 100);
    }
    cdata(13, rc) = -1;
    creaturepack = 0;
    cdata(212, rc) = 55;
    cdata(209, rc) = unaiactsubfreq(cun);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            cdata(215 + cnt, rc) = userdata(15 + cnt, cun);
            cdata(220 + cnt, rc) = userdata(20 + cnt, cun);
        }
    }
    if (userdatan(5, cun) != ""s)
    {
        SDIM3(unres, 6, 32);
        csvstr2(unres, userdatan(5, cun));
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                if (cnt > 15 || unres(cnt) == ""s)
                {
                    break;
                }
                sdata(elona_int(unres(cnt * 2)), rc) +=
                    elona_int(unres((cnt * 2 + 1))) * 50;
            }
        }
    }
    cdata(23, rc) = 1;
    cdata(40, rc) = -10000;
    cdatan(0, rc) = userdatan(1, cun);
    cdatan(5, rc) = userdatan(0, cun);
    cdata(9, rc) = limit(userdata(4, cun), -3, 10);
    cdata(202, rc) = limit(userdata(7, cun), 1, 4);
    cdata(207, rc) = limit(userdata(8, cun), 0, 100);
    cdata(208, rc) = limit(userdata(9, cun), 1, 100);
    if (userdata(11, cun))
    {
        cdata(230, rc) = limit(userdata(11, cun), 5000000, 6400000);
    }
    cdata(211, rc) = userdata(10, cun);
    dbidn = userdatan(2, cun);
    dbmode = 3;
    label_2297();
    dbidn = userdatan(3, cun);
    dbmode = 3;
    label_2298();
    cdata(8, rc) = userdata(3, cun);
    if (userdata(3, cun) != 0)
    {
        if (userdata(3, cun) != 1)
        {
            cdata(8, rc) = rnd(2);
        }
    }
    if (userdata(5, cun))
    {
        fixlv = limit(userdata(5, cun), 0, 6);
    }
    cspecialeq = 0;
    cdata(69, rc) = cdata(9, rc);
    fixaiact(rc);
    setunid(rc, cun);
    return;
}
void label_2105()
{
    dirlist(buff, exedir + u8"user\\*.npc"s);
    notesel(buff);
    usernpcmax = noteinfo(0);
    if (usernpcmax >= 100)
    {
        usernpcmax = 100;
    }
    DIM3(userdata, 70, usernpcmax + 1);
    SDIM4(userdatan, 40, 10, usernpcmax + 1);
    SDIM3(usertxt, 8000, usernpcmax + 1);
    SDIM1(untaglist);
    gdata(86) = 0;
    buffer(5, 1584, (25 + (usernpcmax / 33 + 1) * 2) * 48);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\character"s + devfile + u8".bmp"s, 1);
    gmode(0);
    fread = 1;
    func_1(buff, 1);
    tg = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (usernpcmax); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            cnt2 = tg;
            unzip2(exedir + u8"user\\"s, s);
            if (fread == 0)
            {
                zOpen(hgz, exedir + u8"user\\npc1.t"s, 1, 3);
                zWrite(userdata, hgz, 280, tg);
                zClose(hgz);
            }
            else
            {
                zOpen(hgz, exedir + u8"user\\npc1.t"s, 0);
                zRead(userdata, hgz, 280, tg);
                zClose(hgz);
            }
            DIM2(bmpbuff, userdata(0, tg));
            SDIM2(txtbuff, userdata(1, tg));
            if (fread == 0)
            {
                zOpen(hgz, exedir + u8"user\\npc2.t"s, 1, 3);
                zWrite(bmpbuff, hgz, userdata(0, tg));
                zClose(hgz);
            }
            else
            {
                zOpen(hgz, exedir + u8"user\\npc2.t"s, 0);
                zRead(bmpbuff, hgz, userdata(0, tg));
                zClose(hgz);
            }
            if (fread == 0)
            {
                zOpen(hgz, exedir + u8"user\\npc3.t"s, 1, 3);
                zWrite(txtbuff, hgz, userdata(1, tg));
                zClose(hgz);
            }
            else
            {
                zOpen(hgz, exedir + u8"user\\npc3.t"s, 0);
                zRead(txtbuff, hgz, userdata(1, tg));
                zClose(hgz);
            }
            s = getnpctxt(u8"name."s, u8"unknown,unknown"s);
            csvstr2(s, s);
            userdatan(0, tg) = s;
            userdatan(1, tg) = s(jp);
            noteget(s, cnt);
            userdatan(6, tg) = s;
            if (instr(untaglist, 0, u8"/"s + userdatan(0, tg) + u8"/"s) != -1)
            {
                --usernpcmax;
                if (instr(s, 0, u8"_tmp_"s) == -1)
                {
                    msgtemp += lang(
                                   u8"同名NPCは読み込まれない。"s,
                                   u8"A npc of the same name exists."s)
                        + u8"(skipped:"s + userdatan(0, tg) + u8","s + s
                        + u8") "s;
                }
                continue;
            }
            untaglist += u8"/"s + userdatan(0, tg) + u8"/"s;
            if (instr(s, 0, u8"_tmp_"s) != -1)
            {
                ++gdata(86);
            }
            userdatan(2, tg) = getnpctxt(u8"race."s, u8"slime"s);
            userdatan(3, tg) = getnpctxt(u8"class."s, u8"tourist"s);
            userdatan(4, tg) = getnpctxt(u8"filter."s, ""s);
            userdatan(5, tg) = getnpctxt(u8"resist."s, ""s);
            s = getnpctxt(u8"meleeElem."s, u8"0,0"s);
            csvstr2(s, s);
            userdata(11, tg) = elona_int(s) * 100000 + elona_int(s(1));
            s = getnpctxt(u8"bitOn."s, u8"0,0"s);
            csvstr2(s, s);
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    p = elona_int(s(cnt));
                    if (cnt > 20 || p == 0)
                    {
                        break;
                    }
                    HMMBITON(userdata(40 + p / 32, cnt2), p % 32);
                }
            }
            s = getnpctxt(u8"aiAct."s, u8"0,0,0,0,0"s);
            csvstr2(s, s);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                {
                    userdata(15 + cnt, cnt2) = elona_int(s(cnt));
                }
            }
            s = getnpctxt(u8"aiActSub."s, u8"0,0,0,0,0"s);
            csvstr2(s, s);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                {
                    userdata(20 + cnt, cnt2) = elona_int(s(cnt));
                }
            }
            userdata(12, tg) = elona_int(getnpctxt(u8"select."s, u8"0"s));
            userdata(2, tg) = elona_int(getnpctxt(u8"level."s, u8"1"s));
            userdata(3, tg) = elona_int(getnpctxt(u8"sex."s, u8"-1"s));
            userdata(4, tg) = elona_int(getnpctxt(u8"relation."s, u8"-1"s));
            userdata(5, tg) = elona_int(getnpctxt(u8"fixLv."s, u8"0"s));
            userdata(6, tg) = elona_int(getnpctxt(u8"rare."s, u8"0"s));
            userdata(7, tg) = elona_int(getnpctxt(u8"aiCalm."s, u8"1"s));
            userdata(8, tg) = elona_int(getnpctxt(u8"aiMove."s, u8"50"s));
            userdata(9, tg) = elona_int(getnpctxt(u8"aiDist."s, u8"1"s));
            userdata(10, tg) = elona_int(getnpctxt(u8"aiHeal."s, u8"0"s));
            unaiactsubfreq(tg) =
                elona_int(getnpctxt(u8"aiActSubFreq."s, u8"0"s));
            p = instr(txtbuff, 0, u8"%txt"s);
            txtbuff = strmid(txtbuff, p, instr(txtbuff, 0, u8"%endTxt"s) - p);
            usertxt(tg) = strmid(txtbuff, 0, 7998);
            gsel(9);
            memfile(bmpbuff);
            picload(u8"MEM:temp.bmp"s);
            if (ginfo(13) > 50)
            {
                chipc(0, 825 + tg) = tg % 33 * inf_tiles;
                chipc(1, 825 + tg) = 25 * inf_tiles + tg / 33 * inf_tiles * 2;
                chipc(2, 825 + tg) = inf_tiles;
                chipc(3, 825 + tg) = inf_tiles * 2;
                chipc(4, 825 + tg) = inf_tiles + 8;
            }
            else
            {
                chipc(0, 825 + tg) = tg % 33 * inf_tiles;
                chipc(1, 825 + tg) = 25 * inf_tiles + tg / 33 * inf_tiles * 2;
                chipc(2, 825 + tg) = inf_tiles;
                chipc(3, 825 + tg) = inf_tiles;
                chipc(4, 825 + tg) = 16;
            }
            gsel(5);
            pos(tg % 33 * 48, 1200 + tg / 33 * 96);
            gcopy(9, 0, 0, 48, 96);
            ++tg;
        }
    }
    label_2111();
    label_2110();
    gsel(5);
    folder = exedir + u8"user\\graphic\\"s;
    dirlist(buff, folder + u8"chara_*.bmp"s);
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
        {
            noteget(file, cnt);
            p = elona_int(strmid(file, 6, instr(file, 6, u8"."s)));
            pos(p % 33 * inf_tiles, p / 33 * inf_tiles);
            picload(folder + file, 1);
        }
    }
    gsel(0);
    return;
}
void label_2106()
{
    fread = 0;
    cun = usernpcmax;
    txt(lang(
        u8"どのファイルからNPCを作成する？"s, u8"Choose the original file."s));
    redraw(1);
    fileext = u8"txt"s;
    filedsc = u8"Custom Npc Text"s;
    _fdialog(fileext, 16, filedsc, exedir + u8"user"s, ""s);
    if (stat == 0)
    {
        return;
    }
    txtfile = refstr;
    exist(txtfile);
    userdata(1, cun) = strsize;
    SDIM2(txtbuff, strsize);
    bload(txtfile, txtbuff);
    if (instr(txtbuff, 0, u8"%Elona Custom Npc"s) == -1)
    {
        txt(u8"Invalid File. Aborting."s);
        return;
    }
    txt(lang(u8"どの画像を埋め込む？"s, u8"Choose the graphic file."s));
    redraw(1);
    fileext = u8"bmp"s;
    filedsc = u8"Bit Map File"s;
    _fdialog(fileext, 16, filedsc, exedir + u8"user"s, ""s);
    if (stat == 0)
    {
        return;
    }
    bmpfile = refstr;
    exist(bmpfile);
    if (strsize > 30000)
    {
        txt(u8"The file size must be lower than 30KB. Aborting."s);
        return;
    }
    userdata(0, cun) = strsize;
    DIM2(bmpbuff, strsize);
    bload(bmpfile, bmpbuff);
    if (fread == 0)
    {
        zOpen(hgz, exedir + u8"user\\npc1.t"s, 1, 3);
        zWrite(userdata, hgz, 280, cun);
        zClose(hgz);
    }
    else
    {
        zOpen(hgz, exedir + u8"user\\npc1.t"s, 0);
        zRead(userdata, hgz, 280, cun);
        zClose(hgz);
    }
    if (fread == 0)
    {
        zOpen(hgz, exedir + u8"user\\npc2.t"s, 1, 3);
        zWrite(bmpbuff, hgz, userdata(0, cun));
        zClose(hgz);
    }
    else
    {
        zOpen(hgz, exedir + u8"user\\npc2.t"s, 0);
        zRead(bmpbuff, hgz, userdata(0, cun));
        zClose(hgz);
    }
    if (fread == 0)
    {
        zOpen(hgz, exedir + u8"user\\npc3.t"s, 1, 3);
        zWrite(txtbuff, hgz, userdata(1, cun));
        zClose(hgz);
    }
    else
    {
        zOpen(hgz, exedir + u8"user\\npc3.t"s, 0);
        zRead(txtbuff, hgz, userdata(1, cun));
        zClose(hgz);
    }
    s = getnpctxt(u8"name."s, u8"unknown,unknown"s);
    csvstr2(s, s);
    cnv_filestr(s);
    if (instr(s, 0, u8"_tmp_"s) != -1)
    {
        dialog(u8"The name contains an invalid word \"_tmp_\""s);
        return;
    }
    if (peek(s) >= 65 && peek(s) <= 90 || peek(s) >= 97 && peek(s) <= 122)
    {
    }
    else
    {
        dialog(u8"The first letter of the name must be alphabetic."s);
        return;
    }
    if (strlen_u(s) >= 32 || strlen(s(1)) >= 32)
    {
        dialog(u8"The name is too long."s);
        return;
    }
    zipinit2(exedir + u8"user\\"s, s + u8".npc"s);
    zipadd2(u8"npc1.t"s);
    zipadd2(u8"npc2.t"s);
    zipadd2(u8"npc3.t"s);
    zipend2();
    q = s;
    label_2105();
    initunid = findunid(q);
    txt(lang(
        u8"カスタムNPCを作成した！"s,
        u8"A custom NPC has been successfully generated!"s));
    flt();
    characreate(-1, 343, cdata(1, 0), cdata(2, 0));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(27, cnt) == 343)
            {
                getunid(cnt);
            }
        }
    }
    cdata(9, rc) = -3;
    txt(lang(
        name(rc) + u8"は興奮して襲い掛かってきた。"s,
        name(rc) + u8" is excited and attacks you."s));
    folder = exedir + u8"user\\"s;
    label_2111();
    return;
}
void label_2108()
{
    SDIM2(headtemp, 1024);
    id = 0;
    lensum = 1024;
    SDIM2(filebuff, lensum);
    if (usertitle != ""s)
    {
        headtemp = u8"【"s + usertitle + u8"】\n"s;
    }
    else
    {
        headtemp = u8"【"s + mdatan(0) + u8"】\n"s;
    }
    headtemp += ""s + cdatan(1, 0) + cdatan(0, 0) + u8"\n"s;
    headtemp += u8"\n"s;
    headtemp += u8"\n"s;
    headtemp += ""s + 100001 + u8"\n"s;
    headtemp += ""s + usermsg + u8"\n"s;
    headtemp += ""s + userrelation + u8"\n"s;
    memcpy_(filebuff, headtemp, 1024, 0);
    fmode = 20;
    label_2107();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            list(0, cnt) = 0;
            if (cnt != 0)
            {
                if (cdata(150, cnt) != 13)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        if (cbit(975, cnt) == 0)
                        {
                            list(0, cnt) = 1;
                        }
                    }
                }
            }
        }
    }
    fmode = 22;
    label_2107();
    bsave(userfile, filebuff);
    label_2111();
    return;
}
void label_2109()
{
    SDIM2(headtemp, 1024);
    id = 0;
    lensum = 1024;
    SDIM2(filebuff, lensum);
    headtemp = u8"【"s + gdatan(0) + u8"】("s + n + u8"体)  Lv"s + lv + u8"\n"s;
    headtemp += ""s + cdatan(1, 0) + cdatan(0, 0) + u8"\n"s;
    headtemp += u8"\n"s;
    headtemp += u8"\n"s;
    headtemp += ""s + 100001 + u8"\n"s;
    headtemp += ""s + n + u8"\n"s;
    headtemp += ""s + lv + u8"\n"s;
    memcpy_(filebuff, headtemp, 1024, 0);
    fmode = 22;
    label_2107();
    bsave(userfile, filebuff);
    label_2111();
    return;
}
void label_2110()
{
    dirlist(buff, exedir + u8"user\\_tmp_*.npc"s);
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
        {
            noteget(file, cnt);
            elona_delete(exedir + u8"user\\"s + file);
        }
    }
    dirlist(buff, exedir + u8"user\\!tmp*.npc"s);
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
        {
            noteget(file, cnt);
            elona_delete(exedir + u8"user\\"s + file);
        }
    }
    return;
}
void label_2111()
{
    dirlist(buff, exedir + u8"user\\*.t"s);
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (stat); cnt < cnt_end; ++cnt)
        {
            noteget(file, cnt);
            elona_delete(exedir + u8"user\\"s + file);
        }
    }
    return;
}
void label_2112()
{
    filemod = "";
    fmode = 10;
    label_2107();
    folder = exedir + u8"save\\"s + playerid + u8"\\"s;
    notesel(buff);
    exist(folder + u8"filelist.txt"s);
    if (strsize == -1)
    {
        dirlist(buff, folder + u8"*.*"s);
    }
    else
    {
        noteload(folder + u8"filelist.txt"s);
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (instr(s, 0, u8".s2"s) != -1)
            {
                bcopy(folder + s, exedir + u8"tmp\\"s + s);
            }
        }
    }
    fmode = 7;
    label_2107();
    label_2089();
    label_1277();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (cbit(967, cnt) == 1 || cnt == 0)
            {
                create_pcpic(cnt, 1);
            }
        }
    }
    if (gdata(828) == 1)
    {
        cdatan(1, 0) = u8"*Debug*"s;
    }
    refreshspeed(0);
    time_begin = timeGetTime() / 1000;
    return;
}
void label_2113()
{
    if (gdata(20) == 35)
    {
        txtef(3);
        txt(lang(
            u8"ユーザーマップの中ではセーブできない。"s,
            u8"The game is not saved in a user map."s));
        label_1419();
        return;
    }
    fmode = 2;
    label_2107();
    file = u8"inv_"s + mid + u8".s2"s;
    fmode = 4;
    label_2107();
    file = exedir + u8"save\\"s + playerid;
    dirlist(save_buff, file, 5);
    notesel(save_buff);
    save_f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(save_s, cnt);
            if (save_s == playerid)
            {
                save_f = 1;
                break;
            }
        }
    }
    if (save_f == 0)
    {
        mkdir(file);
    }
    else
    {
    }
    file += u8"\\"s;
    notesel(filemod);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(save_s, cnt);
            if (strmid(save_s, 0, 1) == u8"*"s)
            {
                save_p = 0;
            }
            else
            {
                save_p = 1;
            }
            save_s = strmid(save_s, 1, strlen(save_s));
            if (save_p == 0)
            {
                bcopy(save_s, file + getpath(save_s, 8));
            }
            else
            {
                exist(file + getpath(save_s, 8));
                if (strsize != -1)
                {
                    elona_delete(file + getpath(save_s, 8));
                }
            }
        }
    }
    fmode = 8;
    label_2107();
    filemod = "";
    dirlist(buff, exedir + u8"tmp\\*.*"s);
    notesel(buff);
    notesave(exedir + u8"save\\"s + playerid + u8"\\filelist.txt"s);
    return;
}
void label_2114()
{
    snd(49);
    gdata(66) = gdata(20);
    gdata(67) = gdata(22);
    gdata(68) = cdata(1, 0);
    gdata(69) = cdata(2, 0);
    gdata(64) = 35;
    gdata(65) = 1;
    levelexitby = 2;
    label_1737();
    return;
}
void label_2115()
{
    mode = 10;
    lomiaseaster = 0;
    music = 65;
    label_0068();
    cs = 0;
    cs_bk = -1;
    keyrange = 6;
    key_list(0) = u8"a"s;
    key_list(1) = u8"b"s;
    key_list(2) = u8"c"s;
    key_list(3) = u8"d"s;
    key_list(4) = u8"e"s;
    key_list(5) = u8"f"s;
    pagesize = 0;
    redraw(0);
    gsel(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            pos(cnt % 4 * 180, cnt / 4 * 300);
            picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
        }
    }
    gsel(4);
    gmode(0);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\title"s + devfile + u8".bmp"s, 1);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gmode(2);
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(255, 255, 255);
    pos(20, 20);
    mes(u8"Elona version 1.22  Developed by Noa"s);
    pos(20, 38);
    if (jp)
    {
        mes(u8"Contributor MSL / View the credits for more"s);
    }
    else
    {
        mes(u8"Contributor f1r3fly, Sunstrike, Schmidt, Elvenspirit / View the credits for more"s);
    }
    if (jp)
    {
        s(0) = u8"冒険の道標"s;
        s(1) = strhint1;
    }
    else
    {
        s(0) = u8"Starting Menu"s;
        s(1) = strhint1;
    }
    windowshadow = 1;
    display_window(80, winposy(308, 1), 320, 320);
    cmbg = 4;
    x = ww / 5 * 4;
    y = wh - 80;
    gmode(4, 180, 300, 50);
    pos(wx + 160, wy + wh / 2);
    grotate(2, cmbg / 2 * 180, cmbg % 2 * 300, 0, x, y);
    gmode(2);
    if (jp)
    {
        s(0) = u8"Restore an adventurer"s;
        s(1) = u8"冒険を再開する"s;
        s(2) = u8"Generate an adventurer"s;
        s(3) = u8"新しい冒険者を作成する"s;
        s(4) = u8"Incarnate an adventurer"s;
        s(5) = u8"冒険者の引継ぎ"s;
        s(6) = u8"View the homepage"s;
        s(7) = u8"ホームページを開く"s;
        s(8) = u8"Configure"s;
        s(9) = u8"設定の変更"s;
        s(10) = u8"Exit"s;
        s(11) = u8"終了"s;
    }
    if (en)
    {
        s(0) = u8"Restore an Adventurer"s;
        s(1) = u8"Generate an Adventurer"s;
        s(2) = u8"Incarnate an Adventurer"s;
        s(3) = u8"View the Homepage"s;
        s(4) = u8"Options"s;
        s(5) = u8"Exit"s;
    }
    if (cfg_titleeffect)
    {
        if (water_debug == 0)
        {
            water_getimage();
            water_debug = 1;
        }
    }
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_title.bmp"s, 1);
    gsel(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
label_2116_internal:
    if (cfg_autonumlock)
    {
        GetKeyboardState(keybd_st);
        if (peek(keybd_st, 144) == 1)
        {
            keybd_event(144);
            keybd_event(144, 0, 2);
        }
    }
    redraw(0);
    tx += (rnd(10) + 2) * p(1);
    ty += (rnd(10) + 2) * p(2);
    if (rnd(10) == 0)
    {
        tx = rnd(800);
        ty = rnd(600);
        p(1) = rnd(9) - 4;
        p(2) = rnd(9) - 4;
    }
    f = 0;
    if (tx > 40 && tx < 500 && ty > 100 && ty < 450)
    {
        f = 1;
    }
    if (f == 0)
    {
        if (rnd(10) == 0)
        {
            f = 2;
        }
    }
    if (f == 0)
    {
        water_setripple(tx, ty, rnd(300), rnd(4));
    }
    if (cfg_titleeffect)
    {
        water_calc();
        water_draw();
    }
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
        {
            x = wx + 40;
            y = cnt * 35 + wy + 50;
            display_customkey(key_list(cnt), x, y);
            if (jp)
            {
                font(lang(cfg_font1, cfg_font2), 11 - en * 2, 0);
                pos(x + 40, y - 4);
                mes(s(cnt * 2));
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                cs_list(cnt, s(cnt * 2 + 1), x + 40, y + 8, 19);
            }
            else
            {
                font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
                cs_list(cnt, s(cnt), x + 40, y + 1, 19);
            }
        }
    }
    cs_bk = cs;
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == u8"b"s)
    {
        snd(20);
        geneuse = "";
        label_1541();
        return;
    }
    if (key == u8"a"s)
    {
        snd(20);
        label_2118();
        return;
    }
    if (key == u8"c"s)
    {
        snd(20);
        label_2121();
        return;
    }
    if (key == u8"d"s)
    {
        snd(20);
        exec(homepage, 16);
    }
    if (key == u8"e"s)
    {
        snd(20);
        label_2723();
        return;
    }
    if (key == u8"f"s)
    {
        snd(20);
        await(400);
        label_0193();
        return;
    }
    goto label_2116_internal;
}
void label_2118()
{
    cs = 0;
    cs_bk = -1;
    redraw(0);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\void.bmp"s, 1);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gsel(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    if (jp)
    {
        s = u8"どの冒険を再開するんだい？"s;
    }
    else
    {
        s = u8"Which save game do you want to continue?"s;
    }
    label_1425();
    file = exedir + u8"save\\*"s;
    dirlist(buff, file, 5);
    notesel(buff);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            file = exedir + u8"save\\"s + s + u8"\\header.txt"s;
            exist(file);
            if (strsize == -1)
            {
                notedel(cnt);
                if (cnt < noteinfo(0))
                {
                    --cnt;
                    continue;
                }
                else
                {
                    break;
                }
            }
            bload(file, playerheader);
            list(0, cnt) = cnt;
            listn(0, cnt) = s;
            listn(1, cnt) = ""s + playerheader;
            key_list(cnt) = key_select(cnt);
            ++keyrange;
        }
    }
    windowshadow = 1;
label_2119_internal:
    redraw(0);
    if (jp)
    {
        s(0) = u8"冒険者の選択"s;
        s(1) = u8"BackSpace [削除]  "s + strhint3b;
    }
    else
    {
        s(0) = u8"Game Selection"s;
        s(1) = u8"BackSpace [Delete]  "s + strhint3b;
    }
    display_window(
        (windoww - 440) / 2 + inf_screenx, winposy(288, 1), 440, 288);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            x = wx + 20;
            y = cnt * 40 + wy + 50;
            display_key(x + 20, y - 2, cnt);
            font(lang(cfg_font1, cfg_font2), 11 - en * 2, 0);
            pos(x + 48, y - 4);
            mes(listn(0, cnt));
            font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
            cs_list(cnt, listn(1, cnt), x + 48, y + 8, 19);
        }
    }
    cs_bk = cs;
    if (noteinfo(0) == 0)
    {
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        pos(wx + 140, wy + 120);
        mes(u8"No save files found"s);
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        playerid = listn(0, p);
        snd(20);
        await(200);
        mode = 3;
        music = 0;
        label_2732();
        return;
    }
    getkey(a, 8);
    if (ginfo(2) == 0)
    {
        if (noteinfo(0) != 0)
        {
            if (a == 1)
            {
                p = list(0, cs);
                playerid = listn(0, p);
                if (jp)
                {
                    s = u8"本当に"s + playerid + u8"を削除していいのかい？"s;
                }
                else
                {
                    s = u8"Do you really want to delete "s + playerid + u8" ?"s;
                }
                label_1425();
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 200;
                val(3) = 1;
                label_2131();
                if (rtval != 0)
                {
                    label_2118();
                    return;
                }
                if (jp)
                {
                    s = u8"本当の本当に"s + playerid
                        + u8"を削除していいのかい？"s;
                }
                else
                {
                    s = u8"Are you sure you really want to delete "s + playerid
                        + u8" ?"s;
                }
                label_1425();
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 200;
                val(3) = 1;
                label_2131();
                if (rtval == 0)
                {
                    snd(20);
                    fmode = 9;
                    label_2107();
                }
                label_2118();
                return;
            }
        }
    }
    if (key == key_cancel)
    {
        label_2115();
        return;
    }
    goto label_2119_internal;
}
void label_2121()
{
    cs = 0;
    cs_bk = -1;
    redraw(0);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\void.bmp"s, 1);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gsel(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    if (jp)
    {
        s = u8"どの遺伝子を引き継ぐ？"s;
    }
    else
    {
        s = u8"Which gene do you want to incarnate?"s;
    }
    label_1425();
    file = exedir + u8"save\\*"s;
    dirlist(buff, file, 5);
    notesel(buff);
    keyrange = 0;
    listmax = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            file = exedir + u8"save\\"s + s + u8"\\gene_header.txt"s;
            exist(file);
            await();
            if (strsize == -1)
            {
                continue;
            }
            bload(file, playerheader);
            list(0, listmax) = listmax;
            listn(0, listmax) = s;
            listn(1, listmax) = ""s + playerheader;
            key_list(listmax) = key_select(listmax);
            ++keyrange;
            ++listmax;
        }
    }
    windowshadow = 1;
label_2122_internal:
    redraw(0);
    if (jp)
    {
        s(0) = u8"遺伝子の選択"s;
        s(1) = strhint3b;
    }
    else
    {
        s(0) = u8"Gene Selection"s;
        s(1) = strhint3b;
    }
    display_window(
        (windoww - 440) / 2 + inf_screenx, winposy(288, 1), 440, 288);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            x = wx + 20;
            y = cnt * 40 + wy + 50;
            display_key(x + 20, y - 2, cnt);
            font(lang(cfg_font1, cfg_font2), 11 - en * 2, 0);
            pos(x + 48, y - 4);
            mes(listn(0, cnt));
            font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
            cs_list(cnt, listn(1, cnt), x + 48, y + 8, 19);
        }
    }
    cs_bk = cs;
    if (listmax == 0)
    {
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        pos(wx + 140, wy + 120);
        mes(u8"No gene files found"s);
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        snd(20);
        geneuse = listn(0, p);
        playerid = listn(0, p);
        label_1541();
        return;
    }
    if (key == key_cancel)
    {
        label_2115();
        return;
    }
    goto label_2122_internal;
}
void label_2124()
{
    DIM3(fovlist, 2, 15);
    DIM3(fovmap, 34, 30);
    if (cdata(28, 0) < 1)
    {
        cdata(28, 0) = 1;
    }
    if (cdata(28, 0) >= 15)
    {
        cdata(28, 0) = 14;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (19); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    if (dist(x * 10 / 12, y, 7, 7) < 7)
                    {
                        fovmap(x, y) = 1;
                    }
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            y = cnt;
            p(1) = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (19); cnt < cnt_end; ++cnt)
                {
                    x = cnt;
                    p = fovmap(x, y);
                    if (p != 0 && p(1) == 0)
                    {
                        fovlist(0, y) = x;
                        p(1) = 1;
                    }
                    if (p == 0 && p(1) == 1)
                    {
                        fovlist(1, y) = x;
                        break;
                    }
                }
            }
        }
    }
    return;
}
void label_21262()
{
label_21261_internal:
    snd(26);
    x = val;
    y = val(1);
    dx = val(2) * 16 + 60;
    font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
    inputfail = 0;
    SDIM1(inputlog2);
    if (val(4) != 0)
    {
        val(5) = val(4);
        if (strlen_u(elona_str(val(5))) >= 3)
        {
            dx += strlen(elona_str(val(5))) * 8;
        }
        redraw(0);
        pos(x + 24, y + 4);
        gfini(dx - 42, 35);
        gfdec(60, 60, 60);
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                redraw(0);
                window2(x + 20, y, dx - 40, 36, 0, 2);
                pos(x + dx / 2 - 56, y - 32);
                gcopy(3, 128, 288, 128, 32);
                pos(x + 28, y + 4);
                gcopy(3, 312, 336, 24, 24);
                pos(x + dx - 51, y + 4);
                gcopy(3, 336, 336, 24, 24);
                inputlog2 =
                    ""s + elona_int(inputlog) + u8"("s + val(5) + u8")"s;
                pos(x + dx - 70 - strlen_u(inputlog2) * 8 + 8, y + 11);
                color(255, 255, 255);
                mes(inputlog2);
                redraw(1);
                await(cfg_wait1);
                key_check();
                if (key == key_enter)
                {
                    f = 1;
                    break;
                }
                if (key == key_cancel)
                {
                    if (val(3) == 1)
                    {
                        f = -1;
                        break;
                    }
                }
                if (key == key_west)
                {
                    snd(5);
                    --val(4);
                    if (val(4) < 1)
                    {
                        val(4) = val(5);
                    }
                }
                if (key == key_east)
                {
                    snd(5);
                    ++val(4);
                    if (val(4) > val(5))
                    {
                        val(4) = 1;
                    }
                }
                if (key == key_south)
                {
                    snd(5);
                    val(4) = 1;
                }
                if (key == key_north)
                {
                    snd(5);
                    val(4) = val(5);
                }
                inputlog = ""s + val(4);
            }
        }
        if (f == -1)
        {
            inputlog = "";
            rtval = -1;
        }
        keywait = 1;
        key = "";
        rtval = 0;
        return;
    }
    redraw(0);
    objmode(2, 0);
    if (cfg_msg_box == 0)
    {
        pos(x + 4, y + 4);
        mesbox(inputlog, dx - 8, 26, 1, val(2) * (1 + en));
    }
    else
    {
        pos(x, y);
        mesbox(inputlog, 600, 0, 5, val(2) * (1 + en));
        pos(x + 4, y + 4);
        gfini(dx - 1, 35);
        gfdec(60, 60, 60);
        aplsel(u8"Elona ver 1.22"s);
        if (stat == 1)
        {
            dialog(u8"Failed to get WINDOW ID"s, 1);
            clrobj(1);
            cfg_msg_box = 0;
            goto label_21261_internal;
        }
        aplobj(""s, 1);
        if (stat == 1)
        {
            dialog(u8"Failed to get OBJECT ID"s, 1);
            clrobj(1);
            cfg_msg_box = 0;
            goto label_21261_internal;
        }
    }
    notesel(inputlog);
    p(1) = 2;
    ime_esc = 0;
    onkey_1();
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            if (ginfo(2) == 0)
            {
                objsel(1);
            }
            else
            {
                objprm(1, ""s);
                inputlog = "";
                await(100);
                --cnt;
                continue;
            }
            redraw(0);
            await(40);
            window2(x, y, dx, 36, 0, 2);
            pos(x + dx / 2 - 60, y - 32);
            gcopy(3, 128, 288, 128, 32);
            if (cfg_msg_box == 1)
            {
                pos(x + 8, y + 4);
                if (imeget() != 0)
                {
                    gcopy(3, 48, 336, 24, 24);
                }
                else
                {
                    gcopy(3, 24, 336, 24, 24);
                }
                apledit(p(2), 2, 0);
                if (p(2) > val(2) * (1 + en) - 2)
                {
                    pos(x + 8, y + 4);
                    gcopy(3, 72, 336, 24, 24);
                }
                if (cnt % 20 < 10)
                {
                    p(1) = p(1) * 2;
                }
                else
                {
                    p(1) = p(1) / 2;
                }
                apledit(p(2), 0);
                p(4) = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (p(2)); cnt < cnt_end; ++cnt)
                    {
                        p(3) = peek(inputlog, p(4));
                        if (p(3) >= 129 && p(3) <= 159
                            || p(3) >= 224 && p(3) <= 252)
                        {
                            p(4) += 2;
                        }
                        else
                        {
                            p(4) += 1;
                        }
                    }
                }
                gmode(4 - 1, -1, p(1) / 2 + 50);
                pos(x + 34 + p(4) * 8, y + 5);
                color(0, 0, 0);
                gcopy(3, 0, 336, 12, 24);
                gmode(2);
                color(255, 255, 255);
                pos(x + 36, y + 9);
                noteget(s, 0);
                mes(s);
            }
            if (instr(inputlog, 0, u8"\n"s) != -1)
            {
                rtval = 0;
                break;
            }
            if (instr(inputlog, 0, u8"\t"s) != -1)
            {
                objprm(1, ""s);
                inputlog = "";
                if (val(3) == 1)
                {
                    ime_esc = 1;
                }
            }
            redraw(1);
            if (val(3) == 1)
            {
                if (ime_esc == 1)
                {
                    inputlog = "";
                    keywait = 1;
                    key = "";
                    break;
                }
            }
        }
    }
    gmode(2);
    clrobj(1);
    if (inputfail)
    {
        cfg_msg_box = 0;
        goto label_21261_internal;
    }
    if (input_mode == 1)
    {
        cnv_filestr(inputlog);
    }
    input_mode = 0;
    if (en)
    {
        cnv_str(inputlog, u8"\""s, u8"'"s);
    }
    rm_crlf(inputlog);
    onkey_0();
    return;
}
int label_2127()
{
    snd(26);
    redraw(0);
    gsel(4);
    x = (cdata(1, 0) - scx) * inf_tiles + inf_screenx - 48;
    y = (cdata(2, 0) - scy) * inf_tiles + inf_screeny - 48;
    gmode(0);
    pos(0, 0);
    gcopy(0, x, y, 144, 144);
    gsel(0);
    t = 0;
label_2128_internal:
    ++t;
    gmode(4, 28, 28, 200 - t / 2 % 20 * (t / 2 % 20));
    color(0, 0, 0);
    x = (cdata(1, 0) - scx) * inf_tiles + inf_screenx + 24;
    y = (cdata(2, 0) - scy) * inf_tiles + inf_screeny + 24;
    if (key_alt == 0)
    {
        pos(x, y - 48);
        grotate(3, 212, 432, 0, 28, 28);
        pos(x, y + 48);
        grotate(3, 212, 432, 1.0 * 3.14, 28, 28);
        pos(x + 48, y);
        grotate(3, 212, 432, 0.5 * 3.14, 28, 28);
        pos(x - 48, y);
        grotate(3, 212, 432, 1.5 * 3.14, 28, 28);
    }
    pos(x - 48, y - 48);
    grotate(3, 212, 432, 1.75 * 3.14, 28, 28);
    pos(x + 48, y + 48);
    grotate(3, 212, 432, 0.75 * 3.14, 28, 28);
    pos(x + 48, y - 48);
    grotate(3, 212, 432, 0.25 * 3.14, 28, 28);
    pos(x - 48, y + 48);
    grotate(3, 212, 432, 1.25 * 3.14, 28, 28);
    redraw(1);
    redraw(0);
    gmode(0);
    pos(x - 48 - 24, y - 48 - 24);
    gcopy(4, 0, 0, 144, 144);
    gmode(2);
    await(30);
    key_check(1);
    x = cdata(1, 0);
    y = cdata(2, 0);
    if (key == key_alter)
    {
        goto label_2128_internal;
    }
    if (key == key_wait || key == key_enter)
    {
        tlocx = x;
        tlocy = y;
        keyhalt = 1;
        stat = 1;
        return stat;
    }
    if (key == key_north)
    {
        if (key_alt)
        {
            goto label_2128_internal;
        }
        else
        {
            y -= 1;
        }
    }
    if (key == key_south)
    {
        if (key_alt)
        {
            goto label_2128_internal;
        }
        else
        {
            y += 1;
        }
    }
    if (key == key_west)
    {
        if (key_alt)
        {
            goto label_2128_internal;
        }
        else
        {
            x -= 1;
        }
    }
    if (key == key_east)
    {
        if (key_alt)
        {
            goto label_2128_internal;
        }
        else
        {
            x += 1;
        }
    }
    if (key == key_northwest)
    {
        x -= 1;
        y -= 1;
    }
    if (key == key_northeast)
    {
        x += 1;
        y -= 1;
    }
    if (key == key_southwest)
    {
        x -= 1;
        y += 1;
    }
    if (key == key_southeast)
    {
        x += 1;
        y += 1;
    }
    if (key != ""s)
    {
        if (x < 0 || y < 0 || x >= mdata(0) || y >= mdata(1))
        {
            x = cdata(1, 0);
            y = cdata(2, 0);
            keyhalt = 1;
            stat = 0;
            return stat;
        }
        if (x == cdata(1, 0) && y == cdata(2, 0))
        {
            stat = 0;
            return stat;
        }
        tlocx = x;
        tlocy = y;
        keyhalt = 1;
        stat = 1;
        return stat;
    }
    goto label_2128_internal;
}
int label_2131()
{
    snd(26);
    csprev = cs;
    cs = 0;
    cs_bk = -1;
    redraw(0);
    gsel(3);
    gmode(0);
    font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (promptmax); cnt < cnt_end; ++cnt)
        {
            if (promptl(1, cnt) == u8"null"s)
            {
                promptl(1, cnt) = key_select(cnt);
            }
            pos(cnt * 24 + 624, 30);
            gcopy(3, 0, 30, 24, 18);
            pos(cnt * 24 + 629, 31);
            color(50, 60, 80);
            bmes(promptl(1, cnt), 250, 240, 230);
        }
    }
    gsel(0);
    sx = val - val(2) / 2;
    sy = val(1) - promptmax * 10;
    pos(sx + 12, sy + 12);
    gfini(val(2) - 17, promptmax * 20 + 43 - 18);
    gfdec(60, 60, 60);
    keyhalt = 1;
    if (val(3) == 2)
    {
        dx(0) = 200;
        dx(1) = 10;
        dy = sy + 140;
        val(5) = val(4);
        val(4) = 1;
        val = 1;
        if (strlen_u(elona_str(val(5))) >= 3)
        {
            dx += strlen(elona_str(val(5))) * 8;
        }
        pos(dx(1) + sx + 24, dy + 4);
        gfini(dx - 42, 35);
        gfdec(60, 60, 60);
    }
label_2132_internal:
    redraw(0);
    gmode(2);
    if (val(3) == 2)
    {
        window2(dx(1) + sx + 20, dy, dx - 40, 36, 0, 2);
        pos(dx(1) + sx + dx / 2 - 56, dy - 32);
        gcopy(3, 128, 288, 128, 32);
        pos(dx(1) + sx + 28, dy + 4);
        gcopy(3, 312, 336, 24, 24);
        pos(dx(1) + sx + dx - 51, dy + 4);
        gcopy(3, 336, 336, 24, 24);
        inputlog2 = ""s + elona_int(inputlog) + u8"("s + val(5) + u8")"s;
        pos(dx(1) + sx + dx - 70 - strlen_u(inputlog2) * 8 + 8, dy + 11);
        color(255, 255, 255);
        mes(inputlog2);
        inputlog = ""s + val(4);
    }
    window2(sx + 8, sy + 8, val(2) - 16, promptmax * 20 + 42 - 16, 0, 0);
    pos(sx - 16, sy);
    gcopy(3, 64, 288, 50, 32);
    color(255, 255, 255);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    keyrange = 0;
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (promptmax); cnt < cnt_end; ++cnt)
        {
            pos(sx + 30, cnt * 20 + sy + 22);
            gcopy(3, cnt * 24 + 624, 30, 24, 24);
            cs_list(cnt, promptl(0, cnt), sx + 56, cnt * 20 + sy + 21, 19);
            key_list(cnt) = promptl(1, cnt);
            ++keyrange;
        }
    }
    cs_bk = cs;
    if (rpmode)
    {
        window_recipe2();
        color(255, 255, 255);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    rtval = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (promptmax); cnt < cnt_end; ++cnt)
        {
            if (key == promptl(1, cnt))
            {
                rtval = elona_int(promptl(2, cnt));
                break;
            }
        }
    }
    if (val(3) == 2)
    {
        val = elona_int(inputlog);
        if (key == key_west || key == key_pagedown)
        {
            snd(5);
            --val(4);
            if (val(4) < 1)
            {
                val(4) = val(5);
            }
        }
        if (key == key_east || key == key_pageup)
        {
            snd(5);
            ++val(4);
            if (val(4) > val(5))
            {
                val(4) = 1;
            }
        }
    }
    if (rtval != -1)
    {
        promptmax = 0;
        cs = csprev;
        stat = 1;
        return stat;
    }
    if (val(3) != 0)
    {
        if (key == key_cancel)
        {
            promptmax = 0;
            cs = csprev;
            stat = 0;
            return stat;
        }
    }
    goto label_2132_internal;
}
void label_2134()
{
    notesel(dbm);
    buff = "";
    if (dbm == ""s)
    {
        noteadd(
            u8"Elona v1.22 Debug Console    Type \"?\" for help. Hit ESC to exit."s);
        noteadd(""s);
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    objmode(2);
    pos(0, 24);
    mesbox(dbm, 800, 576, 0);
    pos(0, 0);
    mesbox(buff, 800, 24, 1);
    objsel(2);
label_2135_internal:
    await(20);
    stick(a);
    if (a == 128)
    {
        label_2136();
        return;
    }
    if (a == 32)
    {
        label_2138();
    }
    goto label_2135_internal;
}
void label_2136()
{
    clrobj(1);
    clrobj(2);
    if (dbg_exitshowroom == 1)
    {
        dbg_exitshowroom = 0;
        levelexitby = 4;
        label_1737();
        return;
    }
    label_2743(false);
}
void label_2138()
{
    if (instr(buff, 0, u8"?"s) != -1)
    {
        noteadd(u8"\t1\t\tShows charainfo."s);
        noteadd(u8"\t2\t\tShows pc equipment."s);
        noteadd(u8"\t3\t\tShows pc inventory."s);
        noteadd(u8"\t4\t\tBegin/end var-comparison."s);
        noteadd(u8"\t5\t\tShows core game data."s);
        noteadd(u8"\tdel\t\tDeletes current log."s);
        noteadd(u8"\tquest\t\tLists all the quests."s);
        noteadd(u8"\tclient\t\tLists all the clients."s);
        noteadd(u8"\texitroom\tLeaves current show-room."s);
        noteadd(u8"\twizard\t\tEnables wizard mode."s);
        noteadd(""s);
        noteadd(u8"\tThe commands below can be used in the Wizard mode."s);
        noteadd(u8"\tgain_spell\tPC gains all spells."s);
        noteadd(u8"\tgain_spact\tPC gains all special actions."s);
        noteadd(u8"\tgain_exp\tPC gains a billion of exp."s);
        noteadd(u8"\tgain_fame\tPC gains fame."s);
        noteadd(u8"\tallinv\t\tDisplays all the items in the map."s);
        noteadd(""s);
        noteadd(
            u8"\tThe commands below should be only used to deal with certain problems."s);
        noteadd(u8"\t108fix\t\tTurns all the NPCs in the map hostile."s);
        noteadd(u8"\tadvreset\tRemoves all items from adventureres."s);
        noteadd(u8"\tfixcorrupt1\tTries to fix corrputed save files."s);
        noteadd(u8"\tfreemove\tEnables freemove."s);
        noteadd(u8"\tresetmap\tResets towns and some areas."s);
        noteadd(u8"\tfixmap\t\tFixes possible bugs for current map."s);
        noteadd(u8"\tmapinfo\t\tShows map info."s);
        label_2139();
        return;
    }
    if (elona_int(buff) == 1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                noteadd(
                    ""s + cnt + u8"\t"s + cdatan(0, cnt) + u8"\tExist:"s
                    + cdata(0, cnt) + u8"\tRespawn:"s + cdata(5, cnt)
                    + u8"\tRole:"s + cdata(150, cnt));
            }
        }
        label_2139();
        return;
    }
    if (elona_int(buff) == 2)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
            {
                p = 100 + cnt;
                if (cdata(p, 0) != 0)
                {
                    p(1) = cdata(p, 0);
                    s = ""s + p + u8"\t"s + p(1) + u8"\t"s;
                    if (p(1) % 10000 > 0)
                    {
                        s += itemname(p(1) % 10000 - 1);
                    }
                    noteadd(s);
                }
            }
        }
        label_2139();
        return;
    }
    if (elona_int(buff) == 3)
    {
        inv_getheader(0);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                noteadd(""s + cnt + u8"\t"s + itemname(cnt) + u8"\t"s);
            }
        }
        label_2139();
        return;
    }
    if (elona_int(buff) == 4)
    {
        if (dbg_compare == 0)
        {
            SDIM4(cdatan2, 40, 10, 245);
            DIM3(cdata2, 500, 245);
            DIM3(sdata2, 1200, 245);
            DIM3(inv2, 70, 5480);
        }
        noteadd(u8"cdata"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
                    {
                        s = "";
                        if (cnt == 6 || cnt == 10)
                        {
                            s = u8"*"s;
                        }
                        if (dbg_compare == 0)
                        {
                            cdata2(cnt, cnt2) = cdata(cnt, cnt2);
                        }
                        if (dbg_compare == 1)
                        {
                            if (cdata2(cnt, cnt2) != cdata(cnt, cnt2))
                            {
                                noteadd(
                                    s + ""s + cnt2 + u8"\t"s + cnt + u8"\t"s
                                    + cdata2(cnt, cnt2) + u8"\t->"s
                                    + cdata(cnt, cnt2));
                            }
                        }
                    }
                }
            }
        }
        noteadd(u8"cdatan"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                    {
                        s = "";
                        if (dbg_compare == 0)
                        {
                            cdatan2(cnt, cnt2) = cdatan(cnt, cnt2);
                        }
                        if (dbg_compare == 1)
                        {
                            if (cdatan2(cnt, cnt2) != cdatan(cnt, cnt2))
                            {
                                noteadd(
                                    s + ""s + cnt2 + u8"\t"s + cnt + u8"\t"s
                                    + cdatan2(cnt, cnt2) + u8"\t->"s
                                    + cdatan(cnt, cnt2));
                            }
                        }
                    }
                }
            }
        }
        noteadd(u8"skill"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (1200); cnt < cnt_end; ++cnt)
                    {
                        s = "";
                        if (dbg_compare == 0)
                        {
                            sdata2(cnt, cnt2) = sdata(cnt, cnt2);
                        }
                        if (dbg_compare == 1)
                        {
                            if (sdata2(cnt, cnt2) != sdata(cnt, cnt2))
                            {
                                noteadd(
                                    s + ""s + cnt2 + u8"\t"s + cnt + u8"\t"s
                                    + sdata2(cnt, cnt2) + u8"\t->"s
                                    + sdata(cnt, cnt2));
                            }
                        }
                    }
                }
            }
        }
        noteadd(u8"inv"s);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5480); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
                    {
                        s = "";
                        if (dbg_compare == 0)
                        {
                            inv2(cnt, cnt2) = inv(cnt, cnt2);
                        }
                        if (dbg_compare == 1)
                        {
                            if (inv2(cnt, cnt2) != inv(cnt, cnt2))
                            {
                                noteadd(
                                    s + ""s + cnt2 + u8"\t"s + cnt + u8"\t"s
                                    + inv2(cnt, cnt2) + u8"\t->"s
                                    + inv(cnt, cnt2));
                            }
                        }
                    }
                }
            }
        }
        if (dbg_compare == 0)
        {
            dbg_compare = 1;
            noteadd(u8"Var_comparison begins."s);
        }
        else
        {
            dbg_compare = 0;
        }
        label_2139();
        return;
    }
    if (elona_int(buff) == 5)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1000); cnt < cnt_end; ++cnt)
            {
                noteadd(""s + cnt + u8"\t"s + gdata(cnt));
            }
        }
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"del"s) != -1 || buff == u8"\n"s)
    {
        dbm = "";
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"freemove"s) != -1)
    {
        dbg_freemove = 1;
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"resetmap"s) != -1)
    {
        label_2090();
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"exitroom"s) != -1)
    {
        if (gdata(20) == 35)
        {
            dbg_exitshowroom = 1;
            noteadd(u8"Done."s);
        }
        else
        {
            noteadd(u8"Wrong map."s);
        }
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"removequest"s) != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
            {
                if (qdata(8, cnt) != 0)
                {
                    if (qdata(9, cnt) == -1)
                    {
                        qdata(8, cnt) = 0;
                    }
                }
            }
        }
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"fixmap"s) != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
                if (cdata(1, cnt) < 0 || cdata(1, cnt) >= mdata(0)
                    || cdata(2, cnt) < 0 || cdata(2, cnt) >= mdata(1))
                {
                    cdata(1, cnt) = 0;
                    cdata(2, cnt) = 0;
                }
            }
        }
        {
            int cnt = 5080;
            for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) <= 0)
                {
                    continue;
                }
                if (inv(5, cnt) < 0 || inv(5, cnt) >= mdata(0)
                    || inv(6, cnt) < 0 || inv(6, cnt) >= mdata(1))
                {
                    inv(5, cnt) = 0;
                    inv(6, cnt) = 0;
                }
            }
        }
        cell_refresh(0, 0);
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"advreset"s) != -1)
    {
        {
            int cnt = 16;
            for (int cnt_end = cnt + (39); cnt < cnt_end; ++cnt)
            {
                rc = cnt;
                inv_getheader(rc);
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        cnt2 = cnt;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (70); cnt < cnt_end; ++cnt)
                            {
                                inv(cnt, cnt2) = 0;
                            }
                        }
                    }
                }
                {
                    int cnt = 100;
                    for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                    {
                        cdata(cnt, rc) = 0;
                    }
                }
            }
        }
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"fixcorrupt1"s) != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
            {
                rc = cnt;
                inv_getheader(rc);
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        cnt2 = cnt;
                        if (inv(3, cnt) >= 800 || inv(3, cnt) <= 0
                            || inv(0, cnt) <= 0)
                        {
                            {
                                int cnt = 0;
                                for (int cnt_end = cnt + (70); cnt < cnt_end;
                                     ++cnt)
                                {
                                    inv(cnt, cnt2) = 0;
                                }
                            }
                        }
                        if (inv(18, cnt) != 0)
                        {
                            inv(18, cnt) = 0;
                        }
                    }
                }
                {
                    int cnt = 100;
                    for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                    {
                        cdata(cnt, rc) = cdata(cnt, rc) / 10000 * 10000;
                    }
                }
                if (cnt >= 16)
                {
                    cdata(0, cnt) = 5;
                    label_2661();
                }
            }
        }
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"client"s) != -1)
    {
        DIM2(mapclient, 1000);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
            {
                if (qdata(0, cnt) == 0)
                {
                    i = cnt;
                    continue;
                }
                noteadd(
                    u8"id:"s + cnt + u8" name:"s + qname(cnt) + u8" map:"s
                    + mapname(qdata(1, cnt)));
                ++mapclient(qdata(1, cnt));
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1000); cnt < cnt_end; ++cnt)
            {
                if (mapclient(cnt) != 0)
                {
                    noteadd(""s + mapname(cnt) + u8":"s + mapclient(cnt), 1);
                }
            }
        }
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"108fix"s) != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cnt < 57)
                {
                    continue;
                }
                if (cdata(0, cnt) == 1)
                {
                    cdata(9, cnt) = -3;
                    cdata(69, cnt) = -3;
                }
            }
        }
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"test"s) != -1)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
            {
                noteadd(
                    ""s + cnt + u8":"s + mapname(cnt) + u8"/"s
                    + adata(16, cnt));
            }
        }
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"mapinfo"s) != -1)
    {
        noteadd(u8"gArea\t\t:"s + gdata(20));
        noteadd(u8"gLevel\t\t:"s + gdata(22));
        noteadd(u8"file\t\t:mdata_"s + mid + u8".s2"s);
        noteadd(u8"pc x/y\t\t:"s + cdata(1, 0) + u8"/"s + cdata(2, 0));
        noteadd(u8"map max w/h\t:"s + mdata(0) + u8"/"s + mdata(1));
        noteadd(u8"Done."s);
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"quest"s) != -1)
    {
        noteadd(
            u8"gQuest:"s + gdata(70) + u8" gQuestRef:"s + gdata(72)
            + u8" gQuestStatus:"s + gdata(73) + u8" rq:"s + rq);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                p = gdata(160 + cnt);
                noteadd(
                    u8"quest"s + cnt + u8" "s + p + u8" exist"s + qdata(3, p)
                    + u8" status"s + qdata(8, p) + u8" var"s + qdata(4, p)
                    + u8" encount"s + qdata(10, p));
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
            {
                noteadd(
                    ""s + cnt + u8" "s + qdata(0, cnt) + u8"/"s
                    + qdata(1, cnt));
            }
        }
        label_2139();
        return;
    }
    if (instr(buff, 0, u8"wizard"s) != -1)
    {
        gdata(828) = 1;
        cdatan(1, 0) = u8"*Debug*"s;
        noteadd(u8"Wizard mode activated."s);
        label_2139();
        return;
    }
    if (gdata(828) || 0)
    {
        if (instr(buff, 0, u8"gain_spell"s) != -1)
        {
            {
                int cnt = 400;
                for (int cnt_end = cnt + (67); cnt < cnt_end; ++cnt)
                {
                    skillgain(0, cnt, cdata(38, r1), 10000);
                }
            }
            noteadd(u8"Done."s);
            label_2139();
            return;
        }
        if (instr(buff, 0, u8"gain_spact"s) != -1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (61); cnt < cnt_end; ++cnt)
                {
                    spact(cnt + 600 - 600) = 1;
                }
            }
            noteadd(u8"Done."s);
            label_2139();
            return;
        }
        if (instr(buff, 0, u8"allinv"s) != -1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (5480); cnt < cnt_end; ++cnt)
                {
                    if (cnt < 5080)
                    {
                        if (cnt >= 200)
                        {
                            if ((cnt - 200) % 20 == 0)
                            {
                                noteadd(
                                    u8"-----------"s
                                    + cdatan(0, ((cnt - 200) / 20 + 1)));
                            }
                        }
                    }
                    if (cnt == 5080)
                    {
                        noteadd(u8"-----------------------MAP INV"s);
                    }
                    noteadd(
                        ""s + cnt + u8"\t"s + inv(0, cnt) + u8"\t"s
                        + itemname(cnt) + u8" it:"s + inv(30, cnt));
                }
            }
            label_2139();
            return;
        }
        if (instr(buff, 0, u8"mapinv"s) != -1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (400); cnt < cnt_end; ++cnt)
                {
                    if (cnt == 5080)
                    {
                        noteadd(u8"-----------------------MAP INV"s);
                    }
                    if (inv(0, cnt) != 0)
                    {
                        noteadd(
                            ""s + cnt + u8"\t"s + inv(0, cnt) + u8"\t"s
                            + itemname(cnt) + u8" it:"s + inv(30, cnt));
                    }
                }
            }
            label_2139();
            return;
        }
        if (instr(buff, 0, u8"gain_exp"s) != -1)
        {
            cdata(35, 0) += 1000000000;
            r1 = 0;
            r2 = 0;
            label_1454();
            noteadd(u8"Done."s);
            label_2139();
            return;
        }
        if (instr(buff, 0, u8"gain_fame"s) != -1)
        {
            cdata(34, 0) += 10000;
            noteadd(u8"Done."s);
            label_2139();
            return;
        }
    }
    noteadd(u8"Unknown command. Type \"?\" for help. Hit ESC to exit."s);
    label_2139();
    return;
}
void label_2139()
{
    noteadd(""s);
    objprm(1, dbm);
    objprm(2, ""s);
    return;
}
void label_2140()
{
    CreateMutexA(0, 0, u8"Elona"s);
    mutex_handle = stat;
    func_3();
    if (stat == 183)
    {
        dialog(
            lang(
                u8"二重起動のため終了します。"s,
                u8"The program is already running."s),
            1);
        end();
        return;
    }
    return;
}
int efstatusfix(int prm_1072, int prm_1073, int prm_1074, int prm_1075)
{
    if (efstatus <= -2)
    {
        stat = prm_1072;
        return stat;
    }
    if (efstatus == -1)
    {
        stat = prm_1073;
        return stat;
    }
    if (efstatus == 0)
    {
        stat = prm_1074;
        return stat;
    }
    stat = prm_1075;
    return stat;
}
int label_2143()
{
    if (map(cdata(1, 0), cdata(2, 0), 6) == 0)
    {
        stat = 0;
        return stat;
    }
    if (feat(1) >= 24 && feat(1) <= 28)
    {
        stat = 0;
        return stat;
    }
    atxspot = 11;
    atxlv = gdata(22);
    if (mdata(6) == 20)
    {
        atxspot = 9;
    }
    if (mdata(6) == 21)
    {
        atxspot = 12;
    }
    if (mdata(6) == 22)
    {
        atxspot = 10;
    }
    if (mdata(6) == 23)
    {
        atxspot = 12;
    }
    if (mdata(6) == 1)
    {
        atxlv = cdata(38, 0) / 2 + rnd(10);
        if (atxlv > 30)
        {
            atxlv = 30 + rnd((rnd(atxlv - 30) + 1));
        }
        if (4 <= gdata(62) && gdata(62) < 9)
        {
            atxspot = 10;
        }
        if (264 <= gdata(62) && gdata(62) < 363)
        {
            atxspot = 11;
        }
        if (9 <= gdata(62) && gdata(62) < 13)
        {
            atxspot = 10;
        }
        if (13 <= gdata(62) && gdata(62) < 17)
        {
            atxspot = 11;
        }
    }
    cell_featread(cdata(1, 0), cdata(2, 0));
    if (feat(1) == 27)
    {
        atxlv += sdata(161, 0) / 3;
    }
    if (feat(1) == 26)
    {
        atxspot = 13;
    }
    if (feat(1) == 25)
    {
        atxspot = 14;
    }
    if (feat(1) == 28)
    {
        atxspot = 15;
    }
    if (rnd(7) == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                i = 5;
                if (atxspot == 14)
                {
                    if (sdata(163, 0) < rnd(atxlv * 2 + 1) || rnd(10) == 0)
                    {
                        txt(lang(
                            u8"採掘に失敗した。"s,
                            u8"Your mining attempt fails."s));
                        break;
                    }
                    i = 1;
                    skillexp(163, 0, 40);
                }
                if (atxspot == 13)
                {
                    if (sdata(185, 0) < rnd(atxlv * 2 + 1) || rnd(10) == 0)
                    {
                        txt(lang(
                            u8"釣りに失敗した。"s,
                            u8"Your fishing attempt fails."s));
                        break;
                    }
                    i = 2;
                    skillexp(185, 0, 40);
                }
                if (atxspot == 15)
                {
                    if (sdata(180, 0) < rnd(atxlv * 2 + 1) || rnd(10) == 0)
                    {
                        txt(lang(
                            u8"採取に失敗した。"s,
                            u8"Your searching attempt fails."s));
                        break;
                    }
                    i = 3;
                    skillexp(180, 0, 30);
                }
                matgetmain(random_material(atxlv, 0), 1, i);
            }
        }
    }
    if (rnd(50 + trait(159) * 20) == 0)
    {
        s = lang(u8"もう何もない。"s, u8"You can't find anything anymore."s);
        if (feat(1) == 26)
        {
            s = lang(u8"泉は干上がった。"s, u8"The spring dries up."s);
        }
        if (feat(1) == 25)
        {
            s = lang(
                u8"鉱石を掘りつくした。"s, u8"There's no more ore around."s);
        }
        if (feat(1) == 28)
        {
            s = lang(
                u8"もう目ぼしい植物は見当たらない。"s,
                u8"There's no more plant around."s);
        }
        txt(s);
        rowactend(cc);
        map(cdata(1, 0), cdata(2, 0), 6) = 0;
    }
    stat = 0;
    return stat;
}
void label_2144()
{
    cell_featset(movx, movy, 0);
    if (cdata(61, cc) == 1)
    {
        txt(lang(u8"あなたは罠を解体した。"s, u8"You dismantle the trap."s));
        {
            int cnt = 0;
            for (int cnt_end = cnt + (rnd(3) + 1); cnt < cnt_end; ++cnt)
            {
                txtmore();
                atxspot = 19;
                matgetmain(random_material(gdata(22), gdata(22) / 5), 1);
            }
        }
    }
    else
    {
        txt(lang(u8"罠を解除した。"s, u8"You disarm the trap."s));
    }
    return;
}
void label_21452()
{
label_21451_internal:
    if (cfg_scroll)
    {
        if (cc == 0)
        {
            label_1438();
        }
    }
    map(cdata(1, cc), cdata(2, cc), 1) = 0;
    cdata(1, cc) = cdata(3, cc);
    cdata(2, cc) = cdata(4, cc);
    map(cdata(3, cc), cdata(4, cc), 1) = cc + 1;
    if (cc == 0)
    {
        if (gdata(183) != 0)
        {
            cdata(1, gdata(183)) = cdata(1, 0);
            cdata(2, gdata(183)) = cdata(2, 0);
        }
    }
    movx = cdata(1, cc);
    movy = cdata(2, cc);
    if (map(movx, movy, 6) != 0)
    {
        cell_featread(movx, movy);
        if (feat(1) == 14)
        {
            if (feat(2) == 7)
            {
                if (cbit(5, cc) == 1 && cdata(262, cc) == 0
                    || cbit(31, cc) == 1)
                {
                    return;
                }
                if (feat(3) != 0)
                {
                    if (cc > 16)
                    {
                        return;
                    }
                }
            }
            if (feat(0) != tile_trap && cc == 0)
            {
                label_1514();
                if (stat == 1)
                {
                    refx = movx;
                    refy = movy;
                    label_2222();
                    feat(0) = tile_trap;
                }
            }
            refdiff = 100 + gdata(22) * 3;
            if (feat(0) == tile_trap)
            {
                refdiff = refdiff / 3;
                if (cc == 0)
                {
                    if (sdata(175, cc) != 0)
                    {
                        label_1517();
                        if (stat == 1)
                        {
                            label_2144();
                            return;
                        }
                        else
                        {
                            txt(lang(
                                u8"解除に失敗した。"s,
                                u8"You fail to disarm the trap."s));
                        }
                    }
                }
            }
            label_1515();
            if (stat == 1)
            {
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        name(cc) + u8"は罠を避けた。"s,
                        name(cc) + u8" evade"s + _s(cc) + u8" a trap."s));
                }
                if (cc == 0)
                {
                    refx = movx;
                    refy = movy;
                    label_2222();
                }
            }
            else
            {
                if (cc == 0)
                {
                    refx = movx;
                    refy = movy;
                    label_2222();
                    snd(70);
                }
                efsource = 5;
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        aln(cc) + u8"罠にかかった！"s,
                        name(cc) + u8" activate"s + _s(cc) + u8" a trap!"s));
                }
                if (feat(2) == 4)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"墨が噴き出した。"s,
                            u8"Gallons of ink spreads."s));
                    }
                    dmgcon(cc, 4, 100 + gdata(22) * 2);
                }
                if (feat(2) == 6)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"刺激的な匂いがただよう。"s,
                            u8"Stimulative gas spreads."s));
                    }
                    dmgcon(cc, 3, 100 + gdata(22) * 2);
                }
                if (feat(2) == 5)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"臭い匂いがたちこめた。"s,
                            u8"Smelly gas spreads."s));
                    }
                    dmgcon(cc, 5, 100 + gdata(22) * 2);
                }
                if (feat(2) == 3)
                {
                    cell_featset(movx, movy, 0);
                    if (encfind(cc, 22) != -1)
                    {
                        if (synccheck(cc, -1))
                        {
                            txt(lang(
                                u8"魔法の力がテレポートを防いだ。"s,
                                u8"Magical field prevents teleportation."s));
                        }
                        return;
                    }
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
                        {
                            cdata(3, cc) = rnd(mdata(0) - 2) + 1;
                            cdata(4, cc) = rnd(mdata(1) - 2) + 1;
                            cell_check(cdata(3, cc), cdata(4, cc));
                            if (cellaccess == 1)
                            {
                                if (synccheck(cc, -1))
                                {
                                    snd(72);
                                    txt(lang(
                                        name(cc) + u8"は突然消えた。"s,
                                        u8"Suddenly, "s + name(cc)
                                            + u8" disappear"s + _s(cc)
                                            + u8"."s));
                                }
                                rowactend(cc);
                                redraw(0);
                                label_1419();
                                break;
                            }
                        }
                    }
                    goto label_21451_internal;
                }
                if (feat(2) == 0)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"槍が地面から飛び出した。"s,
                            u8"Several spears fly out from the ground."s));
                    }
                    if (cbit(5, cc) == 1 && cdata(262, cc) == 0)
                    {
                        if (synccheck(cc, -1))
                        {
                            txtmore();
                            txt(lang(
                                u8"しかし"s + name(cc)
                                    + u8"には届かなかった。"s,
                                u8"But they don't reach "s + name(cc)
                                    + u8"."s));
                        }
                    }
                    else
                    {
                        dmghp(cc, rnd(gdata(22) * 2 + 10), -1);
                    }
                }
                if (feat(2) == 1)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"毒ガスが噴き出した。"s,
                            u8"Poisonous gas spreads."s));
                    }
                    dmgcon(cc, 1, 100 + gdata(22) * 2);
                }
                if (feat(2) == 2)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            u8"催眠ガスが噴き出した。"s,
                            u8"Sleeping gas spreads."s));
                    }
                    dmgcon(cc, 2, 100 + gdata(22) * 2);
                }
                if (feat(2) == 7)
                {
                    txtef(9);
                    txt(lang(u8" *チュドーン！* "s, u8"*kabooom*"s));
                    aniref = 0;
                    animeid = 2;
                    anix = movx;
                    aniy = movy;
                    label_1426();
                    cell_featset(movx, movy, 0);
                    dmghp(cc, 100 + rnd(200), -1);
                }
                efsource = 0;
            }
        }
    }
    return;
}
void label_2146()
{
    if (cdata(140, cc) == 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は"s + itemname(ci) + u8"の演奏をはじめた。"s,
                name(cc) + u8" start"s + _s(cc) + u8" to play "s + itemname(ci)
                    + u8"."s));
        }
        cdata(140, cc) = 6;
        cdata(141, cc) = 61;
        cdata(142, cc) = ci;
        cdata(144, cc) = 40;
        cdata(145, cc) = 0;
        performtips = 0;
        return;
    }
    if (cdata(141, cc) > 0)
    {
        ci = cdata(142, cc);
        if (cdata(141, cc) % 10 == 0)
        {
            if (synccheck(cc, -1))
            {
                if (rnd(10) == 0)
                {
                    txtef(4);
                    txt(lang(u8"ﾁｬﾗﾝ♪ "s, u8"*Tiki*"s),
                        lang(u8"ﾎﾟﾛﾝ♪ "s, u8"*Dan*"s),
                        lang(u8"ﾀﾞｰﾝ♪ "s, u8"*Lala*"s));
                }
                txtef(4);
                txt(lang(u8"ｼﾞｬﾝ♪ "s, u8"*Cha*"s));
            }
        }
        if (cdata(141, cc) % 20 == 0)
        {
            gold = 0;
            make_sound(cdata(1, cc), cdata(2, cc), 5, 1, 1, cc);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                            + gdata(10) * 24 * 30 * 12
                        >= cdata(15, cnt))
                    {
                        cdata(14, cnt) = 100;
                    }
                    if (synccheck(cc, -1))
                    {
                        if (cdata(6, cnt) != msync)
                        {
                            continue;
                        }
                    }
                    else
                    {
                        if (dist(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, cnt),
                                cdata(2, cnt))
                            > 3)
                        {
                            continue;
                        }
                    }
                    if (cdata(14, cnt) <= 0)
                    {
                        continue;
                    }
                    if (cdata(251, cnt) > 0)
                    {
                        continue;
                    }
                    x = cdata(1, cnt);
                    y = cdata(2, cnt);
                    if (map(x, y, 1) == 0)
                    {
                        continue;
                    }
                    tc = cnt;
                    if (tc == cc)
                    {
                        continue;
                    }
                    if (cdata(9, tc) == -3)
                    {
                        if (cdata(201, tc) == 0)
                        {
                            if (synccheck(tc, -1))
                            {
                                txt(lang(
                                    name(tc) + u8"は激怒した。"s,
                                    name(tc) + u8" get"s + _s(tc)
                                        + u8" angry."s));
                            }
                        }
                        cdata(201, tc) = 30;
                        continue;
                    }
                    if (cc == 0)
                    {
                        cdata(14, tc) -= rnd(15);
                        cdata(15, tc) = gdata(13) + gdata(12) * 24
                            + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12
                            + 12;
                    }
                    if (cdata(14, tc) <= 0)
                    {
                        if (synccheck(cc, -1))
                        {
                            txtef(9);
                            if (jp)
                            {
                                txt(u8"「飽きた」"s,
                                    u8"「前にも聴いたよ」"s,
                                    u8"「またこの曲か…」"s);
                            }
                            if (en)
                            {
                                txt(cnvtalk(u8"Boring."s),
                                    cnvtalk(u8"I've heard this before."s),
                                    cnvtalk(u8"This song again?"s));
                            }
                        }
                        cdata(14, tc) = 0;
                        continue;
                    }
                    if (sdata(183, cc) < cdata(38, tc))
                    {
                        if (rnd(3) == 0)
                        {
                            cdata(144, cc) -= cdata(38, tc) / 2;
                            if (synccheck(cc, -1))
                            {
                                txtef(9);
                                if (jp)
                                {
                                    txt(u8"「引っ込め！」"s,
                                        u8"「うるさい！」"s,
                                        u8"「下手っぴ！」"s,
                                        u8"「何のつもりだ！」"s);
                                }
                                if (en)
                                {
                                    txt(cnvtalk(u8"Boo boo!"s),
                                        cnvtalk(u8"Shut it!"s),
                                        cnvtalk(u8"What are you doing!"s),
                                        cnvtalk(u8"You can't play shit."s));
                                }
                                txt(lang(
                                    ""s + name(tc) + u8"は石を投げた。"s,
                                    name(tc) + u8" throw"s + _s(tc)
                                        + u8" a rock."s));
                            }
                            dmg = rnd(cdata(38, tc) + 1) + 1;
                            if (cdata(27, tc) == 29)
                            {
                                dmg = cdata(38, tc) * 2 + rnd(100);
                            }
                            dmghp(cc, dmg, -8);
                            if (cdata(0, cc) == 0)
                            {
                                break;
                            }
                            continue;
                        }
                    }
                    if (rnd(3) == 0)
                    {
                        p = cdata(144, cc) * cdata(144, cc)
                                * (100 + inv(25, ci) / 5) / 100 / 1000
                            + rnd(10);
                        p = limit(
                            cdata(30, tc) * limit(p, 1, 100) / 125,
                            0,
                            sdata(183, cc) * 100);
                        if (tc < 16)
                        {
                            p = rnd(limit(p, 1, 100)) + 1;
                        }
                        if (cdata(150, tc) >= 1000 && cdata(150, tc) < 2000
                            || cdata(150, tc) == 2003)
                        {
                            p /= 5;
                        }
                        if (p > cdata(30, tc))
                        {
                            p = cdata(30, tc);
                        }
                        cdata(30, tc) -= p;
                        cdata(30, cc) += p;
                        gold += p;
                    }
                    if (cdata(38, tc) > sdata(183, cc))
                    {
                        continue;
                    }
                    p = rnd(cdata(38, tc) + 1) + 1;
                    if (rnd(sdata(183, cc) + 1) > rnd(cdata(38, tc) * 2 + 1))
                    {
                        if (gdata(70) == 1009)
                        {
                            if (tc >= 57)
                            {
                                cdata(17, tc) += rnd(3);
                                calcpartyscore();
                            }
                        }
                        if (rnd(2) == 0)
                        {
                            cdata(144, cc) += p;
                        }
                        else
                        {
                            if (rnd(2) == 0)
                            {
                                cdata(144, cc) -= p;
                            }
                        }
                    }
                    if (encfindspec(ci, 60) != -1)
                    {
                        if (rnd(15) == 0)
                        {
                            dmgcon(tc, 8, 500);
                        }
                    }
                    if (rnd(sdata(183, cc) + 1) > rnd(cdata(38, tc) * 5 + 1))
                    {
                        if (rnd(3) == 0)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(9);
                                if (jp)
                                {
                                    txt(name(tc) + u8"は歓声を上げた。"s,
                                        name(tc) + u8"は目を輝かせた。"s,
                                        u8"「ブラボー」"s,
                                        u8"「いいぞ！」"s,
                                        name(tc) + u8"はうっとりした。"s,
                                        name(tc) + u8"は"s + name(cc)
                                            + u8"の演奏を褒め称えた。"s);
                                }
                                if (en)
                                {
                                    txt(name(tc) + u8" clap"s + _s(tc) + u8"."s,
                                        name(tc) + u8" listene"s + _s(tc)
                                            + u8" to "s + name(cc) + your(cc)
                                            + u8" music joyfully."s,
                                        cnvtalk(u8"Bravo!"s),
                                        cnvtalk(u8"Nice song."s),
                                        cnvtalk(u8"Scut!"s),
                                        name(tc) + u8" "s + is(tc)
                                            + u8" excited!"s);
                                }
                            }
                            cdata(144, cc) += cdata(38, tc) + 5;
                            if (cc == 0)
                            {
                                if (tc >= 16)
                                {
                                    if (rnd(performtips * 2 + 2) == 0)
                                    {
                                        x = limit(
                                            cdata(1, cc) - 1 + rnd(3),
                                            0,
                                            mdata(0) - 1);
                                        y = limit(
                                            cdata(2, cc) - 1 + rnd(3),
                                            0,
                                            mdata(1) - 1);
                                        cell_check(x, y);
                                        if (cellaccess == 0)
                                        {
                                            continue;
                                        }
                                        if (fov_los(
                                                cdata(1, tc),
                                                cdata(2, tc),
                                                x,
                                                y)
                                            == 0)
                                        {
                                            continue;
                                        }
                                        if (encfindspec(ci, 49) != -1)
                                        {
                                            flt(calcobjlv(cdata(144, cc) / 8),
                                                calcfixlv(3 + (rnd(4) == 0)));
                                        }
                                        else
                                        {
                                            flt(calcobjlv(cdata(144, cc) / 10),
                                                calcfixlv(3));
                                        }
                                        flttypemajor = fsetperform(
                                            rnd(length(fsetperform)));
                                        dbid = 0;
                                        if (gdata(70) == 1009)
                                        {
                                            if (rnd(150) == 0)
                                            {
                                                dbid = 241;
                                            }
                                            if (rnd(150) == 0)
                                            {
                                                dbid = 622;
                                            }
                                            if (cdata(38, tc) > 15)
                                            {
                                                if (rnd(1000) == 0)
                                                {
                                                    dbid = 725;
                                                }
                                            }
                                            if (cdata(38, tc) > 10)
                                            {
                                                if (rnd(800) == 0)
                                                {
                                                    dbid = 726;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (rnd(10) == 0)
                                            {
                                                dbid = 724;
                                            }
                                            if (rnd(250) == 0)
                                            {
                                                dbid = 55;
                                            }
                                        }
                                        itemcreate(-1, dbid, x, y, 1);
                                        if (stat != 0)
                                        {
                                            --inv(0, ci);
                                            cell_refresh(
                                                inv(5, ci), inv(6, ci));
                                            ccbk = cc;
                                            cc = tc;
                                            animeid = 15;
                                            aniref(0) = inv(2, ci);
                                            aniref(1) = inv(22, ci);
                                            anix = inv(5, ci);
                                            aniy = inv(6, ci);
                                            label_1426();
                                            cc = ccbk;
                                            ++inv(0, ci);
                                            cell_refresh(
                                                inv(5, ci), inv(6, ci));
                                            ++performtips;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (gold != 0)
            {
                cdata(145, cc) += gold;
                if (synccheck(cc, -1))
                {
                    snd(11);
                }
            }
        }
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (cc != 0)
            {
                break;
            }
            if (cdata(144, cc) < 0)
            {
                txt(lang(u8"まるで駄目だ…"s, u8"It is a waste of time."s));
                break;
            }
            if (cdata(144, cc) < 20)
            {
                txt(lang(u8"不評だった…"s, u8"Almost everyone ignores you."s));
                break;
            }
            if (cdata(144, cc) < 40)
            {
                txt(lang(
                    u8"もっと練習しなくては…"s,
                    u8"You need to practice lot more."s));
                break;
            }
            if (cdata(144, cc) == 40)
            {
                txt(lang(
                    u8"演奏を終えた。"s, u8"You finish your performance."s));
                break;
            }
            if (cdata(144, cc) < 60)
            {
                txt(lang(u8"いまいちだ。"s, u8"Not good."s));
                break;
            }
            if (cdata(144, cc) < 80)
            {
                txt(lang(
                    u8"手ごたえがあった。"s,
                    u8"People seem to like your performance."s));
                break;
            }
            if (cdata(144, cc) < 100)
            {
                txt(lang(
                    u8"納得できる演奏ができた。"s,
                    u8"Your performance is successful."s));
                break;
            }
            if (cdata(144, cc) < 120)
            {
                txt(lang(u8"大盛況だ！"s, u8"Wonderful!"s));
                break;
            }
            if (cdata(144, cc) < 150)
            {
                txt(lang(
                    u8"素晴らしい！"s,
                    u8"Great performance. Everyone cheers you."s));
                break;
            }
            txt(lang(u8"歴史に残る名演だ！"s, u8"A Legendary stage!"s));
            break;
        }
    }
    if (cdata(144, cc) > 40)
    {
        cdata(144, cc) = cdata(144, cc) * (100 + inv(25, ci) / 5) / 100;
    }
    if (cdata(145, cc) != 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は合計 "s + cdata(145, cc) + strgold
                    + u8"のおひねりを貰った。"s,
                u8"The audience gives "s + name(cc) + u8" total of "s
                    + cdata(145, cc) + u8" gold pieces."s));
        }
    }
    rowactend(cc);
    r1 = cdata(144, cc) - sdata(183, cc) + 50;
    if (r1 > 0)
    {
        label_1467();
    }
    return;
}
void label_2147()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 11;
        cdata(141, cc) = 25 + rnd(10);
        cdata(152, cc) = tc;
        cdata(140, tc) = 11;
        cdata(141, tc) = cdata(141, cc) * 2;
        cdata(152, tc) = cc + 10000;
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は服を脱ぎ始めた。"s,
                name(cc) + u8" begin"s + _s(cc) + u8" to take "s + his(cc)
                    + u8" clothes off."s));
        }
        return;
    }
    sexhost = 1;
    tc = cdata(152, cc);
    if (tc >= 10000)
    {
        tc -= 10000;
        sexhost = 0;
    }
    if (cdata(0, tc) != 1 || cdata(140, tc) != 11)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"「そ、その"s + _sex2(cdata(8, tc)) + u8"とは体だけの関係"s
                    + _da() + _ore(3) + u8"は何も知らないから、命だけは…！」"s,
                u8"\"I-I don't really know that "s + _sex2(cdata(8, tc))
                    + u8". Please spare my life!\""s));
        }
        rowactend(cc);
        rowactend(tc);
        return;
    }
    if (cc == 0)
    {
        actionsp(0, 1 + rnd(2));
        if (stat == 0)
        {
            txt(lang(u8"疲労し過ぎて失敗した！"s, u8"You are too exhausted!"s));
            rowactend(cc);
            rowactend(tc);
            return;
        }
    }
    cdata(79, cc) = 317;
    if (cdata(141, cc) > 0)
    {
        if (sexhost == 0)
        {
            if (cdata(141, cc) % 5 == 0)
            {
                if (synccheck(cc, -1))
                {
                    txtef(9);
                    if (jp)
                    {
                        txt(u8"「きくぅ」"s,
                            u8"「もふもふ」"s,
                            u8"「くやしい、でも…」"s,
                            u8"「はぁはぁ！」"s,
                            u8"「ウフフフ」"s);
                    }
                    if (en)
                    {
                        txt(cnvtalk(u8"Yes!"s),
                            cnvtalk(u8"Ohhh"s),
                            u8"*gasp*"s,
                            u8"*rumble*"s,
                            cnvtalk(u8"come on!"s));
                    }
                }
            }
        }
        return;
    }
    if (sexhost == 0)
    {
        rowactend(cc);
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
        {
            if (cnt == 0)
            {
                c = cc;
            }
            else
            {
                c = tc;
            }
            cdata(257, cc) = 0;
            if (cnt == 1)
            {
                if (rnd(3) == 0)
                {
                    dmgcon(c, 11, 500);
                }
                if (rnd(5) == 0)
                {
                    dmgcon(c, 3, 500);
                }
                dmgcon(c, 11, 300);
                healsan(c, 10);
                skillexp(11, c, 250 + (c >= 57) * 1000);
                skillexp(15, c, 250 + (c >= 57) * 1000);
            }
            if (rnd(15) == 0)
            {
                dmgcon(c, 12, 200);
            }
            skillexp(17, c, 250 + (c >= 57) * 1000);
        }
    }
    sexvalue = sdata(17, cc) * (50 + rnd(50)) + 100;
    if (synccheck(cc, -1))
    {
        txtef(9);
        if (jp)
        {
            txt(u8"「よかった"s + _yo(3),
                u8"「す、すごい"s + _yo(3),
                u8"「も、もうだめ"s + _da(3),
                u8"「は、激しかった"s + _yo(3),
                u8"「か、完敗"s + _da(3));
        }
        if (en)
        {
            txt(u8"\"You are awesome!"s,
                u8"\"Oh my god...."s,
                u8"\"Okay, okay, you win!"s,
                u8"\"Holy...!"s);
        }
        txtef(20);
        if (tc == 0)
        {
            txt(lang(u8"」"s, u8"\""s));
        }
    }
    if (tc != 0)
    {
        if (cdata(30, tc) >= sexvalue)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"！さあ、小遣いを受け取って"s + _kure(3) + u8"」"s,
                    u8"Here, take this.\""s));
            }
        }
        else
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"！これが"s + _ore(3) + u8"の財布の中身の全て"s + _da()
                        + u8"」"s,
                    u8"Take this money, it's all I have!\""s));
                if (rnd(3) == 0)
                {
                    if (cc != 0)
                    {
                        txt(lang(
                            name(cc) + u8"は激怒した。「なめてんの？」"s,
                            name(cc) + u8" gets furious, "s
                                + cnvtalk(
                                      u8"And you think you can just run away?"s)));
                        cdata(29, cc) = tc;
                        cdata(201, cc) = 20;
                    }
                }
            }
            if (cdata(30, tc) <= 0)
            {
                cdata(30, tc) = 1;
            }
            sexvalue = cdata(30, tc);
        }
        cdata(30, tc) -= sexvalue;
        if (cc == 0)
        {
            modimp(tc, 5);
            flt();
            itemcreate(-1, 54, cdata(1, cc), cdata(2, cc), sexvalue);
            txt(lang(
                u8"何かが足元に転がってきた。"s,
                u8"Something is put on the ground."s));
            modkarma(0, -1);
        }
        else
        {
            cdata(30, cc) += sexvalue;
        }
    }
    rowactend(cc);
    rowactend(tc);
    return;
}
void label_2148()
{
    if (cc != 0)
    {
        rowactend(cc);
        return;
    }
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 10;
        cdata(142, cc) = ci;
        cdata(152, cc) = tc;
        if (gdata(91) == 105)
        {
            txt(lang(
                itemname(ci, 1) + u8"に目星をつけた。"s,
                u8"You target "s + itemname(ci, 1) + u8"."s));
            cdata(141, cc) = 2 + limit(inv(7, ci) / 500, 0, 50);
        }
        if (gdata(91) == 100)
        {
            if (mdata(6) == 5 || mdata(6) == 3 || mdata(6) == 2)
            {
                txt(lang(u8"寝る仕度を始めた。"s, u8"You lie down."s));
                cdata(141, cc) = 5;
            }
            else
            {
                txt(lang(u8"露営の準備を始めた。"s, u8"You start to camp."s));
                cdata(141, cc) = 20;
            }
        }
        if (gdata(91) == 101)
        {
            txt(lang(
                itemname(ci, 1) + u8"の建設を始めた。"s,
                u8"You start to construct "s + itemname(ci, 1) + u8"."s));
            cdata(141, cc) = 25;
        }
        if (gdata(91) == 102)
        {
            txt(lang(
                itemname(ci, 1) + u8"のハッチを回し始めた。"s,
                u8"You start to pull the hatch."s));
            cdata(141, cc) = 10;
        }
        if (gdata(91) == 103)
        {
            txt(lang(
                itemname(ci, 1) + u8"を掘り始めた。"s,
                u8"You start to pick "s + itemname(ci, 1) + u8"."s));
            cdata(141, cc) = 10
                + limit(inv(7, ci)
                            / (1 + sdata(10, 0) * 10 + sdata(180, 0) * 40),
                        1,
                        100);
        }
        if (gdata(91) == 104)
        {
            if (gdata(17) == 0 || gdata(17) == 3)
            {
                if (gdata(88) > gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                        + gdata(10) * 24 * 30 * 12)
                {
                    txt(lang(u8"もう飽きた。"s, u8"You are bored."s));
                    rowactend(cc);
                    return;
                }
            }
            gdata(88) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12 + 48;
            if (inv(3, ci) == 563)
            {
                txt(lang(
                    skillname(inv(25, ci)) + u8"の学習を始めた。"s,
                    u8"You begin to study "s + skillname(inv(25, ci))
                        + u8"."s));
            }
            else
            {
                txt(lang(
                    u8"トレーニングを始めた。"s, u8"You start training."s));
            }
            if (gdata(17) != 0 && gdata(17) != 3)
            {
                if (gdata(20) == 30
                    || mdata(14) == 1
                        && (mdata(6) == 5 || mdata(6) == 3 || mdata(6) == 2))
                {
                    txt(lang(
                        u8"外が悪天候なので、じっくりと取り組むことにした。"s,
                        u8"The weather's bad outside, you have plenty of time to waste."s));
                }
            }
            cdata(141, cc) = 50;
        }
        label_1419();
        return;
    }
    tc = cdata(152, cc);
    if (cdata(141, cc) > 0)
    {
        if (gdata(91) == 103)
        {
            if (rnd(5) == 0)
            {
                skillexp(180, 0, 20, 4);
            }
            if (rnd(6) == 0)
            {
                if (rnd(55) > sorg(10, cc) + 25)
                {
                    skillexp(10, cc, 50);
                }
            }
            if (rnd(8) == 0)
            {
                if (rnd(55) > sorg(11, cc) + 28)
                {
                    skillexp(11, cc, 50);
                }
            }
            if (rnd(10) == 0)
            {
                if (rnd(55) > sorg(15, cc) + 30)
                {
                    skillexp(15, cc, 50);
                }
            }
            if (rnd(4) == 0)
            {
                txtef(9);
                if (jp)
                {
                    txt(u8" *ザクッ* "s,
                        u8" *♪* "s,
                        u8" *ズシュ* "s,
                        u8" *ジャリ* "s);
                }
                if (en)
                {
                    txt(u8"*sing*"s,
                        u8"*pull*"s,
                        u8"*thud*"s,
                        u8"*rumble*"s,
                        u8"*gasp*"s);
                }
            }
        }
        if (gdata(91) == 104)
        {
            p = 25;
            if (gdata(17) != 0 && gdata(17) != 3)
            {
                if (gdata(20) == 30)
                {
                    p = 5;
                }
                if (gdata(20) != 30 && mdata(14) == 1)
                {
                    if (mdata(6) == 5 || mdata(6) == 3 || mdata(6) == 2)
                    {
                        p = 5;
                        gdata(14) += 30;
                    }
                }
            }
            if (inv(3, ci) == 563)
            {
                if (rnd(p) == 0)
                {
                    skillexp(inv(25, ci), cc, 25);
                }
            }
            else
            {
                if (rnd(p) == 0)
                {
                    skillexp(randattb(), cc, 25);
                }
            }
        }
        if (gdata(91) == 105)
        {
            if (inv(3, ci) == 688)
            {
                if (rnd(15) == 0)
                {
                    rowactend(cc);
                    txt(lang(
                        u8"突然ふたが閉まった！"s,
                        u8"Suddenly, the iron maiden falls foward."s));
                    dmghp(cc, 9999, -18);
                    return;
                }
            }
            if (inv(3, ci) == 689)
            {
                if (rnd(15) == 0)
                {
                    rowactend(cc);
                    txt(lang(
                        u8"突然ギロチンが落ちてきた！"s,
                        u8"Suddenly, the guillotine is activated."s));
                    dmghp(cc, 9999, -19);
                    return;
                }
            }
            f = 0;
            f2 = 0;
            tg = inv_getowner(ci);
            if (tg != -1)
            {
                if (cdata(69, tg) == -3)
                {
                    f2 = 1;
                }
            }
            i = sdata(300, 0) * 5 + sdata(12, 0) + 25;
            if (gdata(13) >= 19 || gdata(13) < 7)
            {
                i = i * 15 / 10;
            }
            if (inv(4, ci) == 3)
            {
                i = i * 8 / 10;
            }
            if (inv(4, ci) >= 4)
            {
                i = i * 5 / 10;
            }
            make_sound(cdata(1, 0), cdata(2, 0), 5, 8);
            {
                int cnt = 16;
                for (int cnt_end = cnt + (229); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cdata(251, cnt) != 0)
                    {
                        continue;
                    }
                    if (dist(
                            cdata(1, cnt),
                            cdata(2, cnt),
                            cdata(1, 0),
                            cdata(2, 0))
                        > 5)
                    {
                        continue;
                    }
                    if (f2 == 1)
                    {
                        if (cnt != tg)
                        {
                            continue;
                        }
                    }
                    p = rnd((i + 1))
                        * (80 + (synccheck(cnt, -1) == 0) * 50
                           + dist(
                                 cdata(1, cnt),
                                 cdata(2, cnt),
                                 cdata(1, 0),
                                 cdata(2, 0))
                               * 20)
                        / 100;
                    if (cnt < 57)
                    {
                        p = p * 2 / 3;
                    }
                    if (rnd(sdata(13, cnt) + 1) > p)
                    {
                        if (synccheck(cnt, -1))
                        {
                            txt(lang(
                                name(cnt) + u8"は窃盗を見咎めた。"s,
                                name(cnt) + u8" notice"s + _s(cnt)
                                    + u8" you,"s));
                        }
                        else
                        {
                            txt(lang(
                                name(cnt) + u8"は不振な物音に気づいた。"s,
                                name(cnt) + u8" hear"s + _s(cnt)
                                    + u8" loud noise,"s));
                        }
                        if (cdata(150, cnt) == 14)
                        {
                            txt(lang(
                                u8"「貴様、何をしている！」"s,
                                cnvtalk(u8"You there, stop!"s)));
                            modimp(cnt, -5);
                        }
                        else
                        {
                            txt(lang(
                                u8"「ガード！ガード！」"s,
                                cnvtalk(u8"Guards! Guards!"s)));
                            modimp(cnt, -5);
                        }
                        cdata(79, cnt) = 520;
                        f = 1;
                    }
                }
            }
            if (f)
            {
                txtmore();
                txt(lang(
                    u8"盗みを見咎められた！"s, u8"You are found stealing."s));
                modkarma(0, -5);
                p = inv_getowner(ci);
                if (tg != -1)
                {
                    if (cdata(27, p) != 202)
                    {
                        if (cdata(251, tg) == 0)
                        {
                            cdata(9, tg) = -2;
                            hostileaction(0, tg);
                            modimp(tg, -20);
                        }
                    }
                }
                gohostile();
            }
            if (tg != -1)
            {
                if (cdata(0, tg) != 1)
                {
                    if (f != 1)
                    {
                        txt(lang(
                            u8"対象は死んでいる"s, u8"The target is dead."s));
                        f = 1;
                    }
                }
                if (cdata(150, tg) == 20)
                {
                    if (f != 1)
                    {
                        txt(lang(
                            u8"それは盗めない。"s, u8"It can't be stolen."s));
                        f = 1;
                    }
                }
                if (dist(cdata(1, cc), cdata(2, cc), cdata(1, tg), cdata(2, tg))
                    >= 3)
                {
                    if (f != 1)
                    {
                        txt(lang(
                            u8"対象が見当たらない。"s,
                            u8"You loose the target."s));
                        f = 0;
                    }
                }
            }
            if (inv(0, ci) <= 0)
            {
                f = 1;
            }
            if (ibit(5, ci) == 1)
            {
                if (f != 1)
                {
                    txt(lang(u8"それは盗めない。"s, u8"It can't be stolen."s));
                    f = 1;
                }
            }
            if (inv(7, ci) >= sdata(10, 0) * 500)
            {
                if (f != 1)
                {
                    txt(lang(
                        u8"重すぎて手に負えない。"s, u8"It's too heavy."s));
                    f = 1;
                }
            }
            if (itemusingfind(ci, 1) != -1)
            {
                if (f != 1)
                {
                    txt(lang(
                        u8"そのアイテムは他の誰かが使用中だ。"s,
                        u8"Someone else is using the item."s));
                    f = 1;
                }
            }
            if (f)
            {
                txt(lang(u8"行動を中断した。"s, u8"You abort stealing."s));
                rowactend(cc);
            }
        }
        return;
    }
    if (gdata(91) == 105)
    {
        tg = inv_getowner(ci);
        if (tg != -1)
        {
            if (cdata(0, tg) != 1)
            {
                txt(lang(u8"行動を中断した。"s, u8"You abort stealing."s));
                rowactend(cc);
                return;
            }
        }
        in = 1;
        if (inv(3, ci) == 54)
        {
            in = inv(0, ci);
        }
        ibitmod(12, ci, 0);
        ti = inv_getfreeid(0);
        if (ti == -1)
        {
            txt(lang(
                u8"バックパックには、もうアイテムを入れる余裕がない。"s,
                u8"Your inventory is full."s));
            return;
        }
        if (inv(18, ci) != 0)
        {
            tc = inv_getowner(ci);
            if (tc != -1)
            {
                p = inv(18, ci);
                cdata(p, tc) = cdata(p, tc) / 10000 * 10000;
            }
            inv(18, ci) = 0;
            r1 = tc;
            label_1477();
        }
        item_copy(ci, ti);
        inv(0, ti) = in;
        ibitmod(9, ti, 1);
        inv(21, ti) = 0;
        inv(0, ci) -= in;
        if (inv(0, ci) <= 0)
        {
            cell_refresh(inv(5, ci), inv(6, ci));
        }
        txt(lang(
            itemname(ti) + u8"を盗んだ。"s,
            u8"You successfully steal "s + itemname(ti) + u8"."s));
        if (inv(3, ci) == 54)
        {
            snd(11);
            inv(0, ti) = 0;
            cdata(30, 0) += in;
        }
        else
        {
            item_stack(0, ti, 1);
            snd(14 + rnd(2));
        }
        label_1521();
        skillexp(300, 0, limit(inv(7, ti) / 25, 0, 450) + 50);
        if (cdata(49, 0) >= -30)
        {
            if (rnd(3) == 0)
            {
                txtmore();
                txt(lang(
                    u8"あなたは良心の呵責を感じた。"s,
                    u8"You feel the stings of conscience."s));
                modkarma(0, -1);
            }
        }
    }
    if (gdata(91) == 100)
    {
        txt(lang(u8"あなたは眠り込んだ。"s, u8"You fall asleep."s));
        label_2151();
    }
    if (gdata(91) == 101)
    {
        snd(58);
        txt(lang(
            itemname(ci, 1) + u8"を作り終えた。"s,
            u8"You finish constructing"s + itemname(ci, 1) + u8"."s));
        in = 1;
        dropval = 1;
        label_2193();
    }
    if (gdata(91) == 102)
    {
        txt(lang(
            itemname(ci, 1) + u8"のハッチを回し終えた。"s,
            u8"You finish pulling the hatch of "s + itemname(ci, 1) + u8"."s));
        chatteleport = 1;
        gdata(66) = gdata(20);
        gdata(67) = gdata(22);
        gdata(68) = cdata(1, 0);
        gdata(69) = cdata(2, 0);
        gdata(64) = 30;
        gdata(65) = inv(9, ci);
        levelexitby = 2;
        snd(49);
    }
    if (gdata(91) == 103)
    {
        txt(lang(
            itemname(ci, 1) + u8"を収穫した("s + cnvweight(inv(7, ci)) + u8")"s,
            u8"You harvest "s + itemname(ci, 1) + u8". ("s
                + cnvweight(inv(7, ci)) + u8")"s));
        label_2192();
    }
    if (gdata(91) == 104)
    {
        if (inv(3, ci) == 563)
        {
            txt(lang(
                skillname(inv(25, ci)) + u8"の学習を終えた。"s,
                u8"You finish studying "s + skillname(inv(25, ci)) + u8"."s));
        }
        else
        {
            txt(lang(u8"トレーニングを終えた。"s, u8"You finish training."s));
        }
    }
    rowactend(cc);
    return;
}
void label_2149()
{
    redraw(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh - inf_verh);
    gmode(2);
    label_1421();
    if (screenupdate == 0)
    {
        redraw(1);
    }
    screenupdate = 0;
    return;
}
void label_2150()
{
    gsel(4);
    gmode(0);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\bg_night.bmp"s, 1);
    pos(0, 0);
    gzoom(windoww, windowh - inf_verh, 4, 0, 0, 640, 480, 1);
    gsel(0);
    return;
}
void label_2151()
{
    if (gdata(20) == 13)
    {
        txtmore();
        txt(lang(
            u8"しかし、大事な用を思い出して飛び起きた。"s,
            u8"But you can't sleep right now."s));
        gdata(98) = 0;
        return;
    }
    if (gdata(185))
    {
        txtgod(cdata(61, 0), 10);
    }
    redraw(0);
    label_2150();
    musicloop = 1;
    music = 78;
    label_0068();
    msg_halt();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            gmode(4 - 1, -1, cnt * 10);
            label_2149();
            await(200);
        }
    }
    gmode(2);
    cc = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
        {
            tc = cnt;
            cdata(259, tc) = 0;
            cdata(250, tc) = 0;
            cdata(251, tc) = 0;
            cdata(254, tc) = 0;
            cdata(253, tc) = 0;
            cdata(252, tc) = 0;
            cdata(256, tc) = 0;
            cdata(257, tc) = 0;
            cdata(258, tc) = 0;
            gdata(90) = 0;
            cdata(50, tc) = cdata(51, tc);
            cdata(55, tc) = cdata(56, tc);
            cdata(52, tc) = cdata(53, tc);
            healcon(tc, 12, 7 + rnd(7));
            if (cbit(986, tc))
            {
                cdata(93, tc) -= rnd(6);
            }
            else
            {
                cdata(93, tc) -= rnd(3);
            }
            if (cdata(93, tc) < 0)
            {
                cure_anorexia(tc);
                cdata(93, tc) = 0;
            }
            healsan(tc, 10);
            if (cbit(21, tc))
            {
                cbitmod(974, tc, 1);
            }
        }
    }
    mode = 9;
    timeslept = 7 + rnd(5);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (timeslept); cnt < cnt_end; ++cnt)
        {
            ++gdata(13);
            label_2736();
            if (mode != 9)
            {
                label_2150();
                mode = 9;
            }
            gdata(90) = 0;
            gdata(14) = 0;
            cc = 0;
            label_2149();
            await(500);
        }
    }
    if (gdata(98) != 0)
    {
        tc = -1;
        {
            int cnt = 1;
            for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
            {
                if (cbit(962, cnt) == 1)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        tc = cnt;
                        break;
                    }
                }
            }
        }
        if (tc != -1)
        {
            s = lang(u8"遺伝子"s, u8"Gene"s);
            file = u8"bg_re14"s;
            buff = lang(""s + name(tc) +
                    u8"とあなたは熱い一夜を供にした。新たな遺伝子が生成された。"s,
                u8"You spent a night with "s + name(tc) +
                    u8". A new gene is created."s);
            listmax = 0;
            list(0, listmax) = 1;
            listn(0, listmax) = lang(u8"ふぅ"s, u8"Sweet."s);
            ++listmax;
            cbitmod(962, tc, 0);
            label_1896();
            label_2093();
        }
    }
    label_2149();
    gdata(98) = 0;
    mode = 0;
    wake_up();
    cdata(22, cc) -= 1500 / (trait(158) + 1);
    txtef(2);
    txt(lang(
        ""s + timeslept + u8"時間眠った。あなたはリフレッシュした。"s,
        u8"You have slept for "s + timeslept
            + u8" hours. You are refreshed."s));
    f = 0;
    if (cdata(142, 0) == -1)
    {
        f = 1;
    }
    else
    {
        ci = cdata(142, 0);
        if (inv(25, ci) == 0 || inv(0, ci) == 0
            || refitem(inv(3, ci), 9) != 60004)
        {
            f = 1;
        }
    }
    if (f)
    {
        txt(lang(u8"まあまあの目覚めだ。"s, u8"You wake up feeling so so."s));
    }
    else
    {
        i = 0;
        {
            int cnt = 10;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                i += sorg(cnt, 0);
            }
        }
        i = limit(i / 6, 10, 1000);
        exp = i * i * i / 10;
        gdata(92) = gdata(92) * inv(25, ci) / 100;
        grown = 0;
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                if (gdata(92) >= exp)
                {
                    gdata(92) -= exp;
                }
                else
                {
                    if (cnt != 0)
                    {
                        break;
                    }
                }
                modgrowth(0, 10 + rnd(6), 1);
                ++grown;
                if (cnt > 6)
                {
                    if (rnd(5) == 0)
                    {
                        gdata(92) = 0;
                        break;
                    }
                }
            }
        }
        txtmore();
        txtef(2);
        txt(lang(
            u8"心地よい目覚めだ。潜在能力が伸びた(計"s + grown + u8"%)"s,
            u8"You wake up feeling good. Your potential increases. (Total:"s
                + grown + u8"%)"s));
    }
    msg_halt();
    label_0068();
    autosave = 1 * (gdata(20) != 35);
    return;
}
void label_2152()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 4;
        cdata(141, cc) = r1;
        txt(lang(u8"あなたは横になった。"s, u8"You lie down to rest."s));
        label_1419();
        return;
    }
    if (cdata(141, cc) > 0)
    {
        if (cdata(141, cc) % 2 == 0)
        {
            healsp(cc, 1);
        }
        if (cdata(141, cc) % 3 == 0)
        {
            healhp(cc, 1);
            healmp(cc, 1);
        }
        return;
    }
    if (gdata(90) >= 30)
    {
        f = 0;
        if (gdata(90) >= 50)
        {
            f = 1;
        }
        else
        {
            if (rnd(2) == 0)
            {
                f = 1;
            }
        }
        if (f == 1)
        {
            txt(lang(
                u8"あなたはそのまま眠りにおちた…"s,
                u8"After a short while, you drop off to sleep."s));
            cdata(142, cc) = -1;
            label_2151();
            rowactend(cc);
            return;
        }
    }
    txt(lang(u8"あなたは休息を終えた。"s, u8"You finished taking a rest."s));
    rowactend(cc);
    return;
}
void label_2153()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 3;
        cdata(141, cc) = 20;
        if (gdata(17) == 3)
        {
            cdata(141, cc) = cdata(141, cc) * 13 / 10;
        }
        if (gdata(17) == 4)
        {
            cdata(141, cc) = cdata(141, cc) * 16 / 10;
        }
        if (gdata(17) == 2 || chipm(0, map(cdata(1, cc), cdata(2, cc), 0)) == 4)
        {
            cdata(141, cc) = cdata(141, cc) * 22 / 10;
        }
        if (gdata(17) == 1)
        {
            cdata(141, cc) = cdata(141, cc) * 5 / 10;
        }
        cdata(141, cc) =
            cdata(141, cc) * 100 / (100 + gdata(28) + sdata(182, 0));
        return;
    }
    if (cdata(22, 0) <= 5000)
    {
        inv_getheader(cc);
        f = 0;
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (refitem(inv(3, cnt), 5) == 91000)
                {
                    f = 1;
                    ci = cnt;
                    break;
                }
            }
        }
        if (f == 1)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    npcn(cc) + itemname(ci, 1) + u8"を食べ終えた。"s,
                    name(cc) + u8" "s + have(cc) + u8" finished eating "s
                        + itemname(ci, 1) + u8"."s));
            }
            label_2161();
        }
    }
    if (gdata(17) == 2 || chipm(0, map(cdata(1, cc), cdata(2, cc), 0)) == 4)
    {
        if (gdata(83) == 0)
        {
            if (rnd(100) == 0)
            {
                if (cbit(5, 0) == 0 || cdata(262, 0) > 0)
                {
                    txtef(9);
                    if (jp)
                    {
                        txt(u8" *ずぶっ* "s,
                            u8" *ザシュ* "s,
                            u8" *ズボ* "s,
                            u8" *ズサッ* "s);
                    }
                    if (en)
                    {
                        txt(u8" *kisssh*"s,
                            u8"*thudd*"s,
                            u8"*siz*"s,
                            u8"*clump*"s,
                            u8"*skritch*"s);
                    }
                    cdata(141, cc) += 10;
                }
            }
            if (rnd(1000) == 0)
            {
                txtef(8);
                if (jp)
                {
                    txt(u8"積雪のせいで旅程が遅れている。"s,
                        u8"雪道を進むのは大変な苦労だ。"s,
                        u8"深い雪に脚をとられている。"s);
                }
                if (en)
                {
                    txt(u8"Snow delays your travel."s,
                        u8"You are caught in a snowdrift."s,
                        u8"It's hard to walk on a snowy road."s);
                }
                cdata(141, cc) += 50;
            }
        }
        if (cdata(22, 0) <= 2000)
        {
            if (cbit(986, 0) == 0)
            {
                snd(18);
                txt(lang(
                    u8"空腹のあまり、あなたは積もっている雪を腹にかきこんだ。"s,
                    u8"You are too hungry. You chow down snow."s));
                cdata(22, cc) += 5000;
                label_2162();
                dmgcon(0, 7, 1000);
            }
        }
    }
    if (gdata(17) == 4)
    {
        if (gdata(83) == 0)
        {
            if (rnd(100) == 0)
            {
                if (cbit(5, 0) == 0 || cdata(262, 0) > 0)
                {
                    txtef(9);
                    if (jp)
                    {
                        txt(u8" *びしゃ* "s,
                            u8" *ザブッ* "s,
                            u8" *パシャッ* "s,
                            u8" *ざぶ* "s);
                    }
                    if (en)
                    {
                        txt(u8"*drip*"s,
                            u8"*sip*"s,
                            u8"*drizzle*"s,
                            u8"*splash*"s,
                            u8"*kissh*"s);
                    }
                    cdata(141, cc) += 5;
                }
            }
            if (cdata(254, 0) == 0)
            {
                if (rnd(500) == 0)
                {
                    txtef(8);
                    if (jp)
                    {
                        txt(u8"雨が激しすぎてどこを歩いているかもわからない！"s,
                            u8"あまりにも視界が悪すぎる。"s,
                            u8"豪雨のせいで前が全く見えない。"s);
                    }
                    if (en)
                    {
                        txt(u8"It's raining heavily. You lose your way."s,
                            u8"You can't see a thing!"s);
                    }
                    cdata(254, 0) = 10;
                }
            }
            else
            {
                if (rnd(5) == 0)
                {
                    cdata(254, 0) = 10;
                }
            }
        }
        cdata(253, 0) = 3;
    }
    if (cdata(141, cc) > 0)
    {
        ++gdata(14);
        return;
    }
    traveldone = 1;
    gdata(180) += 4;
    rowactend(cc);
    return;
}
void label_2154()
{
    if (rowactre != 0)
    {
        return;
    }
    ci = cdata(142, 0);
    dbmax = 0;
    dbsum = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            if (fishdata(0, cnt) == 0)
            {
                continue;
            }
            i = limit(inv(28, ci) + (rnd(5) == 0) - (rnd(5) == 0), 0, 5);
            if (fishdata(1, cnt) != i)
            {
                continue;
            }
            dblist(0, dbmax) = cnt;
            dblist(1, dbmax) = fishdata(2, cnt) + dbsum;
            dbsum += fishdata(2, cnt);
            ++dbmax;
        }
    }
    fish = 1;
    if (dbsum != 0)
    {
        exrand_rnd(dbtmp, dbsum);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (dbmax); cnt < cnt_end; ++cnt)
            {
                if (dblist(1, cnt) > dbtmp)
                {
                    fish = dblist(0, cnt);
                    break;
                }
            }
        }
    }
    return;
}
void label_2155()
{
    flt();
    itemcreate(0, fishdata(7, fish), -1, -1, 0);
    inv(23, ci) = fish;
    inv(1, ci) = fishdata(6, fish);
    inv(7, ci) = fishdata(5, fish);
    txt(lang(
        itemname(ci, 1) + u8"を釣り上げた！"s,
        u8"You get "s + itemname(ci, 1) + u8"!"s));
    item_stack(0, ci, 1);
    return;
}
void label_2156()
{
    if (cdata(140, cc) == 0)
    {
        txt(lang(u8"釣りを始めた。"s, u8"You start fishing."s));
        snd(87);
        if (rowactre == 0)
        {
            cdata(142, cc) = ci;
        }
        cdata(140, cc) = 7;
        cdata(141, cc) = 100;
        racount = 0;
        fishstat = 0;
        gsel(9);
        pos(0, 0);
        picload(exedir + u8"\\graphic\\fishing.bmp"s);
        gsel(0);
        return;
    }
    if (rowactre != 0)
    {
        label_2143();
        return;
    }
    if (cdata(141, cc) > 0)
    {
        if (rnd(5) == 0)
        {
            fishstat = 1;
            label_2154();
        }
        if (fishstat == 1)
        {
            if (rnd(5) == 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (4 + rnd(4)); cnt < cnt_end; ++cnt)
                    {
                        redraw(0);
                        fishanime(0) = 1;
                        fishanime(1) = 3 + rnd(3);
                        addefmap(fishx, fishy, 4, 2);
                        ++scrturn;
                        label_1419();
                        redraw(1);
                        await(cfg_wait1 * 2);
                    }
                }
                if (rnd(3) == 0)
                {
                    fishstat = 2;
                }
                if (rnd(6) == 0)
                {
                    fishstat = 0;
                }
                fishanime = 0;
            }
        }
        if (fishstat == 2)
        {
            fishanime = 2;
            snd(46);
            cdata(79, 0) = 220;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (8 + rnd(10)); cnt < cnt_end; ++cnt)
                {
                    redraw(0);
                    ++scrturn;
                    label_1419();
                    redraw(1);
                    await(cfg_wait1 * 2);
                }
            }
            if (rnd(10))
            {
                fishstat = 3;
            }
            else
            {
                fishstat = 0;
            }
            fishanime = 0;
        }
        if (fishstat == 3)
        {
            fishanime = 3;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (28 + rnd(15)); cnt < cnt_end; ++cnt)
                {
                    if (cnt % 7 == 0)
                    {
                        snd(89);
                    }
                    redraw(0);
                    fishanime(1) = cnt;
                    ++scrturn;
                    label_1419();
                    addefmap(fishx, fishy, 5, 2);
                    redraw(1);
                    await(cfg_wait1 * 2);
                }
            }
            if (fishdata(3, fish) >= rnd(sdata(185, 0) + 1))
            {
                fishstat = 0;
            }
            else
            {
                fishstat = 4;
            }
            fishanime = 0;
        }
        if (fishstat == 4)
        {
            fishanime = 4;
            snd(88);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (21); cnt < cnt_end; ++cnt)
                {
                    redraw(0);
                    fishanime(1) = cnt;
                    if (cnt == 1)
                    {
                        addefmap(fishx, fishy, 1, 3);
                    }
                    ++scrturn;
                    label_1419();
                    redraw(1);
                    await(cfg_wait1 * 2);
                }
            }
            snd(14 + rnd(2));
            fishanime = 0;
            rowactend(cc);
            label_2155();
            label_1470();
            cdata(79, 0) = 306;
        }
        if (rnd(10) == 0)
        {
            dmgsp(cc, 1);
        }
        return;
    }
    txt(lang(u8"何も釣れなかった…"s, u8"A waste of a time..."s));
    rowactend(cc);
    return;
}
void label_2157()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 8;
        cdata(141, cc) = 40;
        txt(lang(u8"採取を始めた。"s, u8"You start to search the spot."s));
        racount = 0;
        return;
    }
    if (rowactre != 0)
    {
        label_2143();
        return;
    }
    rowactend(cc);
    return;
}
void label_2158()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 9;
        cdata(141, cc) = 20;
        if (rowactre == 0)
        {
            txt(lang(
                u8"地面を掘り始めた。"s, u8"You start to dig the ground."s));
        }
        else
        {
            txt(lang(u8"探索を始めた。"s, u8"You start to dig the spot."s));
        }
        racount = 0;
        return;
    }
    if (rowactre != 0)
    {
        label_2143();
        return;
    }
    if (cdata(141, cc) > 0)
    {
        if (cdata(26, cc) % 5 == 0)
        {
            txtmore();
            txtef(4);
            txt(lang(u8" *ざくっ* "s, u8"*clink*"s),
                lang(u8" *カキン* "s, u8"*smash*"s),
                lang(u8" *ごつっ* "s, u8"*thud*"s),
                lang(u8" *じゃり* "s, u8"*sing*"s),
                lang(u8" *♪* "s, u8"*sigh*"s));
        }
        return;
    }
    txt(lang(u8"地面を掘り終えた。"s, u8"You finish digging."s));
    if (mdata(6) == 1)
    {
        inv_getheader(0);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(3, cnt) == 621)
                {
                    if (inv(25, cnt) != 0)
                    {
                        if (inv(25, cnt) == cdata(1, 0))
                        {
                            if (inv(26, cnt) == cdata(2, 0))
                            {
                                snd(23);
                                txtef(5);
                                txt(lang(
                                    u8" *ガチッ* …何かがある！"s,
                                    u8"*click* ...something is there!"s));
                                msg_halt();
                                snd(24);
                                flt();
                                itemcreate(
                                    -1,
                                    622,
                                    cdata(1, 0),
                                    cdata(2, 0),
                                    2 + rnd(3));
                                flt();
                                itemcreate(
                                    -1,
                                    55,
                                    cdata(1, 0),
                                    cdata(2, 0),
                                    1 + rnd(3));
                                flt();
                                itemcreate(
                                    -1,
                                    54,
                                    cdata(1, 0),
                                    cdata(2, 0),
                                    rnd(10000) + 2000);
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (4); cnt < cnt_end;
                                         ++cnt)
                                    {
                                        flt(calcobjlv(cdata(38, 0) + 10),
                                            calcfixlv(3));
                                        if (cnt == 0)
                                        {
                                            fixlv = 5;
                                        }
                                        flttypemajor =
                                            fsetchest(rnd(length(fsetchest)));
                                        itemcreate(
                                            -1, 0, cdata(1, 0), cdata(2, 0), 0);
                                    }
                                }
                                txt(lang(
                                    u8"何かが足元に転がってきた。"s,
                                    u8"Something is put on the ground."s));
                                autosave = 1 * (gdata(20) != 35);
                                --inv(0, cnt);
                                break;
                            }
                        }
                    }
                }
            }
        }
    }
    spillfrag(refx, refy, 1);
    rowactend(cc);
    return;
}
void label_2159()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 5;
        cdata(141, cc) = 40;
        if (rowactre == 0)
        {
            txt(lang(u8"壁を掘りはじめた。"s, u8"You start to dig the wall."s));
        }
        else
        {
            txt(lang(
                u8"鉱石を掘り始めた。"s,
                u8"You start to dig the mining spot."s));
        }
        if (chipm(0, map(refx, refy, 0)) == 6)
        {
            txt(lang(
                u8"この壁はとても固そうだ！"s,
                u8"These walls look pretty hard!"s));
        }
        countdig = 0;
        racount = 0;
        return;
    }
    if (rowactre != 0)
    {
        label_2143();
        return;
    }
    if (cdata(141, cc) > 0)
    {
        if (rnd(5) == 0)
        {
            dmgsp(cc, 1);
        }
        ++countdig;
        f = 0;
        if (chipm(0, map(refx, refy, 0)) == 6)
        {
            if (rnd(12000) < sdata(10, cc) + sdata(163, cc) * 10)
            {
                f = 1;
            }
            p = 30 - sdata(163, cc) / 2;
            if (p > 0)
            {
                if (countdig <= p)
                {
                    f = 0;
                }
            }
        }
        else
        {
            if (rnd(1500) < sdata(10, cc) + sdata(163, cc) * 10)
            {
                f = 1;
            }
            p = 20 - sdata(163, cc) / 2;
            if (p > 0)
            {
                if (countdig <= p)
                {
                    f = 0;
                }
            }
        }
        if (f == 1 || gdata(250) == 2)
        {
            rtval = 0;
            if (rnd(5) == 0)
            {
                rtval = 54;
            }
            if (rnd(8) == 0)
            {
                rtval = -1;
            }
            if (map(refx, refy, 6) != 0)
            {
                cell_featread(refx, refy);
                if (feat(1) == 22)
                {
                    label_2223();
                }
            }
            map(refx, refy, 0) = tile_tunnel;
            spillfrag(refx, refy, 2);
            x = refx;
            y = refy;
            snd(45);
            animeid = 14;
            aniref = 5;
            label_1426();
            txt(lang(
                u8"壁を掘り終えた。"s, u8"You finished digging the wall."s));
            if (gdata(250) == 2 && gdata(20) == 7)
            {
                flt();
                itemcreate(-1, 208, digx, digy, 0);
                inv(17, ci) = -1;
                txt(lang(
                    u8"何かを見つけた。"s,
                    u8"You found something out of crushed heaps of rock."s));
                gdata(250) = 3;
            }
            else
            {
                if (rtval != 0 && gdata(20) != 30)
                {
                    if (rtval > 0)
                    {
                        flt();
                        itemcreate(-1, rtval, digx, digy, 0);
                    }
                    else
                    {
                        if (rtval == -1)
                        {
                            flt(calcobjlv(gdata(22)), calcfixlv(3));
                            flttypemajor = 77000;
                            itemcreate(-1, 0, digx, digy, 0);
                        }
                    }
                    txt(lang(
                        u8"何かを見つけた。"s,
                        u8"You found something out of crushed heaps of rock."s));
                }
            }
            label_1457();
            rowactend(cc);
        }
        else
        {
            if (cdata(26, cc) % 5 == 0)
            {
                txtmore();
                txtef(4);
                txt(lang(u8" *ざくっ* "s, u8"*clink*"s),
                    lang(u8" *カキン* "s, u8"*smash*"s),
                    lang(u8" *ごつっ* "s, u8"*thud*"s),
                    lang(u8" *じゃり* "s, u8"*sing*"s),
                    lang(u8" *♪* "s, u8"*sigh*"s));
            }
        }
        return;
    }
    txt(lang(
        u8"背中が痛い…掘るのを諦めた。"s,
        u8"Your back hurts...You give up digging."s));
    rowactend(cc);
    return;
}
void label_2160()
{
    if (cdata(140, cc) == 0)
    {
        cdata(140, cc) = 1;
        cdata(141, cc) = 8;
        cdata(142, cc) = ci;
        if (synccheck(cc, -1))
        {
            snd(18);
            if (inv(21, ci) == 1 && cc < 16)
            {
                txt(lang(
                    name(cc) + u8"は"s + itemname(ci, 1)
                        + u8"をこっそりと口に運んだ。"s,
                    name(cc) + u8" start"s + _s(cc) + u8" to eat "s
                        + itemname(ci, 1) + u8" in secret."s));
            }
            else
            {
                txt(lang(
                    name(cc) + u8"は"s + itemname(ci, 1) + u8"を口に運んだ。"s,
                    name(cc) + u8" start"s + _s(cc) + u8" to eat "s
                        + itemname(ci, 1) + u8"."s));
            }
            if (inv(3, ci) == 204 && inv(23, ci) == 344)
            {
                txt(lang(
                    u8"「いただきマンモス」"s, cnvtalk(u8"Let's eatammoth."s)));
            }
        }
        return;
    }
    if (cdata(141, cc) > 0)
    {
        return;
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            npcn(cc) + itemname(ci, 1) + u8"を食べ終えた。"s,
            name(cc) + u8" "s + have(cc) + u8" finished eating "s
                + itemname(ci, 1) + u8"."s));
    }
    label_2161();
    rowactend(cc);
    return;
}
void label_2161()
{
    cieat = ci;
    label_1588();
    ci = cieat;
    if (cc == 0)
    {
        item_identify(ci, 1);
    }
    chara_unequip(ci);
    if (stat == 1)
    {
        r1 = cc;
        label_1477();
    }
    --inv(0, ci);
    if (ci >= 5080)
    {
        cell_refresh(inv(5, ci), inv(6, ci));
    }
    else
    {
        if (cc == 0)
        {
            label_1521();
        }
    }
    if (cc == 0)
    {
        label_2162();
    }
    else
    {
        if (ci == cdata(12, cc))
        {
            cdata(12, cc) = 0;
        }
        if (cbit(987, cc))
        {
            if (inv(24, ci) == 35)
            {
                if (inv(27, ci) < 0)
                {
                    txtef(9);
                    if (jp)
                    {
                        txt(u8"「うぐぐ！なんだこの飯は！」"s,
                            u8"「うっ！」"s,
                            u8"「……！！」"s,
                            u8"「あれれ…」"s,
                            u8"「…これは何の嫌がらせですか」"s,
                            u8"「まずい！」"s);
                    }
                    if (en)
                    {
                        txt(cnvtalk(u8"Yuck!!"s),
                            cnvtalk(u8"....!!"s),
                            cnvtalk(u8"W-What..."s),
                            cnvtalk(u8"Are you teasing me?"s),
                            cnvtalk(u8"You fool!"s));
                    }
                    dmghp(cc, 999, -12);
                    if (cdata(0, cc) != 1)
                    {
                        if (cdata(9, cc) > 0)
                        {
                            modkarma(0, -5);
                        }
                        else
                        {
                            modkarma(0, -1);
                        }
                    }
                    modimp(tc, -25);
                    return;
                }
            }
        }
    }
    chara_anorexia(cc);
    if (inv(3, ci) == 755 && rnd(3) || inv(3, ci) == 756 && rnd(10) == 0)
    {
        if (synccheck(cc, -1))
        {
            txtef(8);
            txt(lang(
                name(cc) + u8"はもちを喉につまらせた！"s,
                name(cc) + u8" choke"s + _s(cc) + u8" on mochi!"s));
            txt(lang(u8"「むがっ」"s, cnvtalk(u8"Mm-ghmm"s)));
        }
        ++cdata(263, cc);
    }
    return;
}
void label_2162()
{
    txtmore();
    txtef(2);
    if (cdata(22, cc) >= 12000)
    {
        txt(lang(
                u8"もう当分食べなくてもいい。"s,
                u8"Phew! You are pretty bloated."s),
            lang(
                u8"こんなに食べたことはない！"s,
                u8"You've never eaten this much before!"s),
            lang(
                u8"信じられないぐらい満腹だ！"s,
                u8"Your stomach is unbelievably full!"s));
        return;
    }
    if (cdata(22, cc) >= 10000)
    {
        txt(lang(u8"あなたは満足した。"s, u8"You are satisfied!"s),
            lang(u8"満腹だ！"s, u8"This hearty meal has filled your stomach."s),
            lang(u8"あなたは食欲を満たした。"s, u8"You really ate!"s),
            lang(
                u8"あなたは幸せそうに腹をさすった。"s,
                u8"You pat your stomach contentedly."s));
        return;
    }
    if (cdata(22, cc) >= 5000)
    {
        txt(lang(u8"まだ食べられるな…"s, u8"You can eat more."s),
            lang(u8"あなたは腹をさすった。"s, u8"You pat your stomach."s),
            lang(
                u8"少し食欲を満たした。"s,
                u8"You satisfied your appetite a little."s));
        return;
    }
    if (cdata(22, cc) >= 2000)
    {
        txt(lang(u8"まだまだ食べたりない。"s, u8"You are still a bit hungry."s),
            lang(u8"物足りない…"s, u8"Not enough..."s),
            lang(u8"まだ空腹だ。"s, u8"You want to eat more."s),
            lang(
                u8"少しは腹の足しになったか…"s,
                u8"Your stomach is still somewhat empty."s));
        return;
    }
    if (cdata(22, cc) >= 1000)
    {
        txt(lang(u8"全然食べたりない！"s, u8"No, it was not enough at all."s),
            lang(u8"腹の足しにもならない。"s, u8"You still feel very hungry."s),
            lang(u8"すぐにまた腹が鳴った。"s, u8"You aren't satisfied."s));
        return;
    }
    txt(lang(
            u8"こんな量では意味がない！"s,
            u8"It didn't help you from starving!"s),
        lang(
            u8"これぐらいでは、死を少し先に延ばしただけだ。"s,
            u8"It prolonged your death for seconds."s),
        lang(
            u8"無意味だ…もっと栄養をとらなければ。"s,
            u8"Empty! Your stomach is still empty!"s));
    return;
}
int label_2163()
{
    if (cdata(140, cc) == 0)
    {
        if (inv(3, ci) == 687)
        {
            if (inv(26, ci) != 0)
            {
                txt(lang(
                    u8"それは既に解読済みだ。"s,
                    u8"You already have decoded the book."s));
                stat = 0;
                return stat;
            }
        }
        if (cdata(253, cc) != 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    name(cc) + u8"は何も見えない。"s,
                    name(cc) + u8" can see nothing."s));
            }
            stat = 0;
            return stat;
        }
        cdata(140, cc) = 2;
        if (inv(3, ci) == 783)
        {
            p = 50;
        }
        else
        {
            if (inv(3, ci) == 687)
            {
                p = 50 + inv(25, ci) * 50 + inv(25, ci) * inv(25, ci) * 20;
            }
            else
            {
                p = sdataref(4, efid);
            }
        }
        cdata(141, cc) = p / (2 + sdata(150, 0)) + 1;
        cdata(142, cc) = ci;
        if (synccheck(cc, -1))
        {
            txt(lang(
                npcn(cc) + itemname(ci, 1) + u8"を読み始めた。"s,
                name(cc) + u8" start"s + _s(cc) + u8" to read "s
                    + itemname(ci, 1) + u8"."s));
        }
        item_separate(ci);
        stat = 0;
        return stat;
    }
    if (cdata(141, cc) > 0)
    {
        ci = cdata(142, cc);
        cibkread = ci;
        label_1458();
        if (inv(3, ci) == 783)
        {
            stat = 0;
            return stat;
        }
        if (inv(3, ci) == 687)
        {
            r2 = 50 + inv(25, ci) * 50 + inv(25, ci) * inv(25, ci) * 20;
            r3 = 0;
        }
        else
        {
            r2 = sdataref(4, efid);
            r3 = efid;
        }
        if (inv(17, ci) >= 1)
        {
            r2 = r2 * 100 / 120;
        }
        if (inv(17, ci) <= -1)
        {
            r2 = r2 * 150 / 100;
        }
        label_1513();
        ci = cibkread;
        if (stat == 0)
        {
            rowactend(cc);
            --inv(9, ci);
            if (inv(9, ci) < 0)
            {
                inv(9, ci) = 0;
            }
            if (inv(9, ci) == 0)
            {
                --inv(0, ci);
                if (ci >= 5080)
                {
                    cell_refresh(inv(5, ci), inv(6, ci));
                }
                else
                {
                    label_1521();
                }
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        itemname(ci, 1) + u8"は塵となって崩れ落ちた。"s,
                        itemname(ci, 1) + u8" falls apart."s));
                }
            }
        }
        stat = 0;
        return stat;
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            npcn(cc) + itemname(ci, 1) + u8"を読み終えた。"s,
            name(cc) + u8" "s + have(cc) + u8" finished reading the book."s));
    }
    if (inv(3, ci) == 783)
    {
        if (inv(25, ci) == 0)
        {
            rowactend(cc);
            stat = 1;
            return stat;
        }
        txt(lang(
            itemname(ci, 1) + u8"を覚えた！"s, u8"You learned the recipe!"s));
        ++recipememory(inv(23, ci));
        item_identify(ci, 1);
        removeitem(ci, 1);
        if (synccheck(cc, -1))
        {
            txt(lang(
                itemname(ci, 1) + u8"は塵となって崩れ落ちた。"s,
                itemname(ci, 1) + u8" falls apart."s));
        }
        rowactend(cc);
        stat = 1;
        return stat;
    }
    if (inv(3, ci) == 687)
    {
        item_identify(ci, 3);
        txt(lang(
            itemname(ci, 1) + u8"を解読した！"s,
            u8"You finished decoding "s + itemname(ci, 1) + u8"!"s));
        inv(26, ci) = 1;
        inv(9, ci) = 1;
        ibitmod(4, ci, 0);
        item_stack(0, ci, 1);
    }
    else
    {
        skillgain(
            cc,
            efid,
            1,
            (rnd(51) + 50) * (90 + sdata(165, cc) + (sdata(165, cc) > 0) * 20)
                    / limit((100 + spell((efid - 400)) / 2), 50, 1000)
                + 1);
        label_1471();
        if (itemmemory(2, inv(3, ci)) == 0)
        {
            itemmemory(2, inv(3, ci)) = 1;
        }
    }
    item_identify(ci, 1);
    if (inv(3, ci) != 687)
    {
        --inv(9, ci);
        if (inv(9, ci) < 0)
        {
            inv(9, ci) = 0;
        }
        if (inv(9, ci) == 0)
        {
            removeitem(ci, 1);
            if (synccheck(cc, -1))
            {
                txt(lang(
                    itemname(ci, 1) + u8"は塵となって崩れ落ちた。"s,
                    itemname(ci, 1) + u8" falls apart."s));
            }
        }
    }
    rowactend(cc);
    stat = 1;
    return stat;
}
int label_2164()
{
    if (cdata(253, cc) != 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は何も見えない。"s,
                name(cc) + u8" can see nothing."s));
        }
        stat = 0;
        return stat;
    }
    if (inv(3, ci) == 742)
    {
        snd(59);
        txt(lang(
            u8"すくつの探索を許可する、という内容の文面が形式的に書いてある。"s,
            u8"According to the card, you are permitted to explore the void now."s));
        stat = 1;
        return stat;
    }
    if (inv(3, ci) == 563)
    {
        label_2083();
        if (stat == 1)
        {
            stat = 1;
            return stat;
        }
        else
        {
            stat = 0;
            return stat;
        }
    }
    if (inv(3, ci) == 668)
    {
        snd(59);
        txt(lang(
            u8"レイチェルという作家による、心あたたまる童話集だ。"s,
            u8"It's a lovely fairy tale written by Rachel."s));
        stat = 1;
        return stat;
    }
    tc = cc;
    item_identify(ci, 1);
    label_2022();
    stat = 1;
    return stat;
}
int calcmagiccontrol(int prm_1076, int prm_1077)
{
    if (sdata(188, prm_1076) != 0)
    {
        if (cdata(9, prm_1076) >= 0 && cdata(9, prm_1077) >= 0
            || cdata(9, prm_1076) <= -1 && cdata(9, prm_1077) <= -1)
        {
            if (sdata(188, prm_1076) * 5 > rnd(dmg + 1))
            {
                dmg = 0;
            }
            else
            {
                dmg = rnd(dmg * 100 / (100 + sdata(188, prm_1076) * 10) + 1);
            }
            if (dmg < 1)
            {
                if (synccheck(prm_1077, -1))
                {
                    txt(lang(
                        name(prm_1077) + u8"は巻き込みを免れた。"s,
                        u8"The spell passes through "s + name(prm_1077)
                            + u8"."s));
                }
                skillexp(188, prm_1076, 8, 4);
                stat = 1;
                return stat;
            }
            skillexp(188, prm_1076, 30, 2);
        }
    }
    stat = 0;
    return stat;
}
int label_2167()
{
    spellbk = efid;
    ccbk = cc;
    label_2168();
    if (stat == 1)
    {
        cc = ccbk;
        r1 = cc;
        r2 = spellbk;
        label_1462();
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
int label_2168()
{
    efsource = 3;
    efstatus = 0;
    efp = calcspellpower(efid, cc);
    if (cc == 0)
    {
        if (calcspellcostmp(efid, cc) > cdata(55, cc))
        {
            txt(lang(
                u8"マナが足りないが、それでも詠唱を試みる？"s,
                u8"You are going to over-cast the spell. Are you sure?"s));
            promptl(0, 0) = stryes;
            promptl(1, 0) = u8"y"s;
            promptl(2, 0) = u8"0"s;
            promptl(0, 1) = strno;
            promptl(1, 1) = u8"n"s;
            promptl(2, 1) = u8"1"s;
            promptmax = 2;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 160;
            val(3) = 1;
            label_2131();
            if (rtval != 0)
            {
                label_1419();
                efsource = 0;
                stat = 0;
                return stat;
            }
        }
        screenupdate = -1;
        label_1419();
    }
    label_2175();
    if (stat == 0)
    {
        efsource = 0;
        stat = 0;
        return stat;
    }
    if (cc != 0)
    {
        if (sdataref(1, efid) == 7)
        {
            if (cdata(9, cc) == 10 || gdata(20) == 40)
            {
                efsource = 0;
                stat = 0;
                return stat;
            }
            if (gdata(4) % 10 > 4)
            {
                efsource = 0;
                stat = 0;
                return stat;
            }
        }
    }
    if (cc == 0 || cc != 0 && npccostmp == 1)
    {
        if (cc == 0)
        {
            spell(efid - 400) -= calcspellcoststock(efid, cc);
            if (spell(efid - 400) < 0)
            {
                spell(efid - 400) = 0;
            }
        }
        mp = calcspellcostmp(efid, cc);
        if (cc == 0)
        {
            if (cdata(61, 0) == 4)
            {
                mp = rnd(mp * 140 / 100 + 1) + 1;
            }
        }
        dmgmp(cc, mp);
        if (cdata(0, cc) != 1)
        {
            efsource = 0;
            stat = 1;
            return stat;
        }
    }
    if (cdata(254, cc) != 0 || cdata(256, cc) != 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は混乱しながらも魔法の詠唱を試みた。"s,
                name(cc) + u8" try"s + _s(cc)
                    + u8" to cast a spell in confusion."s));
            txtmore();
        }
        label_1513();
        if (stat == 0)
        {
            efsource = 0;
            stat = 1;
            return stat;
        }
    }
    else
    {
        if (synccheck(cc, -1))
        {
            if (cc == 0)
            {
                txt(lang(
                    name(cc) + u8"は"s + skillname(efid) + u8"の"s
                        + _cast(cdata(65, cc)),
                    name(cc) + u8" cast "s + skillname(efid) + u8"."s));
                txtmore();
            }
            else
            {
                txt(lang(
                    name(cc) + u8"は"s + _cast(cdata(65, cc)),
                    name(cc) + ""s + _cast(cdata(65, cc))));
                txtmore();
            }
        }
    }
    if (findbuff(cc, 2) != -1)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"沈黙の霧が詠唱を阻止した。"s,
                u8"The mist of silence interrupts a spell."s));
        }
        efsource = 0;
        stat = 1;
        return stat;
    }
    if (rnd(100) >= calcspellfail(efid, cc))
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は詠唱に失敗した。"s,
                name(cc) + u8" fail"s + _s(cc) + u8" to cast a spell."s));
            animeid = 8;
            label_1426();
        }
        efsource = 0;
        stat = 1;
        return stat;
    }
    if (noeffect == 1)
    {
        txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
        efsource = 0;
        stat = 1;
        return stat;
    }
    efp = calcspellpower(efid, cc);
    p = encfind(cc, 34);
    if (p != -1)
    {
        efp = efp * (100 + p / 10) / 100;
    }
    rapidmagic = 0;
    if (cbit(20, cc) && sdataref(1, efid) == 2)
    {
        rapidmagic = 1 + (rnd(3) != 0) + (rnd(2) != 0);
    }
    if (rapidmagic)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (rapidmagic); cnt < cnt_end; ++cnt)
            {
                label_2176();
                if (cdata(0, tc) != 1)
                {
                    label_2072();
                    if (stat == 0)
                    {
                        break;
                    }
                    else
                    {
                        tc = cdata(29, cc);
                        if (relationbetween(cc, tc) != -3)
                        {
                            break;
                        }
                    }
                }
            }
        }
        rapidmagic = 0;
    }
    else
    {
        label_2176();
    }
    stat = 1;
    return stat;
}
int label_2169()
{
    tc = cc;
    efsource = 4;
    if (potionspill || potionthrow)
    {
        if (potionthrow)
        {
            efp = efp * potionthrow / 100;
            efstatus = inv(17, ci);
        }
    }
    else
    {
        efstatus = inv(17, ci);
        if (synccheck(tc, -1))
        {
            snd(17);
            txt(lang(
                npcn(tc) + itemname(ci, 1) + u8"を飲み干した。"s,
                name(tc) + u8" drink"s + _s(tc) + u8" "s + itemname(ci, 1)
                    + u8"."s));
        }
    }
    label_2176();
    if (potionspill || potionthrow)
    {
        potionspill = 0;
        potionthrow = 0;
    }
    else
    {
        if (obvious == 1)
        {
            if (tc == 0)
            {
                item_identify(ci, 1);
            }
        }
        --inv(0, ci);
        if (ci >= 5080)
        {
            cell_refresh(inv(5, ci), inv(6, ci));
        }
        else
        {
            if (tc == 0)
            {
                label_1521();
            }
        }
    }
    cdata(22, tc) += 150;
    if (tc < 16)
    {
        if (cdata(22, tc) > 12000)
        {
            if (rnd(5) == 0)
            {
                chara_vomit(tc);
            }
        }
    }
    stat = 1;
    return stat;
}
int label_2170()
{
    if (inv(25, ci) < -5 || inv(27, ci) >= 20
        || inv(3, ci) == 602 && gdata(260) <= 0)
    {
        valn = itemname(ci);
        txt(lang(valn + u8"は涸れている。"s, valn + u8" is dry."s));
        stat = 1;
        return stat;
    }
    snd(17);
    valn = itemname(ci);
    txt(lang(
        name(cc) + u8"は"s + valn + u8"の水をすくって飲んだ。"s,
        name(cc) + u8" draw"s + _s(cc) + u8" water from "s + valn + u8"."s));
    txtmore();
    tc = cc;
    cibk = ci;
    p = rnd(100);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (cc != 0)
            {
                if (rnd(15) == 0)
                {
                    txt(lang(
                        name(cc) + u8"は井戸に落ちた！ "s,
                        name(cc) + u8" falls in the well!"s));
                    txtmore();
                    txtef(9);
                    txt(name(cc)
                        + lang(
                              u8"「手を伸ばせー」"s,
                              (u8" yells, "s
                               + cnvtalk(u8"G-Give me your hands!"s))));
                    if (cbit(5, cc) == 1 && cdata(262, cc) == 0)
                    {
                        txtmore();
                        txt(lang(
                            u8"しかしすぐに浮いてきた… "s,
                            u8"Soon "s + he(cc)
                                + u8" floats up to the surface."s));
                    }
                    else
                    {
                        dmghp(cc, 9999, -1);
                    }
                    break;
                }
            }
            if (inv(3, ci) == 602)
            {
                if (rnd(2) == 0)
                {
                    efid = 1113;
                    label_2176();
                    break;
                }
            }
            if (p > 70)
            {
                p = rnd(5);
                if (p == 0)
                {
                    efid = 1112;
                    efp = 100;
                    label_2176();
                    break;
                }
                if (p == 1)
                {
                    efid = 1110;
                    efp = 100;
                    label_2176();
                    break;
                }
                if (p == 2)
                {
                    efid = 1111;
                    efp = 100;
                    label_2176();
                    break;
                }
                if (p == 3)
                {
                    efid = 1109;
                    efp = 100;
                    label_2176();
                    break;
                }
                if (p == 4)
                {
                    efid = 1108;
                    efp = 100;
                    label_2176();
                    break;
                }
            }
            if (p > 55)
            {
                flt();
                itemcreate(-1, 54, cdata(1, cc), cdata(2, cc), 0);
                inv(0, ci) = rnd(sdata(159, cc) / 2 * 50 + 100) + 1;
                txt(lang(
                    name(cc) + u8"は水の中に金貨を見つけた。"s,
                    name(cc) + u8" find"s + _s(cc)
                        + u8" some gold pieces in water."s));
                break;
            }
            if (p > 45)
            {
                p = rnd(8) + 10;
                if (rnd(5) > 2)
                {
                    skillmod(p, cc, 1000);
                }
                else
                {
                    skillmod(p, cc, -1000);
                }
                break;
            }
            if (p > 40)
            {
                if (cdata(38, cc) < 5)
                {
                    break;
                }
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        ""s + name(cc) + u8"は何かいけないものを飲み込んだ。"s,
                        name(cc) + u8" swallow"s + _s(cc)
                            + u8" something bad."s));
                }
                tc = cc;
                label_1617();
                break;
            }
            if (p > 35)
            {
                txt(lang(
                    u8"井戸から何かが出てきた！"s,
                    u8"Something comes out from the well!"s));
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (1 + rnd(3)); cnt < cnt_end; ++cnt)
                    {
                        flt(calcobjlv(cdata(38, cc) * 3 / 2 + 3), calcfixlv(2));
                        characreate(-1, 0, cdata(1, cc), cdata(2, cc));
                    }
                }
                break;
            }
            if (p > 33)
            {
                efid = 1113;
                label_2176();
                break;
            }
            if (p > 20)
            {
                efid = 454;
                label_2176();
                break;
            }
            if (p == 0)
            {
                if (rnd(gdata(95) + 1))
                {
                    txtef(5);
                    txt(lang(
                        u8"ものすごい幸運が訪れた…ような気がしたが気のせいだった。"s,
                        u8"You feel as a stroke of good fortune passed by."s));
                    break;
                }
                ++gdata(95);
                efid = 441;
                label_2176();
                break;
            }
            if (cc == 0)
            {
                txt(lang(
                    u8"この水は清涼だ。"s,
                    u8"Phew, fresh water tastes good."s));
            }
        }
    }
    ci = cibk;
    if (cc != 0)
    {
        cdata(22, cc) += 4000;
    }
    else
    {
        cdata(22, cc) += 500;
    }
    if (inv(3, ci) == 602)
    {
        --gdata(260);
    }
    else
    {
        inv(25, ci) -= rnd(3);
        inv(27, ci) += rnd(3);
        if (inv(27, ci) >= 20)
        {
            txt(lang(
                itemname(ci) + u8"は完全に干上がった。"s,
                itemname(ci) + u8" has completely dried up."s));
            stat = 1;
            return stat;
        }
    }
    if (inv(25, ci) < -5)
    {
        txt(lang(
            itemname(ci) + u8"は干上がった。"s,
            itemname(ci) + u8" has dried up."s));
    }
    stat = 1;
    return stat;
}
int label_2171()
{
    tc = cc;
    tlocx = cdata(1, cc);
    tlocy = cdata(2, cc);
    efstatus = inv(17, ci);
    efsource = 2;
    if (cdata(253, cc) != 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は何も見えない。"s,
                name(cc) + u8" can see nothing."s));
        }
        efsource = 0;
        stat = 0;
        return stat;
    }
    if (cdata(256, cc) != 0 || cdata(254, cc) != 0)
    {
        if (rnd(4) != 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    name(cc) + u8"はふらふらした。"s,
                    name(cc) + u8" stagger"s + _s(cc) + u8"."s));
            }
            efsource = 0;
            stat = 0;
            return stat;
        }
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            npcn(cc) + itemname(ci, 1) + u8"を読んだ。"s,
            name(cc) + u8" read"s + _s(cc) + u8" "s + itemname(ci, 1)
                + u8"."s));
        txtmore();
    }
    if (inv(3, ci) != 621)
    {
        --inv(0, ci);
        if (ci >= 5080)
        {
            cell_refresh(inv(5, ci), inv(6, ci));
        }
        else
        {
            label_1521();
        }
        skillexp(150, cc, 25, 2);
    }
    label_2176();
    if (cc == 0)
    {
        if (obvious == 1)
        {
            item_identify(ci, 1);
        }
    }
    stat = 1;
    return stat;
}
int label_2172()
{
    if (inv(9, ci) <= 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                itemname(ci, 1) + u8"を振った。"s,
                u8"You zap "s + itemname(ci, 1) + u8"."s));
            txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
        }
        stat = 0;
        return stat;
    }
    efstatus = inv(17, ci);
    if (efstatus >= 1)
    {
        efstatus = 0;
    }
    efsource = 1;
    label_2175();
    if (stat == 0)
    {
        efsource = 0;
        stat = 0;
        return stat;
    }
    if (efid >= 400 && efid < 467)
    {
        if (stat == 0 && sdataref(3, efid) / 1000 * 1000 == 2000
            || noeffect == 1)
        {
            if (synccheck(cc, -1))
            {
                redraw(0);
                txt(lang(
                    itemname(ci, 1) + u8"を振った。"s,
                    u8"You zap "s + itemname(ci, 1) + u8"."s));
                txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
            }
            goto label_2173_internal;
        }
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            itemname(ci, 1) + u8"を振った。"s,
            u8"You zap "s + itemname(ci, 1) + u8"."s));
        txtmore();
    }
    efp = efp
        * (100 + sdata(174, cc) * 10 + sdata(16, cc) / 2 + sdata(13, cc) / 2)
        / 100;
    if (efid >= 400 && efid < 467)
    {
        f = 0;
        r1 = sdata(174, cc) * 20 + 100;
        if (inv(17, ci) >= 1)
        {
            r1 = r1 * 125 / 100;
        }
        if (inv(17, ci) <= -1)
        {
            r1 = r1 * 50 / 100;
        }
        else
        {
            if (rnd(2))
            {
                f = 1;
            }
        }
        if (rnd((sdataref(4, efid) + 1)) / 2 <= r1)
        {
            f = 1;
        }
    }
    else
    {
        f = 1;
    }
    if (rnd(30) == 0)
    {
        f = 0;
    }
    if (f == 1 || inv(3, ci) == 290 || cc != 0)
    {
        label_2176();
        if (cc == 0)
        {
            if (obvious == 1)
            {
                item_identify(ci, 1);
            }
        }
        label_1469();
    }
    else
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は杖をうまく使えなかった。"s,
                name(cc) + u8" fail to use the power of the rod."s));
        }
    }
label_2173_internal:
    efsource = 0;
    if (inv(0, ci) == 0)
    {
        if (ci >= 5080)
        {
            cell_refresh(inv(5, ci), inv(6, ci));
            stat = 1;
            return stat;
        }
    }
    item_separate(ci);
    --inv(9, ci);
    stat = 1;
    return stat;
}
int label_2174()
{
    if (efid == 646)
    {
        if (cbit(973, tc) == 1)
        {
            if (cdata(9, cc) == -3)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (57); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) == 1)
                        {
                            if (cdata(9, cnt) == 10)
                            {
                                cdata(29, cc) = cnt;
                                break;
                            }
                        }
                    }
                }
            }
            stat = 0;
            return stat;
        }
    }
    label_2175();
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    if (sdataref(3, efid) / 1000 * 1000 != 3000
        && sdataref(3, efid) / 1000 * 1000 != 10000)
    {
        if (cdata(254, cc) != 0 || cdata(253, cc) != 0)
        {
            if (rnd(5) == 0)
            {
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        name(cc) + u8"は頭を振った。"s,
                        name(cc) + u8" shake"s + _s(cc) + u8" "s + his(cc)
                            + u8" head."s));
                }
                stat = 1;
                return stat;
            }
        }
    }
    if (efid >= 600)
    {
        if (cc == 0)
        {
            if (cdata(52, 0) < 50)
            {
                if (cdata(52, 0) < rnd(75))
                {
                    txt(lang(
                        u8"疲労し過ぎて失敗した！"s,
                        u8"You are too exhausted!"s));
                    dmgsp(0, sdataref(2, efid) / 2 + 1);
                    stat = 1;
                    return stat;
                }
            }
            dmgsp(
                0, rnd(sdataref(2, efid) / 2 + 1) + sdataref(2, efid) / 2 + 1);
            skillexp(sdataref(0, efid), cc, 25);
        }
    }
    efp = calcspellpower(efid, cc);
    if (noeffect == 1)
    {
        if (efid != 300)
        {
            txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
            stat = 1;
            return stat;
        }
    }
    label_2176();
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
int label_2175()
{
    noeffect = 0;
    if (efid > 661)
    {
        tc = cc;
        stat = 1;
        return stat;
    }
    tg = sdataref(3, efid) / 1000 * 1000;
    if (efsource == 1)
    {
        if (tg == 3000)
        {
            tg = 8000;
        }
    }
    if (sdataref(1, efid) == 7)
    {
        if (cc == 0)
        {
            tc = 0;
            stat = 1;
            return stat;
        }
    }
    if (tg == 8000)
    {
        if (cc == 0)
        {
            tc = 0;
            txt(lang(u8"どの方向？"s, u8"Which direction?"s));
            label_1419();
            label_2127();
            if (stat == 0)
            {
                stat = 0;
                return stat;
            }
            if (map(tlocx, tlocy, 1) == 0)
            {
                noeffect = 1;
                obvious = 0;
                stat = 1;
                return stat;
            }
            tc = map(tlocx, tlocy, 1) - 1;
        }
        else
        {
            if (dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc))
                > sdataref(3, efid) % 1000 + 1)
            {
                stat = 0;
                return stat;
            }
            tlocx = cdata(1, tc);
            tlocy = cdata(2, tc);
        }
        stat = 1;
        return stat;
    }
    if (tg == 7000 || tg == 9000 && tgloc == 1 && cc == 0)
    {
        if (cc == 0)
        {
            if (tg == 9000)
            {
                if (fov_los(cdata(1, cc), cdata(2, cc), tglocx, tglocy) == 0)
                {
                    if (stat == 0)
                    {
                        txt(lang(
                            u8"その場所は見えない。"s,
                            u8"You can't see the location."s));
                        label_1419();
                    }
                    obvious = 0;
                    stat = 0;
                    return stat;
                }
                tlocx = tglocx;
                tlocy = tglocy;
            }
            else
            {
                label_1947();
                if (stat != 1)
                {
                    if (stat == 0)
                    {
                        txt(lang(
                            u8"その場所は見えない。"s,
                            u8"You can't see the location."s));
                        label_1419();
                    }
                    obvious = 0;
                    stat = 0;
                    return stat;
                }
            }
        }
        else
        {
            if (fov_los(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc))
                == 0)
            {
                stat = 0;
                return stat;
            }
            tlocx = cdata(1, tc);
            tlocy = cdata(2, tc);
        }
        stat = 1;
        return stat;
    }
    if (tg == 3000 || tg == 10000)
    {
        if (cc != 0)
        {
            if (sdataref(1, efid) == 3)
            {
                if (dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc))
                    > sdataref(3, efid) % 1000 + 1)
                {
                    stat = 0;
                    return stat;
                }
                if (fov_los(
                        cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc))
                    == 0)
                {
                    stat = 0;
                    return stat;
                }
            }
        }
        tc = cc;
        tlocx = cdata(1, cc);
        tlocy = cdata(2, cc);
        stat = 1;
        return stat;
    }
    if (tg == 2000 || tg == 6000 || tg == 9000)
    {
        if (cc == 0)
        {
            label_2072();
            if (stat == 0)
            {
                obvious = 0;
                stat = 0;
                return stat;
            }
            tc = cdata(29, 0);
            if (cdata(9, tc) >= 0)
            {
                label_2073();
                if (stat == 0)
                {
                    obvious = 0;
                    stat = 0;
                    return stat;
                }
            }
        }
        if (dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc))
            > sdataref(3, efid) % 1000 + 1)
        {
            if (cc == 0)
            {
                ++msgdup;
                txt(lang(u8"射程距離外だ。"s, u8"It's out of range."s));
                label_1419();
            }
            stat = 0;
            return stat;
        }
        if (fov_los(cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc))
            == 0)
        {
            stat = 0;
            return stat;
        }
        tlocx = cdata(1, tc);
        tlocy = cdata(2, tc);
        stat = 1;
        return stat;
    }
    if (tg == 5000)
    {
        if (cc == 0)
        {
            if (efsource == 3)
            {
                txt(lang(
                    u8"どの方向に唱える？ "s,
                    u8"Which direction do you want to cast the spell? "s));
            }
            else
            {
                txt(lang(
                    u8"どの方向に振る？ "s,
                    u8"Which direction do you want to zap the wand? "s));
            }
            label_1419();
            val = 0;
            label_2127();
            if (stat == 0)
            {
                txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
                obvious = 0;
                stat = 0;
                return stat;
            }
        }
    }
    stat = 1;
    return stat;
}
void label_2187()
{
    subloop = 1;
    if (gdata(183) != 0)
    {
        if (tc == gdata(183) || tc == 0)
        {
            subloop = 2;
            if (tc == gdata(183))
            {
                tc(1) = 0;
            }
            else
            {
                tc(1) = gdata(183);
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (subloop); cnt < cnt_end; ++cnt)
        {
            healhp(tc(cnt), role(dice1, dice2, bonus));
            healcon(tc(cnt), 6);
            healcon(tc(cnt), 1, 50);
            healcon(tc(cnt), 5, 50);
            healcon(tc(cnt), 7, 30);
            healcon(tc(cnt), 9, 20);
            healsan(tc(cnt), 1);
        }
    }
    return;
}
void label_2188()
{
    cdata(250, tc) = 0;
    cdata(251, tc) = 0;
    cdata(254, tc) = 0;
    cdata(253, tc) = 0;
    cdata(252, tc) = 0;
    cdata(263, tc) = 0;
    cdata(256, tc) = 0;
    cdata(257, tc) = 0;
    cdata(258, tc) = 0;
    gdata(90) = 0;
    cdata(50, tc) = cdata(51, tc);
    cdata(55, tc) = cdata(56, tc);
    cdata(52, tc) = cdata(53, tc);
    return;
}
void label_2189()
{
    if (synccheck(cc, -1))
    {
        txt(lang(
            name(cc) + u8"は"s + itemname(ci, 1) + u8"を投げた。"s,
            name(cc) + u8" throw"s + _s(cc) + u8" "s + itemname(ci, 1)
                + u8"."s));
    }
    if (dist(cdata(1, cc), cdata(2, cc), tlocx, tlocy) * 4
            > rnd(sdata(111, cc) + 10) + sdata(111, cc) / 4
        || rnd(10) == 0)
    {
        x = tlocx + rnd(2) - rnd(2);
        y = tlocy + rnd(2) - rnd(2);
        if (x >= 0)
        {
            if (y >= 0)
            {
                if (x < mdata(0))
                {
                    if (y < mdata(1))
                    {
                        if ((chipm(7, map(x, y, 0)) && 4) == 0)
                        {
                            tlocx = x;
                            tlocy = y;
                        }
                    }
                }
            }
        }
    }
    animeid = 15;
    aniref(0) = inv(2, ci);
    aniref(1) = inv(22, ci);
    anix = tlocx;
    aniy = tlocy;
    label_1426();
    ti = inv_getfreeid(-1);
    removeitem(ci, 1);
    if (inv(3, ci) == 685)
    {
        if (ti != -1)
        {
            item_copy(ci, ti);
            inv(0, ti) = 1;
            inv(5, ti) = tlocx;
            inv(6, ti) = tlocy;
            ci = ti;
        }
    }
    if (cc == 0)
    {
        label_1521();
    }
    animeid = 14;
    x = tlocx;
    y = tlocy;
    label_1426();
    if (inv(3, ci) == 685 || inv(3, ci) == 699)
    {
        snd(91);
        cell_refresh(inv(5, ci), inv(6, ci));
        if (map(tlocx, tlocy, 1) != 0)
        {
            tc = map(tlocx, tlocy, 1) - 1;
            txtmore();
            txt(lang(
                name(tc) + u8"に見事に命中した！"s,
                u8"It hits "s + name(tc) + u8"!"s));
            if (inv(3, ci) == 685)
            {
                if (tc < 57 || cdata(150, tc) != 0 || cdata(25, tc) == 6
                    || cbit(976, tc) == 1)
                {
                    txt(lang(
                        u8"その生物には無効だ。"s,
                        u8"The creature can't be captured."s));
                    label_2742();
                    return;
                }
                if (cdata(38, tc) > inv(26, ci))
                {
                    txt(lang(
                        u8"その生物を捕獲するには、より高レベルのモンスターボールが必要だ。"s,
                        u8"Power level of the ball is not enough to capture the creature."s));
                    label_2742();
                    return;
                }
                if (cdata(50, tc) > cdata(51, tc) / 10)
                {
                    txt(lang(
                        u8"捕獲するためにはもっと弱らせる必要がある。"s,
                        u8"You need to weaken the creature to capture it."s));
                    label_2742();
                    return;
                }
                txtef(2);
                txt(lang(
                    name(tc) + u8"をモンスターボールに捕獲した。"s,
                    u8"You capture "s + name(tc) + u8"."s));
                animeload(8, tc);
                inv(23, ci) = cdata(27, tc);
                inv(27, ci) = cdata(38, tc);
                inv(7, ci) = limit(cdata(20, tc), 10000, 100000);
                inv(1, ci) = 1000;
            }
            else
            {
                if (cdata(27, tc) != 319 || tc < 16)
                {
                    txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
                    label_2742();
                    return;
                }
                if (gdata(20) == 6 || gdata(20) == 40 || gdata(20) == 35)
                {
                    txt(lang(
                        u8"この場所では効果がない。"s,
                        u8"This doesn't work in this area."s));
                    label_2742();
                    return;
                }
                rc = tc;
                label_2659();
            }
            chara_vanquish(tc);
            check_quest();
        }
        label_2742();
        return;
    }
    if (refitem(inv(3, ci), 5) == 52000 || inv(3, ci) == 772)
    {
        if (inv(3, ci) != 601)
        {
            if (synccheck(tlocx, tlocy))
            {
                if (inv(3, ci) == 587)
                {
                    snd(86);
                }
                else
                {
                    snd(47);
                }
            }
            if (map(tlocx, tlocy, 1) != 0)
            {
                tc = map(tlocx, tlocy, 1) - 1;
                if (synccheck(tc, -1))
                {
                    txt(lang(
                        name(tc) + u8"に見事に命中した！"s,
                        u8"It hits "s + name(tc) + u8"!"s));
                    wet(tc, 25);
                }
                rowact_check(tc);
                if (inv(3, ci) == 587)
                {
                    if (synccheck(tc, -1))
                    {
                        if (tc != 0)
                        {
                            txtef(9);
                            txtmore();
                            txt(lang(u8"「いてー！」"s, cnvtalk(u8"Hey!"s)),
                                lang(
                                    u8"「やったな」"s,
                                    cnvtalk(u8"Now you did it."s)),
                                lang(u8" *クスクス* "s, u8"*chuckle*"s),
                                lang(
                                    u8"「キャハハ」"s,
                                    cnvtalk(u8"Tee-hee-hee!"s)),
                                lang(
                                    u8"「こやつめ」"s,
                                    cnvtalk(u8"You'll pay for this."s)),
                                lang(u8"「むむっ」"s, u8"*grin*"s));
                        }
                    }
                    label_2742();
                    return;
                }
                if (inv(3, ci) == 772)
                {
                    if (synccheck(tc, -1))
                    {
                        txtef(4);
                        txt(lang(u8" *ぷちゅ* "s, u8"*crumble*"s));
                    }
                    if (inv(27, ci) == -1)
                    {
                        if (synccheck(tc, -1))
                        {
                            txtef(4);
                            txt(lang(
                                name(tc) + u8"は怒りに体を奮わせた！"s,
                                name(tc) + u8" "s + is(tc)
                                    + u8" engulfed in fury!"s));
                        }
                        cdata(264, tc) += rnd(10) + 5;
                    }
                    label_2742();
                    return;
                }
                if (tc >= 16)
                {
                    hostileaction(cc, tc);
                }
                ccthrowpotion = cc;
                potionthrow = 100;
                cc = tc;
                dbmode = 15;
                dbid = inv(3, ci);
                label_0481();
                cc = ccthrowpotion;
                label_2742();
                return;
            }
            if (inv(3, ci) == 587)
            {
                if (map(tlocx, tlocy, 4) != 0)
                {
                    cell_itemlist(tlocx, tlocy);
                    f = 0;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (listmax); cnt < cnt_end;
                             ++cnt)
                        {
                            p = list(0, cnt);
                            if (inv(3, p) == 541)
                            {
                                if (synccheck(tlocx, tlocy))
                                {
                                    txtmore();
                                    txt(lang(
                                        itemname(p, 1)
                                            + u8"に命中して、雪だるまは崩れた。"s,
                                        u8"It hits "s + itemname(p, 1)
                                            + u8" and breaks it."s));
                                }
                                --inv(0, p);
                                f = 1;
                                break;
                            }
                        }
                    }
                    if (f == 1)
                    {
                        cell_refresh(tlocx, tlocy);
                        label_2742();
                        return;
                    }
                }
            }
            if (inv(3, ci) == 587)
            {
                if (chipm(0, map(tlocx, tlocy, 0)) == 4)
                {
                    label_2742();
                    return;
                }
                if (synccheck(tlocx, tlocy))
                {
                    txtmore();
                    txt(lang(
                        u8"それは地面に落ちて溶けた。"s,
                        u8"It falls on the ground and melts."s));
                }
            }
            else
            {
                if (synccheck(tlocx, tlocy))
                {
                    txtmore();
                    txt(lang(
                        u8"それは地面に落ちて砕けた。"s,
                        u8"It falls on the ground and shatters."s));
                }
            }
            if (inv(3, ci) == 772)
            {
                if (synccheck(tlocx, tlocy))
                {
                    txtef(4);
                    txt(lang(u8" *ぷちゅ* "s, u8"*crumble*"s));
                }
                label_2742();
                return;
            }
            efp = 50 + sdata(111, cc) * 10;
            if (inv(3, ci) == 392)
            {
                addmef(tlocx, tlocy, 3, 19, rnd(15) + 5, efp, cc);
                label_2742();
                return;
            }
            if (inv(3, ci) == 577)
            {
                addmef(tlocx, tlocy, 5, 24, rnd(15) + 25, efp, cc);
                mapitem_fire(tlocx, tlocy);
                label_2742();
                return;
            }
            addmef(
                tlocx,
                tlocy,
                6,
                27,
                -1,
                efp,
                cc,
                inv(3, ci),
                inv(17, ci),
                inv(22, ci));
            label_2742();
            return;
        }
    }
    if (synccheck(tlocx, tlocy))
    {
        txt(lang(
            u8"それは地面に落ちて砕けた。"s,
            u8"It falls on the ground and shatters."s));
        snd(47);
    }
    if (inv(3, ci) == 578)
    {
        flt();
        itemcreate(-1, 54, tlocx, tlocy, inv(25, ci));
    }
    label_2742();
    return;
}
void label_2190()
{
    item_find(60002);
    if (stat != -1)
    {
        ci = stat;
        if (inv(25, ci) != cdata(61, 0))
        {
            label_1886();
            label_2742();
            return;
        }
    }
    label_1890();
    return;
}
void label_2191()
{
    item_exchange(ci, ti);
    return;
}
int label_2192()
{
    if (cc != -1)
    {
        if (inv(3, ci) == 54 || inv(3, ci) == 55)
        {
            snd(11);
            ti = ci;
            in = inv(0, ci);
            inv(0, ci) = 0;
            msgkeep = 1;
            txt(lang(
                name(cc) + u8"は"s + itemname(ti, in) + u8"を拾った。"s,
                name(cc) + u8" pick"s + _s(cc) + u8" up "s + itemname(ti, in)
                    + u8"."s));
            cell_refresh(inv(5, ci), inv(6, ci));
            if (inv(3, ci) == 54)
            {
                cdata(30, cc) += in;
            }
            else
            {
                cdata(31, cc) += in;
            }
            stat = 1;
            return stat;
        }
    }
    if (cc == 0)
    {
        if (gdata(183) != 0)
        {
            if (cdata(140, gdata(183)) != 0)
            {
                if (cdata(142, gdata(183)) == ci)
                {
                    txt(lang(
                        u8"それは"s + name(gdata(183)) + u8"が使用中だ。"s,
                        name(gdata(183)) + u8" "s + is(gdata(183))
                            + u8" using it."s));
                    stat = 1;
                    return stat;
                }
            }
        }
        if (refitem(inv(3, ci), 5) == 57000)
        {
            if (inv(21, ci) == 4)
            {
                if (cdata(140, 0) == 0)
                {
                    if (inv_getspace(0) == 0)
                    {
                        txt(lang(
                            u8"バックパックが一杯だ。"s,
                            u8"Your inventory is full."s));
                        stat = 0;
                        return stat;
                    }
                    gdata(91) = 103;
                    label_2148();
                    stat = -1;
                    return stat;
                }
            }
        }
        if (inv(21, ci) == 3)
        {
            txt(lang(
                itemname(ci) + u8"を撤去する？ "s,
                u8"Do you want to remove "s + itemname(ci) + u8"? "s));
            promptl(0, 0) = stryes;
            promptl(1, 0) = u8"y"s;
            promptl(2, 0) = u8"0"s;
            promptl(0, 1) = strno;
            promptl(1, 1) = u8"n"s;
            promptl(2, 1) = u8"1"s;
            promptmax = 2;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 160;
            val(3) = 1;
            label_2131();
            if (rtval == 0)
            {
                snd(58);
                if (inv(3, ci) == 555)
                {
                    midbk = mid;
                    mid = ""s + 30 + u8"_"s + (100 + inv(9, ci));
                    exist(exedir + u8"tmp\\mdata_"s + mid + u8".s2"s);
                    if (strsize != -1)
                    {
                        fmode = 11;
                        label_2107();
                    }
                    mid = midbk;
                    inv(9, ci) = 0;
                    inv(21, ci) = 0;
                }
            }
            else
            {
                stat = 0;
                return stat;
            }
        }
        if (inv_getfreeid(cc) == -1)
        {
            txt(lang(
                u8"バックパックには、もうアイテムを入れる余裕がない。"s,
                u8"Your inventory is full."s));
            stat = 0;
            return stat;
        }
    }
    inumbk = inv(0, ci) - in;
    inv(0, ci) = in;
    if (cc == 0)
    {
        if (trait(215) != 0)
        {
            if (refitem(inv(3, ci), 5) == 56000)
            {
                if (inv(9, ci) > 0)
                {
                    dbmode = 14;
                    dbid = inv(3, ci);
                    label_0481();
                    txt(lang(
                        u8"あなたは"s + itemname(ci)
                            + u8"から魔力を吸い取った。"s,
                        u8"You absorb magic from "s + itemname(ci) + u8"."s));
                    if (efid >= 400 && efid < 467)
                    {
                        spell(efid - 400) += inv(9, ci) * 5 * inv(0, ci);
                    }
                    else
                    {
                        healmp(0, inv(9, ci) * 5 * inv(0, ci));
                    }
                    inv(9, ci) = 0;
                }
            }
        }
        if (trait(216) != 0)
        {
            if (refitem(inv(3, ci), 5) == 52000)
            {
                if (inv(3, ci) != 262 && inv(3, ci) != 559)
                {
                    if (rnd(5) == 0)
                    {
                        txt(lang(
                            u8"あなたの手から毒が滴った。"s,
                            u8"Poison drips from your hands."s));
                        inv(3, ci) = 262;
                    }
                }
            }
        }
    }
    if (inv(21, ci) < 0)
    {
        inv(21, ci) = 0;
    }
    ibitmod(12, ci, 0);
    item_stack(cc, ci);
    if (stat == 0)
    {
        ti = inv_getfreeid(cc);
        if (ti == -1)
        {
            inv(0, ci) = inumbk + in;
            if (invctrl == 12)
            {
                txt(lang(
                    u8"店の倉庫が一杯のため売れない。"s,
                    u8"Shopkeeper's inventory is full."s));
            }
            else
            {
                txt(lang(
                    u8"バックパックには、もうアイテムを入れる余裕がない。"s,
                    u8"Your inventory is full."s));
            }
            stat = 0;
            return stat;
        }
        item_copy(ci, ti);
        inv(0, ti) = in;
    }
    inv(0, ci) = inumbk;
    if (mode == 6)
    {
        if (refitem(inv(3, ti), 5) == 57000)
        {
            if (invctrl == 11 || invctrl == 22)
            {
                if (invctrl == 22 && invctrl(1) == 3)
                {
                    if (inv(27, ti) > 0)
                    {
                        inv(27, ti) += gdata(13) + gdata(12) * 24
                            + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12;
                    }
                }
                else
                {
                    if (inv(27, ti) != 0)
                    {
                        inv(27, ti) = gdata(13) + gdata(12) * 24
                            + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12
                            + refitem(inv(3, ti), 19);
                        if (inv(26, ti) != 0)
                        {
                            inv(27, ti) += 72;
                        }
                    }
                }
            }
            if (invctrl == 24 && invctrl(1) == 3)
            {
                if (inv(27, ti) > 0)
                {
                    inv(27, ti) = inv(27, ti)
                        - (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                           + gdata(10) * 24 * 30 * 12);
                }
            }
        }
        if (invctrl == 11)
        {
            msgkeep = 1;
            txtmore();
            txt(lang(
                itemname(ti, in) + u8"を買った。"s,
                u8"You buy "s + itemname(ti, in) + u8"."s));
            sellgold = calcitemvalue(ti, 0) * in;
            snd(12);
            cdata(30, 0) -= sellgold;
            cdata(30, tc) += sellgold;
            if (refitem(inv(3, ti), 5) == 92000)
            {
                inv(26, ti) = calcitemvalue(ti, 0);
            }
        }
        if (invctrl == 12)
        {
            msgkeep = 1;
            sellgold = calcitemvalue(ci, 1) * in;
            if (ibit(9, ti) == 0)
            {
                txt(lang(
                    itemname(ti, in) + u8"を売った。"s,
                    u8"You sell "s + itemname(ti, in) + u8"."s));
            }
            else
            {
                ibitmod(9, ti, 0);
                txt(lang(
                    u8"盗品の"s + itemname(ti, in) + u8"を売却した。"s,
                    u8"You sell "s + itemname(ti, in)
                        + u8".(Stolen item sold) "s));
                if (gdata(269) > 0)
                {
                    gdata(269) -= sellgold;
                    if (gdata(269) < 0)
                    {
                        gdata(269) = 0;
                    }
                    txtmore();
                    txt(lang(
                        u8"盗賊ギルドのノルマ達成まで、あと金貨"s + gdata(269)
                            + u8"枚相当の盗品を売却する必要がある。"s,
                        u8"You still need to sell stuff worth "s + gdata(269)
                            + u8" gold pieces in order to advance ranks in the Thieves Guild."s));
                }
            }
            snd(11);
            cdata(30, 0) += sellgold;
            cdata(30, tc) -= sellgold;
            if (cdata(30, tc) < 0)
            {
                cdata(30, tc) = 0;
            }
            inv(8, ti) = 3;
        }
        if (invctrl == 22 || invctrl == 24)
        {
            snd(14 + rnd(2));
            msgkeep = 1;
            if (invctrl == 22)
            {
                txt(lang(
                    name(cc) + u8"は"s + itemname(ti, in) + u8"を拾った。"s,
                    name(cc) + u8" pick"s + _s(cc) + u8" up "s
                        + itemname(ti, in) + u8"."s));
            }
            else
            {
                txt(lang(
                    itemname(ti, in) + u8"を保管した。"s,
                    u8"You put "s + itemname(ti, in)
                        + u8" in the container."s));
            }
        }
        else
        {
            r1 = 0;
            r2 = sellgold;
            label_1459();
        }
    }
    else
    {
        cell_refresh(inv(5, ci), inv(6, ci));
        map(inv(5, ci), inv(6, ci), 5) = map(inv(5, ci), inv(6, ci), 4);
        snd(14 + rnd(2));
        msgkeep = 1;
        txt(lang(
            name(cc) + u8"は"s + itemname(ti, in) + u8"を拾った。"s,
            name(cc) + u8" pick"s + _s(cc) + u8" up "s + itemname(ti, in)
                + u8"."s));
    }
    if (cc == 0)
    {
        if (inv(3, ti) == 255)
        {
            inv_getheader(-1);
            if (mdata(20) == 1)
            {
                f = 0;
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) == 0)
                        {
                            continue;
                        }
                        if (inv(3, cnt) == 255)
                        {
                            f = 1;
                            break;
                        }
                    }
                }
                if (f == 0)
                {
                    mdata(20) = 0;
                    label_0068();
                }
            }
        }
        convertartifact(ti);
        ti = stat;
        if (adata(16, gdata(20)) == 101)
        {
            if (mode == 0)
            {
                label_1728();
            }
        }
        if (gdata(20) == 7)
        {
            if (mode == 0)
            {
                label_1730();
            }
        }
        label_1521();
    }
    if (cc == -1)
    {
        label_1521();
    }
    stat = 1;
    return stat;
}
int label_2193()
{
    inumbk = inv(0, ci) - in;
    inv(0, ci) = in;
    inv(5, ci) = cdata(1, cc);
    inv(6, ci) = cdata(2, cc);
    itemturn(ci);
    item_stack(-1, ci);
    if (stat == 0 || dropval == 0)
    {
        ti = inv_getfreeid(-1);
        if (ti == -1)
        {
            txt(lang(
                u8"もう周りに物を置くスペースがない！ "s,
                u8"The place is too crowded. You can't drop stuff anymore."s));
            label_1419();
            stat = 0;
            return stat;
        }
        item_copy(ci, ti);
    }
    if (dropval == 1)
    {
        inv(21, ti) = 3;
        inv(9, ti) = gdata(27) + 100;
        ++gdata(27);
    }
    inv(0, ci) = inumbk;
    cell_refresh(inv(5, ti), inv(6, ti));
    if (dropval == 0)
    {
        screenupdate = -1;
        label_1419();
        snd(16);
        txt(lang(
            itemname(ti, in) + u8"を地面に置いた。"s,
            u8"You drop "s + itemname(ti, in) + u8"."s));
    }
    label_1521();
    if (inv(3, ti) == 516)
    {
        item_find(60002, 0);
        if (stat != -1)
        {
            p = stat;
            if (inv(25, p) == cdata(61, cc))
            {
                if (inv(17, ti) != 1)
                {
                    snd(64);
                    inv(17, ti) = 1;
                    txtef(2);
                    txt(lang(
                        u8"水は祝福を受けた。"s, u8"The water is blessed."s));
                }
            }
        }
    }
    if (adata(16, gdata(20)) == 101)
    {
        if (mode == 0)
        {
            label_1728();
        }
    }
    if (gdata(20) == 7)
    {
        if (mode == 0)
        {
            label_1730();
        }
    }
    if (inv(3, ti) == 255)
    {
        mdata(20) = 1;
        label_0068();
    }
    stat = 1;
    return stat;
}
int label_2194()
{
    if (ci == -1)
    {
        stat = 0;
        return stat;
    }
    if (cdata(body, r1) % 10000 != 0)
    {
        stat = 0;
        return stat;
    }
    if (inv(18, ci) != 0)
    {
        stat = 0;
        return stat;
    }
    item_separate(ci);
    if (r1 == 0)
    {
        item_identify(ci, 2);
    }
    inv(18, ci) = body;
    cdata(body, r1) = cdata(body, r1) / 10000 * 10000 + ci + 1;
    stat = 1;
    return stat;
}
void label_2195()
{
    p = cdata(body, r1) % 10000;
    if (p == 0)
    {
        rtval = -2;
        return;
    }
    ci = p - 1;
    cdata(body, r1) = cdata(body, r1) / 10000 * 10000;
    inv(18, ci) = 0;
    item_stack(r1, ci);
    return;
}
void label_2196()
{
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, r1) / 10000 == body)
            {
                p = cdata(cnt, r1) % 10000;
                if (p == 0)
                {
                    continue;
                }
                --p;
                inv(18, p) = 0;
                cdata(cnt, r1) = cdata(cnt, r1) / 10000 * 10000;
            }
        }
    }
    return;
}
void label_2197()
{
    if (inv(3, ci) == 783)
    {
        if (inv(23, ci) == 0)
        {
            txt(lang(
                u8"最後に調合したアイテムを、レシピに加えることができる。(まだ未実装)"s,
                u8"You can add a recipe of the item you previously created.(Not implemented yet)"s));
            label_2742();
            return;
        }
    }
    efid = 0;
    dbmode = 13;
    dbid = inv(3, ci);
    label_0481();
    if (efid == 1115)
    {
        label_1712();
        return;
    }
    label_2742();
    return;
}
void label_2198()
{
    if (cc == 0)
    {
        cargocheck();
        if (stat == 0)
        {
            label_1419();
            label_2743(false);
        }
        if (itemusingfind(ci) > 0)
        {
            txt(lang(
                u8"そのアイテムは他の誰かが使用中だ。"s,
                u8"Someone else is using the item."s));
            label_2743(false);
        }
    }
    else
    {
        if (itemusingfind(ci) != -1)
        {
            tc = itemusingfind(ci);
            if (tc != cc)
            {
                rowactend(tc);
                if (synccheck(cc, -1))
                {
                    txt(lang(
                        name(cc) + u8"は"s + name(tc)
                            + u8"の食べ物を横取りした。"s,
                        name(cc) + u8" snatch"s + _s(cc) + u8" "s + name(tc)
                            + your(tc) + u8" food."s));
                }
            }
        }
    }
    cdata(79, cc) = 116;
    label_2160();
    label_2742();
    return;
}
void label_2199()
{
    dbmode = 15;
    dbid = inv(3, ci);
    label_0481();
    label_2742();
    return;
}
void label_2200()
{
    dbmode = 14;
    dbid = inv(3, ci);
    label_0481();
    label_2172();
    if (stat == 0)
    {
        label_1419();
        label_2743(false);
    }
    label_2742();
    return;
}
void label_2201()
{
    if (map(x, y, 5) != 0)
    {
        if (mapitemfind(x, y, 526) != -1)
        {
            ci = mapitemfind(x, y, 526);
            item_separate(ci);
            snd(73);
            txt(lang(
                itemname(ci) + u8"に体当たりした。"s,
                u8"You throw your weight against "s + itemname(ci) + u8"."s));
            if (inv(21, ci) == 5 || inv(25, ci) <= 0)
            {
                txtmore();
                txt(lang(
                    u8"もう実はないようだ… "s,
                    u8"It seems there are no fruits left on the tree."s));
                label_2742();
                return;
            }
            --inv(25, ci);
            if (inv(25, ci) <= 0)
            {
                inv(2, ci) = 592;
                cell_refresh(x, y);
            }
            if (y + 1 < mdata(1))
            {
                if ((chipm(7, map(x, y + 1, 0)) && 4) == 0)
                {
                    ++y;
                }
            }
            flt();
            itemcreate(-1, inv(26, ci), x, y, 0);
            txt(lang(
                itemname(ci, 1) + u8"が降ってきた。"s,
                itemname(ci, 1) + u8" falls down from the tree."s));
            label_2742();
            return;
        }
    }
    if (map(x, y, 1) != 0)
    {
        tc = map(x, y, 1) - 1;
        if (cdata(251, tc) == 0)
        {
            if (cc == 0)
            {
                if (cdata(9, tc) >= 0)
                {
                    label_2073();
                    if (stat == 0)
                    {
                        label_2743(false);
                    }
                }
            }
            if (cdata(263, tc))
            {
                snd(73);
                txt(lang(
                    name(cc) + u8"は"s + name(tc) + u8"に全力で体当たりした。"s,
                    name(cc) + u8" bash"s + _s(cc) + u8" up "s + name(tc)
                        + u8" at full power."s));
                dmghp(tc, sdata(10, cc) * 5, cc);
                if (cdata(0, tc) == 1)
                {
                    txt(lang(
                        name(tc) + u8"はもちを吐き出した。"s,
                        name(tc) + u8" spit"s + _s(tc) + u8" mochi."s));
                    txt(lang(
                        u8"「助かったよ！」"s, cnvtalk(u8"You saved me!"s)));
                    cdata(263, tc) = 0;
                    modimp(tc, 10);
                }
            }
            else
            {
                snd(73);
                txt(lang(
                    name(cc) + u8"は"s + name(tc) + u8"に体当たりした。"s,
                    name(cc) + u8" bash"s + _s(cc) + u8" up "s + name(tc)
                        + u8"."s));
                hostileaction(cc, tc);
            }
        }
        else
        {
            snd(73);
            txt(lang(
                name(cc) + u8"は"s + name(tc) + u8"に体当たりした。"s,
                name(cc) + u8" bash"s + _s(cc) + u8" up "s + name(tc)
                    + u8"."s));
            txt(lang(
                name(tc) + u8"は睡眠を妨害された。"s,
                name(cc) + u8" disturb"s + _s(cc) + u8" "s + his(tc)
                    + u8" sleep."s));
            modkarma(cc, -1);
            cdata(79, tc) = 418;
        }
        cdata(251, tc) = 0;
        label_2742();
        return;
    }
    if (map(x, y, 6) != 0)
    {
        cell_featread(x, y);
        if (feat(1) == 30)
        {
            map(x, y, 6) = 0;
            spillfrag(x, y, 2);
            flt(calcobjlv(gdata(22) * (gdata(20) != 30)), calcfixlv(2));
            flttypemajor = fsetbarrel(rnd(length(fsetbarrel)));
            itemcreate(-1, 0, x, y, 0);
            if (synccheck(cc, -1))
            {
                snd(73);
                txt(lang(
                    name(cc) + u8"は壷を割った。"s,
                    name(cc) + u8" shatter"s + _s(cc) + u8" the pot."s));
                snd(45);
                animeid = 14;
                label_1426();
            }
            label_2742();
            return;
        }
        if (feat(1) == 21)
        {
            snd(73);
            p = feat(2) * 3 + 30;
            if (gdata(20) == 41)
            {
                p *= 20;
            }
            if (rnd(p) < sdata(10, cc) && rnd(2))
            {
                txt(lang(
                    u8"扉に体当たりして破壊した。"s,
                    u8"You bash up the door. The door is destroyed."s));
                if (feat(2) > sdata(10, cc))
                {
                    skillexp(10, cc, (feat(2) - sdata(10, cc)) * 15);
                }
                cell_featset(x, y, 0, 0, 0, 0);
                label_2742();
                return;
            }
            else
            {
                txt(lang(u8"扉に体当たりした。"s, u8"You bash up the door."s));
                if (gdata(20) == 41)
                {
                    txt(lang(
                        u8"さすがに牢獄の扉は頑丈だ。"s,
                        u8"As might be expected, the door of the Jail is hard."s));
                }
                if (rnd(4) == 0)
                {
                    tc = cc;
                    efid = 1109;
                    efp = 200;
                    label_2176();
                }
                if (rnd(3) == 0)
                {
                    tc = cc;
                    efid = 1110;
                    efp = 200;
                    label_2176();
                }
                if (rnd(3) == 0)
                {
                    if (cdata(25, cc) < 4 && encfind(cc, 60010) == -1)
                    {
                        --cdata(240, cc);
                        r1 = cc;
                        label_1477();
                        if (synccheck(cc, -1))
                        {
                            txtmore();
                            txtef(8);
                            txt(lang(
                                name(cc) + u8"は筋肉を痛めた。"s,
                                name(cc) + u8" hurt"s + _s(cc) + u8" "s
                                    + his(cc) + u8" muscle."s));
                        }
                    }
                }
                if (rnd(3) == 0)
                {
                    if (feat(2) > 0)
                    {
                        --feat(2);
                        cell_featset(x, y, feat(0), feat(1), feat(2), feat(3));
                        if (synccheck(cc, -1))
                        {
                            txt(lang(
                                u8"扉は少しだけ壊れた。"s,
                                u8"The door is cracked a bit."s));
                        }
                    }
                }
                label_2742();
                return;
            }
        }
    }
    txt_check(0);
    txt(lang(
        name(cc) + u8"は空気に体当たりした。"s,
        name(cc) + u8" bash"s + _s(cc) + u8" up the air."s));
    snd(4);
    label_2742();
    return;
}
void label_2203()
{
    f = 0;
    if (cdata(256, cc) != 0)
    {
        if (cdata(256, cc) + 10 > rnd(60))
        {
            f = 1;
        }
    }
    if (cdata(257, cc) != 0)
    {
        if (rnd(5) == 0)
        {
            txtef(9);
            txtmore();
            txt(lang(u8" *ふらり* "s, u8"*stagger*"s));
            f = 1;
        }
    }
    if (cdata(254, cc) != 0 || f == 1)
    {
        cdata(3, cc) = cdata(1, cc) + rnd(3) - 1;
        cdata(4, cc) = cdata(2, cc) + rnd(3) - 1;
    }
    if (gdata(183) != 0)
    {
        if (cdata(140, gdata(183)) != 0)
        {
            if (cdata(141, gdata(183)) > 0)
            {
                txt(lang(
                    name(gdata(183)) + u8"はあなたを睨み付けた。"s,
                    name(gdata(183)) + u8" stares in your face."s));
                cdata(140, gdata(183)) = 0;
                cdata(141, gdata(183)) = 0;
                txtmore();
            }
        }
    }
    cell_check(cdata(3, cc), cdata(4, cc));
    if (cdata(45, 0) >= 4)
    {
        ++msgdup;
        txt(lang(u8"潰れていて動けない！ "s, u8"You carry too much to move!"s));
        label_1419();
        label_2743(false);
    }
    if (cellchara != -1 && cellchara != 0)
    {
        tc = cellchara;
        if (cdata(9, tc) >= 10 || cdata(9, tc) == -1 && cfg_ignoredislike != 0
            || cdata(9, tc) == 0
                && (adata(16, gdata(20)) == 101 || adata(16, gdata(20)) == 102))
        {
            if (cbit(985, tc) == 0)
            {
                if (mdata(6) == 1)
                {
                    goto label_2204_internal;
                }
                if (cfg_scroll)
                {
                    cdata(3, 0) = cdata(1, tc);
                    cdata(4, 0) = cdata(2, tc);
                    label_1438();
                }
                cell_swap(cc, tc);
                txt(lang(
                    name(tc) + u8"と入れ替わった。"s,
                    u8"You displace "s + name(tc) + u8"."s));
                txtmore();
                if (cdata(27, tc) == 271)
                {
                    if (rnd(5) == 0)
                    {
                        if (cdata(251, tc) == 0)
                        {
                            p = rnd(limit(cdata(30, cc), 0, 20) + 1);
                            if (cbit(15, cc))
                            {
                                p = 0;
                            }
                            if (p != 0)
                            {
                                snd(11);
                                cdata(30, cc) -= p;
                                cdata(30, tc) += p;
                                txt(lang(
                                        u8"「おっと、ごめんよ」"s,
                                        cnvtalk(u8"Ops, sorry."s)),
                                    lang(
                                        u8"「気をつけな」"s,
                                        cnvtalk(u8"Watch it."s)));
                            }
                        }
                    }
                }
                if (cdata(140, tc) == 1)
                {
                    if (cdata(141, tc) > 0)
                    {
                        txt(lang(
                            name(tc) + u8"はあなたを睨み付けた。"s,
                            name(tc) + u8" stares in your face."s));
                        cdata(140, tc) = 0;
                        cdata(141, tc) = 0;
                        txtmore();
                    }
                }
                label_2206();
                label_2742();
                return;
            }
        }
        if (running)
        {
            if (cdata(9, tc) >= -2 || keybd_wait >= 40)
            {
                label_2743(false);
            }
        }
        if (cdata(9, tc) <= -1)
        {
            cdata(29, 0) = tc;
            if (cbit(6, tc) == 1)
            {
                if (cbit(7, 0) == 0)
                {
                    if (cdata(259, tc) == 0)
                    {
                        cdata(29, 0) = 0;
                    }
                }
            }
            if (keybd_attacking == 0)
            {
                keybd_wait = 1;
                keybd_attacking = 1;
            }
            label_2218();
            label_2742();
            return;
        }
        label_2242();
        if (chatteleport == 1)
        {
            chatteleport = 0;
            label_1737();
            return;
        }
        label_2742();
        return;
    }
    else
    {
        keybd_attacking = 0;
    }
    if (mdata(6) == 1)
    {
        if (dbg_freemove)
        {
            x = cdata(3, 0);
            y = cdata(4, 0);
            if (x >= 0 && x < mdata(0) && y >= 0 && y < mdata(1))
            {
                if (map(x, y, 1) == 0)
                {
                    cellaccess = 1;
                }
            }
        }
    }
    if (cellaccess == 1)
    {
    label_2204_internal:
        if (mdata(6) == 1)
        {
            if (264 <= map(cdata(3, cc), cdata(4, cc), 0)
                && map(cdata(3, cc), cdata(4, cc), 0) < 363)
            {
                label_2743(false);
            }
        }
        label_2205();
        return;
    }
    if (gdata(22) == 1 || mdata(6) == 6)
    {
        if (mdata(6) != 1)
        {
            if (cdata(3, cc) < 0 || cdata(3, cc) > mdata(0) - 1
                || cdata(4, cc) < 0 || cdata(4, cc) > mdata(1) - 1)
            {
                txt(lang(
                    mdatan(0) + u8"を去る？ "s,
                    u8"Do you want to leave "s + mdatan(0) + u8"? "s));
                if (mdata(6) == 7)
                {
                    if (gdata(73) != 3)
                    {
                        txtmore();
                        txt(lang(
                            u8"注意！現在のクエストは失敗に終わってしまう。"s,
                            u8"Warning! You are going to abandon your current quest."s));
                    }
                }
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                label_1419();
                if (rtval == 0)
                {
                    gdata(60) = cdata(1, 0);
                    gdata(61) = cdata(2, 0);
                    snd(49);
                    --gdata(22);
                    levelexitby = 4;
                    label_1737();
                    return;
                }
                label_2743(false);
            }
        }
    }
    if (cellfeat != -1)
    {
        if (cellfeat == 21)
        {
            label_2205();
            return;
        }
        keyhalt = 1;
        if (cellfeat == 23)
        {
            snd(99);
            label_1976();
            return;
        }
        if (cellfeat == 31)
        {
            snd(99);
            label_14002();
            label_2742();
            return;
        }
        if (cellfeat == 33)
        {
            menucycle = 1;
            label_22712();
            label_2743(false);
        }
    }
    if (cdata(254, 0) != 0)
    {
        ++msgdup;
        txt(lang(u8" *ごつん* "s, u8"*bump*"s));
        label_1419();
    }
    label_2743(false);
}
void label_2205()
{
    if (cbit(975, cc))
    {
        label_2742();
        return;
    }
    dx = cdata(3, cc);
    dy = cdata(4, cc);
    if (cc < 16)
    {
        if (cc != 0)
        {
            if (dx != cdata(1, cc))
            {
                if (cdata(1, cc) > dx)
                {
                    cdata(83, cc) = 1;
                }
                else
                {
                    cdata(83, cc) = 2;
                }
            }
            if (dy != cdata(2, cc))
            {
                if (cdata(2, cc) > dy)
                {
                    cdata(83, cc) = 3;
                }
                else
                {
                    cdata(83, cc) = 0;
                }
            }
        }
    }
    if (map(dx, dy, 6) != 0)
    {
        cell_featread(dx, dy);
        if (feat(1) == 21)
        {
            label_2215();
            return;
        }
        if (feat(1) == 30)
        {
            x = dx;
            y = dy;
            label_2201();
            return;
        }
    }
    if (map(cdata(1, cc), cdata(2, cc), 8) != 0)
    {
        i = map(cdata(1, cc), cdata(2, cc), 8) - 1;
        if (mef(0, i) == 1)
        {
            if (cdatan(2, cc) != u8"spider"s)
            {
                txtmore();
                if (rnd(mef(5, i) + 25) < rnd(sdata(10, cc) + sdata(12, cc) + 1)
                    || cdata(20, cc) > 100)
                {
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            name(cc) + u8"は蜘蛛の巣を振り払った。"s,
                            name(cc) + u8" destroy"s + _s(cc)
                                + u8" the cobweb."s));
                    }
                    delmef(i);
                }
                else
                {
                    mef(5, i) = mef(5, i) * 3 / 4;
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            name(cc) + u8"は蜘蛛の巣にひっかかった。"s,
                            name(cc) + u8" "s + is(cc)
                                + u8" caught in a cobweb."s));
                    }
                    label_2742();
                    return;
                }
            }
        }
    }
    if (mdata(6) == 1)
    {
        if (cc == 0)
        {
            if (traveldone == 0)
            {
                label_2153();
                keybd_wait = 1;
                label_2742();
                return;
            }
            else
            {
                traveldone = 0;
            }
        }
    }
    label_21452();
    p = map(cdata(1, cc), cdata(2, cc), 0);
    if (chipm(0, p) == 3)
    {
        if (chipm(1, p) == 5)
        {
            healsan(cc, 1);
        }
        addefmap(cdata(1, cc), cdata(2, cc), 1, 3);
        if (cdata(259, cc) == 0)
        {
            wet(cc, 20);
        }
    }
    label_2206();
    if (mdata(6) == 1)
    {
        if (cc == 0)
        {
            encounter = 0;
            gdata(62) = map(cdata(1, cc), cdata(2, cc), 0);
            if (map(cdata(1, cc), cdata(2, cc), 6) == 0)
            {
                p = map(cdata(1, cc), cdata(2, cc), 0);
                if (rnd(30) == 0)
                {
                    encounter = 1;
                }
                if (gdata(17) == 4)
                {
                    if (rnd(10) == 0)
                    {
                        encounter = 1;
                    }
                }
                if (gdata(17) == 1)
                {
                    if (rnd(13) == 0)
                    {
                        encounter = 1;
                    }
                }
                if (33 <= p && p < 66)
                {
                    if (rnd(2) == 0)
                    {
                        encounter = 0;
                    }
                    if (rnd(100) == 0)
                    {
                        encounter = 2;
                    }
                }
                if (rnd(220 + cdata(38, 0) * 10
                        - limit(
                              gdata(80) * 150 / (gdata(82) + 1),
                              0,
                              (210 + cdata(38, 0) * 10)))
                    == 0)
                {
                    encounter = 4;
                }
                if (rnd(20) == 0)
                {
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                        {
                            rq = gdata(160 + cnt);
                            if (qdata(3, rq) == 1007)
                            {
                                if (qdata(8, rq) == 1)
                                {
                                    if (qdata(4, rq) == 0)
                                    {
                                        if (qdata(10, rq) < 2)
                                        {
                                            encounter = 3;
                                            encounterref = rq;
                                            ++qdata(10, rq);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (encounter == 4)
            {
                encounterlv = cdata(34, 0) / 1000;
                levelexitby = 4;
                label_1737();
                return;
            }
            if (encounter == 3)
            {
                txt(lang(
                    u8"暗殺者につかまった。あなたはクライアントを守らなければならない。"s,
                    u8"You are caught by assassins. You have to protect your client."s));
                msg_halt();
                gdata(66) = gdata(20);
                gdata(67) = gdata(22);
                gdata(68) = cdata(1, 0);
                gdata(69) = cdata(2, 0);
                levelexitby = 4;
                label_1737();
                return;
            }
            if (encounter == 2)
            {
                encounterlv = 10 + rnd(100);
                levelexitby = 4;
                label_1737();
                return;
            }
            if (encounter == 1)
            {
                p = dist_town();
                encounterlv = p * 3 / 2 - 10;
                if (cdata(38, 0) <= 5)
                {
                    encounterlv /= 2;
                }
                if (33 <= map(cdata(1, cc), cdata(2, cc), 0)
                    && map(cdata(1, cc), cdata(2, cc), 0) < 66)
                {
                    encounterlv /= 2;
                }
                else
                {
                    if (gdata(17) == 1)
                    {
                        encounterlv = encounterlv * 3 / 2 + 10;
                    }
                }
                if (encounterlv < 0)
                {
                    encounterlv = 1;
                }
                valn = lang(
                    u8" (最も近い街までの距離:"s + p + u8" 敵勢力:"s,
                    u8" (Distance from nearest town:"s + p
                        + u8" Enemy strength:"s);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                    {
                        if (encounterlv < 5)
                        {
                            valn += lang(u8"プチ級"s, u8"Puti Rank"s);
                            break;
                        }
                        if (encounterlv < 10)
                        {
                            valn += lang(u8"オーク級"s, u8"Orc Rank"s);
                            break;
                        }
                        if (encounterlv < 20)
                        {
                            valn +=
                                lang(u8"グリズリー級"s, u8"Grizzly Bear Rank"s);
                            break;
                        }
                        if (encounterlv < 30)
                        {
                            valn += lang(u8"ドレイク級"s, u8"Drake Rank"s);
                            break;
                        }
                        if (encounterlv < 40)
                        {
                            valn += lang(u8"リッチ級"s, u8"Lich Rank"s);
                            break;
                        }
                        valn += lang(u8"ドラゴン級"s, u8"Dragon Rank"s);
                    }
                }
                valn += u8")"s;
                txt(lang(u8"襲撃だ！"s, u8"Ambush!"s) + valn);
                msg_halt();
                levelexitby = 4;
                label_1737();
                return;
            }
            encounter = 0;
        }
    }
    label_2742();
    return;
}
void label_2206()
{
    if (cc == 0)
    {
        gdata(60) = -1;
        gdata(61) = -1;
        x = cdata(1, 0);
        y = cdata(2, 0);
        if (key_shift && gdata(30) == 0 && cdata(254, 0) == 0
            && cdata(256, 0) == 0)
        {
            if (mdata(6) != 1)
            {
                gdata(30) = 1;
                cell_check(cdata(1, cc) + 1, cdata(2, cc));
                gdata(33) = cellaccess;
                cell_check(cdata(1, cc) - 1, cdata(2, cc));
                gdata(31) = cellaccess;
                cell_check(cdata(1, cc), cdata(2, cc) + 1);
                gdata(34) = cellaccess;
                cell_check(cdata(1, cc), cdata(2, cc) - 1);
                gdata(32) = cellaccess;
            }
        }
        if (map(x, y, 4) != 0)
        {
            if (cdata(253, 0) == 0)
            {
                txt(txtitemoncell(x, y));
            }
            else
            {
                txt(lang(
                    u8"地面に何かがあるようだ。"s,
                    u8"You sense something under your foot."s));
            }
        }
        p = chipm(0, map(x, y, 0));
        if (p != 0)
        {
            if (tname(p) != ""s)
            {
                txtmore();
                txt(lang(
                    u8"足元には"s + tname(p) + u8"がある。"s,
                    u8"You walk into "s + tname(p) + u8"."s));
            }
            if (p == 3)
            {
                snd(46);
            }
            if (p == 4)
            {
                addefmap(cdata(1, cc), cdata(2, cc), 3, 10, dirsub, rnd(2));
                if (keybd_wait <= cfg_walkwait * cfg_startrun
                    || cdata(26, 0) % 2 == 0 || mdata(6) == 1)
                {
                    snd(83 + foot % 3);
                    foot += 1 + rnd(2);
                }
            }
        }
        else
        {
            if (mdata(6) == 1)
            {
                addefmap(cdata(1, cc), cdata(2, cc), 2, 10, dirsub);
                snd(81 + foot % 2);
                ++foot;
            }
        }
        if (map(x, y, 6) != 0)
        {
            cell_featread(x, y);
            if (feat(1) == 32)
            {
                txtef(5);
                txt(lang(u8" *キラン* "s, u8"*twinkle*"s));
            }
            if (feat(1) == 15)
            {
                txt(mapname(feat(2) + feat(3) * 100, 1));
                if (adata(16, feat(2) + feat(3) * 100) == 8)
                {
                    if (cfg_extrahelp)
                    {
                        if (gdata(206) == 0)
                        {
                            if (mode == 0)
                            {
                                if (cdata(141, 0) == 0)
                                {
                                    gdata(206) = 1;
                                    ghelp = 6;
                                    label_2701();
                                }
                            }
                        }
                    }
                }
            }
            if (feat(1) == 34)
            {
                txt(txtbuilding(feat(2), feat(3)));
            }
            if (feat(1) == 11)
            {
                txt(lang(
                    u8"降り階段がある。"s,
                    u8"There is a stair leading downwards here."s));
            }
            if (feat(1) == 10)
            {
                txt(lang(
                    u8"昇り階段がある。"s,
                    u8"There is a stair leading upwards here."s));
            }
            if (feat(1) == 24)
            {
                txt(lang(
                    u8"何かが見つかりそうだ。"s,
                    u8"You can search this location to collect some materials."s));
            }
            if (feat(1) == 27)
            {
                txt(lang(
                    u8"何かの残骸がある。"s,
                    u8"You can collect materials from the remains lying here."s));
            }
            if (feat(1) == 25)
            {
                txt(lang(
                    u8"採掘場がある。"s,
                    u8"You can collect materials from the mining spot here."s));
            }
            if (feat(1) == 26)
            {
                txt(lang(
                    u8"泉がある。"s,
                    u8"You can collect materials from the spring here."s));
            }
            if (feat(1) == 28)
            {
                txt(lang(
                    u8"色んな植物が生えている。"s,
                    u8"You can collect materials from plants here."s));
            }
            if (feat(1) == 29)
            {
                if (feat(2) == 36)
                {
                    s = lang(u8"野菜"s, u8"vegetable"s);
                }
                if (feat(2) == 37)
                {
                    s = lang(u8"果物"s, u8"fruit"s);
                }
                if (feat(2) == 38)
                {
                    s = lang(u8"ハーブ"s, u8"herb"s);
                }
                if (feat(2) == 39)
                {
                    s = lang(u8"何か"s, u8"strange"s);
                }
                if (feat(2) == 40)
                {
                    s = lang(u8"アーティファクト"s, u8"artifact"s);
                }
                if (feat(2) == 41)
                {
                    s = lang(u8"宝石"s, u8"gem"s);
                }
                if (feat(2) == 42)
                {
                    s = lang(u8"魔法の木"s, u8"magic"s);
                }
                if (feat == tile_plant)
                {
                    txt(lang(
                        ""s + s + u8"の種が植えてある。"s,
                        u8"A "s + s + u8" seed is planted."s));
                }
                if (feat == tile_plant + 1)
                {
                    txt(lang(
                        ""s + s + u8"が育っている。"s,
                        u8"A "s + s + u8" bud is growing."s));
                }
                if (feat == tile_plant + 2)
                {
                    txt(lang(
                        ""s + s + u8"の実が成っている。"s,
                        u8"A"s + s + u8" tree has bore a lot of fruit."s));
                }
                if (feat == tile_plant + 3)
                {
                    txt(lang(
                        ""s + s + u8"の草は枯れてしまっている… "s,
                        u8"A "s + s + u8" tree has withered..."s));
                }
            }
            if (feat(1) >= 24 && feat(1) <= 28)
            {
                if (cfg_extrahelp)
                {
                    if (gdata(205) == 0)
                    {
                        if (mode == 0)
                        {
                            if (cdata(141, 0) == 0)
                            {
                                gdata(205) = 1;
                                ghelp = 5;
                                label_2701();
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}
void label_2207()
{
    if (dbg_freemove)
    {
        txt(lang(
            u8"デバッグ中はその操作はできない。"s,
            u8"You can't perform the action while in the debug mode."s));
        label_2743(false);
    }
    item_find(631, 3, -1);
    if (stat != -1)
    {
        if (mdata(6) == 3 || mdata(6) == 2)
        {
            ci = stat;
            label_1942();
            return;
        }
    }
    cell_featread(cdata(1, cc), cdata(2, cc));
    movelevelbystairs = 0;
    if (val == 1)
    {
        if (mapitemfind(cdata(1, cc), cdata(2, cc), 753) != -1)
        {
            txt(lang(
                u8"本当にこたつの中に入る？"s,
                u8"Really get into the Kotatsu?"s));
            promptl(0, 0) = stryes;
            promptl(1, 0) = u8"y"s;
            promptl(2, 0) = u8"0"s;
            promptl(0, 1) = strno;
            promptl(1, 1) = u8"n"s;
            promptl(2, 1) = u8"1"s;
            promptmax = 2;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 160;
            val(3) = 1;
            label_2131();
            if (rtval != 0)
            {
                label_1419();
                label_2743(false);
            }
            txt(lang(u8"まっくらだ！"s, u8"It's dark here!"s));
            cdata(253, 0) += 2;
            label_2742();
            return;
        }
    }
    if (gdata(20) == 7)
    {
        if (val == 1)
        {
            if (mapitemfind(cdata(1, cc), cdata(2, cc), 751) != -1)
            {
                if (gdata(22) >= adata(10, gdata(20)))
                {
                    txt(lang(
                        u8"これ以上降りられない。"s,
                        u8"You can't go down any more."s));
                    label_2743(false);
                }
                else
                {
                    movelevelbystairs = 1;
                }
            }
        }
        if (val == 2)
        {
            if (mapitemfind(cdata(1, cc), cdata(2, cc), 750) != -1)
            {
                if (gdata(22) <= adata(17, gdata(20)))
                {
                    txt(lang(
                        u8"これ以上昇れない。"s,
                        u8"You can't go up any more."s));
                    label_2743(false);
                }
                else
                {
                    movelevelbystairs = 1;
                }
            }
        }
    }
    if (movelevelbystairs == 0)
    {
        if (mdata(6) != 1)
        {
            if (val == 1)
            {
                if (feat(1) != 11)
                {
                    txt(lang(
                        u8"降りる階段は見つからない。"s,
                        u8"There're no downstairs here."s));
                    label_1419();
                    label_2743(false);
                }
                else
                {
                    movelevelbystairs = 1;
                    if (gdata(20) == 42 && gdata(22) >= gdata(186))
                    {
                        txt(lang(
                            u8"階段は不思議なバリアで塞がれている。"s,
                            u8"The path is blocked by a strange barrier."s));
                        label_2743(false);
                    }
                }
            }
            if (val == 2)
            {
                if (feat(1) != 10)
                {
                    txt(lang(
                        u8"昇る階段は見つからない。"s,
                        u8"There're no upstaris here."s));
                    label_1419();
                    label_2743(false);
                }
                else
                {
                    movelevelbystairs = 1;
                }
            }
        }
    }
    if (feat == tile_downlocked)
    {
        f = 0;
        if (gdata(22) == 3)
        {
            if (gdata(252) >= 65)
            {
                f = 1;
            }
        }
        if (gdata(22) == 17)
        {
            if (gdata(252) >= 115)
            {
                f = 1;
            }
        }
        if (gdata(22) == 25)
        {
            if (gdata(252) >= 125)
            {
                f = 1;
            }
        }
        if (gdata(22) == 44)
        {
            if (gdata(252) >= 125)
            {
                f = 1;
            }
        }
        if (f == 1)
        {
            if (gdata(22) == 44)
            {
                txt(lang(
                    u8"厳重に封印された扉の前に立つと、三つの魔石が鈍い光を放った。"s,
                    u8"The magic stones shine softly as you approach the sealed door."s));
            }
            else
            {
                txt(lang(u8"扉の鍵を開けた。"s, u8"You unlock the door"s));
            }
            snd(23);
            cell_featset(cdata(1, cc), cdata(2, cc), tile_downstairs, 11);
            label_2742();
            return;
        }
        snd(22);
        txt(lang(
            u8"鍵のかかった扉が行く手を塞いでいる。"s,
            u8"The door is locked. It seems you need a specific key to unlock the door."s));
        label_2742();
        return;
    }
    if (adata(16, gdata(20)) == 8)
    {
        if (gdata(22) == adata(10, gdata(20)))
        {
            if (adata(20, gdata(20)) != -1)
            {
                txt(lang(
                    u8"クエストを放棄して階を移動する？"s,
                    u8"Really give up the quest and move over?"s));
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                if (rtval != 0)
                {
                    label_1419();
                    label_2743(false);
                }
            }
        }
    }
    if (movelevelbystairs == 1)
    {
        actionsp(0, 15);
        if (stat == 0 || cdata(45, 0) >= 3)
        {
            if (stat == 0 || rnd(5 - cdata(45, 0)) == 0)
            {
                txt(lang(
                    u8"うわああ！"s + name(0) + u8"は階段から足を踏み外した。"s,
                    u8"Noooo! You lost your step and roll down!"s));
                dmghp(
                    cc,
                    cdata(51, cc) * (cdata(43, 0) * 10 / cdata(44, 0) + 10)
                            / 100
                        + 1,
                    -7);
                msg_halt();
            }
            if (cdata(0, 0) == 0)
            {
                label_2733();
                return;
            }
        }
    }
    if (feat(1) == 15)
    {
        if (feat(2) + feat(3) * 100 == 35)
        {
            comctrl = 0;
            label_19432();
            if (stat == 1)
            {
                label_2114();
                return;
            }
            else
            {
                label_2743(false);
            }
        }
    }
    snd(49);
    levelexitby = 4;
    label_1737();
    return;
}
int label_2209()
{
    item_find(636, 3);
    if (stat == -1)
    {
        txt(lang(
            u8"ロックピックを所持していない。"s,
            u8"You don't have lockpicks."s));
        stat = 0;
        return stat;
    }
    ti = stat;
    txt(lang(u8"ロックピックを使用した。"s, u8"You use a lockpick."s));
    txtmore();
    snd(22);
    item_find(637, 3);
    if (stat != -1)
    {
        i = sdata(158, 0) * 150 / 100 + 5;
        txt(lang(
            u8"スケルトンキーも使用した。"s,
            u8"You also use the skeleton key."s));
    }
    else
    {
        i = sdata(158, 0);
    }
    f = 0;
    if (i * 2 < val)
    {
        txt(lang(
            u8"この鍵を開ける技術はない。"s,
            u8"The lock mechanism is beyond your skill."s));
        f = 1;
    }
    if (f == 0)
    {
        if (i / 2 >= val)
        {
            txt(lang(u8"楽勝だ。"s, u8"Easy."s));
        }
        else
        {
            if (rnd(rnd(i * 2) + 1) < val)
            {
                txt(lang(u8"開錠に失敗した。"s, u8"You fail to unlock it."s));
                f = 1;
            }
        }
    }
    if (f)
    {
        if (rnd(3) == 0)
        {
            --inv(0, ti);
            cell_refresh(inv(5, ti), inv(6, ti));
            txtmore();
            txt(lang(u8"ロックピックは壊れた。"s, u8"Your lockpick breaks."s));
        }
        txtnew();
        txt(lang(u8"もう一度試みる？"s, u8"Try again?"s));
        promptl(0, 0) = stryes;
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptl(0, 1) = strno;
        promptl(1, 1) = u8"n"s;
        promptl(2, 1) = u8"1"s;
        promptmax = 2;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 160;
        val(3) = 1;
        label_2131();
        if (rtval == 0)
        {
            label_2209();
            stat = 0;
            return stat;
        }
        stat = 0;
        return stat;
    }
    goto label_2211_internal;
    stat = 0;
    return stat;
label_2211_internal:
    txtmore();
    txt(lang(u8"開錠に成功した。"s, u8"You successfully unlock it."s));
    r1 = cc;
    label_1460();
    stat = 1;
    return stat;
}
void label_2212()
{
    if (inv(3, ci) == 361)
    {
        modkarma(0, -10);
        invctrl(0) = 22;
        invctrl(1) = 0;
        invfile = inv(25, ci);
        snd(23);
        label_2263();
        screenupdate = -1;
        label_1419();
        label_2742();
        return;
    }
    if (inv(3, ci) == 560)
    {
        invctrl(0) = 24;
        invctrl(1) = 0;
        snd(100);
        label_20592();
        return;
    }
    if (inv(3, ci) == 616)
    {
        invctrl(0) = 24;
        invctrl(1) = 2;
        snd(100);
        label_20592();
        return;
    }
    if (inv(3, ci) == 600)
    {
        snd(22);
        txt(lang(u8"足枷を外した。"s, u8"You unlock the shackle."s));
        if (gdata(20) == 33)
        {
            if (gdata(22) == 1)
            {
                if (gdata(258) == 0)
                {
                    if (cdata(0, gdata(259)) == 1)
                    {
                        tc = findchara(203);
                        if (tc != 0)
                        {
                            txtef(9);
                            txtmore();
                            txt(lang(
                                u8"モイアー「馬鹿やろう！！」"s,
                                u8"Moyer yells, "s + cnvtalk(u8"You idiot!"s)));
                            cdata(29, gdata(259)) = tc;
                            cdata(201, gdata(259)) = 1000;
                        }
                        gdata(258) = 1;
                    }
                }
            }
        }
        label_2742();
        return;
    }
    if (inv(9, ci) != 0)
    {
        invfile = inv(9, ci);
        invcontainer(1) = ci;
        if (inv(3, ci) == 641)
        {
            refweight = -1;
        }
        else
        {
            refweight = 0;
        }
        if (inv(9, ci) == 3 || inv(9, ci) == 4 || inv(9, ci) == 6)
        {
            if (gdata(20) != 7)
            {
                txt(lang(
                    u8"それは家の中でのみ使用できる。"s,
                    u8"You can only use it at your home."s));
                label_1419();
                label_2743(false);
            }
        }
        if (inv(9, ci) == 5)
        {
            if (adata(16, gdata(20)) != 102)
            {
                txt(lang(
                    u8"それは店の中でのみ使用できる。"s,
                    u8"You can only use it at your shop"s));
                label_1419();
                label_2743(false);
            }
        }
        file = u8"shoptmp.s2"s;
        fmode = 4;
        label_2107();
        file = u8"shop"s + invfile + u8".s2"s;
        exist(exedir + u8"tmp\\"s + file);
        if (strsize != -1)
        {
            fmode = 3;
            label_2107();
        }
        else
        {
            inv_getheader(-1);
            {
                int cnt = invhead;
                for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                {
                    inv(0, cnt) = 0;
                }
            }
        }
        shoptrade = 0;
        invsubroutine = 1;
        invctrl(0) = 22;
        invctrl(1) = 2;
        if (invfile == 3)
        {
            txt(lang(
                u8"残り"s + gdata(97)
                    + u8"個分のアイテムの相続権を持っている。"s,
                u8"You can claim "s + gdata(97) + u8" more heirloom"s
                    + _s2(gdata(97)) + u8"."s));
            invctrl(1) = 1;
        }
        if (invfile == 6 || inv(3, invcontainer(1)) == 641)
        {
            if (invfile == 6)
            {
                invcontainer = 15;
            }
            else
            {
                invcontainer = 4;
            }
            menucycle = 1;
            invctrl(1) = 3;
        }
        mode = 6;
        snd(100);
        label_20592();
        invcontainer = 0;
        if (refweight == -1)
        {
            refweight = inv_weight(-1) + 2500;
        }
        file = u8"shop"s + invfile + u8".s2"s;
        fmode = 4;
        label_2107();
        file = u8"shoptmp.s2"s;
        fmode = 3;
        label_2107();
        if (refweight != 0)
        {
            inv(7, invcontainer(1)) = refweight;
            label_1521();
        }
        label_1419();
        mode = 0;
        label_2742();
        return;
    }
    item_separate(ci);
    if (inv(25, ci) != 0)
    {
        if (inv(26, ci) != 0)
        {
            val = inv(26, ci);
            label_2209();
            if (stat == 0)
            {
                screenupdate = -1;
                label_1419();
                label_2742();
                return;
            }
        }
    }
    if (inv(25, ci) == 0)
    {
        txt(lang(u8"中身は空っぽだ。"s, u8"It's empty!"s));
    }
    else
    {
        if (inv(3, ci) == 752)
        {
            label_2214();
        }
        else
        {
            label_2213();
        }
        item_stack(cc, ri);
    }
    screenupdate = -1;
    label_1419();
    label_2742();
    return;
}
void label_2213()
{
    snd(23);
    txt(lang(
        u8"あなたは"s + itemname(ci) + u8"を開けた。"s,
        u8"You open "s + itemname(ci) + u8"."s));
    msg_halt();
    ri = ci;
    if (inv(3, ri) == 394)
    {
        tc = cc;
        efid = 1117;
        efp = 100 + inv(25, ri) * 10;
        inv(25, ri) = 0;
        label_2176();
        label_2742();
        return;
    }
    p = 3 + rnd(5);
    if (inv(3, ri) == 415 || inv(3, ri) == 416 || inv(3, ri) == 734)
    {
        p = 1;
    }
    randomize(inv(27, ri));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            dbid = 0;
            if (cnt == 0)
            {
                p = 3;
            }
            else
            {
                p = 2;
            }
            if (inv(3, ri) == 239)
            {
                if (cnt == 0 && rnd(3) == 0)
                {
                    p = 4;
                }
                else
                {
                    p = 3;
                }
                if (rnd(60) == 0)
                {
                    dbid = 559;
                }
            }
            flt(calcobjlv(inv(25, ri)), calcfixlv(p));
            flttypemajor = fsetchest(rnd(length(fsetchest)));
            if (cnt > 0)
            {
                if (rnd(3) != 0)
                {
                    if (rnd(3) != 0)
                    {
                        flttypeminor = 0;
                        flttypemajor = 68000;
                    }
                    else
                    {
                        flttypemajor = 0;
                        flttypeminor = 77001;
                    }
                }
            }
            if (inv(3, ri) == 241)
            {
                if (rnd(3) != 0)
                {
                    flttypeminor = 0;
                    flttypemajor = 68000;
                }
                else
                {
                    flttypemajor = 0;
                    flttypeminor = 77001;
                }
            }
            if (inv(3, ri) == 415 || inv(3, ri) == 416)
            {
                flttypeminor = 0;
                flttypemajor = fsetwear(rnd(length(fsetwear)));
                fixlv = 3;
                if (inv(3, ri) == 416)
                {
                    fixlv = 4;
                }
                if (rnd(30) == 0)
                {
                    dbid = 559;
                }
            }
            in = 0;
            if (inv(3, ri) == 734)
            {
                dbid = 54;
                randomize();
                if (rnd(75) == 0)
                {
                    in = 50 * inv(1, ci);
                }
                else
                {
                    in = rnd(inv(1, ci) / 10 + 1) + 1;
                }
            }
            if (inv(3, ri) == 284)
            {
                dbid = 54;
                in = rnd(1000) + 1;
                if (rnd(5) == 0)
                {
                    in = rnd(9) + 1;
                }
                if (rnd(10) == 0)
                {
                    in = rnd(5000) + 5000;
                }
                if (rnd(20) == 0)
                {
                    in = rnd(20000) + 10000;
                }
            }
            itemcreate(-1, dbid, cdata(1, 0), cdata(2, 0), in);
        }
    }
    randomize();
    f = 0;
    if (inv(3, ri) != 734)
    {
        if (rnd(10) == 0)
        {
            f = 1;
        }
    }
    if (inv(3, ri) == 239 || inv(3, ri) == 240)
    {
        if (rnd(5) == 0)
        {
            f = 1;
        }
    }
    if (f)
    {
        flt();
        itemcreate(-1, 622, cdata(1, 0), cdata(2, 0), 1);
    }
    snd(24);
    txtmore();
    txt(lang(
        itemname(ri) + u8"から溢れ出た高級品が、足元に散らばった。"s,
        u8"Several quality goods spread out from "s + itemname(ri) + u8"."s));
    autosave = 1 * (gdata(20) != 35);
    inv(25, ri) = 0;
    if (inv(3, ri) == 284)
    {
        modkarma(0, -4);
    }
    if (inv(3, ri) == 283)
    {
        modkarma(0, -8);
    }
    return;
}
void label_2214()
{
    snd(23);
    txt(lang(
        u8"あなたは"s + itemname(ci) + u8"を開けた。"s,
        u8"You open "s + itemname(ci) + u8"."s));
    msg_halt();
    snd(24);
    randomize();
    ri = ci;
    cc = 0;
    inv(25, ri) = 0;
    if (inv(27, ri) < 100)
    {
        if (rnd(3) == 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"悪意を持った何かが袋から飛び出してきた！"s,
                    u8"Something jumps out from the pack!"s));
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3 + rnd(3)); cnt < cnt_end; ++cnt)
                {
                    flt(calcobjlv(cdata(38, 0) * 3 / 2 + 3), calcfixlv(2));
                    characreate(-1, 0, cdata(1, cc), cdata(2, cc));
                }
            }
            return;
        }
        if (rnd(3) == 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"罠だ！お年玉袋は発火した。"s,
                    u8"It's trap! The gift ignites."s));
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
                {
                    tlocx = cdata(1, 0) + rnd(3) - rnd(3);
                    tlocy = cdata(2, 0) - rnd(3) + rnd(3);
                    if (tlocx < 0 || tlocx >= mdata(0) || tlocy < 0
                        || tlocy >= mdata(1))
                    {
                        continue;
                    }
                    addmef(tlocx, tlocy, 5, 24, rnd(15) + 20, 50, 0);
                    mapitem_fire(tlocx, tlocy);
                }
            }
            return;
        }
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"中には呪いの手紙が入っていた。"s,
                u8"You find a cursed letter inside."s));
        }
        efid = 1114;
        efp = 1000;
        tc = 0;
        label_2176();
        return;
    }
    if (inv(27, ri) < 200)
    {
        if (rnd(4) == 0)
        {
            if (synccheck(cc, -1))
            {
                txtef(5);
                txt(lang(u8" *チリリリリーン* "s, u8"*ring ring ring*"s));
            }
            flt();
            characreate(-1, 328 + rnd(2), cdata(1, cc), cdata(2, cc));
            if (stat != 0)
            {
                if (cdata(9, cc) <= -3)
                {
                    cdata(9, rc) = -1;
                    cdata(69, rc) = -1;
                }
            }
            return;
        }
        if (rnd(5) == 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    u8"妹が入っていた！"s,
                    u8"The pack contains your younger sister!"s));
            }
            flt();
            characreate(-1, 176, cdata(1, cc), cdata(2, cc));
            if (stat != 0)
            {
                cdata(30, rc) = 5000;
            }
            return;
        }
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"何かが袋から出てきた。"s,
                u8"There's something inside the pack."s));
        }
        flt();
        itemcreate(
            -1,
            isetgiftminor(rnd(length(isetgiftminor))),
            cdata(1, 0),
            cdata(2, 0),
            1);
        return;
    }
    if (rnd(3) == 0)
    {
        if (synccheck(cc, -1))
        {
            txtef(5);
            txt(lang(u8" *チリリリリーン* "s, u8"*ring ring ring*"s));
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (2 + rnd(3)); cnt < cnt_end; ++cnt)
            {
                flt();
                characreate(-1, 328 + rnd(2), cdata(1, cc), cdata(2, cc));
                if (stat != 0)
                {
                    if (cdata(9, cc) <= -3)
                    {
                        cdata(9, rc) = -1;
                        cdata(69, rc) = -1;
                    }
                }
            }
        }
        return;
    }
    if (rnd(50) == 0)
    {
        if (synccheck(cc, -1))
        {
            txt(lang(
                u8"これは素晴らしい贈り物だ！"s,
                u8"This is truely a wonderful gift!"s));
        }
        flt();
        itemcreate(
            -1,
            isetgiftgrand(rnd(length(isetgiftgrand))),
            cdata(1, 0),
            cdata(2, 0),
            1);
        return;
    }
    if (synccheck(cc, -1))
    {
        txt(lang(
            u8"何かが袋から出てきた。"s,
            u8"There's something inside the pack."s));
    }
    flt();
    itemcreate(
        -1,
        isetgiftmajor(rnd(length(isetgiftmajor))),
        cdata(1, 0),
        cdata(2, 0),
        1);
    return;
}
void label_2215()
{
    cell_featread(dx, dy);
    if (feat == tile_doorclosed4 && feat(2) > 0)
    {
        if (cc == 0)
        {
            val = feat(2);
            label_2209();
            if (stat == 0)
            {
                screenupdate = -1;
                label_1419();
                await(100);
                label_2742();
                return;
            }
            feat(2) = 0;
        }
        else
        {
            label_2742();
            return;
        }
    }
    if (feat(2) > 0)
    {
        f = 0;
        if (rnd(feat(2) * 20 + 150) < sdata(158, cc) * 20 + 20)
        {
            f = 1;
        }
    }
    else
    {
        f = 1;
    }
    if (f)
    {
        if (feat(2) > 0)
        {
            r1 = cc;
            label_1460();
        }
        cell_featset(dx, dy, tile_dooropen, 20, 0, -1);
        if (synccheck(cc, -1))
        {
            txt(lang(
                name(cc) + u8"は扉を開けた。"s,
                name(cc) + u8" open"s + _s(cc) + u8" the door."s));
            if (mdata(12) == 8)
            {
                snd(67);
            }
            else
            {
                if (mdata(12) == 9)
                {
                    snd(71);
                }
                else
                {
                    snd(48);
                }
            }
        }
    }
    else
    {
        ++msgdup;
        if (synccheck(cc, -1))
        {
            snd(22);
            txt(lang(
                aln(cc) + u8"開錠に失敗した。"s,
                name(cc) + u8" fail"s + _s(cc) + u8" to open the door."s));
        }
    }
    if (cc == 0)
    {
        await(100);
    }
    label_2742();
    return;
}
void label_2216()
{
    txt(lang(u8"何を閉める？"s, u8"Which door do you want to close? "s));
    label_1419();
    val = 0;
    label_2127();
    if (stat == 0)
    {
        txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        label_1419();
        label_2743(false);
    }
    cell_featread(x, y);
    if (feat(1) != 20)
    {
        txt(lang(
            u8"その方向に閉められるものはない。"s,
            u8"There's nothing to close."s));
        label_1419();
        label_2743(false);
    }
    if (map(x, y, 1) != 0)
    {
        txt(lang(
            u8"何かが邪魔で閉められない。"s,
            u8"There's something on the floor."s));
        label_1419();
        label_2743(false);
    }
    cell_featset(x, y, tile_doorclosed, 21, -1, -1);
    txt(lang(name(cc) + u8"は扉を閉めた。"s, name(cc) + u8" close the door."s));
    label_2742();
    return;
}
int label_2217()
{
    attackrange = 1;
    attacknum = 0;
    ele = 0;
    ammoproc = -1;
    ammox = cdata(1, tc);
    ammoy = cdata(2, tc);
    attackitem = cw;
    if (ammo != -1)
    {
        if (inv(9, ammo) != -1)
        {
            if (inv((40 + inv(9, ammo) * 2 + 1), ammo) % 1000 <= 0)
            {
                txt(lang(u8"通常弾を装填した。"s, u8"You load normal ammo."s));
                inv(9, ammo) = -1;
            }
            else
            {
                ammoproc = inv((40 + inv(9, ammo) * 2), ammo) % 10000;
                if (cc == 0)
                {
                    if (cdata(52, 0) < 50)
                    {
                        if (cdata(52, 0) < rnd(75))
                        {
                            txt(lang(
                                u8"疲労し過ぎて失敗した！"s,
                                u8"You are too exhausted!"s));
                            dmgsp(0, encammoref(2, ammoproc) / 2 + 1);
                            ammoproc = -1;
                            stat = 1;
                            return stat;
                        }
                    }
                    dmgsp(0, rnd(encammoref(2, ammoproc) + 1));
                }
                --inv(40 + inv(9, ammo) * 2 + 1, ammo);
            }
        }
    }
    if (ammoproc == 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
            {
                label_2075();
                ele = 0;
                extraattack = 0;
                label_22192();
                if (cdata(0, tc) != 1)
                {
                    label_2072();
                    if (stat == 0)
                    {
                        break;
                    }
                    else
                    {
                        tc = cdata(29, cc);
                    }
                }
            }
        }
    }
    else
    {
        if (ammoproc == 5)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    label_2075();
                    ele = 0;
                    label_2076();
                    if (listmax == 0)
                    {
                        break;
                    }
                    tc = list(0, rnd(listmax));
                    if (cc == 0 || cdata(9, cc) >= 0)
                    {
                        if (cdata(9, tc) >= 0)
                        {
                            if (cnt != 0)
                            {
                                cnt = cnt + (rnd(5) == 0) - 1;
                                continue;
                            }
                        }
                    }
                    else
                    {
                        if (cdata(9, tc) == -3)
                        {
                            cnt = cnt + (rnd(5) == 0) - 1;
                            continue;
                        }
                    }
                    extraattack = 0;
                    label_22192();
                }
            }
        }
        else
        {
            extraattack = 0;
            label_22192();
        }
    }
    if (ammoproc == 1)
    {
        tlocx = ammox;
        tlocy = ammoy;
        efid = 460;
        efp = sdata(attackskill, cc) * 8 + 10;
        label_2176();
    }
    attackvar = 0;
    ammoproc = -1;
    stat = 0;
    return stat;
}
void label_2218()
{
    if (cc != 0)
    {
        if (cdata(78, tc))
        {
            if (distance < 6)
            {
                if (fov_los(
                        cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc)))
                {
                    label_2075();
                    if (stat == 1)
                    {
                        label_2217();
                    }
                }
            }
            p = cdata(78, tc) % 1000;
            if (p == 61)
            {
                if (cdata(50, cc) < cdata(51, cc) / 2)
                {
                    return;
                }
            }
        }
    }
    attacknum = 0;
    attackrange = 0;
    attackskill = 106;
    ammo = -1;
    ele = 0;
    if (cdata(32, cc) && 1)
    {
        if (limit(sqrt(sdata(168, cc)) - 3, 1, 5) + cbit(30, cc) * 5 > rnd(100))
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    name(cc) + u8"は盾で"s + name(tc) + u8"を殴りつけた。"s,
                    name(cc) + u8" bash"s + _s(cc) + u8" "s + name(tc)
                        + u8" with "s + his(cc) + u8" shield."s));
            }
            dmghp(tc, rnd(sdata(168, cc)) + 1, cc);
            dmgcon(tc, 7, 50 + elona_int(sqrt(sdata(168, cc))) * 15);
            cdata(252, tc) += rnd(3);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            body = 100 + cnt;
            if (cdata(body, cc) % 10000 == 0)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 10)
            {
                continue;
            }
            if (cdata(body, cc) / 10000 == 11)
            {
                continue;
            }
            cw = cdata(body, cc) % 10000 - 1;
            attackitem = cw;
            if (inv(10, cw) > 0)
            {
                attackskill = inv(16, cw);
                ++attacknum;
                extraattack = 0;
                label_22192();
            }
        }
    }
    if (attackskill == 106)
    {
        extraattack = 0;
        label_22192();
    }
    attackvar = 0;
    return;
}
void label_22192()
{
label_22191_internal:
    if (cdata(0, cc) != 1)
    {
        return;
    }
    if (cdata(0, tc) != 1)
    {
        return;
    }
    if (cdata(255, cc) != 0)
    {
        ++msgdup;
        txt(lang(
            name(cc) + u8"は怖気づいた。"s,
            name(cc) + u8" "s + is(cc) + u8" frightened."s));
        return;
    }
    if (map(cdata(1, tc), cdata(2, tc), 8) != 0)
    {
        i = map(cdata(1, tc), cdata(2, tc), 8) - 1;
        if (mef(0, i) == 2)
        {
            if (rnd(2) == 0)
            {
                if (synccheck(cc, -1))
                {
                    txtmore();
                    txt(lang(
                        name(cc) + u8"は霧の中の幻影を攻撃した。"s,
                        name(cc) + u8" attack"s + _s(cc)
                            + u8" an illusion in the mist."s));
                }
                return;
            }
        }
    }
    if (attackrange == 1)
    {
        animeid = attackskill;
        aniref = cw;
        label_1426();
    }
    if (attacknum > 1 || cc != 0)
    {
        txtmore();
    }
    expmodifer = 1 + cbit(985, tc) * 15 + cbit(23, tc) + (gdata(20) == 35);
    hit = calcattackhit();
    i = 0;
    if (hit == 1)
    {
        if (cc == 0)
        {
            if (cfg_attackanime)
            {
                animeid = 12;
                aniref = dmg * 100 / cdata(51, tc);
                label_1426();
            }
        }
        if (critical)
        {
            if (cc == 0)
            {
                txtef(3);
                txt(lang(u8"会心の一撃！ "s, u8"Critical Hit!"s));
                txtmore();
            }
        }
        dmg = calcattackdmg();
        if (attackskill != 106)
        {
            if (inv(4, cw) >= 4)
            {
                if (inv(4, cw) == 6)
                {
                    s(1) = lang(""s, u8"The "s) + iknownnameref(inv(3, cw));
                }
                else
                {
                    if (inv(23, cw) >= 40000)
                    {
                        randomize(inv(23, cw) - 40000);
                        s(1) = random_title(1);
                        randomize();
                    }
                    else
                    {
                        s(1) = lang(""s, u8"The "s) + iknownnameref(inv(3, cw));
                    }
                }
                s(1) = lang(u8"『"s, u8"<"s) + s(1) + lang(u8"』"s, u8">"s);
                if (synccheck(cc, -1))
                {
                    if (rnd(5) == 0)
                    {
                        txtef(9);
                        txt(lang(
                            name(cc) + u8"は"s + s(1)
                                + u8"を誇らしげに構えた。"s,
                            name(cc) + u8" wield"s + _s(cc) + u8" "s + s(1)
                                + u8" proudly."s));
                        txtmore();
                    }
                }
                i = 1;
            }
        }
        if (attackskill == 106)
        {
            if (cdata(230, cc) != 0)
            {
                ele = cdata(230, cc) / 100000;
                elep = cdata(230, cc) % 100000;
            }
        }
        if (synccheck(tc, -1))
        {
            if (extraattack)
            {
                txt(lang(u8"さらに"s, u8"Furthermore,"s));
                txtcontinue();
            }
            if (attackskill == 106)
            {
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を"s + _melee(0, cdata(33, cc)),
                        name(cc) + u8" "s + _melee(0, cdata(33, cc)) + _s(cc)
                            + u8" "s + name(tc) + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + _melee(1, cdata(33, cc)),
                        name(cc) + u8" "s + _melee(1, cdata(33, cc)) + _s(cc)
                            + u8" "s + name(tc) + u8"."s));
                }
            }
            if (attackskill == 108)
            {
                s = lang(u8"弓"s, u8"bow"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を射撃し"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で撃たれた。"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 109)
            {
                s = lang(u8"クロスボウ"s, u8"crossbow"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を射撃し"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で撃たれた。"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 110)
            {
                s = lang(u8"銃"s, u8"gun"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を射撃し"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で撃たれた。"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 100)
            {
                s = lang(u8"長剣"s, u8"sword"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を切り払い"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で切られた。"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 104)
            {
                s = lang(u8"槍"s, u8"spear"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を突き刺して"s,
                        name(cc) + u8" stab"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で刺された。"s,
                        name(cc) + u8" stab"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 105)
            {
                s = lang(u8"杖"s, u8"staff"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を打って"s,
                        name(cc) + u8" smash"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で打たれた。"s,
                        name(cc) + u8" smash"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 101)
            {
                s = lang(u8"短剣"s, u8"dagger"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を突き刺して"s,
                        name(cc) + u8" stab"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で刺された。"s,
                        name(cc) + u8" stab"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 103)
            {
                s = lang(u8"鈍器"s, u8"mace"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を打って"s,
                        name(cc) + u8" smash"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で打たれた。"s,
                        name(cc) + u8" smash"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 102)
            {
                s = lang(u8"斧"s, u8"axe"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を切り払い"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で切られた。"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 107)
            {
                s = lang(u8"鎌"s, u8"sythe"s);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"を切り払い"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i) + u8"で切られた。"s,
                        name(cc) + u8" slash"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
            if (attackskill == 111)
            {
                s = itemname(cw, 1, 1);
                if (tc >= 16)
                {
                    gdata(809) = 2;
                    txt(lang(
                        aln(cc) + name(tc) + u8"に"s + s(i) + u8"を投げ"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" and"s));
                }
                else
                {
                    txt(lang(
                        aln(tc) + name(cc) + u8"に"s + s(i)
                            + u8"で攻撃された。"s,
                        name(cc) + u8" shoot"s + _s(cc) + u8" "s + name(tc)
                            + u8" with "s + his(cc) + u8" "s + s(i) + u8"."s));
                }
            }
        }
        dmghp(tc, dmg, cc, ele, elep);
        if (critical)
        {
            skillexp(186, cc, 60 / expmodifer, 2);
            critical = 0;
        }
        if (rtdmg > cdata(51, tc) / 20 || rtdmg > sdata(154, tc) || rnd(5) == 0)
        {
            skillexp(
                attackskill,
                cc,
                limit((sdata(173, tc) * 2 - sdata(attackskill, cc) + 1), 5, 50)
                    / expmodifer,
                0,
                4);
            if (attackrange == 0)
            {
                skillexp(152, cc, 20 / expmodifer, 0, 4);
                if (cdata(32, cc) && 2)
                {
                    skillexp(167, cc, 20 / expmodifer, 0, 4);
                }
                if (cdata(32, cc) && 4)
                {
                    skillexp(166, cc, 20 / expmodifer, 0, 4);
                }
            }
            else
            {
                if (attackskill == 111)
                {
                    skillexp(152, cc, 10 / expmodifer, 0, 4);
                }
                else
                {
                    skillexp(189, cc, 25 / expmodifer, 0, 4);
                }
            }
            if (cc == 0)
            {
                if (gdata(183) != 0)
                {
                    skillexp(301, 0, 30 / expmodifer, 0, 5);
                }
            }
            if (cdata(0, tc) == 1)
            {
                skillexp(
                    carmor(tc),
                    tc,
                    limit((250 * rtdmg / cdata(51, tc) + 1), 3, 100)
                        / expmodifer,
                    0,
                    5);
                if (cdata(32, tc) && 1)
                {
                    skillexp(168, tc, 40 / expmodifer, 0, 4);
                }
            }
        }
        if (attackskill == 106)
        {
        }
        else
        {
            label_2220();
        }
        if (cdata(92, tc) > 0)
        {
            if (attackrange == 0)
            {
                dmghp(cc, dmg * cdata(92, tc) / 100 + 1, tc, 61, 100);
            }
        }
        if (cdata(78, tc) != 0)
        {
            p = cdata(78, tc) % 1000;
            ccbk = cc;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                {
                    if (attackrange == 0)
                    {
                        if (p == 61)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    u8"棘が"s + name(cc) + u8"に刺さった。"s,
                                    name(cc) + u8" "s + is(cc)
                                        + u8" stuck by several thorns."s));
                            }
                            dmghp(
                                cc,
                                limit(dmg / 10, 1, cdata(51, tc) / 10),
                                tc,
                                p,
                                cdata(78, tc) / 1000);
                            break;
                        }
                        if (p == 62)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    u8"エーテルの棘が"s + name(cc)
                                        + u8"に刺さった。"s,
                                    name(cc) + u8" "s + is(cc)
                                        + u8" stuck by several ether thorns."s));
                            }
                            dmghp(
                                cc,
                                limit(dmg / 10, 1, cdata(51, tc) / 10),
                                tc,
                                p,
                                cdata(78, tc) / 1000);
                            break;
                        }
                        if (p == 63)
                        {
                            if (attackskill != 106)
                            {
                                if (rnd(5) == 0)
                                {
                                    item_acid(cc, cw);
                                }
                            }
                        }
                    }
                    if (dmg > cdata(51, tc) / 10)
                    {
                        cc = tc;
                        tlocx = cdata(1, cc);
                        tlocy = cdata(2, cc);
                        if (p == 63)
                        {
                            if (synccheck(tc, -1))
                            {
                                txtef(8);
                                txt(lang(
                                    u8"酸が飛び散った。"s,
                                    u8"Acids spread over the ground."s));
                            }
                            efid = 455;
                            efp = cdata(78, tc) / 1000;
                            label_2176();
                            break;
                        }
                    }
                }
            }
            cc = ccbk;
        }
    }
    else
    {
        if (cc == 0)
        {
            snd(4);
        }
        if (sdata(attackskill, cc) > sdata(173, tc) || rnd(5) == 0)
        {
            p = limit((sdata(attackskill, cc) - sdata(173, tc) / 2 + 1), 1, 20)
                / expmodifer;
            skillexp(173, tc, p, 0, 4);
            skillexp(187, tc, p, 0, 4);
        }
    }
    if (hit == -1)
    {
        if (synccheck(cc, -1))
        {
            if (extraattack)
            {
                txt(lang(u8"さらに"s, u8"Furthermore,"s));
                txtcontinue();
            }
            if (tc < 16)
            {
                txt(lang(
                    aln(tc) + name(cc) + u8"の攻撃を避けた。"s,
                    name(tc) + u8" evade"s + _s(tc) + u8" "s + name(cc)
                        + u8"."s));
            }
            else
            {
                txt(lang(
                    aln(cc) + u8"攻撃をかわされた。"s,
                    name(cc) + u8" miss"s + _s(cc, 1) + u8" "s + name(tc)
                        + u8"."s));
            }
        }
    }
    if (hit == -2)
    {
        if (synccheck(cc, -1))
        {
            if (extraattack)
            {
                txt(lang(u8"さらに"s, u8"Furthermore,"s));
                txtcontinue();
            }
            if (tc < 16)
            {
                txt(lang(
                    aln(tc) + name(cc) + u8"の攻撃を華麗に避けた。"s,
                    name(tc) + u8" skillfully evade"s + _s(tc) + u8" "s
                        + name(cc) + u8"."s));
            }
            else
            {
                txt(lang(
                    aln(cc) + u8"攻撃を華麗にかわされた。"s,
                    name(tc) + u8" skillfully evade"s + _s(tc) + u8" "s
                        + name(cc) + u8"."s));
            }
        }
    }
    if (tc == 0)
    {
        gdata(30) = 0;
    }
    rowact_check(tc);
    if (attackskill != 106)
    {
        if (cdata(0, tc) != 1)
        {
            cw = attackitem;
            if (ibit(10, cw))
            {
                if (inv(26, cw) < calcexpalive(inv(25, cw)))
                {
                    inv(26, cw) += rnd(cdata(38, tc) / inv(25, cw) + 1);
                    if (inv(26, cw) >= calcexpalive(inv(25, cw)))
                    {
                        txtef(2);
                        snd(61);
                        txt(lang(
                            itemname(cw) + u8"は十分に血を味わった！"s,
                            itemname(cw) + u8" has tasted enough blood!"s));
                    }
                }
            }
        }
    }
    if (extraattack == 0)
    {
        if (attackrange)
        {
            if (rnd(100) < cdata(89, cc))
            {
                ammoproc = -1;
                ++extraattack;
                goto label_22191_internal;
            }
        }
        else
        {
            if (rnd(100) < cdata(88, cc))
            {
                ++extraattack;
                goto label_22191_internal;
            }
        }
    }
    return;
}
void label_2220()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            cw = attackitem;
            if (inv(40 + cnt * 2, cw) == 0)
            {
                break;
            }
            enc = inv(40 + cnt * 2, cw);
            if (enc == 36)
            {
                p = rnd(inv((40 + cnt * 2 + 1), cw) / 50 + 1) + 1;
                healsp(cc, p);
                dmgsp(tc, p / 2);
                continue;
            }
            if (enc == 38)
            {
                p = rnd(inv((40 + cnt * 2 + 1), cw) / 25 + 1) + 1;
                healmp(cc, p / 5);
                if (cdata(0, tc) != 1)
                {
                    continue;
                }
                dmgmp(tc, p);
                continue;
            }
            if (enc == 37)
            {
                if (rnd(66) == 0)
                {
                    evadd(18, cc);
                }
                continue;
            }
            if (enc == 40)
            {
                if (gdata(801) == 0)
                {
                    if (rnd(25) == 0)
                    {
                        txtef(9);
                        txt(lang(
                            name(cc) + u8"は時を止めた。"s,
                            name(cc) + u8" stop"s + _s(cc) + u8" time."s));
                        gdata(801) = inv((40 + cnt * 2 + 1), cw) / 100 + 1 + 1;
                    }
                    continue;
                }
            }
            if (enc == 57)
            {
                s = refchara_str(cdata(27, tc), 8);
                if (instr(s, 0, u8"/dragon/"s) != -1)
                {
                    gdata(809) = 1;
                    dmghp(tc, orgdmg / 2, cc);
                    subdmg = 0;
                }
                continue;
            }
            if (enc == 61)
            {
                s = refchara_str(cdata(27, tc), 8);
                if (instr(s, 0, u8"/god/"s) != -1)
                {
                    gdata(809) = 1;
                    dmghp(tc, orgdmg / 2, cc);
                    subdmg = 0;
                }
                continue;
            }
            if (enc == 58)
            {
                s = refchara_str(cdata(27, tc), 8);
                if (instr(s, 0, u8"/undead/"s) != -1)
                {
                    gdata(809) = 1;
                    dmghp(tc, orgdmg / 2, cc);
                    subdmg = 0;
                }
                continue;
            }
            i = enc / 10000;
            if (i != 0)
            {
                enc = enc % 10000;
                if (i == 7)
                {
                    if (orgdmg <= 1)
                    {
                        continue;
                    }
                    ele = enc;
                    if (cdata(0, tc) != 1)
                    {
                        continue;
                    }
                    gdata(809) = 1;
                    dmghp(
                        tc,
                        rnd(orgdmg * (100 + inv((40 + cnt * 2 + 1), cw)) / 1000
                            + 1)
                            + 5,
                        cc,
                        ele,
                        inv((40 + cnt * 2 + 1), cw) / 2 + 100);
                    subdmg = 0;
                    continue;
                }
                if (i == 8)
                {
                    if (cdata(0, tc) != 1)
                    {
                        continue;
                    }
                    if (enc >= 26)
                    {
                        continue;
                    }
                    tcbk = tc;
                    p = encprocref(1, enc);
                    if (p == 3000 || p == 10000)
                    {
                        tc = cc;
                    }
                    p = encprocref(5, enc);
                    enc = encprocref(0, enc);
                    tlocx = cdata(1, tc);
                    tlocy = cdata(2, tc);
                    if (rnd(100) < p)
                    {
                        efid = enc;
                        efp = inv(40 + cnt * 2 + 1, cw)
                            + sdata(attackskill, cc) * 10;
                        label_2176();
                    }
                    tc = tcbk;
                    continue;
                }
                continue;
            }
        }
    }
    if (ammoproc == 4)
    {
        txtef(9);
        txt(lang(
            name(cc) + u8"は時を止めた。"s,
            name(cc) + u8" stop"s + _s(cc) + u8" time."s));
        gdata(801) = 4;
    }
    if (ammoproc == 3)
    {
        if (cdata(0, tc) == 1)
        {
            gdata(809) = 1;
            dmghp(
                tc,
                orgdmg * 2 / 3,
                cc,
                rnd(11) + 50,
                sdata(attackskill, cc) * 10 + 100);
            subdmg = 0;
        }
    }
    return;
}
void label_2221()
{
    ++msgdup;
    txt(lang(
        u8"周囲を注意深く調べた。"s,
        u8"You search the surroundings carefully."s));
    if (gdata(20) == 35)
    {
        inv_getheader(-1);
        p = 9999;
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(21, cnt) != 5)
                {
                    continue;
                }
                if (inv(3, cnt) != 748)
                {
                    continue;
                }
                if (p
                    > dist(inv(5, cnt), inv(6, cnt), cdata(1, 0), cdata(2, 0)))
                {
                    p = dist(
                        inv(5, cnt), inv(6, cnt), cdata(1, 0), cdata(2, 0));
                }
            }
        }
        if (p != 9999)
        {
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    if (p <= 3)
                    {
                        txt(lang(
                            u8"辺りの空気は息苦しいほどの緊張に包まれている。"s,
                            u8"The air around you is filled with strained silence."s));
                    }
                    if (p <= 9)
                    {
                        txt(lang(
                            u8"微かだが、あなたの心臓はトクンと脈打った。"s,
                            u8"Your heart starts beating in your chest."s));
                        break;
                    }
                    if (p <= 16)
                    {
                        txt(lang(
                            u8"まだだ、まだ遠い…"s,
                            u8"Stll, still lying far ahead."s));
                        break;
                    }
                    txt(lang(
                        u8"あなたは青い水晶の存在を感じた。"s,
                        u8"You sense a blue crystal lying somewhere in this area."s));
                    break;
                }
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
        {
            y = cdata(2, cc) + cnt - 5;
            if (y < 0 || y >= mdata(1))
            {
                continue;
            }
            {
                int cnt = 0;
                for (int cnt_end = cnt + (11); cnt < cnt_end; ++cnt)
                {
                    x = cdata(1, cc) + cnt - 5;
                    if (x < 0 || x >= mdata(0))
                    {
                        continue;
                    }
                    if (map(x, y, 6) != 0)
                    {
                        cell_featread(x, y);
                        refx = x;
                        refy = y;
                        if (abs(cdata(2, cc) - y) <= 1
                            && abs(cdata(1, cc) - x) <= 1)
                        {
                            if (feat(1) == 14)
                            {
                                if (feat(0) == 0)
                                {
                                    label_1514();
                                    if (stat == 1)
                                    {
                                        label_2222();
                                        txt(lang(
                                            u8"罠を発見した。"s,
                                            u8"You discover a trap."s));
                                    }
                                }
                            }
                            if (feat(1) == 22)
                            {
                                label_1514();
                                if (stat == 1 || 0)
                                {
                                    label_2223();
                                    txt(lang(
                                        u8"隠れた通路を発見した。"s,
                                        u8"You discover a hidden path."s));
                                }
                            }
                        }
                        if (feat(1) == 32)
                        {
                            if (gdata(20) != 35)
                            {
                                if (cdata(1, cc) == x && cdata(2, cc) == y)
                                {
                                    snd(24);
                                    txt(lang(
                                        u8"なんと小さなメダルを見つけた！"s,
                                        u8"You find a small coin!"s));
                                    map(x, y, 6) = 0;
                                    itemcreate(-1, 622, x, y, 0);
                                }
                                else
                                {
                                    txtmore();
                                    if (dist(cdata(1, cc), cdata(2, cc), x, y)
                                        > 2)
                                    {
                                        txt(lang(
                                            u8"この辺りには何かがありそうな予感がする…"s,
                                            u8"You sense something."s));
                                    }
                                    else
                                    {
                                        txt(lang(
                                            u8"あなたは何かが輝くのを目にした。"s,
                                            u8"You see something shines."s));
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    cell_featread(cdata(1, cc), cdata(2, cc));
    if (feat(1) == 14)
    {
        if (feat(0) == tile_trap)
        {
            if (cdata(61, 0) == 1)
            {
                if (cc == 0)
                {
                    movx = cdata(1, cc);
                    movy = cdata(2, cc);
                    label_2144();
                }
            }
        }
    }
    if (feat(1) >= 24 && feat(1) <= 28)
    {
        rowactre(0) = 1;
        rowactre(1) = cdata(1, cc);
        rowactre(2) = cdata(2, cc);
        if (feat(1) == 24)
        {
            label_2158();
        }
        if (feat(1) == 27)
        {
            label_2158();
        }
        if (feat(1) == 26)
        {
            label_2156();
        }
        if (feat(1) == 25)
        {
            label_2159();
        }
        if (feat(1) == 28)
        {
            label_2157();
        }
    }
    label_2742();
    return;
}
void label_2222()
{
    cell_featset(refx, refy, tile_trap, -1, -1);
    return;
}
void label_2223()
{
    map(refx, refy, 0) = tile_tunnel;
    cell_featset(refx, refy, 0, 0);
    return;
}
void label_2224()
{
    if (cdata(52, cc) < 0)
    {
        txt(lang(
            u8"疲れ過ぎて無理だ。"s, u8"You are too exhausted to do that."s));
        label_1419();
        label_2743(false);
    }
    rowactre = 0;
    digx = tlocx;
    digy = tlocy;
    label_2159();
    label_2742();
    return;
}
void dipcursed(int prm_1078, int)
{
    if (refitem(inv(3, prm_1078), 5) == 57000)
    {
        if (inv(24, prm_1078) == 35)
        {
            txt(lang(
                itemname(prm_1078) + u8"は腐ってしまった…"s,
                ""s + itemname(prm_1078) + u8" rots."s));
            inv(27, prm_1078) = -1;
            inv(2, prm_1078) = 336;
            cell_refresh(inv(5, prm_1078), inv(6, prm_1078));
            return;
        }
        else
        {
            txt(lang(
                itemname(prm_1078) + u8"に変化はない。"s,
                ""s + itemname(prm_1078) + u8" remains unchanged."s));
            return;
        }
    }
    if (refitem(inv(3, prm_1078), 5) < 50000)
    {
        --inv(20, prm_1078);
        txt(lang(
            itemname(prm_1078) + u8"は錆びてしまった…"s,
            ""s + itemname(prm_1078) + u8" rusts."s));
        if (inv_getowner(prm_1078) != -1)
        {
            r1 = inv_getowner(prm_1078);
            label_1477();
        }
        return;
    }
    txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
    return;
}
void label_2227()
{
    if (inv(3, cidip) == 617)
    {
        item_separate(ci);
        item_num(cidip, -1);
        snd(13);
        txt(lang(
            itemname(cidip, 1) + u8"を"s + itemname(ci) + u8"に装着した。"s,
            u8"You bait "s + itemname(ci) + u8" with "s + itemname(cidip, 1)
                + u8"."s));
        if (inv(28, ci) == inv(25, cidip))
        {
            inv(9, ci) += rnd(10) + 15;
        }
        else
        {
            inv(9, ci) = rnd(10) + 15;
            inv(28, ci) = inv(25, cidip);
        }
        label_2742();
        return;
    }
    snd(17);
    if (refitem(inv(3, cidip), 5) == 52000)
    {
        if (refitem(inv(3, ci), 9) == 60001)
        {
            item_separate(ci);
            item_num(cidip, -1);
            if (inv(3, cidip) != 601)
            {
                txt(lang(
                    itemname(cidip, 1) + u8"を"s + itemname(ci)
                        + u8"に浸した。"s,
                    u8"You dip "s + itemname(ci) + u8" into "s
                        + itemname(cidip, 1) + u8"."s));
                txtmore();
                if (inv(3, ci) == 602)
                {
                    txt(lang(
                        u8"井戸は汚れた。"s, u8"The holy well is polluted."s));
                    label_2742();
                    return;
                }
                if (inv(27, ci) >= 20)
                {
                    txt(lang(
                        itemname(ci) + u8"は完全に枯れている。"s,
                        itemname(ci) + u8" is completely dry."s));
                    label_2742();
                    return;
                }
                txt(lang(
                    itemname(ci) + u8"は一瞬輝いた。"s,
                    itemname(ci) + u8" shines for a moment."s));
                if (inv(3, cidip) == 587)
                {
                    txt(lang(u8"こんな量では… "s, u8"Snow just melts."s));
                }
                else
                {
                    inv(25, ci) += rnd(3);
                }
                label_2742();
                return;
            }
            else
            {
                if (inv(25, ci) < -5 || inv(27, ci) >= 20
                    || inv(3, ci) == 602 && gdata(260) <= 0)
                {
                    valn = itemname(ci);
                    txt(lang(valn + u8"は涸れている。"s, valn + u8" is dry."s));
                    txtmore();
                    txt(lang(
                        u8"あっ！空き瓶を井戸に落としてしまった…"s,
                        u8"Ops! You drop the empty bottle into the well..."s));
                    label_2742();
                    return;
                }
                if (inv(3, ci) == 602)
                {
                    --gdata(260);
                    flt();
                    itemcreate(0, 516, -1, -1, 0);
                    if (stat != 0)
                    {
                        inv(17, ci) = 1;
                    }
                }
                else
                {
                    inv(25, ci) -= 3;
                    flt(20);
                    flttypemajor = 52000;
                    itemcreate(0, 0, -1, -1, 0);
                }
                txt(lang(
                    u8"空き瓶に水をすくった。"s,
                    u8"You draw water from the well into the empty bottle."s));
                txt(lang(
                    itemname(ci, 1) + u8"を手に入れた。"s,
                    u8"You get "s + itemname(ci, 1) + u8"."s));
                item_stack(0, ci, 1);
                label_2742();
                return;
            }
        }
    }
    if (inv(3, cidip) == 262)
    {
        if (refitem(inv(3, ci), 5) == 57000)
        {
            item_num(cidip, -1);
            item_separate(ci);
            txt(lang(
                itemname(ci) + u8"に"s + itemname(cidip, 1)
                    + u8"を混入した！あなたはにやりと笑った。"s,
                u8"You made aphrodisiac food! You grin."s));
            if (inv(17, cidip) <= -1)
            {
                dipcursed(ci);
            }
            ibitmod(14, ci, 1);
            label_2742();
            return;
        }
    }
    if (inv(3, cidip) == 620)
    {
        if (refitem(inv(3, ci), 5) == 57000)
        {
            item_num(cidip, -1);
            item_separate(ci);
            txt(lang(
                itemname(ci) + u8"に"s + itemname(cidip, 1)
                    + u8"を混入した！あなたはうしろめたさを感じた…"s,
                u8"You made aphrodisiac food! You kind of feel guilty..."s));
            if (inv(17, cidip) <= -1)
            {
                dipcursed(ci);
            }
            ibitmod(6, ci, 1);
            label_2742();
            return;
        }
    }
    if (inv(3, cidip) == 519)
    {
        if (inv(17, cidip) == 1)
        {
            in = inv(0, cidip);
        }
        else
        {
            in = 1;
            item_separate(ci);
        }
        item_num(cidip, -1);
        inv(22, ci) = inv(22, cidip);
        txt(lang(
            u8"あなたは"s + itemname(ci) + u8"を染めた。"s,
            u8"You dye "s + itemname(ci) + u8"."s));
        if (inv_getowner(ci) == -1)
        {
            cell_refresh(inv(5, ci), inv(6, ci));
        }
        if (inv(18, ci) != 0)
        {
            create_pcpic(cc, 1);
        }
        label_2742();
        return;
    }
    if (inv(3, cidip) == 566)
    {
        if (inv(17, cidip) == 1)
        {
            in = inv(0, cidip);
        }
        else
        {
            in = 1;
            item_separate(ci);
        }
        txt(lang(
            itemname(ci) + u8"に"s + itemname(cidip, 1) + u8"を塗りたくった。"s,
            u8"You put "s + itemname(cidip, 1) + u8" on "s + itemname(ci)
                + u8"."s));
        if (inv(17, cidip) <= -1)
        {
            dipcursed(ci);
        }
        else
        {
            ibitmod(1, ci, 1);
            txt(lang(
                itemname(ci) + u8"は酸から守られた。"s,
                itemname(ci) + u8" gain"s + _s2(in) + u8" acidproof."s));
        }
        item_num(cidip, -1);
        label_2742();
        return;
    }
    if (inv(3, cidip) == 736)
    {
        if (inv(17, cidip) == 1)
        {
            in = inv(0, cidip);
        }
        else
        {
            in = 1;
            item_separate(ci);
        }
        txt(lang(
            itemname(ci, in) + u8"に"s + itemname(cidip, 1)
                + u8"を塗りたくった。"s,
            u8"You put "s + itemname(cidip, 1) + u8" on "s + itemname(ci, in)
                + u8"."s));
        if (inv(17, cidip) <= -1)
        {
            dipcursed(ci);
        }
        else
        {
            if (inv(3, ci) == 567)
            {
                txt(lang(
                    u8"いいアイデアだ！しかし…"s, u8"A good idea! But..."s));
            }
            else
            {
                ibitmod(2, ci, 1);
                txt(lang(
                    itemname(ci) + u8"は熱から守られた。"s,
                    itemname(ci) + u8" gain"s + _s2(in) + u8" fireproof."s));
            }
        }
        item_num(cidip, -1);
        label_2742();
        return;
    }
    if (inv(3, cidip) == 516)
    {
        item_num(cidip, -1);
        if (inv(17, cidip) == 1)
        {
            txtef(2);
            txt(lang(
                itemname(ci) + u8"は銀色に輝いた。"s,
                itemname(ci) + u8" shine"s + _s2(inv(0, ci)) + u8" silvery."s));
            inv(17, ci) = 1;
            r1 = cc;
            label_1477();
            label_2742();
            return;
        }
        if (inv(17, cidip) <= -1)
        {
            txtef(8);
            txt(lang(
                itemname(ci) + u8"は黒いオーラに包まれた。"s,
                itemname(ci) + u8" "s + is2(inv(0, ci))
                    + u8" wrapped by a dark aura."s));
            inv(17, ci) = -1;
            r1 = cc;
            label_1477();
            label_2742();
            return;
        }
    }
    txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
    label_2742();
    return;
}
void label_2228()
{
    screenupdate = -1;
    label_1419();
    tc = cc;
    tlocx = cdata(1, cc);
    tlocy = cdata(2, cc);
    if (ibit(7, ci) == 1)
    {
        if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12
            < inv(9, ci))
        {
            txt(lang(
                u8"そのアイテムが次に使用できるのは"s + cnvdate(inv(9, ci), 1)
                    + u8"だ。"s,
                u8"This item will be useable again at "s
                    + cnvdate(inv(9, ci), 1) + u8"."s));
            label_1419();
            label_2743(false);
        }
        item_separate(ci);
        inv(9, ci) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12 + inv(27, ci);
    }
    if (ibit(4, ci) == 1)
    {
        if (inv(9, ci) <= 0)
        {
            txt(lang(u8"それはもう使えない。"s, u8"It's out of charge."s));
            label_1419();
            label_2743(false);
        }
        item_separate(ci);
        --inv(9, ci);
    }
    if (refitem(inv(3, ci), 9) == 58500)
    {
        label_2232();
        return;
    }
    if (refitem(inv(3, ci), 9) == 59500)
    {
        blendtool = ci;
        label_1922();
        return;
    }
    if (refitem(inv(3, ci), 9) == 60004)
    {
        if (gdata(90) < 15)
        {
            txt(lang(u8"まだ眠たくない。"s, u8"You don't feel sleepy yet."s));
            label_1419();
            label_2743(false);
        }
        gdata(91) = 100;
        label_2148();
        label_2742();
        return;
    }
    if (inv(3, ci) == 413 || inv(3, ci) == 414)
    {
        label_2082();
        return;
    }
    if (inv(3, ci) == 312 || inv(3, ci) == 313 || inv(3, ci) == 314
        || inv(3, ci) == 315)
    {
        atxid = 1;
        label_1866();
        label_2742();
        return;
    }
    if (inv(19, ci) == 1 || inv(19, ci) == 2 || inv(19, ci) == 3
        || inv(19, ci) == 4)
    {
        prodtype = inv(19, ci);
        snd(26);
        invctrl = 0;
        label_18552();
        label_2742();
        return;
    }
    if (ibit(10, ci))
    {
        if (inv(26, ci) < calcexpalive(inv(25, ci)) && 1)
        {
            txt(lang(
                u8"この武器はまだ血を吸い足りない。"s,
                u8"The weapon needs more blood."s));
        }
        else
        {
            txtnew();
            txt(lang(
                itemname(ci) + u8"は十分に血を吸い成長できる！"s,
                itemname(ci) + u8" sucked enough blood and ready to grow!"s));
            randomize(inv(23, ci));
            exrand_randomize(inv(23, ci));
            if (inv(25, ci) >= 4 + rnd(12))
            {
                txt(lang(
                    u8"しかし、なんだか様子がおかしい…"s,
                    u8"But you sense something weird."s));
            }
            txt(lang(u8"それは…"s, u8"It..."s));
            reftype = refitem(inv(3, ci), 5);
            listmax = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    randomize(inv(23, ci) + inv(25, ci) * 10 + cnt);
                    exrand_randomize(inv(23, ci) + inv(25, ci) * 10 + cnt);
                    encadd(
                        ci, randomenc(randomenclv(4)), randomencp(), 0, 0, 1);
                    if (stat != 0)
                    {
                        if (rtval == 34)
                        {
                            if (rnd(3))
                            {
                                continue;
                            }
                        }
                        list(0, listmax) = rtval;
                        list(1, listmax) = rtval(1);
                        val(0) = list(0, listmax);
                        val(1) = list(1, listmax);
                        val(2) = 0;
                        label_0247();
                        promptl(0, promptmax) = s;
                        promptl(1, promptmax) = u8"null"s;
                        promptl(2, promptmax) = ""s + promptmax;
                        ++promptmax;
                        ++listmax;
                    }
                }
            }
            list(0, listmax) = -1;
            ++listmax;
            s = lang(u8"ボーナス+1"s, u8"Bonus+1"s);
            promptl(0, promptmax) = s;
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
            val(0) = promptx;
            val(1) = prompty;
            val(2) = 400;
            val(3) = 1;
            label_2131();
            txtnew();
            if (rtval == -1)
            {
                txt(lang(
                    itemname(ci) + u8"は不満そうに震えた。"s,
                    itemname(ci) + u8" vibrates as if she is displeased."s));
            }
            else
            {
                if (list(0, rtval) == -1)
                {
                    ++inv(20, ci);
                }
                else
                {
                    encadd(ci, list(0, rtval), list(1, rtval), 0, 1);
                }
                txtef(2);
                txt(lang(
                    itemname(ci) + u8"は嬉しげに震えた。"s,
                    itemname(ci) + u8" vibrates as if she is pleased."s));
                randomize(inv(23, ci));
                exrand_randomize(inv(23, ci));
                if (inv(25, ci) >= 4 + rnd(12))
                {
                    txt(lang(
                        u8"その力は次第に脅威になっている。"s,
                        u8"Its power is becoming a threat."s));
                    encadd(ci, 45, 50);
                    if (stat == 0)
                    {
                        inv(68, ci) = 0;
                        txt(lang(
                            itemname(ci) + u8"はエンチャントを消した。"s,
                            itemname(ci) + u8" removes an enchantment."s));
                    }
                }
                inv(26, ci) = 0;
                ++inv(25, ci);
            }
            randomize();
            exrand_randomize();
        }
        r1 = cc;
        label_1477();
        label_1419();
        label_2743(false);
    }
    switch (inv(19, ci))
    {
    case 24:
        x = cdata(1, cc);
        y = cdata(2, cc);
        if (mdata(6) == 1)
        {
            txt(lang(u8"ここでは使えない。"s, u8"You can't place it here."s));
            label_1419();
            label_2743(false);
        }
        if (map(x, y, 6) != 0)
        {
            txt(lang(u8"ここには置けない。"s, u8"You can't place it here."s));
            label_2743(false);
        }
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        cell_featset(x, y, 0, 14, 7, cc);
        txt(lang(u8"地雷を設置した。"s, u8"You set up the mine."s));
        snd(58);
        goto label_2229_internal;
    case 44:
        if (inv_getowner(ci) != -1)
        {
            txt(lang(
                u8"床に置かないと使えない。"s,
                u8"You need to put it on the ground."s));
            label_1419();
            label_2743(false);
        }
        txt(lang(
            u8"あなたは"s + itemname(ci, 1) + u8"に座った。"s,
            u8"You sit on "s + itemname(ci, 1) + u8"."s));
        promptl(0, promptmax) = lang(u8"くつろぐ"s, u8"Relax."s);
        promptl(1, promptmax) = u8"null"s;
        promptl(2, promptmax) = ""s + 0;
        ++promptmax;
        if (inv(25, ci) != 1)
        {
            promptl(0, promptmax) =
                lang(u8"マイチェアにする"s, u8"It's my chair."s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 1;
            ++promptmax;
        }
        if (inv(25, ci) != 2)
        {
            promptl(0, promptmax) =
                lang(u8"お客用のチェアにする"s, u8"It's for my guest."s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 2;
            ++promptmax;
        }
        if (inv(25, ci) != 0)
        {
            promptl(0, promptmax) =
                lang(u8"誰でも座っていい"s, u8"It's free to use."s);
            promptl(1, promptmax) = u8"null"s;
            promptl(2, promptmax) = ""s + 3;
            ++promptmax;
        }
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 260;
        val(3) = 1;
        label_2131();
        if (stat == 0)
        {
            goto label_2229_internal;
        }
        if (rtval == 0)
        {
            txt(lang(
                u8"あなたは存分にくつろいだ。"s,
                u8"You relax as much as you like."s));
            goto label_2229_internal;
        }
        if (rtval == 1)
        {
            txt(lang(
                itemname(ci, 1) + u8"はあなた専用の席になった！"s,
                itemname(ci, 1) + u8" is your seat now."s));
            inv(25, ci) = 1;
            goto label_2229_internal;
        }
        if (rtval == 2)
        {
            txt(lang(
                itemname(ci, 1) + u8"は訪問者の席になった！"s,
                itemname(ci, 1) + u8" is used by your guests now."s));
            inv(25, ci) = 2;
            goto label_2229_internal;
        }
        if (rtval == 3)
        {
            txt(lang(
                itemname(ci, 1) + u8"は誰でも座っていい席になった！"s,
                itemname(ci, 1) + u8" can be used by anyone."s));
            inv(25, ci) = 0;
            goto label_2229_internal;
        }
        goto label_2229_internal;
    case 8:
        if (mdata(6) != 5)
        {
            txt(lang(
                u8"それはここでは使えない。"s, u8"You can't use it here."s));
            label_1419();
            label_2743(false);
        }
        screenupdate = -1;
        label_1419();
        label_1714();
        return;
    case 19:
        txt(lang(u8"誰を対象にする？"s, u8"Make up who?"s));
        val = 0;
        label_2127();
        f = 0;
        if (stat != 0)
        {
            if (map(x, y, 1) > 0)
            {
                tc = map(x, y, 1) - 1;
                if (tc < 16)
                {
                    screenupdate = -1;
                    label_1419();
                    ccbk = cc;
                    cc = tc;
                    label_2044();
                    cc = ccbk;
                    f = 1;
                }
            }
        }
        if (f == 0)
        {
            txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        }
        label_1419();
        label_2743(false);
    case 15:
        efid = 184;
        label_2176();
        goto label_2229_internal;
    case 16:
        efid = 185;
        label_2176();
        goto label_2229_internal;
    case 17:
        efid = 183;
        label_2176();
        goto label_2229_internal;
    case 14:
        if (cc == 0)
        {
            if (inv(0, ci) < 5)
            {
                txt(lang(u8"雪が足りない…"s, u8"You need more snow."s));
                label_1419();
                label_2743(false);
            }
            removeitem(ci, 5);
        }
        flt();
        itemcreate(-1, 541, cdata(1, 0), cdata(2, 0), 0);
        if (synccheck(cc, -1))
        {
            snd(86);
            txt(lang(
                name(cc) + u8"は雪だるまを作った！"s,
                name(cc) + u8" make"s + _s(cc) + u8" a snow man!"s));
        }
        goto label_2229_internal;
    case 13:
        snd(6);
        if (gdata(37) == 0)
        {
            gdata(37) = 1;
            txt(lang(u8"松明を灯した。"s, u8"You light up the torch."s));
        }
        else
        {
            gdata(37) = 0;
            txt(lang(u8"松明を消した。"s, u8"You put out the fire."s));
        }
        r1 = 0;
        label_1477();
        goto label_2229_internal;
    case 9:
        label_2083();
        if (stat == 1)
        {
            label_2742();
            return;
        }
        else
        {
            label_1419();
            label_2743(false);
        }
        goto label_2229_internal;
    case 5:
        txt(lang(u8"何に聴診器を当てる？"s, u8"Auscultate who?"s));
        label_1419();
        val = 0;
        label_2127();
        if (stat == 0)
        {
            txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
            label_1419();
            label_2743(false);
        }
        tc = map(x, y, 1) - 1;
        if (tc == 0)
        {
            txt(lang(u8" *ドクン ドクン* "s, u8"You blush."s));
            gdata(94) = 0;
            label_2742();
            return;
        }
        if (tc > 0 && tc < 16)
        {
            if (cdata(0, tc) == 1)
            {
                gdata(94) = 0;
                if (cbit(966, tc) == 1)
                {
                    cbitmod(966, tc, 0);
                    txt(lang(
                        name(tc) + u8"から聴診器を外した。"s,
                        u8"You no longer watch on "s + his(tc)
                            + u8" health."s));
                    label_2742();
                    return;
                }
                txt(lang(
                    u8"あなたは"s + name(tc) + u8"に聴診器を当てた。"s,
                    u8"You start to keep an eye on "s + his(tc)
                        + u8" health."s));
                if (cdata(8, tc) == 1)
                {
                    txt(lang(
                        ""s + name(tc) + u8"は顔を赤らめた。"s,
                        name(tc) + u8" blush"s + _s(tc, 1) + u8"."s));
                    txtmore();
                    txtef(4);
                    txt(lang(u8"「キャー」"s, cnvtalk(u8"Pervert!"s)));
                }
                cbitmod(966, tc, 1);
                label_2742();
                return;
            }
        }
        txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        label_1419();
        label_2743(false);
    case 23:
        txt(lang(u8"誰を紐で結ぶ？"s, u8"Leash who?"s));
        label_1419();
        val = 0;
        label_2127();
        f = 0;
        if (stat != 0)
        {
            if (map(x, y, 1) > 0)
            {
                tc = map(x, y, 1) - 1;
                if (tc == 0)
                {
                    txt(lang(
                        u8"あなたは自分を紐でくくってみた…"s,
                        u8"You leash yourself..."s));
                }
                else
                {
                    if (cbit(968, tc) == 0)
                    {
                        if (tc >= 16)
                        {
                            if (rnd(5) == 0)
                            {
                                txt(lang(
                                    name(tc)
                                        + u8"が激しく抵抗したため紐は切れた。"s,
                                    u8"The leash is cut as "s + name(tc)
                                        + u8" resists."s));
                                --inv(0, ci);
                                cell_refresh(inv(5, ci), inv(6, ci));
                                label_1521();
                                goto label_2229_internal;
                            }
                        }
                        cbitmod(968, tc, 1);
                        txt(lang(
                            u8"あなたは"s + name(tc)
                                + u8"を紐でくくりつけた。"s,
                            u8"You leash "s + name(tc) + u8"."s));
                        txtef(9);
                        txt(lang(
                            name(tc) + u8"は呻き声を洩らした。「アン…♪」"s,
                            name(tc) + u8" gasp"s + _s(tc) + u8", "s
                                + cnvtalk(u8"Pervert!"s)));
                    }
                    else
                    {
                        cbitmod(968, tc, 0);
                        txt(lang(
                            u8"あなたは"s + name(tc)
                                + u8"にくくりつけた紐をほどいた。"s,
                            u8"You unleash "s + name(tc) + u8"."s));
                        txtef(9);
                        txt(lang(
                            name(tc) + u8"は呻き声を洩らした。「はぁはぁ…」"s,
                            name(tc) + u8" gasp"s + _s(tc) + u8", "s
                                + cnvtalk(u8"D-don't sto....N-nothing!"s)));
                    }
                }
                animeload(8, tc);
                f = 1;
            }
        }
        if (f == 0)
        {
            txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        }
        goto label_2229_internal;
    case 45:
        if (gdata(20) == 35)
        {
            txt(lang(
                u8"このエリアでは使えない。"s,
                u8"You cant use it in this area."s));
            label_1419();
            label_2743(false);
        }
        txt(lang(u8"誰を吊るす？"s, u8"Hang who?"s));
        label_1419();
        val = 0;
        label_2127();
        f = 0;
        if (stat != 0)
        {
            if (map(x, y, 1) > 0)
            {
                tc = map(x, y, 1) - 1;
                if (cdata(50, tc) >= cdata(51, tc) / 5)
                {
                    txt(lang(
                        u8"もっと弱らせないと吊るせない。"s,
                        u8"The target needs to be weakened."s));
                    label_2743(false);
                }
                if (tc != 0)
                {
                    if (tc < 16)
                    {
                        txt(lang(
                            u8"仲間を吊るすなんてとんでもない！"s,
                            u8"Hanging your ally is a brutal idea!"s));
                        label_2743(false);
                    }
                }
                if (cbit(985, tc))
                {
                    txt(lang(
                        u8"それは既に吊るされている。"s,
                        u8"It's already hanged up."s));
                    label_2743(false);
                }
                if (tc == 0)
                {
                    txt(lang(
                        u8"あなたは自分を吊るそうと思ったがやめた…"s,
                        u8"You try to hang yourself but rethink..."s));
                }
                else
                {
                    snd(58);
                    cbitmod(985, tc, 1);
                    txt(lang(
                        u8"あなたは"s + name(tc) + u8"を吊るした。"s,
                        u8"You hang up "s + name(tc) + u8"."s));
                    txt(lang(
                        name(tc) + u8"は呻き声を洩らした。「アン…♪」"s,
                        name(tc) + u8" gasp"s + _s(tc) + u8", "s
                            + cnvtalk(u8"Pervert!"s)));
                    animeload(8, tc);
                    --inv(0, ci);
                    cell_refresh(inv(5, ci), inv(6, ci));
                    label_1521();
                }
                f = 1;
            }
        }
        if (f == 0)
        {
            txt(lang(u8"それは無理だ。"s, u8"It's impossible."s));
        }
        goto label_2229_internal;
    case 6:
        txt(lang(
            itemname(ci, 1) + u8"再生した。"s,
            u8"You play "s + itemname(ci, 1) + u8"."s));
        music = inv(25, ci) + 50 + 1;
        if (music >= 91)
        {
            music = 90;
        }
        mdata(13) = music;
        label_0068();
        goto label_2229_internal;
    case 10:
        screenupdate = -1;
        label_1419();
        label_2727();
        return;
    case 7:
        if (inv(21, ci) != 3)
        {
            if (mdata(7) == 0 || gdata(20) == 13 || gdata(20) == 30)
            {
                if (gdata(20) == 2)
                {
                    txt(lang(
                        u8"ワールドマップで建設するべきだ。"s,
                        u8"You can only build it in the world map."s));
                }
                else
                {
                    txt(lang(
                        u8"ここには建てられない。"s,
                        u8"You can't build it here."s));
                }
                label_1419();
                label_2743(false);
            }
            gdata(91) = 101;
            label_2148();
            label_2742();
            return;
        }
        if (adata(16, gdata(20)) == 8)
        {
            if (gdata(22) == adata(10, gdata(20)))
            {
                if (adata(20, gdata(20)) != -1)
                {
                    txt(lang(
                        u8"クエストを放棄してシェルターに非難する？"s,
                        u8"Really give up the quest and evacuate to the shelter?"s));
                    promptl(0, 0) = stryes;
                    promptl(1, 0) = u8"y"s;
                    promptl(2, 0) = u8"0"s;
                    promptl(0, 1) = strno;
                    promptl(1, 1) = u8"n"s;
                    promptl(2, 1) = u8"1"s;
                    promptmax = 2;
                    val(0) = promptx;
                    val(1) = prompty;
                    val(2) = 160;
                    val(3) = 1;
                    label_2131();
                    if (rtval != 0)
                    {
                        label_1419();
                        label_2743(false);
                    }
                }
            }
        }
        gdata(91) = 102;
        label_2148();
        goto label_2229_internal;
    case 11:
        if (moneybox(inv(26, ci)) > cdata(30, 0))
        {
            txt(lang(
                u8"金貨が足りない…"s, u8"You count your coins and sigh..."s));
            label_1419();
            label_2743(false);
        }
        if (inv(25, ci) >= 1000000000)
        {
            txt(lang(u8"貯金箱は一杯だ。"s, u8"The money box if ull."s));
            label_1419();
            label_2743(false);
        }
        item_separate(ci);
        snd(12);
        cdata(30, 0) -= moneybox(inv(26, ci));
        inv(25, ci) += moneybox(inv(26, ci));
        inv(7, ci) += 100;
        goto label_2229_internal;
    case 20:
        efid = 458;
        efp = 400;
        label_2176();
        goto label_2229_internal;
    case 47:
        if (gdata(20) != 35)
        {
            txt(lang(u8"それは鈍く輝いた。"s, u8"It glows dully."s));
            goto label_2229_internal;
        }
        if (inv(21, ci) != 5)
        {
            txt(lang(
                u8"水晶には領域の記憶が宿っていない。この場所の所有者が配置した水晶を探す必要がある。"s,
                u8"The crystal isn't filled with the memory fo this place. You need to find ones placed by the owner of this area."s));
            goto label_2229_internal;
        }
        allyctrl = 0;
        label_2018();
        if (stat != 1)
        {
            goto label_2229_internal;
        }
        snd(118);
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        goto label_2229_internal;
    case 22:
        snd(118);
        if (mdata(6) != 3 && mdata(6) != 2)
        {
            txt(lang(
                u8"それは街でしか使えない。"s,
                u8"You can only use it in a town."s));
            goto label_2229_internal;
        }
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        txt(lang(
            u8"突然、あなたの目の前に異次元へのゲートが現れた。"s,
            u8"Suddenly, a strange gate opens."s));
        comctrl = 2;
        label_19432();
        if (stat == 1)
        {
            label_2114();
            return;
        }
        goto label_2229_internal;
    case 49:
        txt(lang(
            itemname(ci, 1) + u8"を振った。"s,
            u8"You swing "s + itemname(ci, 1) + u8"."s));
        snd(58);
        efid = 49;
        efp = 100;
        label_2176();
        goto label_2229_internal;
    case 21:
        txt(lang(
            itemname(ci, 1) + u8"を振った。"s,
            u8"You swing "s + itemname(ci, 1) + u8"."s));
        snd(58);
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        fixmaterial = inv(24, ci);
        efid = 21;
        efp = 500;
        label_2176();
        goto label_2229_internal;
    case 25:
        txt(lang(
            itemname(ci, 1) + u8"を使った。"s,
            u8"You hold "s + itemname(ci, 1) + u8" up high."s));
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        efid = 637;
        efp = 500;
        label_2176();
        goto label_2229_internal;
    case 26:
        txt(lang(
            itemname(ci, 1) + u8"を始動させた。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        gdata(262) = 1;
        snd(64);
        txtef(5);
        txt(lang(
            u8"オパートス「フハハハ！間もなく、この地に変動が起こるであろう！」"s,
            u8"A voice echos, "s
                + cnvtalk(u8"Muwahahaha! I shall shake the land for you!"s)));
        goto label_2229_internal;
    case 34:
        txt(lang(
            itemname(ci, 1) + u8"を始動させた。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        txtef(5);
        txt(lang(
            u8"ジュア「べ、別にあんたのためにするんじゃないからね。バカっ！」"s,
            u8"A voice echos, "s
                + cnvtalk(u8"I-I'm not doing for you! Silly!"s)));
        efid = 637;
        efp = 5000;
        label_2176();
        goto label_2229_internal;
    case 43:
        txt(lang(
            itemname(ci, 1) + u8"を始動させた。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        snd(64);
        txtef(5);
        txt(lang(
            u8"エヘカトル「呼んだ？呼んだ？」"s,
            u8"A voice echos, "s + cnvtalk(u8"Did you call me? Call me?"s)));
        addbuff(tc, 19, 77, 2500);
        goto label_2229_internal;
    case 27:
        txt(lang(
            itemname(ci, 1) + u8"を始動させた。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        snd(64);
        txtef(5);
        if (gdata(17) == 1)
        {
            txt(lang(
                u8"ルルウィ「あさはかね。エーテルの風を止めてあげるとでも思ったの？」"s,
                u8"A rather angry voice echos, "s
                    + cnvtalk(
                          u8"Listen my little slave. Did you really think I would turn a hand in this filthy wind for you?"s)));
            goto label_2229_internal;
        }
        p = gdata(17);
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                if (rnd(10) == 0)
                {
                    gdata(17) = 0;
                }
                if (rnd(10) == 0)
                {
                    gdata(17) = 3;
                }
                if (rnd(15) == 0)
                {
                    gdata(17) = 4;
                }
                if (rnd(20) == 0)
                {
                    gdata(17) = 2;
                }
                if (gdata(17) != p)
                {
                    break;
                }
            }
        }
        txt(lang(
            u8"ルルウィ「あらあら、定命の分際でそんなおねだりするの？ウフフ…今回は特別よ」"s,
            u8"An impish voice echos, "s
                + cnvtalk(
                      u8"Ah you ask too much for a mortal. Still, it is hard to refuse a call from such a pretty slave like you."s)));
        txtmore();
        txt(lang(u8"天候が変わった。"s, u8"The weather changes."s));
        envonly = 1;
        label_0068();
        goto label_2229_internal;
    case 28:
        if (mdata(6) == 1)
        {
            txt(lang(u8"ここでは使えない。"s, u8"You can't place it here."s));
            label_1419();
            label_2743(false);
        }
        if (cdata(1, 0) != 33 || cdata(2, 0) != 16)
        {
            if (gdata(463) == 1)
            {
                txt(lang(
                    u8"ここはクエストの目標位置ではない。本当にここに設置する？"s,
                    u8"This location is not your quest goal. Really place it here?"s));
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                if (rtval != 0)
                {
                    label_1419();
                    label_2743(false);
                }
            }
        }
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        txt(lang(
            u8"原子爆弾を設置した。逃げろォー！"s,
            u8"You set up the nuke...now run!!"s));
        snd(58);
        addmef(cdata(1, cc), cdata(2, cc), 7, 632, 10, 100, cc);
        goto label_2229_internal;
    case 48:
        if (gdata(20) != 35 || usermapid == 0)
        {
            txt(lang(
                u8"それはこの場所ではみすぼらしく見える。"s,
                u8"It looks so dumb here."s));
            goto label_2229_internal;
        }
        txt(lang(
            u8"この石像を見つめていると、何かを投げつけたくなってうずうずしてきた！"s,
            u8"Watching this strange statue makes you want to throw something at it!"s));
        goto label_2229_internal;
    case 29:
        trait(inv(25, ci)) = 1;
        if (inv(25, ci) == 169)
        {
            trait(162) = 0;
        }
        if (inv(25, ci) == 162)
        {
            trait(169) = 0;
        }
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        txt(lang(
            u8"あなたは新たなフィートを獲得した！"s,
            u8"You gain a new feat."s));
        animeload(10, 0);
        r1 = cc;
        label_1477();
        goto label_2229_internal;
    case 30:
        txt(lang(
            itemname(ci, 1) + u8"を始動させた。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        efid = inv(25, ci);
        efp = inv(26, ci);
        tc = cc;
        efstatus = 0;
        label_2176();
        goto label_2229_internal;
    case 41:
        if (gdata(827) > cdata(38, 0))
        {
            txt(lang(
                u8"クミロミの声がした。「ダメ…経験…足りない…」"s,
                u8"Kumiromi talks to you, "s
                    + cnvtalk(
                          u8"No...you aren't...experienced enough...for this..."s)));
            label_1419();
            label_2743(false);
        }
        snd(64);
        gdata(827) += 10;
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        ++gdata(93);
        txt(lang(
            u8"「…よく…経験をつんだね…酬いてあげる…」"s,
            cnvtalk(
                u8"...You have acquired enough...experience...I shall reward you..."s)));
        txtef(5);
        txt(lang(
            u8"クミロミはあなたを祝福した。あなたは新たなフィートを取得できるようになった！"s,
            u8"Kumiromi blesses you. You can obtain one more feat now!"s));
        goto label_2229_internal;
    case 42:
        snd(38);
        txtef(8);
        txt(lang(
            u8"何だか嫌な予感がする…"s,
            u8"You have a bad feeling about this..."s));
        goto label_2229_internal;
    case 46:
        txtnew();
        txt(lang(u8"本当に首を吊る？"s, u8"Really hang yourself?"s));
        promptl(0, 0) = stryes;
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptl(0, 1) = strno;
        promptl(1, 1) = u8"n"s;
        promptl(2, 1) = u8"1"s;
        promptmax = 2;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 160;
        val(3) = 1;
        label_2131();
        if (rtval != 0)
        {
            label_2742();
            return;
        }
        dmghp(0, 99999, -20);
        goto label_2229_internal;
    case 33:
        if (inv(23, ci) == 0)
        {
            txt(lang(
                u8"モンスターボールは空っぽだ。"s, u8"This ball is empty."s));
            goto label_2229_internal;
        }
        if (get_freeally() == 0)
        {
            txt(lang(
                u8"仲間はこれ以上増やせない。"s, u8"Your party is full."s));
            goto label_2229_internal;
        }
        txt(lang(
            itemname(ci, 1) + u8"を使用した。"s,
            u8"You activate "s + itemname(ci, 1) + u8"."s));
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        flt();
        novoidlv = 1;
        characreate(56, inv(23, ci), -3, 0);
        rc = 56;
        label_2659();
        goto label_2229_internal;
    case 31:
        x = cdata(1, cc);
        y = cdata(2, cc);
        cell_featread(x, y);
        if (feat(1) != 29)
        {
            txt(lang(
                u8"それは種を植えた場所で使わなければならない。"s,
                u8"You don't see any plant on the ground."s));
            goto label_2229_internal;
        }
        if (feat == tile_plant + 2)
        {
            txt(lang(
                u8"この作物は既に成長しきっている。"s,
                u8"The plant has already grown full."s));
            goto label_2229_internal;
        }
        if (feat == tile_plant + 3)
        {
            feat = tile_plant + 1;
            label_2234();
            txt(lang(u8"枯れた植物に生命が宿った。"s, u8"The plant revives."s));
        }
        else
        {
            ++feat;
            txt(lang(u8"植物は成長した。"s, u8"The plant grows."s));
        }
        cell_featset(x, y, feat, feat(1), feat(2), feat(3));
        animeload(8, 0);
        goto label_2229_internal;
    case 32:
        txtnew();
        txt(lang(
            u8"まずは素体となる仲間を選ぶ必要がある。"s,
            u8"Choose an original body."s));
        txtmore();
        rc = 0;
        allyctrl = 5;
        label_1959();
        if (stat == -1)
        {
            label_2742();
            return;
        }
        rc = stat;
        txtnew();
        txt(lang(
            u8"遺伝子を取り出す仲間を選ぶ必要がある。この仲間は合成後、永久に失われる。"s,
            u8"Choose a gene. Once you extract a gene, the subject will be lost forever."s));
        txtmore();
        allyctrl = 5;
        label_1959();
        if (stat == -1)
        {
            label_2742();
            return;
        }
        tc = stat;
        label_1419();
        txtnew();
        txt(lang(
            u8"本当に"s + cdatan(0, rc) + u8"に"s + cdatan(0, tc)
                + u8"の遺伝子を組み込む？"s,
            u8"Really add "s + cdatan(0, tc) + u8"'s gene to "s + cdatan(0, rc)
                + u8"?"s));
        promptl(0, 0) = stryes;
        promptl(1, 0) = u8"y"s;
        promptl(2, 0) = u8"0"s;
        promptl(0, 1) = strno;
        promptl(1, 1) = u8"n"s;
        promptl(2, 1) = u8"1"s;
        promptmax = 2;
        val(0) = promptx;
        val(1) = prompty;
        val(2) = 160;
        val(3) = 1;
        label_2131();
        if (rtval != 0)
        {
            label_2742();
            return;
        }
        txtnew();
        txtef(5);
        txt(lang(
            ""s + cdatan(0, rc) + u8"は"s + cdatan(0, tc)
                + u8"の遺伝子を受けついだ！"s,
            ""s + cdatan(0, rc) + u8" has inherited "s + cdatan(0, tc)
                + u8"'s gene!"s));
        animeid = 20;
        anic = rc;
        label_1426();
        label_2231();
        if (stat != -1)
        {
            cdata(stat, rc) = rtval * 10000;
            txtef(2);
            txt(lang(
                cdatan(0, rc) + u8"は新しい"s + bodyn(rtval) + u8"を得た！"s,
                cdatan(0, rc) + u8" gains new "s + bodyn(rtval) + u8"!"s));
            r1 = rc;
            label_1452();
        }
        label_2230();
        if (stat != 0)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                {
                    if (rtval(cnt) == -1)
                    {
                        break;
                    }
                    skillgain(rc, rtval(cnt), 1);
                    txtef(2);
                    txt(lang(
                        cdatan(0, rc) + u8"は"s + skillname(rtval(cnt))
                            + u8"の技術を覚えた！"s,
                        cdatan(0, rc) + u8" learns "s + skillname(rtval(cnt))
                            + u8" skill!"s));
                }
            }
        }
        if (cdata(38, tc) > cdata(38, rc))
        {
            lv = (cdata(38, tc) - cdata(38, rc)) / 2 + 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (lv); cnt < cnt_end; ++cnt)
                {
                    r1 = rc;
                    r2 = 1;
                    label_1454();
                }
            }
            txtef(2);
            txt(lang(
                cdatan(0, rc) + u8"はレベル"s + cdata(38, rc) + u8"になった！"s,
                cdatan(0, rc) + u8" is now level "s + cdata(38, rc) + u8"!"s));
            listmax = 0;
            {
                int cnt = 10;
                for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
                {
                    list(0, listmax) = cnt;
                    list(1, listmax) = sorg(cnt, tc);
                    ++listmax;
                }
            }
            label_2056();
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    p = listmax - cnt - 1;
                    i = list(0, p);
                    if (list(1, p) > sorg(i, rc))
                    {
                        p = (list(1, p) - sorg(i, rc)) * 500;
                        p = limit(p * 10 / limit(lv, 2, 10), 1000, 10000);
                        skillmod(i, rc, p);
                        txtmore();
                    }
                }
            }
        }
        chara_vanquish(tc);
        autosave = 1 * (gdata(20) != 35);
        skillexp(151, 0, 1200);
        randomize();
        screenupdate = -1;
        label_1419();
        cc = rc;
        csctrl = 4;
        snd(26);
        label_20332();
        cc = 0;
        goto label_2229_internal;
    case 35:
        txt(lang(
            u8"あなたはアイアンメイデンの中に入った。"s,
            u8"You enter the iron maiden."s));
        txtmore();
        txtef(9);
        txt(lang(u8"「わくわく♪」"s, cnvtalk(u8"Interesting!"s)));
        txtmore();
        txt(lang(
            u8"突然誰かが蓋を閉めた。"s,
            u8"Suddenly, someone closes the door."s));
        txtmore();
        txtef(9);
        txt(lang(u8"「ニヤリ」"s, u8"*Grin*"s));
        dmghp(0, 9999, -18);
        goto label_2229_internal;
    case 36:
        txt(lang(
            u8"あなたはギロチンに首をつっこんでみた。"s,
            u8"You set your head on the guillotine."s));
        txtmore();
        txtef(9);
        txt(lang(u8"「わくわく♪」"s, cnvtalk(u8"Interesting!"s)));
        txtmore();
        txt(lang(
            u8"突然誰かがギロチンの刃を落とした。"s,
            u8"Suddenly, someone activates the guillotine."s));
        txtmore();
        txtef(9);
        txt(lang(u8"「ニヤリ」"s, u8"*Grin*"s));
        dmghp(0, 9999, -19);
        goto label_2229_internal;
    case 39:
        txtef(9);
        txt(lang(u8" *ピーーーー* "s, u8"*Peeeeeeeeeep* "s));
        make_sound(cdata(1, cc), cdata(2, cc), 10, 1, 1, cc);
        goto label_2229_internal;
    case 37:
        tcgdeck();
        label_1746();
        label_1417();
        txtnew();
        txt(lang(u8"デッキをしまった。"s, u8"You put away the deck."s));
        goto label_2229_internal;
    case 38:
        inv_find(701, 0);
        if (stat == -1)
        {
            txt(lang(
                u8"デッキを所持していない。"s, u8"You don't have a deck."s));
            label_1419();
            label_2743(false);
        }
        snd(71);
        --inv(0, ci);
        cell_refresh(inv(5, ci), inv(6, ci));
        txt(lang(
            itemname(ci, 1) + u8"をデッキに加えた。"s,
            u8"You add "s + itemname(ci, 1) + u8" to your deck."s));
        ++card(0, inv(23, ci));
        goto label_2229_internal;
    }
label_2229_internal:
    label_1521();
    label_2742();
    return;
}
int label_2230()
{
    if (cbit(23, tc) || cbit(27, tc))
    {
        stat = 0;
        return stat;
    }
    randomize(cdata(27, tc));
    dbmax = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            rtval = rnd(40) + 150;
            if (sdata(rtval, rc) == 0)
            {
                if (sdata(rtval, tc) > 0)
                {
                    dblist(0, dbmax) = rtval;
                    ++dbmax;
                }
            }
        }
    }
    rtval(0) = dblist(0, 0);
    rtval(1) = -1;
    if (dbmax >= 2)
    {
        if (rnd(3) == 0)
        {
            {
                int cnt = 1;
                for (int cnt_end = cnt + (dbmax - 1); cnt < cnt_end; ++cnt)
                {
                    if (dblist(0, cnt) != rtval)
                    {
                        rtval(1) = dblist(0, cnt);
                        break;
                    }
                }
            }
        }
    }
    randomize();
    stat = dbmax;
    return stat;
}
int label_2231()
{
    dbmax = 0;
    s(1) = refchara_str(cdata(27, tc), 8);
    if (instr(s(1), 0, u8"/man/"s) != -1)
    {
        stat = -1;
        return stat;
    }
    if (cbit(23, tc) || cbit(27, tc))
    {
        stat = -1;
        return stat;
    }
    rtval(1) = -1;
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            if (cdata(cnt, rc) == 0)
            {
                rtval(1) = cnt;
            }
        }
    }
    if (rtval(1) == -1)
    {
        stat = -1;
        return stat;
    }
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            f = cdata(cnt, tc) / 10000;
            if (f == 11 || f == 10 || f == 4)
            {
                continue;
            }
            if (f != 0)
            {
                dblist(0, dbmax) = f;
                ++dbmax;
            }
        }
    }
    if (dbmax == 0)
    {
        stat = -1;
        return stat;
    }
    randomize(cdata(27, tc));
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            rtval = dblist(0, rnd(dbmax));
            f = 0;
            {
                int cnt = 100;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    if (cdata(cnt, rc) == 0)
                    {
                        continue;
                    }
                    if (cdata(cnt, rc) / 10000 == rtval)
                    {
                        f = 1;
                    }
                }
            }
            if (f)
            {
                break;
            }
        }
    }
    if (f == 0)
    {
        randomize();
        stat = rtval(1);
        return stat;
    }
    DIM3(dblist, 2, 800);
    {
        int cnt = 100;
        for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
        {
            ++dblist(0, cdata(cnt, tc) / 10000);
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (25); cnt < cnt_end; ++cnt)
        {
            rtval = rnd(15) + 1;
            f = 0;
            {
                int cnt = 100;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    if (cdata(cnt, rc) / 10000 == rtval)
                    {
                        ++f;
                    }
                }
            }
            if (f < dblist(0, rtval))
            {
                f = -1;
                break;
            }
        }
    }
    randomize();
    if (f == -1)
    {
        stat = rtval(1);
        return stat;
    }
    else
    {
        stat = -1;
        return stat;
    }
}
void label_2232()
{
    screenupdate = -1;
    label_1419();
    if (mdata(6) == 1 || mdata(6) == 3 || mdata(6) == 2)
    {
        txt(lang(
            u8"この場所には埋められない。"s, u8"You can't plant it here."s));
        label_1419();
        label_2743(false);
    }
    if (map(cdata(1, cc), cdata(2, cc), 6) != 0)
    {
        txt(lang(
            u8"この場所には埋められない。"s, u8"You can't plant it here."s));
        label_1419();
        label_2743(false);
    }
    if (chipm(0, map(cdata(1, 0), cdata(2, 0), 0)) == 2)
    {
        val = 1;
    }
    else
    {
        val = 0;
    }
    feat(0) = tile_plant;
    feat(1) = 29;
    feat(2) = inv(24, ci);
    label_2234();
    if (val)
    {
        s = u8"畑に"s;
    }
    else
    {
        s = "";
    }
    s += lang(
        ""s + itemname(ci, 1) + u8"を埋めた。"s,
        u8"You plant "s + itemname(ci, 1));
    txt(s);
    snd(55);
    removeitem(ci, 1);
    cell_featset(
        cdata(1, cc), cdata(2, cc), tile_plant, 29, inv(24, ci), feat(3));
    skillexp(180, 0, 300);
    label_2742();
    return;
}
void label_2233()
{
    --feat(3);
    if (feat(3) % 50 == 0)
    {
        if (feat(3) >= 50)
        {
            feat = tile_plant + 3;
        }
        else
        {
            ++feat;
            label_2234();
        }
    }
    return;
}
void label_2234()
{
    feat(3) = 4 + rnd(5);
    p = 10;
    if (feat(2) == 41)
    {
        p = 15;
    }
    if (feat(2) == 42)
    {
        p = 25;
    }
    if (feat(2) == 38)
    {
        p = 30;
    }
    if (feat(2) == 39)
    {
        p = 25;
    }
    if (feat(2) == 40)
    {
        p = 40;
    }
    if (val == 0)
    {
        p = p * 3 / 2;
    }
    if (feat == tile_plant)
    {
        if (gdata(17) < 3)
        {
            p = p * 2;
        }
    }
    if (sdata(180, 0) < rnd(p + 1) || rnd(20) == 0)
    {
        feat(3) += 50;
    }
    return;
}
void label_2235()
{
    p = 15;
    if (feat(2) == 41)
    {
        p = 25;
    }
    if (feat(2) == 42)
    {
        p = 30;
    }
    if (feat(2) == 38)
    {
        p = 40;
    }
    if (feat(2) == 39)
    {
        p = 35;
    }
    if (val == 0)
    {
        p = p * 2;
    }
    if (gdata(17) < 3)
    {
        p = p * 4 / 3;
    }
    if (sdata(180, 0) < rnd(p + 1) || rnd(5) == 0 || feat(2) == 40)
    {
        map(cdata(1, 0), cdata(2, 0), 6) = 0;
        return;
    }
    feat = tile_plant;
    label_2234();
    cell_featset(cdata(1, cc), cdata(2, cc), feat, feat(1), feat(2), feat(3));
    txtef(2);
    txt(lang(u8"新しい芽が息吹いている！"s, u8"A new plant grows!"s));
    return;
}
void label_2236()
{
    skillexp(180, 0, 75);
    snd(55);
    flt(sdata(180, 0) / 2 + 15, 2);
    dbid = 0;
    if (feat(2) == 39)
    {
        flttypemajor = fsetplantunknown(rnd(length(fsetplantunknown)));
        if (rnd(100) == 0)
        {
            dbid = 559;
        }
    }
    if (feat(2) == 40 || feat(2) == 39 && rnd(50) == 0)
    {
        flttypemajor = fsetplantartifact(rnd(length(fsetplantartifact)));
        fixlv = 4;
        autosave = 1 * (gdata(20) != 35);
    }
    if (feat(2) == 36)
    {
        flttypeminor = 57003;
    }
    if (feat(2) == 37)
    {
        flttypeminor = 57004;
    }
    if (feat(2) == 38)
    {
        flttypeminor = 58005;
    }
    if (feat(2) == 41)
    {
        flttypeminor = 77001;
    }
    if (feat(2) == 42)
    {
        flttypemajor = 56000;
    }
    itemcreate(0, dbid, -1, -1, 0);
    txt(lang(
        itemname(ci, 1) + u8"を収穫した。"s,
        u8"You harvest "s + itemname(ci, 1) + u8"."s));
    item_stack(0, ci, 1);
    return;
}
void label_2237()
{
    gdata(91) = 105;
    label_2148();
    return;
}
int clientguide(int)
{
    int i_at_m193 = 0;
    int f_at_m193 = 0;
    j_at_m193 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            p_at_m193 = gdata(160 + cnt);
            if (qdata(8, p_at_m193) == 1)
            {
                if (gdata(22) == 1)
                {
                    i_at_m193 = -1;
                    if (qdata(3, p_at_m193) == 1011)
                    {
                        if (qdata(1, p_at_m193) == gdata(20))
                        {
                            i_at_m193 = qdata(10, p_at_m193);
                        }
                    }
                    if (qdata(3, p_at_m193) == 1002)
                    {
                        if (qdata(1, qdata(10, p_at_m193)) == gdata(20))
                        {
                            i_at_m193 = qdata(0, qdata(10, p_at_m193));
                        }
                    }
                    if (i_at_m193 != -1)
                    {
                        f_at_m193 = 0;
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (cnt); cnt < cnt_end;
                                 ++cnt)
                            {
                                if (gdata(160 + cnt) == p_at_m193)
                                {
                                    f_at_m193 = 1;
                                    break;
                                }
                            }
                        }
                        if (f_at_m193 == 0)
                        {
                            rtval(j_at_m193) = i_at_m193;
                            ++j_at_m193;
                        }
                    }
                }
            }
        }
    }
    stat = j_at_m193;
    return stat;
}
int tradecheck(int prm_1081)
{
    j_at_m193 = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
        {
            p_at_m193 = gdata(160 + cnt);
            if (qdata(8, p_at_m193) == 1)
            {
                if (gdata(22) == 1)
                {
                    if (qdata(1, p_at_m193) == gdata(20))
                    {
                        if (prm_1081 == qdata(10, p_at_m193))
                        {
                            j_at_m193 = 1;
                            break;
                        }
                    }
                }
            }
        }
    }
    stat = j_at_m193;
    return stat;
}
void label_2241()
{
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\face1.bmp"s, 1);
    gsel(7);
    picload(exedir + u8"graphic\\ie_chat.bmp"s);
    gsel(0);
    return;
}
void label_2242()
{
    keyhalt = 1;
    if (cdata(150, tc) == 1005)
    {
        if (cfg_extrahelp)
        {
            if (gdata(207) == 0)
            {
                if (mode == 0)
                {
                    if (cdata(141, 0) == 0)
                    {
                        gdata(207) = 1;
                        ghelp = 7;
                        label_2701();
                        screenupdate = -1;
                        label_1419();
                    }
                }
            }
        }
    }
    if (cdata(150, tc) == 7)
    {
        if (cfg_extrahelp)
        {
            if (gdata(208) == 0)
            {
                if (mode == 0)
                {
                    if (cdata(141, 0) == 0)
                    {
                        gdata(208) = 1;
                        ghelp = 8;
                        label_2701();
                        screenupdate = -1;
                        label_1419();
                    }
                }
            }
        }
    }
    label_1882();
    if (scenemode == 0)
    {
        snd(99);
        label_1745();
    }
    cs = 0;
    chatflag = 0;
    chatesc = 1;
    if (cdata(9, tc) <= -1)
    {
        if (evnum == 0)
        {
            txt(lang(
                name(tc) + u8"は耳を貸さない。"s,
                name(tc) + u8" won't listen."s));
            questteleport = 0;
            label_1419();
            return;
        }
    }
    if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
            + gdata(10) * 24 * 30 * 12
        >= cdata(15, tc))
    {
        cdata(14, tc) = 100;
    }
    if (cdata(150, tc) >= 1000 && cdata(150, tc) < 2000
        || cdata(150, tc) == 2003)
    {
        invfile = cdata(153, tc);
        label_2262();
    }
    label_2241();
    if (scenemode == 1)
    {
        label_2243();
        return;
    }
    chatval(1) = 0;
    chatval(2) = 1;
    if (cdata(25, tc) == 6)
    {
        chatval(1) = cdata(27, tc);
        chatval(2) = 0;
    }
    if (evid() == 2)
    {
        label_2249();
        return;
    }
    if (evid() == 16)
    {
        label_2250();
        return;
    }
    if (cdata(251, tc) != 0)
    {
        listmax = 0;
        buff = u8"("s + name(tc)
            + lang(u8"はぐっすり眠っている…"s, u8" is sleeping."s) + u8")"s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strbye;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    }
    if (cdata(140, tc))
    {
        listmax = 0;
        buff = u8"("s + name(tc)
            + lang(u8"はお取り込み中だ…"s, u8" is in the middle of something."s)
            + u8")"s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strbye;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    }
    if (tc == 0)
    {
        label_2256();
        return;
    }
    if (cbit(982, tc))
    {
        cbitmod(982, tc, 0);
        label_2244();
        return;
    }
    if (chatval(1) != 0)
    {
        if (gdata(20) != 35)
        {
            if (tc >= 16)
            {
                label_2246();
                return;
            }
        }
    }
    if (questteleport == 1)
    {
        questteleport = 0;
        label_2252();
        return;
    }
    buff = "";
    label_2251();
    return;
}
void label_2243()
{
    listmax = 0;
    buff = buff;
    tc = tc * 1 + 0;
    list(0, listmax) = 0;
    listn(0, listmax) = strmore;
    ++listmax;
    chatesc = 1;
    label_2257();
    if (scenemode)
    {
        if (scene_cut == 1)
        {
            label_2256();
            return;
        }
    }
    label_2256();
    return;
}
void label_2244()
{
    listmax = 0;
    cc = 0;
    switch (cdata(150, tc))
    {
    case 13:
        if (gdata(11) == 1 && rnd(4))
        {
            listmax = 0;
            buff =
                lang(u8"明けましておめでとう"s + _da(2), u8"Happy new year!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            listmax = 0;
            buff = lang(
                u8"日ごろの感謝の意をこめてこれをあげる"s + _yo(),
                u8"I've brought you a gift today, here."s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            flt();
            itemcreate(-1, 752, cdata(1, 0), cdata(2, 0), 0);
            if (stat != 0)
            {
                inv(27, ci) = cdata(17, tc) + rnd(50);
            }
            txt(lang(
                name(tc) + u8"は"s + itemname(ci, 1) + u8"を置いていった。"s,
                name(tc) + u8" throws you "s + itemname(ci, 1) + u8"."s));
            label_2256();
            return;
        }
        if (cdata(17, tc) < 25)
        {
            listmax = 0;
            buff = lang(
                u8"貴様！見つけた"s + _yo(2),
                u8"You scum! You won't get away from me now!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            txt(lang(
                u8"「これでも食らうがいい"s + _yo(2) + u8"」"s,
                cnvtalk(u8"Eat this!"s)));
            if (rnd(2) == 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (28); cnt < cnt_end; ++cnt)
                    {
                        tlocx = cdata(1, tc) + rnd(3) - rnd(3);
                        tlocy = cdata(2, tc) - rnd(3) + rnd(3);
                        if (tlocx < 0 || tlocy < 0 || tlocx >= mdata(0)
                            || tlocy >= mdata(1))
                        {
                            continue;
                        }
                        if (tlocx == cdata(1, tc))
                        {
                            if (tlocy == cdata(2, tc))
                            {
                                continue;
                            }
                        }
                        txt(lang(
                            name(tc) + u8"は火炎瓶を投げた。"s,
                            name(tc) + u8" throws molotov."s));
                        snd(91);
                        ccbk = cc;
                        cc = tc;
                        animeid = 15;
                        aniref(0) = 223;
                        aniref(1) = 0;
                        anix = tlocx;
                        aniy = tlocy;
                        label_1426();
                        cc = ccbk;
                        addmef(tlocx, tlocy, 5, 24, rnd(15) + 20, 50, tc);
                        mapitem_fire(tlocx, tlocy);
                    }
                }
            }
            else
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (8 + rnd(6)); cnt < cnt_end; ++cnt)
                    {
                        flt();
                        itemcreate(-1, 704, -1, -1, 0);
                        txt(lang(
                            name(tc) + u8"は吐いた。"s,
                            name(tc) + u8" vomits."s));
                        snd(104);
                        await(10);
                        label_1419();
                    }
                }
            }
            label_2256();
            return;
        }
        if (cdata(17, tc) >= 100)
        {
            if (cbit(984, tc) == 0)
            {
                if (inv_getfreeid(-1) != -1)
                {
                    listmax = 0;
                    buff =
                        lang(u8"これ、あげ"s + _ru(2), u8"Here, take this!"s);
                    tc = tc * 1 + 0;
                    list(0, listmax) = 0;
                    listn(0, listmax) = strmore;
                    ++listmax;
                    chatesc = 1;
                    label_2257();
                    if (scenemode)
                    {
                        if (scene_cut == 1)
                        {
                            label_2256();
                            return;
                        }
                    }
                    cbitmod(984, tc, 1);
                    flt();
                    itemcreate(-1, 730, cdata(1, 0), cdata(2, 0), 0);
                    txt(lang(
                        name(tc) + u8"に"s + itemname(ci, 1)
                            + u8"をもらった！"s,
                        u8"You receive "s + itemname(ci, 1) + u8"."s));
                    if (jp)
                    {
                        txt(u8"友達100人できるかな♪"s);
                    }
                    listmax = 0;
                }
            }
        }
        if (rnd(4) == 0)
        {
            if (cdata(17, tc) >= 150)
            {
                advfavoriteskill(tc);
                csskill = rtval(rnd(stat));
                if (cdata(17, tc) >= 300)
                {
                    if (rnd(3) == 0)
                    {
                        advfavoritestat(tc);
                        csskill = stat;
                    }
                }
                list(0, listmax) = 0;
                listn(0, listmax) =
                    lang(u8"遠慮しとく"s, u8"I think I'll pass."s);
                ++listmax;
                if (sorg(csskill, 0) == 0)
                {
                    buff = lang(skillname(csskill) +
                            u8"のスキルを、友達価格の"s +
                            calclearncost(csskill, cc, 1) + strplat +
                            u8"で教えてあげてもいい"s + _ga(3) + u8"どう"s +
                            _kana(1),
                        u8"I can teach you the art of "s + skillname(csskill) +
                            u8" for a friendly price of "s +
                            calclearncost(csskill, cc, 1) +
                            u8" platinum pieces. Do you want me to train you?"s);
                    if (cdata(31, 0) >= calclearncost(csskill, cc, 1))
                    {
                        list(0, listmax) = 1;
                        listn(0, listmax) =
                            lang(u8"習得する"s, u8"Teach me the skill."s);
                        ++listmax;
                    }
                }
                else
                {
                    buff = lang(skillname(csskill) +
                            u8"のスキルを、友達価格の"s +
                            calctraincost(csskill, cc, 1) + strplat +
                            u8"で訓練してもいい"s + _ga(3) + u8"どう"s +
                            _kana(1),
                        u8"I can train your "s + skillname(csskill) +
                            u8" skill for a friendly price of "s +
                            calctraincost(csskill, cc, 1) +
                            u8" platinum pieces. Do you want me to train you?"s);
                    if (cdata(31, 0) >= calctraincost(csskill, cc, 1))
                    {
                        list(0, listmax) = 2;
                        listn(0, listmax) = lang(u8"訓練する"s, u8"Train me."s);
                        ++listmax;
                    }
                }
                chatesc = 1;
                label_2257();
                if (chatval == 0 || chatval == -1)
                {
                    listmax = 0;
                    buff = lang(
                        u8"わかった"s + _yo()
                            + u8"またしばらくしてから尋ねてみ"s + _ru(),
                        u8"I see. I'll ask you again at some time in the future."s);
                    tc = tc * 1 + 0;
                    list(0, listmax) = 0;
                    listn(0, listmax) = strmore;
                    ++listmax;
                    chatesc = 1;
                    label_2257();
                    if (scenemode)
                    {
                        if (scene_cut == 1)
                        {
                            label_2256();
                            return;
                        }
                    }
                    label_2256();
                    return;
                }
                snd(12);
                if (chatval == 1)
                {
                    cdata(31, 0) -= calclearncost(csskill, 0, 1);
                    skillgain(cc, csskill);
                    ++gdata(39);
                    listmax = 0;
                    buff = lang(
                        u8"新しい技術をどうやら習得できたようだ"s + _na()
                            + u8"役に立てて嬉しい"s + _yo(),
                        u8"Fantastic! You've learned the skill in no time. I'm glad I could help."s);
                    tc = tc * 1 + 0;
                    list(0, listmax) = 0;
                    listn(0, listmax) = strmore;
                    ++listmax;
                    chatesc = 1;
                    label_2257();
                    if (scenemode)
                    {
                        if (scene_cut == 1)
                        {
                            label_2256();
                            return;
                        }
                    }
                }
                if (chatval == 2)
                {
                    cdata(31, 0) -= calctraincost(csskill, 0, 1);
                    modgrowth(
                        cc,
                        csskill,
                        limit(
                            15 - sgrowth(csskill, cc) / 15,
                            2,
                            15 - (csskill < 18) * 10));
                    listmax = 0;
                    buff = lang(
                        u8"よし、これで訓練は終わり"s + _da()
                            + u8"かなり潜在能力が伸びた"s + _yo(2),
                        u8"Marverous! The traing is now complete. I think you've improved some potential."s);
                    tc = tc * 1 + 0;
                    list(0, listmax) = 0;
                    listn(0, listmax) = strmore;
                    ++listmax;
                    chatesc = 1;
                    label_2257();
                    if (scenemode)
                    {
                        if (scene_cut == 1)
                        {
                            label_2256();
                            return;
                        }
                    }
                }
                label_2256();
                return;
            }
        }
        if (rnd(5) == 0)
        {
            if (cdata(17, tc) >= 150)
            {
                listmax = 0;
                buff = lang(
                    u8"友達の証としてこれをあげ"s + _ru(2) + u8"大事に使って"s
                        + _yo(),
                    u8"As a pledge of friendship, here's something for you!"s);
                tc = tc * 1 + 0;
                list(0, listmax) = 0;
                listn(0, listmax) = strmore;
                ++listmax;
                chatesc = 1;
                label_2257();
                if (scenemode)
                {
                    if (scene_cut == 1)
                    {
                        label_2256();
                        return;
                    }
                }
                if (inv_getfreeid(-1) == -1)
                {
                    txt(lang(
                        u8"部屋が一杯で置けなかった…"s,
                        u8"Your home has no empty spot..."s));
                }
                else
                {
                    if (rnd(4))
                    {
                        p = 55;
                    }
                    else
                    {
                        p = 622;
                    }
                    flt();
                    itemcreate(-1, p, cdata(1, 0), cdata(2, 0), 0);
                    txt(lang(
                        name(tc) + u8"に"s + itemname(ci, 1)
                            + u8"をもらった！"s,
                        u8"You receive "s + itemname(ci, 1) + u8"."s));
                    snd(14);
                }
                label_2256();
                return;
            }
        }
        if (rnd(4) == 0)
        {
            if (cdata(17, tc) >= 100)
            {
                listmax = 0;
                buff = lang(
                    u8"近くまで来たので寄ってみた"s + _nda()
                        + u8"ついでだから、土産にこれをあげ"s + _ru(),
                    u8"I just stopped by to see you. Oh, I happen to have a gift for you too."s);
                tc = tc * 1 + 0;
                list(0, listmax) = 0;
                listn(0, listmax) = strmore;
                ++listmax;
                chatesc = 1;
                label_2257();
                if (scenemode)
                {
                    if (scene_cut == 1)
                    {
                        label_2256();
                        return;
                    }
                }
                if (inv_getfreeid(0) == -1)
                {
                    txt(lang(
                        u8"所持品が一杯で受け取れなかった…"s,
                        u8"Your inventory is full..."s));
                }
                else
                {
                    flt();
                    itemcreate(0, 729, -1, -1, 0);
                    txt(lang(
                        itemname(ci, 1) + u8"を受け取った。"s,
                        u8"You receive "s + itemname(ci, 1) + u8"."s));
                    snd(14);
                }
                label_2256();
                return;
            }
        }
        if (rnd(5) == 0)
        {
            if (cdata(17, tc) >= 100)
            {
                listmax = 0;
                buff = lang(
                    u8"旅の途中にこんなものを拾った"s + _nda() + _kimi(3)
                        + u8"の役に立つと思って持ってきた"s + _yo(),
                    u8"I found these during my journey. Thought you could find them useful."s);
                tc = tc * 1 + 0;
                list(0, listmax) = 0;
                listn(0, listmax) = strmore;
                ++listmax;
                chatesc = 1;
                label_2257();
                if (scenemode)
                {
                    if (scene_cut == 1)
                    {
                        label_2256();
                        return;
                    }
                }
                txt(lang(
                    name(tc)
                        + u8"は色々なものが詰まった袋を、あなたに手渡した。"s,
                    name(tc) + u8" gives you a bag full of materials."s));
                efid = 1117;
                efp = 100;
                tc = 0;
                label_2176();
                label_2256();
                return;
            }
        }
        if (rnd(8) == 0)
        {
            advfavoriteskill(tc);
            csskill = rtval(rnd(stat));
            listmax = 0;
            buff = lang(
                skillname(csskill) + u8"は"s + _ore(3)
                    + u8"の得意なスキルの内の一つ"s + _da(),
                ""s + skillname(csskill) + u8" is one of my favorite skills."s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2256();
            return;
        }
        if (rnd(10) == 0)
        {
            advfavoritestat(tc);
            csskill = stat;
            listmax = 0;
            buff = lang(
                _ore(3) + u8"は"s + skillname(csskill) + u8"が自慢なの"s
                    + _da(),
                u8"I'm proud of my good "s + skillname(csskill) + u8"."s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2256();
            return;
        }
        if (rnd(3) == 0)
        {
            if (cdata(17, tc) >= 75)
            {
                listmax = 0;
                buff = lang(u8"やあ。特に用はない"s + _ga(3) +
                        u8"、なんだか暇を持てましていたら、"s + _kimi(3) +
                        u8"と話がしたくなって"s + _na(3) + u8"、寄ってみた"s +
                        _nda(),
                    u8"Hey "s + cdatan(0, 0) +
                        u8", how's your journey? I was bored to death so I decided to make a visit to you!"s);
                tc = tc * 1 + 0;
                list(0, listmax) = 0;
                listn(0, listmax) = strmore;
                ++listmax;
                chatesc = 1;
                label_2257();
                if (scenemode)
                {
                    if (scene_cut == 1)
                    {
                        label_2256();
                        return;
                    }
                }
                txt(lang(
                    u8"あなたと"s + name(tc) + u8"は愉快に語り合った！"s,
                    u8"You hold an amusing conversation with "s + name(tc)
                        + u8"!"s));
                modimp(tc, 10);
                label_2256();
                return;
            }
        }
        if (rnd(3) == 0)
        {
            listmax = 0;
            buff = lang(
                u8"酒でも飲んで親睦を深めよう"s + _yo(2),
                u8"Let's have a drink and deepen our friendship!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            snd(17);
            txt(lang(
                u8"あなたと"s + name(tc) + u8"は乾杯した！"s,
                cnvtalk(u8"Cheers!"s)));
            txtef(9);
            txtmore();
            txt(lang(u8"「うぃっ！」"s, u8"*Hic*"s),
                lang(u8"「うまいぜ」"s, cnvtalk(u8"Ah, good booze."s)),
                lang(u8"「らららー♪」"s, cnvtalk(u8"La-la-la-la."s)),
                lang(u8"「ひっく」"s, cnvtalk(u8"I'm going to heaven."s)),
                lang(u8"「ふぅ」"s, cnvtalk(u8"Whew!"s)),
                lang(u8"「たまらないわ」"s, cnvtalk(u8"I'm revived!"s)),
                lang(u8"「んまっ♪」"s, cnvtalk(u8"Awesome."s)));
            dmgcon(tc, 8, 1000);
            dmgcon(cc, 8, 1000);
            modimp(tc, 15);
            label_2256();
            return;
        }
        listmax = 0;
        buff = lang(
            u8"まあ、とくに用もないんだけど"s + _na(),
            u8"I just wanted to say hi."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2005:
        if (gdata(825) == gdata(11))
        {
            listmax = 0;
            buff = lang(
                u8"今月はもう訓練は終わり"s + _da(),
                u8"No more training in this month."s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2256();
            return;
        }
        plat = 3;
        gdata(825) = gdata(11);
        buff = lang(guildname() +
                u8"の一員足るもの、ギルドの名に恥じないよう、常に己の技量を磨き続けなければならない"s +
                _yo() + u8"ギルドの一員である"s + _kimi(3) +
                u8"には、たったのプラチナ"s + plat +
                u8"枚で潜在能力を伸ばす訓練を施してあげる"s + _yo(),
            u8"As a member of "s + guildname() +
                u8" you have to forge your talent to live up to our reputation. For only "s +
                plat +
                u8" platinum coins, I'll improve the potential of your talent."s);
        if (gdata(263) != 0)
        {
            p(0) = 16;
            p(1) = 15;
            p(2) = 14;
            p(3) = -1;
        }
        else
        {
            if (gdata(264) != 0)
            {
                p(0) = 10;
                p(1) = 11;
                p(2) = 12;
                p(3) = -1;
            }
            else
            {
                if (gdata(265) != 0)
                {
                    p(0) = 12;
                    p(1) = 13;
                    p(2) = 11;
                    p(3) = 14;
                    p(4) = -1;
                }
                else
                {
                    plat = 4;
                    p(3) = -1;
                    i = rnd(6);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                        {
                            p(cnt) = 10 + cnt + i;
                        }
                    }
                    buff = lang(u8"鍛えている"s + _kana(2) +
                            u8"冒険者として生き残るには、日ごろの鍛錬が大切"s +
                            _da(2) + u8"わずかプラチナ"s + plat +
                            u8"枚で、潜在能力を伸ばす特別な訓練を施してあげる"s +
                            _yo(2),
                        u8"Training! Training! At the end, only thing that saves your life is training! For only "s +
                            plat +
                            u8" platinum coins, I'll improve the potential of your talent."s);
                }
            }
        }
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"訓練しない"s, u8"Not today."s);
        ++listmax;
        if (cdata(31, 0) >= plat)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
                {
                    if (p(cnt) == -1)
                    {
                        break;
                    }
                    list(0, listmax) = p(cnt);
                    listn(0, listmax) = lang(
                        skillname(p(cnt)) + u8"を鍛える"s,
                        u8"I want to improve "s + skillname(p(cnt)) + u8"."s);
                    ++listmax;
                }
            }
        }
        label_2257();
        if (chatval == 0 || chatval == -1)
        {
            listmax = 0;
            buff = lang(u8"後悔する"s + _yo(2), u8"You'll regret this!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2256();
            return;
        }
        cdata(31, 0) -= plat;
        snd(61);
        txtef(2);
        txt(lang(
            name(0) + u8"の"s + skillname(chatval)
                + u8"の潜在能力が大きく上昇した。"s,
            name(0) + your(0) + u8" potential of "s + skillname(chatval)
                + u8" greatly expands."s));
        modgrowth(0, chatval, 10);
        listmax = 0;
        buff = lang(
            u8"うむ、なかなか見所がある"s + _yo(),
            u8"Good. You show a lot of potential."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2002:
        listmax = 0;
        buff = lang(
            u8"まあ、とくに用もないんだけど"s + _na(),
            u8"I just wanted to say hi."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2000:
        if (cdata(30, 0) > 0)
        {
            list(0, listmax) = 1;
            listn(0, listmax) = lang(u8"いい"s, u8"Yes."s);
            ++listmax;
        }
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"だめ"s, u8"No."s);
        ++listmax;
        buff = lang(
            u8"パンを買う金さえない"s + _nda() + u8"恵んで"s + _kure(3)
                + u8"、おねがい"s + _da(2),
            u8"I got no money to buy food. Will you spare me some coins?"s);
        label_2257();
        if (chatval == 1)
        {
            p = cdata(30, 0) / 20 + 1;
            txt(lang(
                u8"あなたは"s + p + u8"goldを乞食に渡した。"s,
                u8"You spare "s + him(tc) + u8" "s + p + u8" gold pieces."s));
            cdata(30, 0) -= p;
            snd(12);
            cdata(30, tc) += p;
            modkarma(0, 2);
            listmax = 0;
            buff = lang(
                _thanks(2) + u8"この恩は一生忘れない"s + _yo(),
                u8"Thanks! I'll never forget this."s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = strmore;
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2256();
            return;
        }
        listmax = 0;
        buff = lang(u8"ケチ！"s, u8"You're so cheap!"s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2001:
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"いい"s, u8"Yes."s);
        ++listmax;
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"だめ"s, u8"No."s);
        ++listmax;
        buff = lang(
            u8"フッ。よく逃げ出さずに戻ってきた"s + _na() + u8"準備はいいか。"s,
            u8"So, are you ready?"s);
        label_2257();
        if (chatval == 1)
        {
            listmax = 0;
            buff = lang(u8"いく"s + _yo(2), u8"Okay, no turning back now!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = lang(u8"うふふ"s, u8"Come on!"s);
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2147();
            label_2256();
            return;
        }
        listmax = 0;
        buff = lang(u8"ふん！"s, u8"Hump!"s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2006:
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"いい"s, u8"Yes."s);
        ++listmax;
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"だめ"s, u8"No."s);
        ++listmax;
        buff =
            lang(u8"スターになりたい"s + _kana(1), u8"You want to be a star?"s);
        label_2257();
        if (chatval == 1)
        {
            listmax = 0;
            buff = lang(
                u8"よい心がけだ"s + _na(2), u8"Okay, no turning back now!"s);
            tc = tc * 1 + 0;
            list(0, listmax) = 0;
            listn(0, listmax) = lang(u8"うふふ"s, u8"Come on!"s);
            ++listmax;
            chatesc = 1;
            label_2257();
            if (scenemode)
            {
                if (scene_cut == 1)
                {
                    label_2256();
                    return;
                }
            }
            label_2147();
            label_2256();
            return;
        }
        listmax = 0;
        buff = lang(u8"ふん！"s, u8"Hump!"s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_2256();
        return;
    case 2003:
        list(0, listmax) = 0;
        listn(0, listmax) = lang(u8"買いたい"s, u8"I want to buy something."s);
        ++listmax;
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"売りたい"s, u8"I want to sell something."s);
        ++listmax;
        list(0, listmax) = 2;
        listn(0, listmax) = lang(u8"今はいい"s, u8"Not now."s);
        ++listmax;
        buff = lang(
            u8"今日は"s + _kimi(3) + u8"の幸運な日"s + _da()
                + u8"普段は一般の客には売らない格安の品を、特別に見せてあげ"s
                + _ru() + u8"覚えておいて"s + _kure(3) + u8"、今日だけだ"s
                + _yo(),
            u8"This is your lucky day. I wouldn't normaly show my discounted goods to commoners but since I feel so good today..."s);
        label_2257();
        if (chatval == 0)
        {
            invctrl = 11;
            invfile = cdata(153, tc);
            label_2263();
            screenupdate = -1;
            label_1419();
            cs = 0;
            buff = "";
            label_2244();
            return;
        }
        if (chatval == 1)
        {
            invctrl = 12;
            invfile = cdata(153, tc);
            label_2263();
            cc = 0;
            screenupdate = -1;
            label_1419();
            cs = 0;
            buff = "";
            label_2244();
            return;
        }
        listmax = 0;
        buff = lang(
            u8"後になって後悔しても知らない"s + _yo(),
            u8"I hope you won't regret it later."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        cdata(150, tc) = 2002;
        label_2256();
        return;
    }
    label_2256();
    return;
}
int label_2248()
{
    list(0, listmax) = 1;
    listn(0, listmax) = lang(
        u8"エーテル抗体を1本渡す"s,
        u8"(Hand her a potion of cure corruption.)"s);
    ++listmax;
    list(0, listmax) = 0;
    listn(0, listmax) = strbye;
    ++listmax;
    label_2257();
    if (chatval != 1)
    {
        stat = 0;
        return stat;
    }
    inv_find(559, 0);
    if (stat == -1)
    {
        listmax = 0;
        buff = lang(u8"うそつき！"s, u8"Lier!"s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                stat = 0;
                return stat;
            }
        }
        stat = 0;
        return stat;
    }
    --inv(0, stat);
    txt(lang(u8"エーテル抗体を1本渡した。"s, u8"You give her a potion."s));
    snd(13);
    listmax = 0;
    buff = lang(
        u8"え…あ、ありがと〜！！おかあさん…薬だよ。これでよくなるよね？"s,
        u8"R-Really? Mommy, mommy! "s + cdatan(0, 0)
            + u8" gave us a cure! Are you gonna be ok now?"s);
    tc = tc * 1 + 0;
    list(0, listmax) = 0;
    listn(0, listmax) = strmore;
    ++listmax;
    chatesc = 1;
    label_2257();
    if (scenemode)
    {
        if (scene_cut == 1)
        {
            label_2256();
            stat = 0;
            return stat;
        }
    }
    stat = 1;
    return stat;
}
void label_2249()
{
    if (lomiaseaster)
    {
        cdata(253, 0) = 100;
        listmax = 0;
        buff = lang(
            u8"この洞窟…雨をしのぐにはちょうどいいわ。ロミアス、危険がないか奥を調べて来て。"s,
            u8"This cave...it's a good place to keep out the rain. Lomias, check the inner chamber to be sure there is no danger lurking here."s);
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = lang(u8"わかった。ここで待っていろ"s, u8"Okay. Wait here."s);
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        label_1419();
        await(3000);
        txtnew();
        txtef(3);
        txt(lang(u8"何かは殺された。"s, u8"Something is killed."s));
        txt(lang(u8"「ぐわぁ」"s, cnvtalk(u8"Uggghhh!"s)));
        snd(8);
        spillblood(28, 6, 10);
        flt();
        itemcreate(-1, 705, 28, 6, 0);
        label_1419();
        await(500);
        await(500);
        listmax = 0;
        buff = lang(
            u8"…今の音は？ …ロミアス、大丈夫？"s,
            u8"...what was that sound? ...Lomias, are you alright?"s);
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = lang(
            u8"ああ、問題ない。どうやらこの洞窟は昔、誰かが住んでいたようだな。奥を見て来たが、今はもう使われていないようだ。"s,
            u8"It's nothing. Looks like this cave is long abandoned. It's a good place to stay."s);
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = lang(
            u8"そう、ならば都合がいいわ。…あら、あなた何を持っているの？ …キャーッ、プチじゃない！"s,
            u8"I see, that's convenient for us...wait Lomias, what arey you carrying?...Argh! Putits!"s);
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = lang(
            u8"こいつらか？心配する必要はない。以前、人間にペットとして飼われていたのだろう、ふふ…私によくなついているようだ。"s,
            u8"Don't worry. It appears these putits had been kept as pets by someone. They are kind of...cute."s);
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = lang(
            u8"うふ！あなたにも優しいところがあるのね。…来て。どうやら怪我人が意識を取り戻したみたいよ。"s,
            u8"Huh, sounds like even you have a soft spot...Come here, the injured is about to wake up."s);
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        await(1500);
        redraw(0);
        label_1419();
        label_1441();
        gsel(4);
        pos(0, 0);
        picload(exedir + u8"graphic\\face1"s + devfile + u8".bmp"s, 1);
        gsel(0);
        cdata(253, 0) = 0;
        txt(lang(u8" 夢…か… "s, u8"It was...a dream...?"s));
    }
    else
    {
        txtnew();
    }
    txt(lang(
        u8"あなたは意識をとりもどした。"s, u8"You regain consciousness."s));
    if (jp)
    {
        listmax = 0;
        buff =
            u8"…意識が…もう戻ったのか？ 驚いたな。君の回復を待つために、我々の急を要する旅がいつまで中断されるのか、気を揉んでいたのだが。"s;
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8"君は重傷を負い川辺に倒れていた。宵闇が辺りを覆う前に、癒し手の力を持つ我々に発見されたのは、全くよくできた偶然だ。"s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8" …そんな物珍しげな顔をするな。君の察する通り、我々は異形の森の民だ。エレアは…シエラ・テールの高潔なる異端者は、他種族の詮索に付き合う無駄な時間をあいにく持ち合わせていないが、君は、我々に拾われた幸運をもっと素直に喜ぶべきだな。瀕死の君を回復させることは、ここにいるラーネイレ以外の何者にも不可能だっただろう。なにせ彼女はエレアの…"s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8"ロミアス、喋りすぎよ。たとえ意識の朦朧とした怪我人が相手だとしても。"s;
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = u8"…そうだな。私の悪い癖だ、わかってはいる。…さて、"s
            + cdatan(0, 0) + u8"といったな、"s;
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
    }
    else
    {
        listmax = 0;
        buff =
            u8"...you...you're awake already? Remarkable. I was beginning to worry that nursing a lowly adventurer would bring our urgent travel to a halt."s;
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8"You were badly wounded, passing out on the bank of a river. It was fortunate that we found you before the dark mantle of night enveloped this whole valley, almost as if Ehekatl, the goddess of luck herself had her eyes upon you."s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8"...stop your curious eyes. Yes, we are sons of Vindale whom they call the irreverent forest. Though we Eleas, noble but blameless \"heretics\", aren't keen to spend idle time responding to every senseless question about our race, you should be more thankful for your fate. If it weren't the lady Larnneire who cured your mortal wound, you wouldn't be hearing my tirade. For the lady is no ordinary Elea and only she can..."s;
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff =
            u8"You talk too much Lomias, even though the one injured before you is still dazed."s;
        tc = tc * (findchara(33) == 0) + (findchara(33) != 0) * findchara(33);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
        listmax = 0;
        buff = u8"...yes, it's a bad habit of mine. Well, "s + cdatan(0, 0)
            + u8"..."s;
        tc = tc * (findchara(34) == 0) + (findchara(34) != 0) * findchara(34);
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
    }
    mdata(13) = 67;
    label_0068();
    label_2246();
    return;
}
void label_2250()
{
    listmax = 0;
    buff = lang(
        u8"無事に到着できてほっとした"s + _yo() + _thanks(2),
        u8"We made it! Thank you!"s);
    tc = tc * 1 + 0;
    list(0, listmax) = 0;
    listn(0, listmax) = strmore;
    ++listmax;
    chatesc = 1;
    label_2257();
    if (scenemode)
    {
        if (scene_cut == 1)
        {
            label_2256();
            return;
        }
    }
    label_2256();
    return;
}
void label_2252()
{
    if (qdata(8, rq) == 1)
    {
        buff = lang(
            u8"頼んでいた依頼は順調"s + _kana(1),
            u8"What about my contract? Is everything alright? "s);
        label_2251();
        return;
    }
    val = 1;
    label_0184();
    listmax = 0;
    list(0, listmax) = 1;
    listn(0, listmax) = lang(u8"受諾する"s, u8"I will take the job."s);
    ++listmax;
    list(0, listmax) = 0;
    listn(0, listmax) = lang(u8"やめる"s, u8"Not now."s);
    ++listmax;
    chatesc = 1;
    label_2257();
    if (chatval == 1)
    {
        p = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
            {
                if (qdata(3, cnt) == 0)
                {
                    continue;
                }
                if (qdata(8, cnt) != 0)
                {
                    ++p;
                }
            }
        }
        if (p >= 5)
        {
            buff = lang(
                u8"未完了の依頼が多すぎじゃない"s + _kana(1)
                    + u8"この仕事は、安心してまかせられない"s + _yo(),
                u8"Hey, you've got quite a few unfinished contracts. See me again when you have fishined them."s);
            label_2251();
            return;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                p = gdata(160 + cnt);
                f = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
                    {
                        if (gdata(160 + cnt) == p)
                        {
                            ++f;
                        }
                    }
                }
                if (qdata(8, p) == 0 || f > 1)
                {
                    gdata(160 + cnt) = rq;
                    break;
                }
            }
        }
        if (qdata(3, rq) == 1002)
        {
            if (inv_getfreeid(0) == -1)
            {
                buff = lang(
                    u8"どうやらバックパックが一杯のよう"s + _da()
                        + u8"持ち物を整理してまた来て"s + _kure(),
                    u8"It seems your backpack is already full. Come see me again when you're ready."s);
                label_2251();
                return;
            }
        }
        if (qdata(3, rq) == 1007)
        {
            f = get_freeally();
            if (f == 0)
            {
                buff = lang(
                    u8"これ以上仲間を連れて行けないよう"s + _da()
                        + u8"人数を調整してまた来て"s + _kure(),
                    u8"It seems your party is already full. Come see me again when you're ready."s);
                label_2251();
                return;
            }
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    if (cnt == 99)
                    {
                        dbid = 35;
                    }
                    else
                    {
                        dbid = 0;
                    }
                    flt(qdata(5, rq) + cnt, 1);
                    fltn(u8"man"s);
                    characreate(56, dbid, -3, 0);
                    f = stat;
                    if (f == 1)
                    {
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                            {
                                if (cdata(0, cnt) == 0)
                                {
                                    continue;
                                }
                                if (cdata(27, cnt) == cdata(27, rc))
                                {
                                    if (cbit(963, cnt) == 1)
                                    {
                                        f = 0;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    if (f == 1)
                    {
                        break;
                    }
                }
            }
            rc = 56;
            label_2659();
            cbitmod(963, rc, 1);
            qdata(13, rq) = cdata(27, rc);
        }
        qdata(8, rq) = 1;
        if (qdata(9, rq) == -1)
        {
            label_2253();
            return;
        }
        buff = lang(
            _thanks() + u8"期待してい"s + _ru(),
            u8"Thanks. I'm counting on you."s);
        if (qdata(3, rq) == 1002)
        {
            ++qdata(15, qdata(10, rq));
            flt();
            itemcreate(0, qdata(11, rq), cdata(1, 0), cdata(2, 0), 0);
            txt(lang(
                itemname(ci, 1) + u8"をバックパックに入れた。"s,
                u8"You put "s + itemname(ci, 1) + u8" in your backpack."s));
            snd(100);
            label_1521();
            buff = lang(
                u8"これが依頼の品物"s + _da() + u8"期限には十分気をつけて"s
                    + _kure(),
                u8"Here's the package. Be aware of the deadline. I don't want to report you to the guards."s);
        }
    }
    else
    {
        buff = lang(u8"冷やかし"s + _ka(1), u8"You kidding? "s);
    }
    label_2251();
    return;
}
void label_2253()
{
    if (qdata(3, rq) == 1001 || qdata(3, rq) == 1010)
    {
        listmax = 0;
        buff = lang(
            u8"では、早速案内するので、モンスターを一匹残らず退治して"s
                + _kure(),
            u8"Great! I'll guide you to the place, kill them all!"s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
    }
    if (qdata(3, rq) == 1006)
    {
        listmax = 0;
        buff = lang(
            u8"畑までは案内するから、しっかりと期限内に作物を納入して"s
                + _kure(),
            u8"Fine. I'll take you to my farm."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
    }
    if (qdata(3, rq) == 1009)
    {
        listmax = 0;
        buff = lang(
            u8"ついて来て"s + _kure() + u8"パーティー会場まで案内する"s + _yo(),
            u8"Alright, I'll take you to the party now."s);
        tc = tc * 1 + 0;
        list(0, listmax) = 0;
        listn(0, listmax) = strmore;
        ++listmax;
        chatesc = 1;
        label_2257();
        if (scenemode)
        {
            if (scene_cut == 1)
            {
                label_2256();
                return;
            }
        }
    }
    gdata(70) = qdata(3, rq);
    gdata(71) = qdata(14, rq);
    gdata(72) = rq;
    gdata(73) = 1;
    gdata(66) = gdata(20);
    gdata(67) = gdata(22);
    gdata(68) = cdata(1, 0);
    gdata(69) = cdata(2, 0);
    gdata(64) = 13;
    gdata(65) = 1;
    levelexitby = 2;
    chatteleport = 1;
    label_2256();
    return;
}
void label_2254()
{
    tcbk = tc;
    menucycle = 0;
    label_20332();
    label_2241();
    if (csskill == -1)
    {
        buff = lang(
            u8"訓練が必要なときは、声をかけて"s + _kure(),
            u8"Come see me again when you need more training."s);
        label_2251();
        return;
    }
    listmax = 0;
    if (csctrl == 2)
    {
        buff = lang(
            skillname(csskill) + u8"の能力を訓練するには"s
                + calctraincost(csskill, cc) + strplat + u8"かかるけどいい"s
                + _kana(1),
            u8"Training "s + skillname(csskill) + u8" will cost you "s
                + calctraincost(csskill, cc) + u8" platinum pieces."s);
        if (cdata(31, 0) >= calctraincost(csskill, cc))
        {
            list(0, listmax) = 1;
            listn(0, listmax) = lang(u8"訓練する"s, u8"Train me."s);
            ++listmax;
        }
    }
    else
    {
        buff = lang(
            skillname(csskill) + u8"の能力を習得するには"s
                + calclearncost(csskill, cc) + strplat + u8"かかるけどいい"s
                + _kana(1),
            u8"Learning "s + skillname(csskill) + u8" will cost you "s
                + calclearncost(csskill, cc) + u8" platinum pieces."s);
        if (cdata(31, 0) >= calclearncost(csskill, cc))
        {
            list(0, listmax) = 1;
            listn(0, listmax) = lang(u8"習得する"s, u8"Teach me the skill."s);
            ++listmax;
        }
    }
    list(0, listmax) = 0;
    listn(0, listmax) = lang(u8"やめる"s, u8"Never mind."s);
    ++listmax;
    chatesc = 1;
    label_2257();
    if (chatval == 1)
    {
        snd(12);
        if (csctrl == 2)
        {
            cdata(31, 0) -= calctraincost(csskill, cc);
            modgrowth(
                cc, csskill, limit(15 - sgrowth(csskill, cc) / 15, 2, 15));
            buff = lang(
                u8"訓練は完了し"s + _ta()
                    + u8"潜在能力が伸びているはずなので、後は自分で鍛えて"s
                    + _kure(),
                u8"Well done. You've got more room to develop than anyone else I've ever drilled. Keep training."s);
        }
        else
        {
            cdata(31, 0) -= calclearncost(csskill, cc);
            skillgain(cc, csskill);
            ++gdata(39);
            buff = lang(
                u8"可能な限りの知識は教え"s + _ta() + u8"後は存分に訓練して"s
                    + _kure(),
                u8"I've taught you all that I know of the skill. Now develop it by yourself."s);
        }
    }
    else
    {
        buff = lang(
            u8"訓練が必要なときは、声をかけて"s + _kure(),
            u8"Come see me again when you need more training."s);
    }
    label_2251();
    return;
}
void label_2255()
{
    listmax = 0;
    buff = lang(
        u8"投資をしてくれる"s + _noka(1) + calcinvestvalue() + strgold
            + u8"かかるけどいいの"s + _kana(1),
        u8"Oh, do you want to invest in my shop? It will cost you "s
            + calcinvestvalue() + u8" golds. I hope you got the money."s);
    if (cdata(30, 0) >= calcinvestvalue())
    {
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"投資する"s, u8"Invest"s);
        ++listmax;
    }
    list(0, listmax) = 0;
    listn(0, listmax) = lang(u8"やめる"s, u8"Reject"s);
    ++listmax;
    chatesc = 1;
    label_2257();
    if (chatval == 1)
    {
        snd(12);
        cdata(30, 0) -= calcinvestvalue();
        label_1466();
        cdata(151, tc) += rnd(2) + 2;
        buff = lang(_thanks(2), u8"Thanks!"s);
    }
    else
    {
        buff = lang(u8"冷やかし"s + _ka(1), u8"You kidding? "s);
    }
    if (gdata(20) == 7)
    {
        calccosthire();
    }
    label_2251();
    return;
}
void label_2256()
{
    questteleport = 0;
    if (scenemode == 0)
    {
        screenupdate = -1;
        label_1419();
    }
    return;
}
void label_2257()
{
    cs_bk = -1;
    key_list = key_enter;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (listmax); cnt < cnt_end; ++cnt)
        {
            key_list(cnt) = key_select(cnt);
            ++keyrange;
        }
    }
    keyrange = listmax;
    key = "";
    objprm(0, ""s);
    keylog = "";
    label_2260();
label_2258_internal:
    label_2261();
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (cs == cnt)
            {
                color(100, 160, 250);
            }
            else
            {
                color(255, 255, 255);
            }
            noteget(s, cnt);
            x = wx + 136;
            y = wy + wh - 56 - keyrange * 19 + cnt * 19 + 2;
            display_key(x, y, cnt);
            cs_list(cnt, listn(0, cnt), x + 30, y, 18, 4, 0);
        }
    }
    cs_bk = cs;
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    stick(a, 128);
    if (a == 128)
    {
        if (scenemode)
        {
            scene_cut = 1;
            label_2259();
            return;
        }
    }
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        chatval = p;
        label_2259();
        return;
    }
    if (key == key_cancel)
    {
        if (chatesc == 1)
        {
            chatval = -1;
            label_2259();
            return;
        }
    }
    goto label_2258_internal;
}
void label_2259()
{
    snd(10);
    cs = 0;
    listmax = 0;
    return;
}
void label_2260()
{
    label_22600();
    label_22610();
    return;
}
void label_2261()
{
    label_22610();
    return;
}
void label_22600()
{
    if (scenemode == 0)
    {
        screenupdate = -1;
        label_1419();
        cs = 0;
    }
    talk_conv(buff, 56 - en * 3);
    chatpicloaded = 0;
    redraw(0);
    wx = (windoww - 600) / 2 + inf_screenx;
    wy = winposy(380);
    ww = 600;
    wh = 380;
    gmode(6 - 1, -1, 80);
    pos(wx + 4, wy - 16);
    gcopy(7, 0, 0, 600, 380);
    return;
}
void label_22610()
{
    redraw(0);
    gmode(2);
    pos(wx, wy - 20);
    gcopy(7, 0, 0, 600, 380);
    if (cdata(13, tc) >= 0 || scenemode)
    {
        p = cdata(8, tc) * 64 + cdata(13, tc);
        if (scenemode)
        {
            p = elona_int(actor(1, rc));
        }
        pos(wx + 42, wy + 42);
        gzoom(80, 112, 4, p % 16 * 48, p / 16 * 72, 48, 72);
    }
    else
    {
        s = exedir + u8"user\\graphic\\face"s + abs((cdata(13, tc) + 1))
            + u8".bmp"s;
        exist(s);
        if (strsize == -1 || cdata(13, tc) == -1)
        {
            p(0) = cdata(7, tc) % 1000;
            p(1) = cdata(7, tc) / 1000;
            chara_preparepic(p, p(1));
            pos(wx + 82, wy + 125 - chipc(4, p));
            gmode(2, chipc(2, p), chipc(3, p));
            grotate(5, 0, 960, 0, chipc(2, p) * 2, chipc(3, p) * 2);
        }
        else
        {
            if (chatpicloaded == 0)
            {
                gsel(4);
                pos(0, 0);
                picload(s, 1);
                gsel(0);
                chatpicloaded = 1;
            }
            pos(wx + 42, wy + 42);
            gzoom(80, 112, 4, 0, 0, 80, 112);
        }
    }
    font(lang(cfg_font1, cfg_font2), 10 - en * 2, 0);
    color(0, 0, 0);
    display_topic(lang(u8"友好"s, u8"Impress"s), wx + 28, wy + 170);
    display_topic(lang(u8"興味"s, u8"Attract"s), wx + 28, wy + 215);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1);
    color(20, 10, 5);
    if (cdatan(1, tc) == ""s)
    {
        s = cdatan(0, tc) + u8" "s;
    }
    else
    {
        s = lang(
            cdatan(1, tc) + u8" "s + cdatan(0, tc) + u8" "s,
            cdatan(0, tc) + u8" of "s + cdatan(1, tc) + u8" "s);
    }
    if (cdata(8, tc) == 0)
    {
        s += cnven(strmale);
    }
    else
    {
        s += cnven(strfemale);
    }
    if (cdatan(1, tc) != ""s)
    {
        s += lang(u8" 名声 "s, u8" Fame: "s) + cdata(34, tc);
    }
    if (cdata(150, tc) >= 1000 && cdata(150, tc) < 2000
        || cdata(150, tc) == 2003)
    {
        s += lang(u8" 店の規模:"s, u8" Shop Rank:"s) + cdata(151, tc);
    }
    if (gdata(187))
    {
        s += u8" ("s + godname(cdata(61, tc)) + u8")"s;
    }
    if (scenemode)
    {
        s = actor(0, rc);
    }
    pos(wx + 120, wy + 16);
    mes(s);
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(20, 10, 5);
    if (chatval(2) == 1)
    {
        s = _impression(implevel(cdata(17, tc)));
        if (cdata(17, tc) < 150)
        {
            s(1) = ""s + cdata(17, tc);
        }
        else
        {
            s(1) = u8"???"s;
        }
        pos(wx + 32, wy + 198);
        mes(u8"("s + s(1) + u8")"s + s);
        if (cdata(14, tc) >= 0)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (cdata(14, tc) / 5 + 1); cnt < cnt_end;
                     ++cnt)
                {
                    pos(wx + 26 + cnt * 4, wy + 245);
                    gcopy(3, 16, 360, 16, 16);
                }
            }
        }
    }
    else
    {
        color(0, 0, 0);
        pos(wx + 60, wy + 198);
        mes(u8"-"s);
        pos(wx + 60, wy + 245);
        mes(u8"-"s);
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(20, 10, 5);
    notesel(buff);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            x = wx + 150;
            y = wy + 43 + cnt * 19;
            noteget(s, p);
            pos(x, y);
            mes(s);
        }
    }
    return;
}
void label_2262()
{
    if (tc > 0)
    {
        if (cdata(150, tc) == 1009)
        {
            label_2267();
        }
    }
    mode = 6;
    file = u8"shoptmp.s2"s;
    fmode = 4;
    label_2107();
    if (cdata(153, tc) == 0)
    {
        if (cdata(150, tc) == 1010 || cdata(150, tc) == 2003)
        {
            cdata(153, tc) = 1;
        }
        else
        {
            ++gdata(16);
            cdata(153, tc) = gdata(16);
        }
        label_2265();
    }
    else
    {
        if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                + gdata(10) * 24 * 30 * 12
            >= cdata(154, tc))
        {
            label_2265();
        }
        else
        {
            file = u8"shop"s + invfile + u8".s2"s;
            fmode = 3;
            label_2107();
        }
    }
    invfile = cdata(153, tc);
    label_2264();
    return;
}
void label_2263()
{
    mode = 6;
    file = u8"shoptmp.s2"s;
    fmode = 4;
    label_2107();
    file = u8"shop"s + invfile + u8".s2"s;
    fmode = 3;
    label_2107();
    shoptrade = 0;
    if (tc > 0)
    {
        if (cdata(150, tc) == 1009)
        {
            shoptrade = 1;
        }
    }
    label_20592();
    return;
}
void label_2264()
{
    file = u8"shop"s + invfile + u8".s2"s;
    fmode = 4;
    label_2107();
    file = u8"shoptmp.s2"s;
    fmode = 3;
    label_2107();
    mode = 0;
    return;
}
void label_2265()
{
    inv_getheader(-1);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            inv(0, cnt) = 0;
        }
    }
    p = 20 + cdata(151, tc) / 2;
    if (p > 80)
    {
        p = 80;
    }
    if (cdata(150, tc) == 1007)
    {
        p = 6 + cdata(151, tc) / 10;
    }
    if (cdata(150, tc) == 1010)
    {
        p = 4 + rnd(4);
    }
    if (cdata(150, tc) == 2003)
    {
        p = 4 + rnd(4);
    }
    if (cdata(150, tc) == 1016)
    {
        p = 20;
    }
    if (cdata(150, tc) == 1018)
    {
        p /= 2;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
        {
            flt(calcobjlv(cdata(151, tc)), calcfixlv(2));
            dbid = 0;
            if (cdata(150, tc) == 1004)
            {
                p = rnd(3);
                if (p == 0)
                {
                    flttypeminor = 52001;
                }
                if (p == 1)
                {
                    flttypemajor = 53000;
                }
                if (p == 2)
                {
                    flttypemajor = 52000;
                }
                if (rnd(7) == 0)
                {
                    flttypemajor = 54000;
                }
                if (rnd(15) == 0)
                {
                    flttypemajor = 55000;
                }
                if (0 || rnd(20) == 0)
                {
                    dbid = 783;
                }
            }
            if (cdata(150, tc) == 1019)
            {
                dbid = 667;
            }
            if (cdata(150, tc) == 1020)
            {
                listmax = 0;
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (800); cnt < cnt_end; ++cnt)
                    {
                        if (itemmemory(2, cnt) > 1)
                        {
                            list(0, listmax) = cnt;
                            ++listmax;
                        }
                    }
                }
                if (listmax == 0)
                {
                    return;
                }
                dbid = list(0, rnd(listmax));
            }
            if (cdata(150, tc) == 1015)
            {
                p = rnd(3);
                if (p == 0)
                {
                    flttypemajor = 59000;
                }
                if (p == 1)
                {
                    flttypemajor = 32000;
                }
                if (p == 2)
                {
                    flttypemajor = 34000;
                }
                if (rnd(3) == 0)
                {
                    fixlv = 3;
                }
                if (rnd(10) == 0)
                {
                    fixlv = 4;
                }
            }
            if (cdata(150, tc) == 1006)
            {
                p = rnd(5);
                if (p == 0)
                {
                    flttypemajor = 25000;
                }
                if (p == 1)
                {
                    flttypemajor = 60000;
                }
                if (p == 2)
                {
                    flttypemajor = 20000;
                }
                if (p == 3)
                {
                    flttypemajor = 77000;
                }
                if (p == 4)
                {
                    flttypemajor = 59000;
                }
                if (rnd(20) == 0)
                {
                    dbid = 734;
                }
                if (rnd(8) == 0)
                {
                    flttypemajor = 91000;
                }
                if (rnd(10) == 0)
                {
                    dbid = isetdeed(rnd(length(isetdeed)));
                }
            }
            if (cdata(150, tc) == 1003)
            {
                if (rnd(3) != 0)
                {
                    continue;
                }
                if (rnd(3) != 0)
                {
                    flttypeminor = 57001;
                }
                else
                {
                    flttypeminor = 57002;
                }
            }
            if (cdata(150, tc) == 1002)
            {
                if (rnd(3) != 0)
                {
                    continue;
                }
                flttypemajor = 57000;
                if (rnd(5) == 0)
                {
                    flttypemajor = 91000;
                }
            }
            if (cdata(150, tc) == 1007)
            {
                flttypemajor = fsetwear(rnd(length(fsetwear)));
                if (rnd(3) == 0)
                {
                    fixlv = 3;
                }
                if (rnd(10) == 0)
                {
                    fixlv = 4;
                }
            }
            if (cdata(150, tc) == 1010 || cdata(150, tc) == 2003)
            {
                flttypemajor = fsetwear(rnd(length(fsetwear)));
                fixlv = 3;
                if (rnd(2) == 0)
                {
                    fixlv = 4;
                }
            }
            if (cdata(150, tc) == 1005)
            {
                flttypemajor = 91000;
                if (rnd(4))
                {
                    flttypeminor = 52002;
                }
                if (rnd(20) == 0)
                {
                    dbid = 734;
                }
            }
            if (cdata(150, tc) == 1008)
            {
                flttypemajor = 56000;
                if (rnd(3) == 0)
                {
                    flttypemajor = fsetwear(rnd(length(fsetwear)));
                }
                if (rnd(3) == 0)
                {
                    flttypemajor = 60000;
                }
                if (rnd(5) == 0)
                {
                    flttypemajor = 57000;
                }
                if (rnd(4) == 0)
                {
                    flttypemajor = 53000;
                }
                if (rnd(15) == 0)
                {
                    flttypemajor = 55000;
                }
                if (rnd(10) == 0)
                {
                    flttypemajor = 91000;
                }
                if (rnd(10) == 0)
                {
                    dbid = isetdeed(rnd(length(isetdeed)));
                }
                if (rnd(15) == 0)
                {
                    dbid = 511;
                }
            }
            if (cdata(150, tc) == 1001)
            {
                p = rnd(6);
                if (p == 0)
                {
                    flttypemajor = 16000;
                }
                if (p == 1)
                {
                    flttypemajor = 12000;
                }
                if (p == 2)
                {
                    flttypemajor = 22000;
                }
                if (p == 3)
                {
                    flttypemajor = 18000;
                }
                if (p == 4)
                {
                    flttypemajor = 14000;
                }
                if (p == 5)
                {
                    flttypemajor = 19000;
                }
                if (rnd(3) == 0)
                {
                    if (rnd(3) == 0)
                    {
                        flttypemajor = 10000;
                    }
                    else
                    {
                        flttypemajor = 24000;
                    }
                }
            }
            if (cdata(150, tc) == 1009)
            {
                flttypemajor = 92000;
            }
            if (cdata(150, tc) == 1021)
            {
                flttypemajor = 59000;
                if (rnd(2) == 0)
                {
                    dbid = 636;
                }
                if (rnd(2) == 0)
                {
                    dbid = 629;
                }
            }
            if (cdata(150, tc) == 1011)
            {
                if (rnd(4) == 0)
                {
                    flttypemajor = 24000;
                }
                if (rnd(5) == 0)
                {
                    flttypemajor = 25000;
                }
                if (rnd(3) == 0)
                {
                    flttypemajor = 57000;
                }
                fltn(u8"sf"s);
            }
            if (cdata(150, tc) == 1013)
            {
                if (rnd(3) != 0)
                {
                    continue;
                }
                flttypemajor = 55000;
                if (rnd(3))
                {
                    dbid = isetdeed(rnd(length(isetdeed)));
                }
                if (rnd(5) == 0)
                {
                    dbid = 511;
                }
            }
            if (cdata(150, tc) == 1018)
            {
                fltn(u8"spshop"s);
            }
            if (cdata(150, tc) == 1022)
            {
                fltn(u8"fest"s);
                if (rnd(12) == 0)
                {
                    dbid = 750;
                }
                if (rnd(12) == 0)
                {
                    dbid = 751;
                }
                if (rnd(5) == 0)
                {
                    dbid = 770;
                }
                if (rnd(12) == 0)
                {
                    dbid = 762;
                }
                if (rnd(12) == 0)
                {
                    dbid = 768;
                }
                if (rnd(12) == 0)
                {
                    dbid = 769;
                }
            }
            if (cdata(150, tc) == 1017)
            {
                dbid = 519;
            }
            if (cdata(150, tc) == 1012)
            {
                flttypemajor = 60000;
                if (cnt == 0)
                {
                    dbid = 510;
                }
                if (cnt == 1)
                {
                    dbid = 561;
                }
                if (cnt == 2)
                {
                    dbid = 562;
                }
                if (cnt == 3)
                {
                    dbid = 547;
                }
                if (cnt == 4)
                {
                    dbid = 579;
                }
                if (cnt == 5)
                {
                    dbid = 576;
                }
                if (cnt == 6)
                {
                    dbid = 611;
                }
                if (cnt > 10)
                {
                    if (rnd(3) != 0)
                    {
                        continue;
                    }
                }
                if (cnt == 19)
                {
                    dbid = 413;
                }
                if (cnt == 20)
                {
                    dbid = 414;
                }
                if (cnt == 21)
                {
                    dbid = 616;
                }
            }
            if (cdata(150, tc) == 1014)
            {
                dbid = 617;
            }
            if (cdata(150, tc) == 1016)
            {
                if (cnt == 0)
                {
                    dbid = 430;
                }
                if (cnt == 1)
                {
                    dbid = 431;
                }
                if (cnt == 2)
                {
                    dbid = 502;
                }
                if (cnt == 3)
                {
                    dbid = 480;
                }
                if (cnt == 4)
                {
                    dbid = 421;
                }
                if (cnt == 5)
                {
                    dbid = 603;
                }
                if (cnt == 6)
                {
                    dbid = 615;
                }
                if (cnt == 7)
                {
                    dbid = 559;
                }
                if (cnt == 8)
                {
                    dbid = 516;
                }
                if (cnt == 9)
                {
                    dbid = 616;
                }
                if (cnt == 10)
                {
                    dbid = 623;
                }
                if (cnt == 11)
                {
                    dbid = 505;
                }
                if (cnt == 12)
                {
                    dbid = 624;
                }
                if (cnt == 13)
                {
                    dbid = 625;
                }
                if (cnt == 14)
                {
                    dbid = 626;
                }
                if (cnt == 15)
                {
                    dbid = 627;
                }
                if (cnt == 16)
                {
                    dbid = 56;
                }
                if (cnt == 17)
                {
                    dbid = 742;
                }
                if (cnt == 18)
                {
                    dbid = 760;
                }
                if (cnt > 18)
                {
                    continue;
                }
            }
            itemcreate(-1, dbid, -1, -1, 0);
            if (stat == 0)
            {
                break;
            }
            if (cdata(150, tc) == 1016)
            {
                inv(0, ci) = 1;
                inv(17, ci) = 0;
                if (inv(3, ci) == 480)
                {
                    inv(9, ci) = 4;
                }
                continue;
            }
            f = 0;
            if (instr(filter_item(inv(3, ci)), 0, u8"/neg/"s) != -1)
            {
                f = 1;
            }
            if (instr(filter_item(inv(3, ci)), 0, u8"/noshop/"s) != -1)
            {
                if (cdata(150, tc) != 1018)
                {
                    f = 1;
                }
            }
            if (f)
            {
                inv(0, ci) = 0;
                continue;
            }
            if (cdata(150, tc) == 1012)
            {
                flttypemajor = 60000;
            }
            label_2266();
            inv(0, ci) = rnd(rtval) + 1;
            if (cdata(150, tc) == 1009)
            {
                p = trate(inv(25, ci));
                if (p <= 70)
                {
                    inv(0, ci) = inv(0, ci) * 200 / 100;
                }
                if (p <= 50)
                {
                    inv(0, ci) = inv(0, ci) * 200 / 100;
                }
                if (p >= 80)
                {
                    inv(0, ci) = inv(0, ci) / 2 + 1;
                    if (rnd(2))
                    {
                        inv(0, ci) = 0;
                        continue;
                    }
                }
                if (p >= 100)
                {
                    inv(0, ci) = inv(0, ci) / 2 + 1;
                    if (rnd(3))
                    {
                        inv(0, ci) = 0;
                        continue;
                    }
                }
                inv(0, ci) = inv(0, ci) * (100 + sdata(156, 0) * 10) / 100 + 1;
            }
            p = refitem(inv(3, ci), 5);
            if (inv(17, ci) == -1 || inv(17, ci) == -2)
            {
                inv(0, ci) = 0;
                continue;
            }
            if (inv(17, ci) == 1)
            {
                inv(0, ci) = 1;
            }
            if (p == 52000)
            {
                if (inv(3, ci) == 516)
                {
                    inv(0, ci) = 0;
                }
            }
            if (p == 57000)
            {
                if (refitem(inv(3, ci), 9) == 58500)
                {
                    if (rnd(5))
                    {
                        inv(0, ci) = 0;
                    }
                }
            }
            if (cdata(150, tc) == 1018)
            {
                inv(1, ci) = limit(inv(1, ci), 1, 1000000) * 50;
                if (inv(3, ci) == 729)
                {
                    inv(1, ci) *= 10;
                }
            }
            if (cdata(150, tc) == 1015)
            {
                inv(1, ci) *= 2;
            }
            if (cdata(150, tc) == 1007)
            {
                if (gdata(265) != 0)
                {
                    inv(1, ci) *= 2;
                }
                else
                {
                    inv(1, ci) *= 3;
                }
            }
            if (cdata(150, tc) == 1010)
            {
                inv(1, ci) *= 2;
            }
            if (cdata(150, tc) == 2003)
            {
                inv(1, ci) = inv(1, ci) * 4 / 5;
            }
            if (cdata(150, tc) == 1020)
            {
                inv(1, ci) = inv(1, ci) * 3 / 2;
            }
        }
    }
    cdata(154, tc) = gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
        + gdata(10) * 24 * 30 * 12 + 168 * (1 + (cdata(150, tc) == 1009));
    return;
}
void label_2266()
{
    p = refitem(inv(3, ci), 5);
    i = refitem(inv(3, ci), 8);
    rtval = 1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
        {
            if (i <= 100)
            {
                break;
            }
            if (p == 57000)
            {
                rtval = 1;
                break;
            }
            if (p == 92000)
            {
                rtval = i / 200;
                break;
            }
            if (p >= 90000)
            {
                rtval = i / 100;
                break;
            }
            if (p == 52000)
            {
                rtval = i / 100;
                break;
            }
            if (p == 53000)
            {
                rtval = i / 100;
                break;
            }
            if (p == 60000)
            {
                rtval = i / 200;
                break;
            }
            if (p == 64000)
            {
                rtval = i / 80;
                break;
            }
            if (p == 59000)
            {
                rtval = i / 500;
                break;
            }
        }
    }
    if (dbid == 734)
    {
        rtval = rnd(8);
    }
    if (rtval < 1)
    {
        rtval = 1;
        return;
    }
    return;
}
void label_2267()
{
    DIM2(trate, 8);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            trate(cnt) = 100;
        }
    }
    if (gdata(20) == 5)
    {
        trate(0) = 130;
        trate(1) = 70;
        trate(3) = 110;
        trate(2) = 85;
        trate(6) = 150;
        trate(7) = 120;
    }
    if (gdata(20) == 11)
    {
        trate(0) = 65;
        trate(1) = 110;
        trate(4) = 125;
        trate(5) = 65;
        trate(2) = 70;
        trate(6) = 200;
        trate(7) = 150;
    }
    if (gdata(20) == 15)
    {
        trate(0) = 120;
        trate(2) = 75;
        trate(4) = 75;
        trate(1) = 125;
        trate(6) = 110;
        trate(7) = 80;
    }
    if (gdata(20) == 12)
    {
        trate(0) = 120;
        trate(3) = 75;
        trate(2) = 120;
        trate(6) = 160;
        trate(7) = 100;
    }
    if (gdata(20) == 14)
    {
        trate(0) = 85;
        trate(3) = 70;
        trate(5) = 120;
        trate(2) = 130;
        trate(6) = 130;
        trate(7) = 90;
    }
    if (gdata(20) == 33)
    {
        trate(1) = 175;
        trate(0) = 170;
        trate(3) = 160;
        trate(5) = 130;
        trate(2) = 140;
        trate(6) = 75;
        trate(7) = 120;
    }
    if (gdata(20) == 36)
    {
        trate(1) = 145;
        trate(0) = 130;
        trate(3) = 100;
        trate(5) = 120;
        trate(2) = 120;
        trate(6) = 100;
        trate(7) = 70;
    }
    randomize(
        (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
         + gdata(10) * 24 * 30 * 12)
        / 100);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            trate(cnt) += rnd(15) - rnd(15);
        }
    }
    randomize();
    return;
}
void addbuilding(int prm_1082, int prm_1083, int prm_1084, int prm_1085)
{
    int p_at_m194 = 0;
    p_at_m194 = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            if (bddata(0, prm_1082, cnt) == 0)
            {
                p_at_m194 = cnt;
                break;
            }
        }
    }
    if (p_at_m194 == -1)
    {
        return;
    }
    bddata(0, prm_1082, p_at_m194) = prm_1083;
    bddata(1, prm_1082, p_at_m194) = prm_1084;
    bddata(2, prm_1082, p_at_m194) = prm_1085;
    bddata(3, prm_1082, p_at_m194) = bdref(0, prm_1083) + 363;
    return;
}
void label_2270()
{
    if (initeco)
    {
        gdata(815) = 15;
    }
    bkdata(0) = gdata(20);
    bkdata(1) = gdata(22);
    bkdata(2) = cdata(1, 0);
    bkdata(3) = cdata(2, 0);
    snd(44);
    label_2113();
    mode = 11;
    cdata(1, 0) = 0;
    cdata(2, 0) = 0;
    scx = cdata(1, 0);
    scy = cdata(2, 0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
        {
            if (adata(16, cnt) == 0)
            {
                continue;
            }
            if (adata(28, cnt) == 0)
            {
                continue;
            }
            gdata(20) = adata(16, cnt);
            gdata(22) = 1;
            if (gdata(20) != bkdata(0) || gdata(22) != bkdata(1))
            {
                label_17402();
            }
            p = adata(28, cnt);
            if (initeco)
            {
                if (p == 1)
                {
                    podata(100, p) = 1500 + rnd(200);
                    podata(101, p) = 0;
                    addbuilding(p, 1, 27, 22);
                    addbuilding(p, 1, 28, 23);
                }
                if (p == 2)
                {
                    podata(100, p) = 80 + rnd(20);
                    podata(101, p) = 0;
                    addbuilding(p, 2, 42, 31);
                    addbuilding(p, 2, 43, 33);
                }
                if (p == 3)
                {
                    podata(100, p) = 6500 + rnd(500);
                    podata(101, p) = 0;
                }
                if (p == 4)
                {
                    podata(100, p) = 1100 + rnd(150);
                    podata(101, p) = 0;
                    addbuilding(p, 5, 12, 34);
                }
                if (p == 5)
                {
                    podata(100, p) = 3500 + rnd(300);
                    podata(101, p) = 0;
                    addbuilding(p, 6, 4, 16);
                }
                if (p == 6)
                {
                    podata(100, p) = 800 + rnd(200);
                    podata(101, p) = 0;
                }
                if (p == 7)
                {
                    podata(100, p) = 2600 + rnd(300);
                    podata(101, p) = 0;
                    addbuilding(p, 3, 60, 33);
                }
                podata(200, p) = podata(100, p) * 5 + rnd(1000);
            }
            label_1739();
        }
    }
    gdata(20) = bkdata(0);
    gdata(22) = bkdata(1);
    cdata(1, 0) = bkdata(2);
    cdata(2, 0) = bkdata(3);
    gdata(79) = 1;
    mode = 3;
    mapsubroutine = 1;
    label_17402();
    initeco = 0;
    msgtemp = "";
    return;
}
void label_22712()
{
label_22711:
    listmax = 0;
    page = 0;
    pagesize = 16;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    snd(99);
    curmenu = 0;
    redraw(0);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_politics.bmp"s, 1);
    gsel(0);
    fillbg(3, 960, 96, 128, 128);
    label_1421();
    drawmenu(3);
    windowshadow = 1;
    city = adata(28, gdata(20));
    lv = 0;
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2272_internal:
    redraw(0);
    s(0) = lang(u8"ポストチャート"s, u8"City Chart"s);
    s(1) = strhint3b;
    display_window((windoww - 580) / 2 + inf_screenx, winposy(400), 580, 400);
    keyrange = 0;
    j = 0;
    n = 0;
    color(0, 0, 0);
    cs_listbk();
    if (adata(28, gdata(20)) == 0 || gdata(22) != 1)
    {
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        pos(wx + 40, wy + 50);
        mes(lang(
            u8"この場所には経済活動がない。"s,
            u8"There's no economy running in this area."s));
    }
    else
    {
        display_topic(
            lang(
                mapname(adata(16, gdata(20))) + u8"のチャート"s,
                ""s + mapname(adata(16, gdata(20))) + u8" City Chart"s),
            wx + 40,
            wy + 34);
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                if (pochart(j, n, lv) == 0 || cnt == 0)
                {
                    if (cnt != 0)
                    {
                        ++n;
                    }
                    j = 0;
                    i = 0;
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                        {
                            if (pochart(cnt, n, lv) != 0)
                            {
                                ++i;
                            }
                        }
                    }
                    if (i == 0)
                    {
                        break;
                    }
                    y = wy + 70 + n * 55;
                }
                x = wx + (ww - 70) / (i + 1) * (j + 1);
                pos(x - 26, y - 3);
                gcopy(3, 960, 288, 144, 24);
                p = pochart(j, n, lv);
                key_list(cnt) = key_select(cnt);
                ++keyrange;
                display_key(x - 30, y + 21, cnt);
                font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
                pos(x - 2, y + jp * 2);
                color(0, 0, 0);
                bmes(cnven(popostname(p)), 255, 255, 255);
                color(0, 0, 0);
                font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
                if (podata(0 + cnt, city) == 0)
                {
                    s = lang(u8"不在"s, u8"Empty"s);
                }
                cs_list(cnt, s, x - 2, y + 20, 19);
                ++j;
            }
        }
        if (keyrange != 0)
        {
            cs_bk = cs;
        }
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        return;
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    goto label_22711;
                }
                if (curmenu == 1)
                {
                    label_2276();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2280();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_22711;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_22711;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        return;
    }
    goto label_2272_internal;
}
void showeconomy(
    int prm_1086,
    int prm_1087,
    const std::string& prm_1088,
    int prm_1089,
    int prm_1090)
{
    int p_at_m195 = 0;
    pos(prm_1086, prm_1087);
    color(0, 0, 0);
    mes(prm_1088);
    pos(prm_1086 + 130, prm_1087);
    mes(""s + prm_1089);
    p_at_m195 = prm_1089 - prm_1090;
    if (p_at_m195 >= 0)
    {
        color(0, 0, 150);
    }
    else
    {
        color(150, 0, 0);
    }
    pos(prm_1086 + 130 + ginfo(14) + 12, prm_1087);
    mes(u8"("s + p_at_m195 + u8")"s);
    return;
}
void label_2276()
{
    curmenu = 1;
    key_list(0) = key_enter;
    keyrange = 0;
    pagesize = 1;
    listmax = 2;
    redraw(0);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_politics.bmp"s, 1);
    gsel(0);
    fillbg(3, 960, 96, 128, 128);
    label_1421();
    gsel(7);
    pos(0, 0);
    picload(exedir + u8"graphic\\ie_scroll.bmp"s);
    gsel(0);
    windowshadow = 1;
    snd(92);
    drawmenu(3);
    city = 1;
    ww = 540;
    wh = 440;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
label_2277_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2278_internal:
    redraw(0);
    s = strhint2 + strhint3b;
    showscroll(wx, wy, ww, wh);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    if (adata(28, gdata(20)) == 0 || gdata(22) != 1)
    {
        pos(wx + 40, wy + 60);
        mes(lang(
            u8"この場所には経済活動がない。"s,
            u8"There's no economy running in this area."s));
    }
    else
    {
        if (page == 0)
        {
            display_topic(
                lang(u8"街の概要"s, u8"Town Information"s), wx + 65, wy + 50);
            display_topic(
                lang(u8"街の財政"s, u8"Town Finance"s), wx + 65, wy + 150);
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            color(0, 0, 0);
            x = wx + 50;
            y = wy + 80;
            showeconomy(
                x,
                y,
                lang(u8"人口"s, u8"Population"s),
                podata(100, city),
                podata(101, city));
            x = wx + 50;
            y = wy + 180;
            showeconomy(
                x,
                y,
                lang(u8"基本税"s, u8"Basic Tax"s) + u8" ("s + gdata(820)
                    + u8"%)"s,
                podata(102, city),
                podata(103, city));
            showeconomy(
                x,
                y + 16,
                lang(u8"消費税"s, u8"Excise Tax"s) + u8" ("s + podata(150, city)
                    + u8"%)"s,
                podata(104, city),
                podata(105, city));
        }
        if (page == 1)
        {
            display_topic(
                lang(u8"人口推移の詳細"s, u8"Population Detail"s),
                wx + 65,
                wy + 50);
            display_topic(
                lang(u8"収支の詳細"s, u8"Finance Detail"s), wx + 65, wy + 200);
            font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
            color(0, 0, 0);
        }
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    label_22712();
                    return;
                }
                if (curmenu == 1)
                {
                    label_2276();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2280();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2277_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2277_internal;
        }
    }
    if (key != ""s)
    {
        label_1419();
        return;
    }
    goto label_2278_internal;
}
void label_2280()
{
    listmax = 0;
    page = 0;
    pagesize = 13;
    cs = 0;
    cs_bk = -1;
    curmenu = 2;
    city = adata(28, gdata(20));
    list(0, listmax) = 1;
    listn(0, listmax) = u8"この国の首都は"s + mapname(gdata(815)) + u8"だ。"s;
    ++listmax;
    if (mdata(6) != 3)
    {
        goto label_2281_internal;
    }
    list(0, listmax) = 0;
    listn(0, listmax) = u8"この街の消費税は"s + podata(150, city) + u8"%だ。"s;
    ++listmax;
    p = rnd(1000);
    list(0, listmax) = 0;
    listn(0, listmax) =
        u8"この街の井戸水の汚染は深刻だ(死者"s + p + u8"人）。"s;
    ++listmax;
    list(0, listmax) = 0;
    listn(0, listmax) = u8"この街では殺人が許される。"s;
    ++listmax;
label_2281_internal:
    redraw(0);
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"graphic\\deco_politics.bmp"s, 1);
    gsel(0);
    fillbg(3, 960, 96, 128, 128);
    label_1421();
    gsel(7);
    pos(0, 0);
    picload(exedir + u8"graphic\\ie_scroll.bmp"s);
    gsel(0);
    windowshadow = 1;
    snd(92);
    drawmenu(3);
    city = 1;
    ww = 480;
    wh = 400;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
label_2282_internal:
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2283_internal:
    redraw(0);
    s = strhint2 + strhint3b;
    showscroll(wx, wy, ww, wh);
    display_topic(lang(u8"法律"s, u8"Law"s), wx + 65, wy + 45);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    color(0, 0, 0);
    pos(wx + 185, wy + 52);
    mes(lang(u8"国法"s, u8"Global"s));
    if (mdata(6) == 3)
    {
        pos(wx + 285, wy + 52);
        mes(lang(
            ""s + mapname(gdata(20)) + u8"の法"s,
            u8"Law of "s + mapname(gdata(20)) + u8")"s));
    }
    pos(wx + 155, wy + 46);
    gmode(2);
    gcopy(3, 312, 360, 24, 24);
    pos(wx + 255, wy + 46);
    gmode(2);
    gcopy(3, 288, 360, 24, 24);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            if (cnt % 2 == 0)
            {
                pos(wx + 74, wy + 76 + cnt * 19);
                gfini(365, 18);
                gfdec2(12, 14, 16);
            }
            display_key(wx + 72, wy + 76 + cnt * 19 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s = listn(0, p);
            cs_list(cnt, s, wx + 100, wy + 76 + cnt * 19 - 1, 19, 0, 0);
            pos(wx + 42, wy + 68 + cnt * 19 + 2);
            gmode(2);
            gcopy(3, 288 + list(0, p) * 24, 360, 24, 24);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    label_22712();
                    return;
                }
                if (curmenu == 1)
                {
                    label_2276();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2280();
                    return;
                }
            }
        }
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2282_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2282_internal;
        }
    }
    if (key == key_cancel)
    {
        label_1419();
        return;
    }
    goto label_2283_internal;
}
void label_2295()
{
    if (cdatan(2, r1) == u8"kobolt"s)
    {
        cdata(158, r1) = 1;
        return;
    }
    if (cdatan(2, r1) == u8"orc"s)
    {
        cdata(158, r1) = 2;
        return;
    }
    if (cdatan(2, r1) == u8"troll"s)
    {
        cdata(158, r1) = 3;
        return;
    }
    if (cdatan(2, r1) == u8"lizardman"s)
    {
        cdata(158, r1) = 4;
        return;
    }
    if (cdatan(2, r1) == u8"minotaur"s)
    {
        cdata(158, r1) = 5;
        return;
    }
    if (cdatan(2, r1) == u8"yerles"s)
    {
        cdata(158, r1) = 6;
        return;
    }
    if (cdatan(2, r1) == u8"norland"s)
    {
        cdata(158, r1) = 7;
        return;
    }
    if (cdatan(2, r1) == u8"eulderna"s)
    {
        cdata(158, r1) = 8;
        return;
    }
    if (cdatan(2, r1) == u8"fairy"s)
    {
        cdata(158, r1) = 9;
        return;
    }
    if (cdatan(2, r1) == u8"asura"s)
    {
        cdata(158, r1) = 10;
        return;
    }
    if (cdatan(2, r1) == u8"slime"s)
    {
        cdata(158, r1) = 11;
        return;
    }
    if (cdatan(2, r1) == u8"wolf"s)
    {
        cdata(158, r1) = 12;
        return;
    }
    if (cdatan(2, r1) == u8"dwarf"s)
    {
        cdata(158, r1) = 13;
        return;
    }
    if (cdatan(2, r1) == u8"juere"s)
    {
        cdata(158, r1) = 14;
        return;
    }
    if (cdatan(2, r1) == u8"zombie"s)
    {
        cdata(158, r1) = 15;
        return;
    }
    if (cdatan(2, r1) == u8"elea"s)
    {
        cdata(158, r1) = 16;
        return;
    }
    if (cdatan(2, r1) == u8"rabbit"s)
    {
        cdata(158, r1) = 17;
        return;
    }
    if (cdatan(2, r1) == u8"sheep"s)
    {
        cdata(158, r1) = 18;
        return;
    }
    if (cdatan(2, r1) == u8"frog"s)
    {
        cdata(158, r1) = 19;
        return;
    }
    if (cdatan(2, r1) == u8"centipede"s)
    {
        cdata(158, r1) = 20;
        return;
    }
    if (cdatan(2, r1) == u8"snail"s)
    {
        cdata(158, r1) = 21;
        return;
    }
    if (cdatan(2, r1) == u8"mandrake"s)
    {
        cdata(158, r1) = 22;
        return;
    }
    if (cdatan(2, r1) == u8"beetle"s)
    {
        cdata(158, r1) = 23;
        return;
    }
    if (cdatan(2, r1) == u8"mushroom"s)
    {
        cdata(158, r1) = 24;
        return;
    }
    if (cdatan(2, r1) == u8"bat"s)
    {
        cdata(158, r1) = 25;
        return;
    }
    if (cdatan(2, r1) == u8"ent"s)
    {
        cdata(158, r1) = 26;
        return;
    }
    if (cdatan(2, r1) == u8"lich"s)
    {
        cdata(158, r1) = 27;
        return;
    }
    if (cdatan(2, r1) == u8"hound"s)
    {
        cdata(158, r1) = 28;
        return;
    }
    if (cdatan(2, r1) == u8"ghost"s)
    {
        cdata(158, r1) = 29;
        return;
    }
    if (cdatan(2, r1) == u8"spirit"s)
    {
        cdata(158, r1) = 30;
        return;
    }
    if (cdatan(2, r1) == u8"eye"s)
    {
        cdata(158, r1) = 31;
        return;
    }
    if (cdatan(2, r1) == u8"wyvern"s)
    {
        cdata(158, r1) = 32;
        return;
    }
    if (cdatan(2, r1) == u8"wasp"s)
    {
        cdata(158, r1) = 33;
        return;
    }
    if (cdatan(2, r1) == u8"giant"s)
    {
        cdata(158, r1) = 34;
        return;
    }
    if (cdatan(2, r1) == u8"imp"s)
    {
        cdata(158, r1) = 35;
        return;
    }
    if (cdatan(2, r1) == u8"hand"s)
    {
        cdata(158, r1) = 36;
        return;
    }
    if (cdatan(2, r1) == u8"snake"s)
    {
        cdata(158, r1) = 37;
        return;
    }
    if (cdatan(2, r1) == u8"drake"s)
    {
        cdata(158, r1) = 38;
        return;
    }
    if (cdatan(2, r1) == u8"goblin"s)
    {
        cdata(158, r1) = 39;
        return;
    }
    if (cdatan(2, r1) == u8"bear"s)
    {
        cdata(158, r1) = 40;
        return;
    }
    if (cdatan(2, r1) == u8"armor"s)
    {
        cdata(158, r1) = 41;
        return;
    }
    if (cdatan(2, r1) == u8"medusa"s)
    {
        cdata(158, r1) = 42;
        return;
    }
    if (cdatan(2, r1) == u8"cupid"s)
    {
        cdata(158, r1) = 43;
        return;
    }
    if (cdatan(2, r1) == u8"phantom"s)
    {
        cdata(158, r1) = 44;
        return;
    }
    if (cdatan(2, r1) == u8"harpy"s)
    {
        cdata(158, r1) = 45;
        return;
    }
    if (cdatan(2, r1) == u8"dragon"s)
    {
        cdata(158, r1) = 46;
        return;
    }
    if (cdatan(2, r1) == u8"dinosaur"s)
    {
        cdata(158, r1) = 47;
        return;
    }
    if (cdatan(2, r1) == u8"cerberus"s)
    {
        cdata(158, r1) = 48;
        return;
    }
    if (cdatan(2, r1) == u8"spider"s)
    {
        cdata(158, r1) = 49;
        return;
    }
    if (cdatan(2, r1) == u8"golem"s)
    {
        cdata(158, r1) = 50;
        return;
    }
    if (cdatan(2, r1) == u8"rock"s)
    {
        cdata(158, r1) = 51;
        return;
    }
    if (cdatan(2, r1) == u8"crab"s)
    {
        cdata(158, r1) = 52;
        return;
    }
    if (cdatan(2, r1) == u8"skeleton"s)
    {
        cdata(158, r1) = 53;
        return;
    }
    if (cdatan(2, r1) == u8"piece"s)
    {
        cdata(158, r1) = 54;
        return;
    }
    if (cdatan(2, r1) == u8"cat"s)
    {
        cdata(158, r1) = 55;
        return;
    }
    if (cdatan(2, r1) == u8"dog"s)
    {
        cdata(158, r1) = 56;
        return;
    }
    if (cdatan(2, r1) == u8"roran"s)
    {
        cdata(158, r1) = 57;
        return;
    }
    if (cdatan(2, r1) == u8"rat"s)
    {
        cdata(158, r1) = 58;
        return;
    }
    if (cdatan(2, r1) == u8"shell"s)
    {
        cdata(158, r1) = 59;
        return;
    }
    if (cdatan(2, r1) == u8"catgod"s)
    {
        cdata(158, r1) = 60;
        return;
    }
    if (cdatan(2, r1) == u8"machinegod"s)
    {
        cdata(158, r1) = 61;
        return;
    }
    if (cdatan(2, r1) == u8"undeadgod"s)
    {
        cdata(158, r1) = 62;
        return;
    }
    if (cdatan(2, r1) == u8"machine"s)
    {
        cdata(158, r1) = 63;
        return;
    }
    if (cdatan(2, r1) == u8"wisp"s)
    {
        cdata(158, r1) = 64;
        return;
    }
    if (cdatan(2, r1) == u8"chicken"s)
    {
        cdata(158, r1) = 65;
        return;
    }
    if (cdatan(2, r1) == u8"stalker"s)
    {
        cdata(158, r1) = 66;
        return;
    }
    if (cdatan(2, r1) == u8"catsister"s)
    {
        cdata(158, r1) = 67;
        return;
    }
    if (cdatan(2, r1) == u8"mutant"s)
    {
        cdata(158, r1) = 68;
        return;
    }
    if (cdatan(2, r1) == u8"yeek"s)
    {
        cdata(158, r1) = 69;
        return;
    }
    if (cdatan(2, r1) == u8"yith"s)
    {
        cdata(158, r1) = 70;
        return;
    }
    if (cdatan(2, r1) == u8"servant"s)
    {
        cdata(158, r1) = 71;
        return;
    }
    if (cdatan(2, r1) == u8"horse"s)
    {
        cdata(158, r1) = 72;
        return;
    }
    if (cdatan(2, r1) == u8"god"s)
    {
        cdata(158, r1) = 73;
        return;
    }
    if (cdatan(2, r1) == u8"quickling"s)
    {
        cdata(158, r1) = 74;
        return;
    }
    if (cdatan(2, r1) == u8"metal"s)
    {
        cdata(158, r1) = 75;
        return;
    }
    if (cdatan(2, r1) == u8"bike"s)
    {
        cdata(158, r1) = 76;
        return;
    }
    return;
}
void label_2296()
{
    DIM3(racebit, 10, 78);
    return;
}
int label_2298()
{
    if (dbmode == 1)
    {
        listmax = 0;
        listn(1, listmax) = u8"warrior"s;
        ++listmax;
        listn(1, listmax) = u8"thief"s;
        ++listmax;
        listn(1, listmax) = u8"wizard"s;
        ++listmax;
        listn(1, listmax) = u8"farmer"s;
        ++listmax;
        listn(1, listmax) = u8"archer"s;
        ++listmax;
        listn(1, listmax) = u8"warmage"s;
        ++listmax;
        listn(1, listmax) = u8"tourist"s;
        ++listmax;
        listn(1, listmax) = u8"pianist"s;
        ++listmax;
        listn(1, listmax) = u8"priest"s;
        ++listmax;
        listn(1, listmax) = u8"claymore"s;
        ++listmax;
        stat = 0;
        return stat;
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"warrior"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 1;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"戦士"s;
        }
        if (dbmode == 11)
        {
            classname = u8"戦士"s;
            buff = lang(
                u8"戦士は己の肉体を武器に、立ちはだかるものを破壊し突き進みます。魔法の扱いには向いていませんが、その高い戦闘能力には目を見張るものがあります。"s,
                u8"The Warrior. With working knowledge of all things stabby, bashy, choppy, and shooty, anything in a Warrior's hands is bad news for their enemies. No mere thug, they have knowledge of tactics to bring even the strongest down, and are trained early on to be comfortable in all kinds of armor and shields. Warriors are personifications of the adage \"If violence isn't working, you are obviously not using enough of it.\""s);
            p(0) = 10;
            p(1) = 10;
            p(2) = 2;
            p(3) = 0;
            p(4) = 0;
            p(5) = 3;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"warrior"s;
            cequipment = 1;
            skillinit(10, rc, 10);
            skillinit(11, rc, 10);
            skillinit(12, rc, 2);
            skillinit(13, rc, 0);
            skillinit(14, rc, 0);
            skillinit(15, rc, 3);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(100, rc, 6);
            skillinit(101, rc, 4);
            skillinit(103, rc, 6);
            skillinit(102, rc, 6);
            skillinit(104, rc, 4);
            skillinit(107, rc, 5);
            skillinit(167, rc, 6);
            skillinit(152, rc, 4);
            skillinit(173, rc, 5);
            skillinit(154, rc, 5);
            skillinit(170, rc, 4);
            skillinit(169, rc, 4);
            skillinit(168, rc, 5);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"thief"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 7;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"遺跡荒らし"s;
        }
        if (dbmode == 11)
        {
            classname = u8"遺跡荒らし"s;
            buff = lang(
                u8"遺跡荒らしは、財宝を目当てに墓や遺跡から貴重品を持ち出すことで生計をたてています。彼らにはそこそこの戦闘能力と、商人と駆け引きをするために必要な才能があります。"s,
                u8"The Thief. Good with swords and bows, though not a believer of a fair fight. Prefers to avoid taking hits if possible. Can dual wield if the weapons aren't too heavy. Years of dealing with fences have given the Thief skills with negotiating a better deal. A firm believer in the adage \"What's yours is mine, and what's mine is mine. See that guy over there, his stuff? Mine too.\""s);
            p(0) = 4;
            p(1) = 4;
            p(2) = 8;
            p(3) = 5;
            p(4) = 4;
            p(5) = 0;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"thief"s;
            cequipment = 7;
            skillinit(10, rc, 4);
            skillinit(11, rc, 4);
            skillinit(12, rc, 8);
            skillinit(13, rc, 5);
            skillinit(14, rc, 4);
            skillinit(15, rc, 0);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(101, rc, 4);
            skillinit(100, rc, 3);
            skillinit(108, rc, 3);
            skillinit(173, rc, 4);
            skillinit(166, rc, 4);
            skillinit(152, rc, 3);
            skillinit(156, rc, 4);
            skillinit(300, rc, 4);
            skillinit(174, rc, 3);
            skillinit(170, rc, 4);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"wizard"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 2;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"魔法使い"s;
        }
        if (dbmode == 11)
        {
            classname = u8"魔法使い"s;
            buff = lang(
                u8"魔法使いは、その名のとおり魔法の知識に長けています。魔法使いの生死は、魔法書の取得と管理にかかっています。"s,
                u8"The Wizard. Master of the Arcane, the Eldritch, and the Esoteric. A pity all those years have left little time to build muscles or quick reflexes. Still, they do have some small skill with staff and short sword. And while they start out so feeblePurits scare them, with a few books under their belt, and a little practice, a Wizard will soon decimate legions. Their motto: \"If it's not on fire now, it will be soon\"."s);
            p(0) = 0;
            p(1) = 0;
            p(2) = 0;
            p(3) = 4;
            p(4) = 3;
            p(5) = 8;
            p(6) = 10;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"wizard"s;
            cequipment = 2;
            skillinit(10, rc, 0);
            skillinit(11, rc, 0);
            skillinit(12, rc, 0);
            skillinit(13, rc, 4);
            skillinit(14, rc, 3);
            skillinit(15, rc, 8);
            skillinit(16, rc, 10);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(105, rc, 3);
            skillinit(101, rc, 2);
            skillinit(150, rc, 6);
            skillinit(165, rc, 3);
            skillinit(164, rc, 6);
            skillinit(174, rc, 5);
            skillinit(171, rc, 4);
            skillinit(178, rc, 4);
            skillinit(172, rc, 5);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"farmer"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 1;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"農民"s;
        }
        if (dbmode == 11)
        {
            classname = u8"農民"s;
            buff = lang(
                u8"農民は生産を得意とする職業です。彼らは我慢強く、またある程度の身体能力を持っています。"s,
                u8"The Farmer. While not a steely-thewed Warrior or or well read Mage, the farmer is a Jack-of All-Trades. Good with a polearm from threshing grain, and good bargainers with their deals with merchants, they have working knowledge of just about every trade there is. As such, they never go hungry, as there's always something someone will pay dearly to get done. Their motto: \"Anything worth doing is best done yourself\"."s);
            p(0) = 5;
            p(1) = 5;
            p(2) = 2;
            p(3) = 0;
            p(4) = 8;
            p(5) = 5;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"farmer"s;
            cequipment = 1;
            skillinit(10, rc, 5);
            skillinit(11, rc, 5);
            skillinit(12, rc, 2);
            skillinit(13, rc, 0);
            skillinit(14, rc, 8);
            skillinit(15, rc, 5);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(104, rc, 4);
            skillinit(107, rc, 3);
            skillinit(173, rc, 3);
            skillinit(156, rc, 5);
            skillinit(184, rc, 6);
            skillinit(161, rc, 7);
            skillinit(154, rc, 5);
            skillinit(180, rc, 5);
            skillinit(177, rc, 5);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"predator"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 0;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"プレデター"s;
        }
        if (dbmode == 11)
        {
            classname = u8"プレデター"s;
            buff = lang(""s, ""s);
            p(0) = 8;
            p(1) = 11;
            p(2) = 8;
            p(3) = 0;
            p(4) = 0;
            p(5) = 0;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 0;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"predator"s;
            cequipment = 0;
            skillinit(10, rc, 8);
            skillinit(11, rc, 11);
            skillinit(12, rc, 8);
            skillinit(13, rc, 0);
            skillinit(14, rc, 0);
            skillinit(15, rc, 0);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 10);
            skillinit(152, rc, 4);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"archer"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 3;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"狩人"s;
        }
        if (dbmode == 11)
        {
            classname = u8"狩人"s;
            buff = lang(
                u8"狩人は遠隔攻撃のスペシャリストです。多少の打撃能力もありますが、大抵は敵の接近を許さずに倒すことができるでしょう。"s,
                u8"The Archer. Skilled in the ways of the forest and hunting, they are master marksmen, and don't see why one should hunt monster any different than a deer. Skilled with the Short Sword, the axe, and of course all types of bows, plus a few skills they picked up on their long trips in the woods. Firm believers that \"Anything dead over THERE will not be bothering me HERE\"."s);
            p(0) = 6;
            p(1) = 4;
            p(2) = 8;
            p(3) = 5;
            p(4) = 2;
            p(5) = 0;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"archer"s;
            cequipment = 3;
            skillinit(10, rc, 6);
            skillinit(11, rc, 4);
            skillinit(12, rc, 8);
            skillinit(13, rc, 5);
            skillinit(14, rc, 2);
            skillinit(15, rc, 0);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(108, rc, 5);
            skillinit(109, rc, 5);
            skillinit(101, rc, 4);
            skillinit(102, rc, 3);
            skillinit(173, rc, 5);
            skillinit(174, rc, 3);
            skillinit(170, rc, 3);
            skillinit(177, rc, 4);
            skillinit(301, rc, 4);
            skillinit(189, rc, 3);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"warmage"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 5;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"魔法戦士"s;
        }
        if (dbmode == 11)
        {
            classname = u8"魔法戦士"s;
            buff = lang(
                u8"魔法戦士は戦士と魔法使いの中間的な職業で、より打撃に重点を置いています。魔法を使いこなすためにも、バランスをとり成長させることが必要でしょう。"s,
                u8"The Warmage. Not really a Wizard, not really a Warrior, the Warmage is a believer that stabbing things that are on fire is better than just stabbing them or setting them on fire. Good with swords, armor, books and casting. Their only weakness is that without specialization, they won't truely excel in a field. Still when your motto is: \"Everything worth doing is worth overdoing\", you don't really care."s);
            p(0) = 6;
            p(1) = 6;
            p(2) = 2;
            p(3) = 0;
            p(4) = 0;
            p(5) = 4;
            p(6) = 7;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"warmage"s;
            cequipment = 5;
            skillinit(10, rc, 6);
            skillinit(11, rc, 6);
            skillinit(12, rc, 2);
            skillinit(13, rc, 0);
            skillinit(14, rc, 0);
            skillinit(15, rc, 4);
            skillinit(16, rc, 7);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(100, rc, 4);
            skillinit(101, rc, 3);
            skillinit(173, rc, 3);
            skillinit(150, rc, 4);
            skillinit(164, rc, 3);
            skillinit(174, rc, 5);
            skillinit(170, rc, 4);
            skillinit(169, rc, 4);
            skillinit(172, rc, 4);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"tourist"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 0;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"観光客"s;
        }
        if (dbmode == 11)
        {
            classname = u8"観光客"s;
            buff = lang(
                u8"観光客はこの世界における伝統的な職業で、予想を裏切らないほど軟弱です。"s,
                u8"The Tourist. They have no strengths, they have no weaknesses. They don't have anything really. Oh they can fish, I'll give you that, but if you want a real challenge to build something from the ground up, this is the way to go. After all, you have to teach them everything. Only for those who have a good amount of time to spare. You can even write your own motto if you want."s);
            p(0) = 0;
            p(1) = 0;
            p(2) = 0;
            p(3) = 0;
            p(4) = 0;
            p(5) = 0;
            p(6) = 0;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"tourist"s;
            cequipment = 0;
            skillinit(10, rc, 0);
            skillinit(11, rc, 0);
            skillinit(12, rc, 0);
            skillinit(13, rc, 0);
            skillinit(14, rc, 0);
            skillinit(15, rc, 0);
            skillinit(16, rc, 0);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(185, rc, 5);
            skillinit(182, rc, 3);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"pianist"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 3;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"ピアニスト"s;
        }
        if (dbmode == 11)
        {
            classname = u8"ピアニスト"s;
            buff = lang(
                u8"ピアニストは演奏を生業とする孤高の職業です。彼らは常にピアノを背負っているため、重荷に耐える能力があります。"s,
                u8"The Pianist. Where the Farmer has all the practical skills, the Pianist has all the impractical ones. Still, they can read a book, play a tune, make jewelry, and since they are expected to haul a piano around, they get real good with weight lifting. Their Motto: \"The whole world is my stage!\" And they believe it too."s);
            p(0) = 6;
            p(1) = 0;
            p(2) = 4;
            p(3) = 5;
            p(4) = 6;
            p(5) = 0;
            p(6) = 4;
            p(7) = 8;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"pianist"s;
            cequipment = 3;
            skillinit(10, rc, 6);
            skillinit(11, rc, 0);
            skillinit(12, rc, 4);
            skillinit(13, rc, 5);
            skillinit(14, rc, 6);
            skillinit(15, rc, 0);
            skillinit(16, rc, 4);
            skillinit(17, rc, 8);
            skillinit(18, rc, 0);
            skillinit(183, rc, 6);
            skillinit(153, rc, 19);
            skillinit(150, rc, 4);
            skillinit(165, rc, 6);
            skillinit(174, rc, 6);
            skillinit(179, rc, 5);
            skillinit(171, rc, 4);
            skillinit(301, rc, 3);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"gunner"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 4;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"機工兵"s;
        }
        if (dbmode == 11)
        {
            classname = u8"機工兵"s;
            buff = lang(""s, ""s);
            p(0) = 0;
            p(1) = 2;
            p(2) = 5;
            p(3) = 8;
            p(4) = 5;
            p(5) = 4;
            p(6) = 3;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 0;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"gunner"s;
            cequipment = 4;
            skillinit(10, rc, 0);
            skillinit(11, rc, 2);
            skillinit(12, rc, 5);
            skillinit(13, rc, 8);
            skillinit(14, rc, 5);
            skillinit(15, rc, 4);
            skillinit(16, rc, 3);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(110, rc, 5);
            skillinit(173, rc, 4);
            skillinit(150, rc, 3);
            skillinit(154, rc, 4);
            skillinit(189, rc, 3);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"priest"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 6;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"神官"s;
        }
        if (dbmode == 11)
        {
            classname = u8"神官"s;
            buff = lang(
                u8"神官は魔法の能力と供に、若干の肉弾戦への適正を持っています。彼らは信仰する神から、最大限の恩恵を受けることができるでしょう。"s,
                u8"The Priest. The Faithful, the devout. They bring the words of their God to the world, one battered heretic at a time. Good with all armors, shields, divine magic, blunt weapons, and reading. The Priest is a handful, though depending on their God, they may have hidden pratfalls as well. If the motto: \"A hymn a day,, will keep me away, Sinner!\" appeals to you, choose this."s);
            p(0) = 2;
            p(1) = 2;
            p(2) = 0;
            p(3) = 2;
            p(4) = 2;
            p(5) = 10;
            p(6) = 7;
            p(7) = 2;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"priest"s;
            cequipment = 6;
            skillinit(10, rc, 2);
            skillinit(11, rc, 2);
            skillinit(12, rc, 0);
            skillinit(13, rc, 2);
            skillinit(14, rc, 2);
            skillinit(15, rc, 10);
            skillinit(16, rc, 7);
            skillinit(17, rc, 2);
            skillinit(18, rc, 0);
            skillinit(103, rc, 3);
            skillinit(168, rc, 3);
            skillinit(150, rc, 5);
            skillinit(154, rc, 5);
            skillinit(174, rc, 5);
            skillinit(170, rc, 3);
            skillinit(169, rc, 4);
            skillinit(181, rc, 5);
            skillinit(172, rc, 5);
        }
    }
    if (dbidn == ""s)
    {
        classname = u8"なし"s;
        cequipment = 0;
        stat = 0;
        return stat;
    }
    if (dbidn == u8"claymore"s)
    {
        if (dbmode == 16)
        {
            if (dbspec == 4)
            {
                stat = 8;
                return stat;
            }
            stat = 0;
            return stat;
        }
        if (dbmode == 2)
        {
            classname = u8"クレイモア"s;
        }
        if (dbmode == 11)
        {
            classname = u8"クレイモア"s;
            buff = lang(
                u8"クレイモアは半人半妖の血が流れる俊敏な剣士です。銀眼の斬殺者と呼ばれる彼女達は、身の丈ほどの長さの大剣を自在に扱います。耐久力は低めですが、軽いみのこなしと敏感な目で、相手の攻撃を軽々とかわすことができます。"s,
                u8"The Claymore. Half-human, with silver eyes and inhuman evasive capabilities, the Claymores are a mostly female class, as the males have… problems. Their weapon of choice is the Claymore, hence their name, and they prefer light armor, relying on their great speed and skills of evasion to protect them. They heal fast, but the healing comes at a price. Their bodies are unstable, their motto unknown."s);
            p(0) = 9;
            p(1) = 3;
            p(2) = 7;
            p(3) = 6;
            p(4) = 0;
            p(5) = 0;
            p(6) = 4;
            p(7) = 0;
        }
        if (dbmode == 9)
        {
            stat = 1;
            return stat;
        }
        if (dbmode == 3)
        {
            cdatan(3, rc) = u8"claymore"s;
            cequipment = 8;
            skillinit(10, rc, 9);
            skillinit(11, rc, 3);
            skillinit(12, rc, 7);
            skillinit(13, rc, 6);
            skillinit(14, rc, 0);
            skillinit(15, rc, 0);
            skillinit(16, rc, 4);
            skillinit(17, rc, 0);
            skillinit(18, rc, 0);
            skillinit(100, rc, 6);
            skillinit(167, rc, 7);
            skillinit(152, rc, 5);
            skillinit(173, rc, 7);
            skillinit(187, rc, 4);
            skillinit(154, rc, 6);
            skillinit(171, rc, 5);
            skillinit(150, rc, 4);
        }
    }
    stat = 0;
    return stat;
}
void label_2655()
{
    maxnpcid = 356;
    DIM3(cbitorg, 30, maxnpcid);
    filter_creature(2) = "";
    filter_creature(3) = "";
    filter_creature(4) = u8"/man/"s;
    filter_creature(5) = u8"/man/"s;
    filter_creature(6) = u8"/man/"s;
    filter_creature(7) = u8"/man/"s;
    filter_creature(8) = u8"/man/"s;
    filter_creature(9) = u8"/man/"s;
    filter_creature(10) = u8"/man/"s;
    filter_creature(11) = u8"/man/"s;
    filter_creature(12) = u8"/man/"s;
    filter_creature(13) = u8"/man/"s;
    filter_creature(14) = u8"/man/"s;
    filter_creature(15) = u8"/man/"s;
    filter_creature(16) = u8"/man/"s;
    filter_creature(17) = u8"/man/"s;
    filter_creature(18) = u8"/man/"s;
    filter_creature(19) = u8"/man/god/"s;
    filter_creature(20) = u8"/man/"s;
    filter_creature(21) = u8"/man/god/"s;
    filter_creature(22) = u8"/man/"s;
    filter_creature(23) = u8"/man/"s;
    filter_creature(24) = u8"/dragon/"s;
    filter_creature(25) = u8"/man/"s;
    filter_creature(26) = u8"/man/"s;
    filter_creature(27) = u8"/man/"s;
    HMMBITON(cbitorg(1, 351), 0);
    filter_creature(28) = u8"/man/"s;
    filter_creature(29) = "";
    filter_creature(30) = u8"/man/"s;
    filter_creature(31) = u8"/man/"s;
    filter_creature(32) = u8"/man/"s;
    filter_creature(33) = u8"/man/"s;
    filter_creature(34) = u8"/man/"s;
    filter_creature(35) = u8"/undead/god/"s;
    filter_creature(36) = "";
    filter_creature(37) = "";
    filter_creature(38) = "";
    filter_creature(39) = u8"/god/"s;
    filter_creature(40) = u8"/god/"s;
    filter_creature(41) = u8"/god/"s;
    filter_creature(42) = u8"/god/"s;
    filter_creature(43) = u8"/god/"s;
    filter_creature(44) = u8"/god/"s;
    filter_creature(45) = "";
    filter_creature(46) = u8"/slime/"s;
    HMMBITON(cbitorg(0, 3), 22);
    filter_creature(47) = u8"/fire/slime/"s;
    HMMBITON(cbitorg(0, 4), 22);
    filter_creature(48) = u8"/slime/"s;
    filter_creature(49) = u8"/slime/"s;
    filter_creature(50) = u8"/slime/"s;
    HMMBITON(cbitorg(0, 286), 23);
    filter_creature(51) = u8"/slime/"s;
    HMMBITON(cbitorg(0, 285), 23);
    filter_creature(52) = "";
    HMMBITON(cbitorg(0, 287), 23);
    filter_creature(53) = "";
    HMMBITON(cbitorg(0, 327), 27);
    HMMBITON(cbitorg(0, 327), 26);
    filter_creature(54) = u8"/wild/"s;
    filter_creature(55) = u8"/wild/"s;
    filter_creature(56) = u8"/man/"s;
    filter_creature(57) = u8"/man/"s;
    filter_creature(58) = u8"/man/"s;
    HMMBITON(cbitorg(0, 9), 17);
    filter_creature(59) = u8"/man/"s;
    filter_creature(60) = u8"/man/"s;
    filter_creature(61) = u8"/man/"s;
    filter_creature(62) = u8"/man/"s;
    filter_creature(63) = u8"/man/"s;
    filter_creature(64) = u8"/man/god/"s;
    HMMBITON(cbitorg(1, 349), 0);
    filter_creature(65) = u8"/man/"s;
    HMMBITON(cbitorg(1, 348), 0);
    filter_creature(66) = u8"/man/"s;
    HMMBITON(cbitorg(1, 347), 0);
    filter_creature(67) = u8"/man/"s;
    filter_creature(68) = u8"/man/"s;
    filter_creature(69) = u8"/man/"s;
    filter_creature(70) = u8"/man/"s;
    filter_creature(71) = u8"/man/"s;
    filter_creature(72) = u8"/man/"s;
    filter_creature(73) = u8"/man/"s;
    filter_creature(74) = u8"/man/"s;
    filter_creature(75) = u8"/man/"s;
    filter_creature(76) = u8"/man/"s;
    filter_creature(77) = u8"/man/sf/"s;
    filter_creature(78) = u8"/wild/"s;
    filter_creature(79) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 11), 5);
    filter_creature(80) = u8"/man/"s;
    filter_creature(81) = "";
    filter_creature(82) = u8"/yeek/"s;
    filter_creature(83) = u8"/yeek/"s;
    filter_creature(84) = u8"/yeek/"s;
    filter_creature(85) = u8"/yeek/"s;
    filter_creature(86) = u8"/yeek/"s;
    HMMBITON(cbitorg(0, 237), 18);
    filter_creature(87) = "";
    HMMBITON(cbitorg(0, 244), 18);
    filter_creature(88) = "";
    HMMBITON(cbitorg(0, 245), 18);
    filter_creature(89) = "";
    HMMBITON(cbitorg(0, 321), 18);
    filter_creature(90) = u8"/yeek/"s;
    filter_creature(91) = u8"/man/"s;
    filter_creature(92) = "";
    filter_creature(93) = "";
    filter_creature(94) = "";
    filter_creature(95) = "";
    filter_creature(96) = u8"/man/"s;
    filter_creature(97) = u8"/man/"s;
    filter_creature(98) = u8"/man/"s;
    filter_creature(99) = u8"/man/"s;
    filter_creature(100) = u8"/man/"s;
    filter_creature(101) = u8"/man/"s;
    filter_creature(102) = u8"/man/"s;
    filter_creature(103) = u8"/man/"s;
    filter_creature(104) = u8"/man/"s;
    filter_creature(105) = "";
    filter_creature(106) = u8"/dragon/"s;
    HMMBITON(cbitorg(1, 281), 0);
    filter_creature(107) = u8"/mino/"s;
    filter_creature(108) = u8"/mino/"s;
    filter_creature(109) = u8"/mino/"s;
    HMMBITON(cbitorg(1, 298), 0);
    filter_creature(110) = u8"/mino/"s;
    filter_creature(111) = u8"/mino/"s;
    filter_creature(112) = "";
    filter_creature(113) = u8"/man/"s;
    filter_creature(114) = u8"/man/"s;
    filter_creature(115) = u8"/god/"s;
    filter_creature(116) = u8"/god/"s;
    filter_creature(117) = u8"/god/"s;
    filter_creature(118) = u8"/man/"s;
    filter_creature(119) = u8"/man/"s;
    filter_creature(120) = "";
    filter_creature(121) = "";
    filter_creature(122) = "";
    filter_creature(123) = "";
    HMMBITON(cbitorg(1, 25), 0);
    filter_creature(124) = u8"/undead/"s;
    filter_creature(125) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 42), 5);
    filter_creature(126) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 43), 5);
    filter_creature(127) = u8"/wild/fire/dragon/"s;
    HMMBITON(cbitorg(0, 44), 5);
    filter_creature(128) = u8"/fire/"s;
    filter_creature(129) = "";
    filter_creature(130) = u8"/undead/"s;
    filter_creature(131) = u8"/undead/"s;
    filter_creature(132) = u8"/undead/"s;
    filter_creature(133) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 307), 19);
    filter_creature(134) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 308), 19);
    filter_creature(135) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 50), 22);
    filter_creature(136) = u8"/wild/fire/"s;
    HMMBITON(cbitorg(0, 51), 22);
    filter_creature(137) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 52), 22);
    filter_creature(138) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 53), 22);
    filter_creature(139) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 54), 22);
    filter_creature(140) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 55), 22);
    filter_creature(141) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 56), 22);
    filter_creature(142) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 57), 22);
    filter_creature(143) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 58), 22);
    filter_creature(144) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 59), 22);
    filter_creature(145) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 60), 22);
    filter_creature(146) = u8"/wild/"s;
    filter_creature(147) = u8"/wild/"s;
    filter_creature(148) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 63), 5);
    filter_creature(149) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 64), 5);
    filter_creature(150) = "";
    HMMBITON(cbitorg(0, 312), 5);
    filter_creature(151) = "";
    HMMBITON(cbitorg(0, 313), 5);
    filter_creature(152) = "";
    HMMBITON(cbitorg(0, 65), 5);
    HMMBITON(cbitorg(0, 65), 10);
    filter_creature(153) = "";
    HMMBITON(cbitorg(0, 66), 5);
    HMMBITON(cbitorg(0, 66), 10);
    filter_creature(154) = "";
    HMMBITON(cbitorg(0, 67), 5);
    HMMBITON(cbitorg(0, 67), 10);
    filter_creature(155) = "";
    HMMBITON(cbitorg(0, 315), 5);
    HMMBITON(cbitorg(0, 315), 10);
    filter_creature(156) = "";
    HMMBITON(cbitorg(0, 316), 5);
    HMMBITON(cbitorg(0, 316), 10);
    filter_creature(157) = "";
    HMMBITON(cbitorg(0, 314), 5);
    HMMBITON(cbitorg(0, 314), 10);
    filter_creature(158) = u8"/dragon/"s;
    HMMBITON(cbitorg(0, 68), 5);
    filter_creature(159) = "";
    filter_creature(160) = "";
    HMMBITON(cbitorg(0, 81), 5);
    filter_creature(161) = u8"/fire/"s;
    HMMBITON(cbitorg(0, 82), 5);
    filter_creature(162) = "";
    HMMBITON(cbitorg(1, 83), 0);
    filter_creature(163) = "";
    HMMBITON(cbitorg(1, 84), 0);
    filter_creature(164) = u8"/fire/"s;
    HMMBITON(cbitorg(0, 85), 5);
    filter_creature(165) = u8"/god/"s;
    HMMBITON(cbitorg(0, 86), 5);
    filter_creature(166) = "";
    HMMBITON(cbitorg(0, 87), 5);
    filter_creature(167) = u8"/undead/"s;
    filter_creature(168) = u8"/undead/"s;
    filter_creature(169) = u8"/undead/"s;
    filter_creature(170) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 91), 5);
    filter_creature(171) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 92), 5);
    filter_creature(172) = "";
    filter_creature(173) = "";
    filter_creature(174) = u8"/wild/"s;
    filter_creature(175) = u8"/wild/"s;
    filter_creature(176) = u8"/fire/dragon/"s;
    filter_creature(177) = u8"/dragon/"s;
    filter_creature(178) = u8"/undead/"s;
    filter_creature(179) = u8"/undead/"s;
    filter_creature(180) = u8"/undead/"s;
    filter_creature(181) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 257), 19);
    filter_creature(182) = u8"/undead/"s;
    filter_creature(183) = "";
    filter_creature(184) = "";
    filter_creature(185) = "";
    filter_creature(186) = "";
    filter_creature(187) = u8"/undead/fire/"s;
    HMMBITON(cbitorg(0, 106), 10);
    filter_creature(188) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 107), 10);
    filter_creature(189) = u8"/wild/"s;
    filter_creature(190) = u8"/wild/"s;
    HMMBITON(cbitorg(1, 109), 0);
    filter_creature(191) = u8"/wild/"s;
    filter_creature(192) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 110), 10);
    filter_creature(193) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 111), 10);
    filter_creature(194) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 112), 10);
    filter_creature(195) = "";
    HMMBITON(cbitorg(0, 113), 10);
    filter_creature(196) = u8"/god/"s;
    filter_creature(197) = u8"/god/"s;
    filter_creature(198) = u8"/god/"s;
    filter_creature(199) = u8"/god/"s;
    HMMBITON(cbitorg(0, 117), 5);
    filter_creature(200) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 118), 5);
    HMMBITON(cbitorg(0, 118), 10);
    filter_creature(201) = u8"/dragon/"s;
    filter_creature(202) = "";
    filter_creature(203) = u8"/dragon/"s;
    filter_creature(204) = u8"/fire/dragon/"s;
    filter_creature(205) = u8"/dragon/"s;
    filter_creature(206) = u8"/dragon/"s;
    filter_creature(207) = u8"/undead/dragon/"s;
    filter_creature(208) = u8"/dragon/"s;
    filter_creature(209) = u8"/fire/"s;
    filter_creature(210) = u8"/wild/"s;
    filter_creature(211) = u8"/wild/"s;
    filter_creature(212) = u8"/wild/"s;
    filter_creature(213) = u8"/wild/"s;
    filter_creature(214) = u8"/wild/"s;
    filter_creature(215) = u8"/wild/"s;
    filter_creature(216) = u8"/undead/"s;
    filter_creature(217) = "";
    HMMBITON(cbitorg(0, 132), 10);
    filter_creature(218) = u8"/fire/"s;
    HMMBITON(cbitorg(0, 133), 10);
    filter_creature(219) = u8"/fire/"s;
    HMMBITON(cbitorg(0, 134), 10);
    filter_creature(220) = "";
    HMMBITON(cbitorg(0, 135), 10);
    filter_creature(221) = "";
    HMMBITON(cbitorg(0, 136), 10);
    filter_creature(222) = "";
    HMMBITON(cbitorg(0, 137), 10);
    filter_creature(223) = "";
    HMMBITON(cbitorg(0, 138), 10);
    filter_creature(224) = u8"/fire/"s;
    filter_creature(225) = u8"/fire/"s;
    filter_creature(226) = u8"/fire/"s;
    filter_creature(227) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 150), 10);
    filter_creature(228) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 151), 10);
    filter_creature(229) = u8"/man/"s;
    HMMBITON(cbitorg(0, 152), 10);
    filter_creature(230) = u8"/pawn/"s;
    filter_creature(231) = u8"/pawn/"s;
    filter_creature(232) = u8"/pawn/"s;
    filter_creature(233) = u8"/pawn/"s;
    filter_creature(234) = "";
    filter_creature(235) = "";
    filter_creature(236) = u8"/man/shopguard/"s;
    filter_creature(237) = u8"/man/shopguard/"s;
    filter_creature(238) = u8"/man/shopguard/"s;
    filter_creature(239) = u8"/man/rogue/"s;
    filter_creature(240) = u8"/man/rogue/"s;
    filter_creature(241) = u8"/man/rogue/"s;
    filter_creature(242) = u8"/man/rogue/"s;
    filter_creature(243) = u8"/man/"s;
    filter_creature(244) = u8"/man/"s;
    filter_creature(245) = u8"/man/"s;
    filter_creature(246) = "";
    filter_creature(247) = u8"/man/"s;
    filter_creature(248) = u8"/man/"s;
    filter_creature(249) = u8"/man/"s;
    filter_creature(250) = u8"/wild/cat/"s;
    HMMBITON(cbitorg(0, 164), 22);
    filter_creature(251) = u8"/wild/cat/"s;
    filter_creature(252) = u8"/wild/cat/"s;
    filter_creature(253) = u8"/wild/cat/"s;
    HMMBITON(cbitorg(0, 229), 22);
    filter_creature(254) = u8"/wild/cat/"s;
    filter_creature(255) = u8"/wild/cat/"s;
    filter_creature(256) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 165), 22);
    filter_creature(257) = u8"/wild/"s;
    HMMBITON(cbitorg(0, 225), 22);
    filter_creature(258) = u8"/man/"s;
    filter_creature(259) = u8"/man/"s;
    filter_creature(260) = u8"/man/"s;
    HMMBITON(cbitorg(0, 166), 22);
    filter_creature(261) = u8"/wild/"s;
    filter_creature(262) = u8"/wild/"s;
    filter_creature(263) = u8"/man/"s;
    filter_creature(264) = u8"/god/"s;
    filter_creature(265) = u8"/man/"s;
    HMMBITON(cbitorg(0, 176), 22);
    filter_creature(266) = u8"/man/"s;
    HMMBITON(cbitorg(0, 249), 22);
    filter_creature(267) = u8"/man/"s;
    filter_creature(268) = u8"/man/"s;
    HMMBITON(cbitorg(0, 211), 22);
    filter_creature(269) = u8"/god/"s;
    filter_creature(270) = u8"/undead/god/"s;
    filter_creature(271) = u8"/man/"s;
    filter_creature(272) = u8"/man/"s;
    filter_creature(273) = u8"/man/"s;
    filter_creature(274) = "";
    HMMBITON(cbitorg(0, 180), 22);
    filter_creature(275) = u8"/god/"s;
    filter_creature(276) = u8"/man/"s;
    HMMBITON(cbitorg(0, 182), 22);
    filter_creature(277) = u8"/man/"s;
    filter_creature(278) = u8"/man/"s;
    filter_creature(279) = u8"/man/"s;
    filter_creature(280) = u8"/man/"s;
    filter_creature(281) = "";
    HMMBITON(cbitorg(0, 186), 10);
    filter_creature(282) = "";
    HMMBITON(cbitorg(0, 187), 10);
    filter_creature(283) = "";
    HMMBITON(cbitorg(0, 188), 10);
    filter_creature(284) = "";
    HMMBITON(cbitorg(0, 345), 10);
    HMMBITON(cbitorg(0, 345), 22);
    filter_creature(285) = "";
    HMMBITON(cbitorg(0, 346), 10);
    HMMBITON(cbitorg(0, 346), 22);
    filter_creature(286) = "";
    HMMBITON(cbitorg(0, 341), 10);
    HMMBITON(cbitorg(0, 341), 31);
    filter_creature(287) = "";
    HMMBITON(cbitorg(0, 258), 10);
    filter_creature(288) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 189), 5);
    HMMBITON(cbitorg(0, 189), 10);
    filter_creature(289) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 190), 5);
    HMMBITON(cbitorg(0, 190), 10);
    filter_creature(290) = u8"/undead/ether/"s;
    HMMBITON(cbitorg(0, 191), 5);
    HMMBITON(cbitorg(0, 191), 10);
    filter_creature(291) = u8"/wild/"s;
    filter_creature(292) = u8"/wild/ether/"s;
    filter_creature(293) = u8"/wild/"s;
    filter_creature(294) = u8"/undead/"s;
    filter_creature(295) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 201), 6);
    filter_creature(296) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 197), 6);
    filter_creature(297) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 198), 6);
    filter_creature(298) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 199), 6);
    HMMBITON(cbitorg(0, 199), 10);
    filter_creature(299) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 200), 6);
    HMMBITON(cbitorg(0, 200), 10);
    filter_creature(300) = "";
    filter_creature(301) = u8"/man/"s;
    filter_creature(302) = u8"/man/"s;
    filter_creature(303) = u8"/god/"s;
    filter_creature(304) = "";
    filter_creature(305) = u8"/man/"s;
    filter_creature(306) = u8"/man/"s;
    filter_creature(307) = u8"/man/"s;
    filter_creature(308) = u8"/man/"s;
    filter_creature(309) = u8"/man/"s;
    filter_creature(310) = u8"/man/"s;
    filter_creature(311) = u8"/man/"s;
    filter_creature(312) = u8"/man/"s;
    filter_creature(313) = u8"/man/"s;
    filter_creature(314) = u8"/man/"s;
    filter_creature(315) = u8"/man/"s;
    HMMBITON(cbitorg(1, 301), 0);
    filter_creature(316) = u8"/man/"s;
    HMMBITON(cbitorg(0, 214), 17);
    filter_creature(317) = u8"/man/"s;
    HMMBITON(cbitorg(0, 215), 17);
    filter_creature(318) = u8"/man/"s;
    HMMBITON(cbitorg(0, 217), 17);
    filter_creature(319) = "";
    HMMBITON(cbitorg(0, 216), 10);
    filter_creature(320) = "";
    HMMBITON(cbitorg(0, 218), 10);
    filter_creature(321) = "";
    filter_creature(322) = u8"/god/"s;
    HMMBITON(cbitorg(0, 220), 10);
    filter_creature(323) = "";
    HMMBITON(cbitorg(0, 250), 5);
    HMMBITON(cbitorg(0, 250), 17);
    filter_creature(324) = u8"/god/"s;
    HMMBITON(cbitorg(0, 260), 5);
    filter_creature(325) = u8"/god/"s;
    HMMBITON(cbitorg(0, 261), 5);
    filter_creature(326) = u8"/god/"s;
    HMMBITON(cbitorg(0, 262), 5);
    filter_creature(327) = u8"/god/"s;
    HMMBITON(cbitorg(0, 263), 5);
    HMMBITON(cbitorg(0, 263), 22);
    filter_creature(328) = u8"/god/"s;
    HMMBITON(cbitorg(0, 264), 5);
    HMMBITON(cbitorg(0, 264), 20);
    filter_creature(329) = u8"/god/"s;
    HMMBITON(cbitorg(0, 265), 5);
    filter_creature(330) = u8"/god/"s;
    HMMBITON(cbitorg(0, 266), 5);
    HMMBITON(cbitorg(0, 266), 21);
    filter_creature(331) = u8"/wild/horse/"s;
    HMMBITON(cbitorg(0, 267), 22);
    filter_creature(332) = u8"/wild/horse/"s;
    HMMBITON(cbitorg(0, 276), 22);
    filter_creature(333) = u8"/wild/horse/"s;
    HMMBITON(cbitorg(0, 275), 22);
    filter_creature(334) = u8"/wild/horse/"s;
    HMMBITON(cbitorg(0, 268), 22);
    filter_creature(335) = u8"/wild/horse/"s;
    HMMBITON(cbitorg(0, 277), 22);
    filter_creature(336) = "";
    filter_creature(337) = u8"/man/"s;
    filter_creature(338) = u8"/man/"s;
    filter_creature(339) = u8"/man/"s;
    HMMBITON(cbitorg(0, 288), 5);
    HMMBITON(cbitorg(0, 288), 20);
    filter_creature(340) = u8"/man/"s;
    HMMBITON(cbitorg(0, 290), 5);
    HMMBITON(cbitorg(0, 290), 20);
    filter_creature(341) = u8"/man/"s;
    filter_creature(342) = u8"/man/"s;
    filter_creature(343) = u8"/man/"s;
    filter_creature(344) = u8"/man/"s;
    filter_creature(345) = "";
    filter_creature(346) = "";
    HMMBITON(cbitorg(0, 318), 10);
    filter_creature(347) = "";
    filter_creature(348) = u8"/man/"s;
    filter_creature(349) = u8"/man/"s;
    filter_creature(350) = u8"/undead/"s;
    HMMBITON(cbitorg(0, 323), 5);
    filter_creature(351) = "";
    HMMBITON(cbitorg(0, 324), 25);
    HMMBITON(cbitorg(0, 324), 26);
    filter_creature(352) = "";
    HMMBITON(cbitorg(0, 325), 25);
    HMMBITON(cbitorg(0, 325), 26);
    filter_creature(353) = "";
    HMMBITON(cbitorg(0, 328), 25);
    HMMBITON(cbitorg(0, 328), 28);
    HMMBITON(cbitorg(0, 328), 26);
    HMMBITON(cbitorg(0, 328), 5);
    filter_creature(354) = "";
    HMMBITON(cbitorg(0, 329), 25);
    HMMBITON(cbitorg(0, 329), 28);
    HMMBITON(cbitorg(0, 329), 26);
    HMMBITON(cbitorg(0, 329), 5);
    filter_creature(355) = u8"/dragon/"s;
    return;
}
int label_2659()
{
    f = get_freeally();
    if (f == 0)
    {
        txt(lang(
            u8"仲間の最大数に達しているため、仲間にできなかった…"s,
            u8"Your party is already full. You can't invite someone anymore."s));
        stat = -1;
        return stat;
    }
    relocate_chara(rc, f);
    oc = stat;
    cdata(9, rc) = 10;
    cdata(69, rc) = 10;
    cdata(150, rc) = 0;
    cbitmod(970, rc, 0);
    cbitmod(979, rc, 0);
    cbitmod(985, rc, 0);
    cbitmod(964, tc, 0);
    cbitmod(991, rc, 0);
    snd(64);
    txtef(5);
    txt(lang(
        cdatan(0, rc) + u8"が仲間に加わった！"s,
        cdatan(0, rc) + u8" join"s + _s(rc) + u8" your party!"s));
    stat = 1;
    return stat;
}
void label_2660()
{
    {
        int cnt = 16;
        for (int cnt_end = cnt + (39); cnt < cnt_end; ++cnt)
        {
            rc = cnt;
            label_2661();
        }
    }
    return;
}
void label_2661()
{
    flt(0, 4);
    initlv = rnd(60 + cdata(38, 0)) + 1;
    p(0) = 75;
    p(1) = 41;
    p(2) = 160;
    characreate(rc, p(rnd(3)), -1, -1);
    cdata(9, rc) = 0;
    cdata(69, rc) = 0;
    cdata(156, rc) = 100;
    cdata(0, rc) = 3;
    cdata(7, rc) = rnd(33) * 2 + 1 + cdata(8, rc);
    cdatan(0, rc) = randomname();
    cdatan(1, rc) = random_title();
    cdata(150, rc) = 13;
    p = rnd(450);
    if (adata(16, p) == 0 || adata(16, p) == 7 || adata(0, p) == 7)
    {
        p = 4;
    }
    if (rnd(4) == 0)
    {
        p = 5;
    }
    if (rnd(4) == 0)
    {
        p = 11;
    }
    if (rnd(6) == 0)
    {
        p = 12;
    }
    cdata(80, rc) = p;
    cdata(81, rc) = 1;
    cdata(34, rc) = cdata(38, rc) * cdata(38, rc) * 30
        + rnd((cdata(38, rc) * 200 + 100)) + rnd(500);
    return;
}
void label_2662()
{
    {
        int cnt = 16;
        for (int cnt_end = cnt + (39); cnt < cnt_end; ++cnt)
        {
            rc = cnt;
            cc = rc;
            if (cdata(84, rc) != 0)
            {
                if (cdata(84, rc) < gdata(13) + gdata(12) * 24
                        + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12)
                {
                    cdata(84, rc) = 0;
                    cbitmod(969, rc, 0);
                    cdata(9, rc) = 0;
                    txt(lang(
                        cdatan(0, rc) + u8"との契約期間が切れた。"s,
                        u8"The period of contract with "s + cdatan(0, rc)
                            + u8" has been expired."s));
                }
            }
            if (cdata(80, rc) == gdata(20))
            {
                continue;
            }
            if (cdata(0, rc) == 5)
            {
                label_2661();
                continue;
            }
            if (cdata(0, rc) == 4)
            {
                if (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                        + gdata(10) * 24 * 30 * 12
                    >= cdata(5, rc))
                {
                    if (rnd(3) == 0)
                    {
                        addnews(5, rc);
                        cdata(0, rc) = 0;
                        label_2661();
                    }
                    else
                    {
                        addnews(3, rc);
                        cdata(0, rc) = 3;
                    }
                    continue;
                }
            }
            if (rnd(60) == 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                    {
                        if (rnd(4) == 0)
                        {
                            p = rnd(50) + 450;
                        }
                        else
                        {
                            p = rnd(300);
                        }
                        if (adata(16, p) == 0 || p == 7 || adata(0, p) == 7
                            || p == 9)
                        {
                            p = 4;
                        }
                        if (cnt < 5)
                        {
                            if (adata(0, p) != 3)
                            {
                                continue;
                            }
                        }
                        break;
                    }
                }
                cdata(80, rc) = p;
                cdata(81, rc) = 1;
            }
            if (rnd(200) == 0)
            {
                if (adata(0, cdata(80, rc)) != 3)
                {
                    label_2664();
                }
            }
            if (rnd(10) == 0)
            {
                cdata(35, rc) += cdata(38, rc) * cdata(38, rc) * 2;
            }
            if (rnd(20) == 0)
            {
                cdata(34, rc) += rnd(cdata(38, rc) * cdata(38, rc) / 40 + 5)
                    - rnd((cdata(38, rc) * cdata(38, rc) / 50 + 5));
            }
            if (rnd(2000) == 0)
            {
                cdata(35, rc) +=
                    cdata(38, rc) * cdata(38, rc) * cdata(38, rc) * 5;
                val = rnd(cdata(38, rc) * cdata(38, rc) / 20 + 10) + 10;
                cdata(34, rc) += val;
                addnews(4, rc);
                label_2664();
            }
            if (cdata(35, rc) >= cdata(36, rc))
            {
                r1 = rc;
                r2 = 0;
                label_1454();
            }
        }
    }
    notesel(newsbuff);
    if (noteinfo(0) > 195)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (noteinfo(0) - 195); cnt < cnt_end; ++cnt)
            {
                notedel(0);
            }
        }
    }
    return;
}
void label_2663()
{
    a = refitem(inv(3, ci), 5);
    if (a == 57000 || a == 52000 || a == 53000)
    {
        cdata(12, rc) = ci;
    }
    return;
}
int label_2664()
{
    f = 0;
    inv_getheader(rc);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
        {
            ci = invhead + rnd(invrange);
            if (inv(0, ci) == 0)
            {
                f = 1;
                break;
            }
            if (inv(18, ci) != 0)
            {
                continue;
            }
            if (inv(0, ci) != 0)
            {
                if (cdata(12, rc) == ci)
                {
                    cdata(12, rc) = 0;
                }
                inv(0, ci) = 0;
                f = 1;
                break;
            }
        }
    }
    if (f == 0)
    {
        stat = 0;
        return stat;
    }
    flt(cdata(38, rc), 4);
    if (rnd(3) == 0)
    {
        flttypemajor = fsetwear(rnd(length(fsetwear)));
    }
    else
    {
        flttypemajor = fsetitem(rnd(length(fsetitem)));
    }
    itemcreate(rc, 0, -1, -1, 0);
    if (stat == 0)
    {
        stat = 0;
        return stat;
    }
    inv(8, ci) = 3;
    if (inv(4, ci) >= 4)
    {
        if (refitem(inv(3, ci), 5) < 50000)
        {
            valn = itemname(ci);
            addnews(1, rc);
        }
    }
    label_2667();
    stat = 0;
    return stat;
}
int label_2665()
{
    p = inv_getfreeid(tc);
    if (p != -1)
    {
        stat = p;
        return stat;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            p = rnd(invrange) + invhead;
            if (inv(18, p) == 0)
            {
                inv(0, p) = 0;
                if (cdata(12, tc) == p)
                {
                    cdata(12, tc) = 0;
                }
                break;
            }
        }
    }
    stat = p;
    return stat;
}
void label_2666()
{
    inv_getheader(rc);
    {
        int cnt = invhead;
        for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
        {
            ci = cnt;
            if (inv(0, cnt) == 0 || inv(18, cnt) != 0)
            {
                continue;
            }
            label_2667();
        }
    }
    return;
}
void label_2667()
{
    i = iequiploc(ci);
    if (i != 0)
    {
        r1 = rc;
        eqdup = 0;
        {
            int cnt = 100;
            for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
            {
                if (cdata(cnt, rc) / 10000 == i)
                {
                    bodylist(eqdup) = cnt;
                    ++eqdup;
                }
            }
        }
        if (eqdup == 0)
        {
            return;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (eqdup); cnt < cnt_end; ++cnt)
            {
                body = bodylist(cnt);
                i = cdata(body, rc) % 10000;
                if (i == 0)
                {
                    label_2194();
                    break;
                }
                --i;
                f = 0;
                if (inv(1, ci) >= inv(1, i))
                {
                    f = 1;
                }
                if (eqdup > cnt + 1)
                {
                    if (cdata(bodylist((cnt + 1)), rc) % 10000 == 0)
                    {
                        f = 0;
                    }
                    else
                    {
                        if (inv(1, i)
                            >= inv(1,
                                   cdata(bodylist((cnt + 1)), rc) % 10000 - 1))
                        {
                            f = 0;
                        }
                    }
                }
                if (f == 1)
                {
                    cibk = ci;
                    label_2195();
                    ci = cibk;
                    label_2194();
                    break;
                }
            }
        }
    }
    return;
}
void label_2668()
{
    haveweapon = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
        {
            f = 0;
            inv_getheader(rc);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                {
                    ci = invhead + rnd(invrange);
                    if (inv(0, ci) == 0)
                    {
                        f = 1;
                        break;
                    }
                    if (inv(18, ci) != 0)
                    {
                        continue;
                    }
                    if (ibit(12, ci))
                    {
                        continue;
                    }
                    if (inv(0, ci) != 0)
                    {
                        inv(0, ci) = 0;
                        f = 1;
                        break;
                    }
                }
            }
            if (f == 0)
            {
                ci = invhead + invrange - 1;
            }
            if (cdata(150, rc) == 13)
            {
                flt(cdata(38, rc), 3);
            }
            else
            {
                flt(cdata(38, rc), calcfixlv(2));
            }
            mustequip = 0;
            {
                int cnt = 100;
                for (int cnt_end = cnt + (30); cnt < cnt_end; ++cnt)
                {
                    p = cdata(cnt, rc) / 10000;
                    if (p == 0)
                    {
                        break;
                    }
                    if (cdata(cnt, rc) % 10000 != 0)
                    {
                        if (p == 5)
                        {
                            if (haveweapon == 0)
                            {
                                if (refitem(
                                        inv(3, cdata(cnt, rc) % 10000 - 1), 5)
                                    == 10000)
                                {
                                    haveweapon = 1;
                                }
                            }
                        }
                        continue;
                    }
                    if (p == 5)
                    {
                        if (haveweapon == 0)
                        {
                            flttypemajor = 10000;
                            mustequip = 1;
                            break;
                        }
                    }
                    if (p == 1)
                    {
                        flttypemajor = 12000;
                        mustequip = 1;
                        break;
                    }
                    if (p == 4)
                    {
                        flttypemajor = 16000;
                        mustequip = 1;
                        break;
                    }
                    if (p == 10)
                    {
                        flttypeminor = 24001;
                        mustequip = 1;
                        break;
                    }
                    if (p == 11)
                    {
                        flttypeminor = 25001;
                        mustequip = 1;
                        break;
                    }
                }
            }
            if (mustequip == 0)
            {
                break;
            }
            itemcreate(rc, 0, -1, -1, 0);
            if (stat == 0)
            {
                break;
            }
            inv(8, ci) = 3;
            if (inv(4, ci) >= 4)
            {
                if (refitem(inv(3, ci), 5) < 50000)
                {
                    if (cdata(150, rc) == 13)
                    {
                        valn = itemname(ci);
                        addnews(1, rc);
                    }
                }
            }
            label_2667();
            if (cdata(150, rc) != 13)
            {
                if (rnd(3))
                {
                    break;
                }
            }
        }
    }
    return;
}
void label_2669()
{
    {
        int cnt = 57;
        for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) == 0)
            {
                continue;
            }
            if (cdata(150, cnt) == 0)
            {
                continue;
            }
            if (cdata(25, cnt) == 6)
            {
                continue;
            }
            if (cdata(150, cnt) == 3)
            {
                continue;
            }
            i = -1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
                {
                    if (qdata(0, cnt) == 0)
                    {
                        i = cnt;
                        break;
                    }
                }
            }
            cnt2 = cnt;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (500); cnt < cnt_end; ++cnt)
                {
                    if (qdata(0, cnt) == cnt2)
                    {
                        if (qdata(1, cnt) == gdata(20))
                        {
                            i = -1;
                            break;
                        }
                    }
                }
            }
            if (i == -1)
            {
                break;
            }
            qdata(0, i) = cnt;
            qdata(1, i) = gdata(20);
            qname(i) = cdatan(0, cnt);
            cdata(82, cnt) = i + 1;
            gdata(75) = i + 1;
        }
    }
    return;
}
void label_2670()
{
    qdata(6, rq) =
        ((qdata(5, rq) + 3) * 100 + rnd((qdata(5, rq) * 30 + 200)) + 400)
        * rewardfix / 100;
    qdata(6, rq) = qdata(6, rq) * 100 / (100 + qdata(5, rq) * 2 / 3);
    if (qdata(14, rq) == 3 || qdata(14, rq) == 2)
    {
        return;
    }
    if (cdata(38, 0) >= qdata(5, rq))
    {
        qdata(6, rq) =
            qdata(6, rq) * 100 / (100 + (cdata(38, 0) - qdata(5, rq)) * 10);
    }
    else
    {
        qdata(6, rq) = qdata(6, rq)
            * (100 + limit((qdata(5, rq) - cdata(38, 0)) / 5 * 25, 0, 200))
            / 100;
    }
    return;
}
void label_2671()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
        {
            if (qdata(0, cnt) == 0)
            {
                continue;
            }
            if (qdata(1, cnt) != gdata(20))
            {
                continue;
            }
            rc = qdata(0, cnt);
            if (qdata(8, cnt) == 0)
            {
                if (qdata(2, cnt) < gdata(13) + gdata(12) * 24
                        + gdata(11) * 24 * 30 + gdata(10) * 24 * 30 * 12)
                {
                    rq = cnt;
                    label_2672();
                    label_2670();
                }
            }
        }
    }
    return;
}
int label_2672()
{
    qdata(3, rq) = 0;
    qdata(14, rq) = 0;
    qdata(8, rq) = 0;
    qdata(2, rq) = rnd(4) * 24
        + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
           + gdata(10) * 24 * 30 * 12);
    qdata(7, rq) = 0;
    if (rnd(3) == 0)
    {
        stat = 0;
        return stat;
    }
    if (rnd(14) == 0)
    {
        i = -1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (300); cnt < cnt_end; ++cnt)
            {
                n = rnd(188) + 57;
                if (n == qdata(0, rq))
                {
                    continue;
                }
                if (cdata(0, n) != 1)
                {
                    continue;
                }
                if (cdata(9, n) != 0
                    || cdata(150, n) != 4 && cdata(150, n) != 14)
                {
                    continue;
                }
                flt(40, 2);
                flttypemajor = fsetcollect(rnd(length(fsetcollect)));
                itemcreate(n, 0, -1, -1, 0);
                if (stat != 0)
                {
                    inv(9, ci) = rq;
                    i(0) = n;
                    i(1) = inv(3, ci);
                    ibitmod(12, ci, 1);
                    break;
                }
                else
                {
                    i = -1;
                    break;
                }
            }
        }
        if (i != -1)
        {
            qdata(10, rq) = i;
            qdata(11, rq) = i(1);
            qdata(1, rq) = gdata(20);
            rewardfix = 60;
            qdata(7, rq) = 5;
            qdata(3, rq) = 1011;
            qdata(14, rq) = 3;
            qdata(4, rq) = 0;
            qdata(9, rq) = rnd(3) + 2;
            qdata(5, rq) = cdata(38, i) / 3;
        }
        stat = 0;
        return stat;
    }
    if (cdata(34, 0) >= 30000)
    {
        if (rnd(13) == 0)
        {
            qdata(5, rq) =
                rnd(cdata(38, 0) + 10) + rnd((cdata(34, 0) / 2500 + 1));
            qdata(5, rq) = roundmargin(qdata(5, rq), cdata(38, 0));
            minlevel = limit(qdata(5, rq) / 7, 5, 30);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
                {
                    flt(qdata(5, rq), 2);
                    characreate(56, 0, -3, 0);
                    if (cmshade)
                    {
                        continue;
                    }
                    if (cdata(38, rc) < minlevel)
                    {
                        continue;
                    }
                    break;
                }
            }
            qdata(12, rq) = cdata(27, 56);
            qdata(2, rq) = (rnd(6) + 2) * 24
                + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                   + gdata(10) * 24 * 30 * 12);
            qdata(7, rq) = 0;
            qdata(3, rq) = 1010;
            qdata(14, rq) = 1;
            qdata(4, rq) = 0;
            qdata(7, rq) = 5;
            qdata(9, rq) = -1;
            rewardfix = 140;
            stat = 0;
            return stat;
        }
    }
    if (cdata(34, 0) >= 50000)
    {
        if (rnd(20) == 0)
        {
            qdata(5, rq) =
                rnd(cdata(38, 0) + 10) + rnd((cdata(34, 0) / 2500 + 1));
            qdata(5, rq) = roundmargin(qdata(5, rq), cdata(38, 0));
            minlevel = limit(qdata(5, rq) / 4, 5, 30);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (50); cnt < cnt_end; ++cnt)
                {
                    flt(qdata(5, rq), 2);
                    characreate(56, 0, -3, 0);
                    if (cmshade)
                    {
                        continue;
                    }
                    if (cdata(38, rc) < minlevel)
                    {
                        continue;
                    }
                    break;
                }
            }
            qdata(12, rq) = cdata(27, 56);
            qdata(2, rq) = (rnd(6) + 2) * 24
                + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
                   + gdata(10) * 24 * 30 * 12);
            qdata(7, rq) = 0;
            qdata(3, rq) = 1008;
            qdata(14, rq) = 8;
            qdata(4, rq) = 0;
            qdata(7, rq) = 1;
            qdata(9, rq) = -1;
            rewardfix = 175;
            stat = 0;
            return stat;
        }
    }
    if (rnd(11) == 0)
    {
        qdata(2, rq) = (rnd(6) + 2) * 24
            + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
               + gdata(10) * 24 * 30 * 12);
        qdata(3, rq) = 1007;
        qdata(14, rq) = 6;
        qdata(4, rq) = rnd(3);
        qdata(10, rq) = 0;
        qdata(7, rq) = 5;
        {
            int cnt = 0;
            for (;; ++cnt)
            {
                qdata(12, rq) = asettown(rnd(length(asettown)));
                if (qdata(12, rq) != gdata(20))
                {
                    break;
                }
            }
        }
        p = qdata(1, qdata(12, rq));
        if (qdata(4, rq) == 0)
        {
            rewardfix = 140
                + dist(
                      adata(1, gdata(20)),
                      adata(2, gdata(20)),
                      adata(1, p),
                      adata(2, p))
                    * 2;
            qdata(9, rq) = rnd(8) + 6;
            qdata(5, rq) = limit(
                rnd(cdata(38, 0) + 10) + rnd((cdata(34, 0) / 500 + 1)) + 1,
                1,
                80);
        }
        if (qdata(4, rq) == 1)
        {
            rewardfix = 130
                + dist(
                      adata(1, gdata(20)),
                      adata(2, gdata(20)),
                      adata(1, p),
                      adata(2, p))
                    * 2;
            qdata(9, rq) = rnd(5) + 2;
            qdata(5, rq) = limit(rewardfix / 10 + 1, 1, 40);
        }
        if (qdata(4, rq) == 2)
        {
            rewardfix = 80
                + dist(
                      adata(1, gdata(20)),
                      adata(2, gdata(20)),
                      adata(1, p),
                      adata(2, p))
                    * 2;
            qdata(9, rq) = rnd(8) + 6;
            qdata(5, rq) = limit(rewardfix / 20 + 1, 1, 40);
        }
        if (qdata(12, rq) == 33 || gdata(20) == 33)
        {
            rewardfix = rewardfix * 180 / 100;
        }
        stat = 0;
        return stat;
    }
    if (rnd(23) == 0 || gdata(20) == 15 && rnd(8) == 0)
    {
        qdata(5, rq) = limit(
            rnd(sdata(183, 0) + 10),
            elona_int(1.5 * sqrt(sdata(183, 0))) + 1,
            cdata(34, 0) / 1000 + 10);
        qdata(2, rq) = (rnd(6) + 2) * 24
            + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
               + gdata(10) * 24 * 30 * 12);
        qdata(7, rq) = 0;
        qdata(3, rq) = 1009;
        qdata(14, rq) = 7;
        qdata(4, rq) = 0;
        qdata(7, rq) = 0;
        qdata(12, rq) = qdata(5, rq) * 10 + rnd(50);
        qdata(13, rq) = 0;
        qdata(9, rq) = -1;
        rewardfix = 0;
        stat = 0;
        return stat;
    }
    if (rnd(30) == 0 || gdata(20) == 12 && rnd(2) == 0)
    {
        qdata(5, rq) = limit(
            rnd(cdata(38, 0) + 5) + rnd((cdata(34, 0) / 800 + 1)) + 1, 1, 50);
        qdata(2, rq) = (rnd(6) + 2) * 24
            + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
               + gdata(10) * 24 * 30 * 12);
        qdata(3, rq) = 1006;
        qdata(14, rq) = 5;
        qdata(4, rq) = 0;
        qdata(7, rq) = 5;
        qdata(9, rq) = -1;
        qdata(12, rq) = 15000 + qdata(5, rq) * 2500;
        qdata(13, rq) = 0;
        rewardfix = 60 + qdata(5, rq) * 2;
        stat = 0;
        return stat;
    }
    if (rnd(8) == 0)
    {
        qdata(5, rq) = limit(
            rnd(cdata(38, 0) + 10) + rnd((cdata(34, 0) / 500 + 1)) + 1, 1, 80);
        qdata(5, rq) = roundmargin(qdata(5, rq), cdata(38, 0));
        qdata(2, rq) = (rnd(6) + 2) * 24
            + (gdata(13) + gdata(12) * 24 + gdata(11) * 24 * 30
               + gdata(10) * 24 * 30 * 12);
        qdata(7, rq) = 0;
        qdata(3, rq) = 1001;
        qdata(14, rq) = 1;
        qdata(4, rq) = 0;
        qdata(7, rq) = 1;
        qdata(9, rq) = -1;
        rewardfix = 135;
        stat = 0;
        return stat;
    }
    if (rnd(6) == 0)
    {
        i = -1;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
            {
                p = rnd(gdata(75));
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
                    {
                        if (qdata(3, cnt) == 1002)
                        {
                            if (qdata(10, cnt) == p)
                            {
                                p = -1;
                                break;
                            }
                        }
                    }
                }
                if (p == -1)
                {
                    continue;
                }
                if (qdata(0, p) != 0)
                {
                    if (qdata(1, p) != gdata(20) || 0)
                    {
                        i = p;
                        break;
                    }
                }
            }
        }
        if (i != -1)
        {
            p = qdata(1, i);
            rewardfix = 70
                + dist(
                      adata(1, gdata(20)),
                      adata(2, gdata(20)),
                      adata(1, p),
                      adata(2, p))
                    * 2;
            if (p == 33 || gdata(20) == 33)
            {
                rewardfix = rewardfix * 175 / 100;
            }
            qdata(10, rq) = i;
            flt();
            dbmode = 1;
            flttypemajor = fsetdeliver(rnd(length(fsetdeliver)));
            label_0481();
            qdata(12, rq) = flttypemajor;
            qdata(7, rq) = 5;
            if (flttypemajor == 54000)
            {
                qdata(7, rq) = 2;
            }
            if (flttypemajor == 77000)
            {
                qdata(7, rq) = 3;
            }
            if (flttypemajor == 64000)
            {
                qdata(7, rq) = 77000;
            }
            if (flttypemajor == 60000)
            {
                qdata(7, rq) = 60000;
            }
            qdata(11, rq) = dbid;
            qdata(3, rq) = 1002;
            qdata(14, rq) = 2;
            qdata(4, rq) = 0;
            qdata(9, rq) = rnd(12) + 3;
            qdata(5, rq) = limit(rewardfix / 20 + 1, 1, 25);
        }
        stat = 0;
        return stat;
    }
    if (rnd(6) == 0)
    {
        qdata(3, rq) = 1003;
        qdata(14, rq) = 3;
        qdata(9, rq) = rnd(6) + 2;
        qdata(7, rq) = 5;
        qdata(12, rq) = rnd(8) + 1;
        if (qdata(12, rq) == 4)
        {
            qdata(7, rq) = 52000;
        }
        if (qdata(12, rq) == 6)
        {
            qdata(7, rq) = 25000;
        }
        if (qdata(12, rq) == 1)
        {
            qdata(7, rq) = 25000;
        }
        if (qdata(12, rq) == 5)
        {
            qdata(7, rq) = 52000;
        }
        if (qdata(12, rq) == 7)
        {
            qdata(7, rq) = 77000;
        }
        if (qdata(12, rq) == 2)
        {
            qdata(7, rq) = 56000;
        }
        if (qdata(12, rq) == 3)
        {
            qdata(7, rq) = 53000;
        }
        qdata(13, rq) = rnd(7) + 3;
        qdata(5, rq) = qdata(13, rq) * 3;
        rewardfix = 60 + qdata(5, rq);
        stat = 0;
        return stat;
    }
    if (rnd(5) == 0)
    {
        qdata(3, rq) = 1004;
        qdata(14, rq) = 3;
        qdata(9, rq) = rnd(6) + 2;
        flt();
        dbmode = 1;
        flttypemajor = fsetsupply(rnd(length(fsetsupply)));
        label_0481();
        qdata(7, rq) = 5;
        qdata(11, rq) = dbid;
        qdata(5, rq) = limit(rnd(cdata(38, 0) + 5) + 1, 1, 30);
        rewardfix = 65 + qdata(5, rq);
        stat = 0;
        return stat;
    }
    stat = 1;
    return stat;
}
void label_2673()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
        {
            if (qdata(3, cnt) == 0)
            {
                continue;
            }
            if (qdata(8, cnt) != 1)
            {
                continue;
            }
            if (qdata(9, cnt) < 0)
            {
                continue;
            }
            rq = cnt;
            --qdata(9, rq);
            if (qdata(9, rq) == 0)
            {
                val = qdata(3, rq);
                label_2676();
            }
        }
    }
    return;
}
void label_2674()
{
    if (gdata(70) == 1006)
    {
        inv_getheader(0);
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(21, cnt) == 4)
                {
                    inv(0, cnt) = 0;
                }
            }
        }
        label_1521();
    }
    if (gdata(73) != 3)
    {
        if (gdata(70) >= 1000)
        {
            rq = gdata(72);
        }
        if (gdata(70) == 1007)
        {
            if (qdata(8, rq) == 0)
            {
                gdata(70) = 0;
                gdata(71) = 0;
                gdata(72) = 0;
                gdata(73) = 0;
                return;
            }
            else
            {
                txtmore();
                txt(lang(
                    u8"あなたはクライアントを置き去りにした。"s,
                    u8"You left your client."s));
            }
        }
        val = gdata(70);
        label_2676();
        msg_halt();
    }
    gdata(70) = 0;
    gdata(71) = 0;
    gdata(72) = 0;
    gdata(73) = 0;
    return;
}
void label_2675()
{
    rc = 0;
    label_1540();
    skillexp(17, 0, -500);
    skillexp(15, 0, -500);
    levelexitby = 4;
    gdata(22) = 0;
    label_1737();
    return;
}
void label_2676()
{
    if (val == 1)
    {
        adata(22, gdata(66)) = 0;
        txt(lang(u8"あなたは敗北した。"s, u8"You were defeated."s));
        modrank(0, -100);
    }
    if (val >= 1000)
    {
        txt(lang(
            qname(rq) + u8"から受けた依頼は失敗に終わった。"s,
            u8"You have failed the quest taken from "s + qname(rq) + u8"."s));
        if (qdata(3, rq) == 1002)
        {
            --qdata(15, qdata(10, rq));
            txtmore();
            txtef(8);
            txt(lang(
                u8"あなたは重大な罪を犯した!"s,
                u8"You comit a serious crime!"s));
            modkarma(0, -20);
        }
        if (qdata(3, rq) == 1007)
        {
            txtmore();
            txtef(8);
            txt(lang(
                u8"あなたは護衛の任務を果たせなかった。"s,
                u8"You have failed to protect the client."s));
            {
                int cnt = 0;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (cnt != 0)
                    {
                        if (cbit(963, cnt) == 1)
                        {
                            if (qdata(13, rq) == cdata(27, cnt))
                            {
                                tc = cnt;
                                cbitmod(963, cnt, 0);
                                if (cdata(0, tc) == 1)
                                {
                                    if (qdata(4, rq) == 0)
                                    {
                                        s = lang(
                                            u8"「おい、暗殺者が私の後ろにいるぞ」"s,
                                            cnvtalk(
                                                u8"Hey, the assassins are killing me."s));
                                        p = -11;
                                    }
                                    if (qdata(4, rq) == 1)
                                    {
                                        s = lang(
                                            u8"「毒が、毒がー！」"s,
                                            cnvtalk(
                                                u8"Poison! P-P-Poison in my vein!!"s));
                                        p = -4;
                                    }
                                    if (qdata(4, rq) == 2)
                                    {
                                        s = lang(
                                            u8"「時間切れだ。こうなったら…」"s +
                                                name(tc) +
                                                u8"は火をかぶった。"s,
                                            cnvtalk(
                                                u8"I missed the deadline. I don't have a right to live anymore."s) +
                                                u8" "s + name(tc) +
                                                u8" pours a bottole of molotov cocktail over "s +
                                                him(tc) + u8"self."s);
                                        addmef(
                                            cdata(1, 0),
                                            cdata(2, 0),
                                            5,
                                            24,
                                            rnd(15) + 25,
                                            efp,
                                            0);
                                        mapitem_fire(
                                            cdata(1, tc), cdata(2, tc));
                                        p = -9;
                                    }
                                    txtef(9);
                                    txtmore();
                                    txt(s);
                                    dmghp(tc, 999999, p);
                                }
                                cdata(0, tc) = 0;
                                break;
                            }
                        }
                    }
                }
            }
            modkarma(0, -10);
        }
        qdata(3, rq) = 0;
        qdata(8, rq) = 0;
    }
    decfame(0, 40);
    p = stat;
    txtmore();
    txtef(3);
    txt(lang(
        u8"名声値を"s + p + u8"失った。"s, u8"You lose "s + p + u8" fame."s));
    return;
}
void label_2677()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
        {
            if (followerin(cnt) == 0)
            {
                continue;
            }
            if (cdata(50, cnt) < cdata(51, cnt) / 2)
            {
                cdata(50, cnt) = cdata(51, cnt) / 2;
            }
        }
    }
    snd(69);
    if (petarenawin == 1)
    {
        txtef(2);
        txt(lang(
            u8"あなたのチームは勝利した！"s, u8"Your team is victorious!"s));
        txtef(2);
        txtmore();
        txt(lang(
            ""s + gdata(74) + u8"の名声値を手に入れた。"s,
            u8"You gain "s + gdata(74) + u8" fame."s));
        if (arenaimport == 1)
        {
            ++gdata(802);
            if (enemylv > gdata(803))
            {
                txt(lang(
                    u8"EXバトルの撃破相手LVの記録を更新した(Lv"s + gdata(803)
                        + u8" → "s + enemylv + u8" )"s,
                    u8"You've made a new record. (Lv"s + gdata(803) + u8" to "s
                        + enemylv + u8" )"s));
                gdata(803) = enemylv;
            }
        }
        else
        {
            cdata(34, 0) += gdata(74);
            modrank(1, 100, 2);
        }
        ++adata(23, gdata(66));
        if (adata(23, gdata(66)) % 20 == 0)
        {
            matgetmain(41, 1);
        }
        else
        {
            if (adata(23, gdata(66)) % 5 == 0)
            {
                matgetmain(40, 1);
            }
        }
    }
    else
    {
        txtef(8);
        txt(lang(u8"あなたのチームは敗北した。"s, u8"Your team is defeated."s));
        adata(23, gdata(66)) = 0;
        modrank(1, -100);
        decfame(0, 60);
        p = stat;
        if (arenaop == 0)
        {
            txtmore();
            txtef(3);
            txt(lang(
                u8"名声値を"s + p + u8"失った。"s,
                u8"You loose "s + p + u8" fame."s));
        }
    }
    return;
}
void label_2678()
{
    music = 74;
    musicloop = 1;
    label_0068();
    gdata(73) = 3;
    if (gdata(70) == 1)
    {
        snd(69);
        txtef(2);
        txt(lang(u8"あなたは勝利した！"s, u8"You are victorious!"s));
        txtef(2);
        txtmore();
        txt(lang(
            ""s + gdata(74) + u8"の名声値を手に入れた。"s,
            u8"You gain "s + gdata(74) + u8" fame."s));
        modrank(0, 100, 2);
        cdata(34, 0) += gdata(74);
        txt(lang(u8"外への階段が現れた。"s, u8"Stairs appear."s));
        map_placeupstairs(mdata(0) / 2, mdata(1) / 2);
        ++adata(22, gdata(66));
        if (adata(22, gdata(66)) % 20 == 0)
        {
            matgetmain(41, 1);
        }
        else
        {
            if (adata(22, gdata(66)) % 5 == 0)
            {
                matgetmain(40, 1);
            }
        }
    }
    if (gdata(70) == 1001 || gdata(70) == 1010)
    {
        qdata(8, gdata(72)) = 3;
        txtef(2);
        txt(lang(u8"エリアを制圧した！"s, u8"The area is secured!"s));
    }
    if (gdata(70) == 1007)
    {
        txtef(2);
        txt(lang(u8"エリアを制圧した！"s, u8"The area is secured!"s));
    }
    if (gdata(70) == 1008)
    {
        gdata(84) = 0;
        qdata(8, gdata(72)) = 3;
        txtef(2);
        txt(lang(
            u8"討伐に成功した！"s, u8"You successfully slay the target."s));
    }
    return;
}
void label_2679()
{
    snd(51);
    p = qdata(6, rq);
    if (qdata(3, rq) == 1006)
    {
        if (qdata(12, rq) != 0)
        {
            if (qdata(12, rq) * 125 / 100 < qdata(13, rq))
            {
                p = limit(p * qdata(13, rq) / qdata(12, rq), p, p * 3);
            }
        }
    }
    if (p != 0)
    {
        flt();
        itemcreate(-1, 54, cdata(1, 0), cdata(2, 0), p);
    }
    if (qdata(3, rq) == 1002)
    {
        p = rnd(2) + 1;
    }
    else
    {
        p = 1;
    }
    if (qdata(3, rq) == 1008 || qdata(3, rq) == 1010)
    {
        p = 2 + (rnd(100) < rnd(cdata(34, 0) / 5000 + 1));
    }
    flt();
    itemcreate(-1, 55, cdata(1, 0), cdata(2, 0), p);
    if (qdata(3, rq) == 1009)
    {
        if (qdata(12, rq) * 150 / 100 < qdata(13, rq))
        {
            flt();
            itemcreate(
                -1, 724, cdata(1, 0), cdata(2, 0), 1 + qdata(13, rq) / 10);
        }
    }
    if (qdata(7, rq) != 0)
    {
        p = rnd(rnd(4) + 1) + 1;
        if (qdata(3, rq) == 1008 || qdata(3, rq) == 1010)
        {
            p += 2;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
            {
                fixlv = 2;
                if (rnd(2))
                {
                    fixlv = 3;
                    if (rnd(12) == 0)
                    {
                        fixlv = 4;
                    }
                }
                flt((qdata(5, rq) + cdata(38, 0)) / 2 + 1, calcfixlv(fixlv));
                if (qdata(7, rq) < 10000)
                {
                    if (qdata(7, rq) == 1)
                    {
                        flttypemajor = fsetwear(rnd(length(fsetwear)));
                    }
                    if (qdata(7, rq) == 2)
                    {
                        flttypemajor = fsetmagic(rnd(length(fsetmagic)));
                    }
                    if (qdata(7, rq) == 3)
                    {
                        flttypemajor = fsetarmor(rnd(length(fsetarmor)));
                    }
                    if (qdata(7, rq) == 4)
                    {
                        flttypemajor = fsetweapon(rnd(length(fsetweapon)));
                    }
                    if (qdata(7, rq) == 5)
                    {
                        flttypemajor =
                            fsetrewardsupply(rnd(length(fsetrewardsupply)));
                    }
                }
                else
                {
                    flttypemajor = qdata(7, rq);
                }
                itemcreate(-1, 0, cdata(1, 0), cdata(2, 0), 0);
            }
        }
    }
    modkarma(0, 1);
    gdata(74) = calcfame(0, qdata(5, rq) * 3 + 10);
    txtef(2);
    txt(lang(
        qname(rq) + u8"から受けた依頼を完了した。"s,
        u8"You have completed the quest taken from "s + qname(rq) + u8"."s));
    txtef(2);
    txtmore();
    txt(lang(
        ""s + gdata(74) + u8"の名声値を手に入れた。"s,
        u8"You gain "s + gdata(74) + u8" fame."s));
    cdata(34, 0) += gdata(74);
    txt(lang(
        u8"何かが足元に転がってきた。"s, u8"Something is put on the ground."s));
    if (qdata(3, rq) == 1002)
    {
        --qdata(15, qdata(10, rq));
    }
    qdata(3, rq) = 0;
    qdata(8, rq) = 0;
    autosave = 1 * (gdata(20) != 35);
    return;
}
void label_2680()
{
    if (gdata(36) < sceneid)
    {
        gdata(36) = sceneid;
    }
    if (cfg_story == 0 || en == 1 && sceneid != 0)
    {
        return;
    }
    scene_cut = 0;
    msgtempprev = msgtemp;
    scenemode = 1;
    SDIM4(actor, 20, 3, 10);
    file = u8"void"s;
    y1 = 60;
    y2 = windowh - 60;
    notesel(buff);
    noteload(lang(u8"scene1.hsp"s, u8"scene2.hsp"s));
    s = u8"{"s + sceneid + u8"}"s;
    scidx = instr(buff, 0, s);
    if (scidx == -1)
    {
        label_2685();
        return;
    }
    scidx += strlen(s);
label_2681:
    await();
    stick(a, 128);
    if (a == 128)
    {
        scene_cut = 1;
    }
    if (scene_cut == 1)
    {
        label_2685();
        return;
    }
    notesel(buff);
    noteload(lang(u8"scene1.hsp"s, u8"scene2.hsp"s));
    cs = 0;
    key_list = key_enter;
    scidxtop = scidx;
    scidxtop = 0;
    val = 0;
label_2682_internal:
    p(1) = instr(buff, scidx, u8"{"s) + scidx;
    if (p(1) == -1)
    {
        label_2685();
        return;
    }
    p(2) = instr(buff, scidx, u8"}"s) + scidx + 1;
    if (p(2) == -1)
    {
        label_2685();
        return;
    }
    if (scidxtop != 0)
    {
        scidx = p(1);
        goto label_2684_internal;
        return;
    }
    s = strmid(buff, p(1), p(2) - p(1));
    scidx = p(2) + 1;
    if (s == u8"{txt}"s)
    {
        scidxtop = scidx;
        val = 0;
        goto label_2682_internal;
    }
    if (instr(s, 0, u8"{chat_"s) != -1)
    {
        rc = elona_int(strmid(s, 6, 1));
        scidxtop = scidx;
        val = 1;
        goto label_2682_internal;
    }
    if (s == u8"{fade}"s)
    {
        gsel(4);
        color(0, 0, 0);
        boxf();
        gsel(0);
        label_1443();
        goto label_2682_internal;
    }
    if (s == u8"{fadein}"s)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (25); cnt < cnt_end; ++cnt)
            {
                redraw(1);
                pos(0, 0);
                gmode(4 - 1, -1, cnt * 15);
                pos(0, 0);
                gcopy(4, 0, 0, windoww, windowh);
                gmode(2);
                await(10);
            }
        }
        goto label_2682_internal;
    }
    if (s == u8"{wait}"s)
    {
        scidxtop = scidx;
        val = 2;
        goto label_2682_internal;
    }
    if (s == u8"{end}"s)
    {
        await(1000);
        label_2685();
        return;
    }
    p(3) = instr(buff, scidx, u8"\""s) + scidx + 1;
    p(4) = instr(buff, p(3), u8"\""s) + p(3);
    s(1) = strmid(buff, p(3), p(4) - p(3));
    scidx = p(4) + 1;
    if (s == u8"{pic}"s)
    {
        file = s(1);
        goto label_2682_internal;
    }
    if (s == u8"{mc}"s)
    {
        music = -1;
        if (s(1) == u8"mcUnrest2"s)
        {
            music = 84;
        }
        if (s(1) == u8"mcTown1"s)
        {
            music = 51;
        }
        if (s(1) == u8"mcMemory"s)
        {
            music = 89;
        }
        if (s(1) == u8"mcIntro"s)
        {
            music = 90;
        }
        if (music == -1)
        {
            musicfile(91) = s(1);
            music = 91;
            label_0068();
        }
        else
        {
            label_0068();
        }
        goto label_2682_internal;
    }
    if (s == u8"{se}"s)
    {
        folder = exedir + u8"sound\\"s;
        sndload(folder + s(1), 28);
        snd(28);
        goto label_2682_internal;
    }
    if (instr(s, 0, u8"{actor_"s) != -1)
    {
        rc = elona_int(strmid(s, 7, 1));
        csvsort(s, s(1), 44);
        actor(0, rc) = s;
        actor(1, rc) = s(1);
        actor(2, rc) = s(2);
    }
    goto label_2682_internal;
label_2684_internal:
    buff = strmid(buff, scidxtop, scidx - scidxtop);
    p = noteinfo(0);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, p - cnt - 1);
            if (s == ""s)
            {
                notedel(p - cnt - 1);
            }
        }
    }
    redraw(0);
    gsel(4);
    gmode(0);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\"s + file + devfile + u8".bmp"s, 1);
    pos(0, y1);
    gzoom(windoww, y2 - y1, 4, 0, 0, 640, 480);
    gmode(2);
    color(5, 5, 5);
    boxf(0, 0, windoww, y1);
    boxf(0, y2, windoww, windowh);
    if (val == 1)
    {
        gsel(0);
        redraw(0);
        gmode(0);
        pos(0, 0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        tc = 0;
        label_2242();
        goto label_2681;
    }
    if (val == 2)
    {
        gsel(0);
        redraw(0);
        gmode(0);
        pos(0, 0);
        gcopy(4, 0, 0, windoww, windowh);
        gmode(2);
        redraw(1);
        await(1000);
        goto label_2681;
    }
    font(lang(cfg_font1, cfg_font2), 16 - en * 2, 0);
    x = 44;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            y = y1 + 31 + (9 - noteinfo(0) / 2 + cnt) * 20;
            noteget(s, cnt);
            x = windoww / 2 - strlen(s) * 4;
            dx = 80 + strlen(s) * 8;
            if (dx < 180)
            {
                dx = 0;
            }
            pos(windoww / 2, y + 4);
            gmode(6, 344, 72, 70);
            grotate(3, 456, 144, 0, dx, 72);
            color(20, 20, 20);
        }
    }
    x = 40;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            y = y1 + 28 + (9 - noteinfo(0) / 2 + cnt) * 20;
            noteget(s, cnt);
            x = windoww / 2 - strlen(s) * 4;
            color(10, 10, 10);
            pos(x, y);
            bmes(s, 240, 240, 240);
        }
    }
    gsel(0);
    color(500, 500, 500);
    {
        int cnt = 1;
        for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
        {
            redraw(0);
            await(30);
            stick(a, 128);
            if (a == 128)
            {
                scene_cut = 1;
            }
            gmode(4 - 1, -1, cnt * 16);
            pos(0, 0);
            gcopy(4, 0, 0, windoww, windowh);
            redraw(1);
        }
    }
    gmode(2);
    redraw(0);
    gmode(0);
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gmode(2);
    redraw(0);
    x_at_txtfunc = windoww - 120;
    y_at_txtfunc = windowh - 60;
    anime_halt();
    redraw(0);
    color(5, 5, 5);
    boxf(0, 0, windoww, y1);
    boxf(0, y2, windoww, windowh);
    goto label_2681;
}
void label_2685()
{
    gsel(4);
    color(0, 0, 0);
    boxf();
    gsel(0);
    label_1443();
    scenemode = 0;
    msgtemp = msgtempprev;
    msgtempprev = "";
    return;
}
int ai_check()
{
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            if (dir == 2)
            {
                cdata(3, cc) = cdata(1, cc) + 1;
                cdata(4, cc) = dirchk(cnt, p) + cdata(2, cc);
            }
            if (dir == 1)
            {
                cdata(3, cc) = cdata(1, cc) - 1;
                cdata(4, cc) = dirchk(cnt, p) + cdata(2, cc);
            }
            if (dir == 3)
            {
                cdata(4, cc) = cdata(2, cc) - 1;
                cdata(3, cc) = dirchk(cnt, p) + cdata(1, cc);
            }
            if (dir == 0)
            {
                cdata(4, cc) = cdata(2, cc) + 1;
                cdata(3, cc) = dirchk(cnt, p) + cdata(1, cc);
            }
            cell_check(cdata(3, cc), cdata(4, cc));
            if (cellaccess == 1)
            {
                break;
            }
            if (cellchara != -1)
            {
                if (cdata(9, cc) == 10)
                {
                    if (cdata(9, cellchara) == -3)
                    {
                        cdata(29, cc) = cellchara;
                    }
                    else
                    {
                        blockedbychara = 1;
                    }
                }
                if (cdata(9, cc) == -3)
                {
                    if (cdata(9, cellchara) == 10)
                    {
                        cdata(29, cc) = cellchara;
                    }
                    else
                    {
                        blockedbychara = 1;
                    }
                }
            }
            if (cellfeat != -1)
            {
                if (cellfeat == 21)
                {
                    cellaccess = 1;
                    break;
                }
            }
        }
    }
    if (cellaccess == 1)
    {
        stat = 1;
        return stat;
    }
    stat = 0;
    return stat;
}
void label_2687()
{
    if (cbit(985, cc))
    {
        if (synccheck(cc, -1))
        {
            if (rnd(30) == 0)
            {
                tc = cc;
                txt(lang(
                        u8"「もっとぶって"s + _yo(2) + u8"」"s,
                        cnvtalk(u8"Release me now."s)),
                    lang(
                        u8"「こんなことして、許さない"s + _yo() + u8"」"s,
                        cnvtalk(u8"I won't forget this."s)),
                    lang(
                        u8"「何をする"s + _nda(2) + u8"」"s,
                        cnvtalk(u8"Hit me!"s)));
            }
        }
        cdata(201, cc) = 0;
        label_2742();
        return;
    }
    if (synccheck(cc, -1) == 0)
    {
        if (cdata(253, 0) == 0)
        {
            if (rnd(4) == 0)
            {
                if (mdata(6) != 1)
                {
                    if (cbit(968, cc))
                    {
                        if (gdata(20) != 40)
                        {
                            if (cc < 16)
                            {
                                cdata(201, cc) = 0;
                                cdata(29, cc) = 0;
                            }
                            else
                            {
                                if (rnd(2))
                                {
                                    txt(lang(
                                            u8"「痛っ！」"s,
                                            cnvtalk(u8"Ouch!"s)),
                                        lang(
                                            u8"「やめて！」"s,
                                            cnvtalk(u8"Stop it!"s)));
                                    hostileaction(0, cc);
                                }
                                if (rnd(4) == 0)
                                {
                                    cbitmod(968, cc, 0);
                                    txtef(9);
                                    txt(lang(
                                        name(cc)
                                            + u8"は巻きついてたひもをほどいた。"s,
                                        name(cc) + u8" untangle"s + _s(cc)
                                            + u8" the leash."s));
                                }
                            }
                            tc = 0;
                            efid = 619;
                            label_2176();
                            label_2742();
                            return;
                        }
                    }
                }
            }
        }
    }
    if (cbit(972, cc))
    {
        tlocx = cdata(1, cc);
        tlocy = cdata(2, cc);
        efid = 644;
        label_2176();
        label_2742();
        return;
    }
    if (cdata(9, cc) >= 10)
    {
        --cdata(201, cc);
        if (cdata(29, cc) == 0 || cdata(201, cc) <= 0
            || cdata(9, cdata(29, cc)) >= -2 && cdata(29, cdata(29, cc)) != cc)
        {
            cdata(29, cc) = 0;
            if (pcattacker != 0)
            {
                if (cdata(9, pcattacker) <= -3)
                {
                    if (cdata(0, pcattacker) == 1)
                    {
                        if (fov_los(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, pcattacker),
                                cdata(2, pcattacker)))
                        {
                            cdata(201, cc) = 5;
                            cdata(29, cc) = pcattacker;
                        }
                    }
                }
            }
            if (cdata(29, cc) == 0)
            {
                if (cdata(29, 0) != 0 && cdata(9, cdata(29, 0)) <= -3)
                {
                    if (cdata(0, cdata(29, 0)) == 1)
                    {
                        if (fov_los(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, cdata(29, 0)),
                                cdata(2, cdata(29, 0))))
                        {
                            cdata(201, cc) = 5;
                            cdata(29, cc) = cdata(29, 0);
                        }
                    }
                }
            }
        }
        if (cbit(6, cdata(29, cc)) == 1)
        {
            if (cbit(7, cc) == 0)
            {
                if (cdata(259, cdata(29, cc)) == 0)
                {
                    if (rnd(5))
                    {
                        cdata(29, cc) = 0;
                    }
                }
            }
        }
    }
    if (cdata(29, cc) != 0)
    {
        if (cdata(0, cdata(29, cc)) != 1)
        {
            cdata(29, cc) = 0;
            cdata(201, cc) = 0;
        }
    }
    if (gdata(20) == 40)
    {
        if (cdata(9, cc) != -3)
        {
            if (cdata(9, cc) != 10)
            {
                if (rnd(40) == 0)
                {
                    txtef(4);
                    txtmore();
                    txt(lang(u8"「いいぞ！」"s, cnvtalk(u8"Come on!"s)),
                        lang(u8"「もっとやれー」"s, cnvtalk(u8"More blood!"s)),
                        lang(u8"「血をみせろー」"s, cnvtalk(u8"Beat'em!"s)),
                        lang(
                            u8"「頑張って！」"s, cnvtalk(u8"Use your brain!"s)),
                        lang(u8"「うぉぉぉぉ！」"s, cnvtalk(u8"Wooooo!"s)),
                        lang(u8"「行けぇ！」"s, cnvtalk(u8"Go go!"s)),
                        lang(u8"「頭を使えよ」"s, cnvtalk(u8"Good fighting."s)),
                        lang(u8"「きゃー」"s, cnvtalk(u8"Yeeee!"s)));
                }
                label_2690();
                return;
            }
        }
        cdata(201, cc) = 100;
        if (cdata(9, cc) == 10)
        {
            p(0) = -3;
            p(1) = enemyteam;
            p(2) = 15;
        }
        else
        {
            p(0) = 10;
            p(1) = 1;
            p(2) = 16;
        }
        i = cdata(29, cc);
        if (cdata(9, i) == p && cdata(0, i) == 1 && i >= p(1)
            && i < p(1) + p(2))
        {
            if (rnd(10) != 0)
            {
                tc = i;
                goto label_2689_internal;
            }
        }
        cdata(29, cc) = p(1);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
            {
                i = rnd(p(2)) + p(1);
                if (cdata(0, i) == 1)
                {
                    if (cdata(9, i) == p)
                    {
                        cdata(29, cc) = i;
                        break;
                    }
                }
            }
        }
        if (cdata(9, cdata(29, cc)) != p || cdata(0, cdata(29, cc)) != 1)
        {
            f = 0;
            {
                int cnt = p(1);
                for (int cnt_end = cnt + (p(2)); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        if (cdata(9, cnt) == p)
                        {
                            cdata(29, cc) = cnt;
                            f = 1;
                            break;
                        }
                    }
                }
            }
            if (f == 0)
            {
                if (cdata(9, cc) == 10)
                {
                    petarenawin = 1;
                }
                else
                {
                    petarenawin = 2;
                }
                label_2742();
                return;
            }
        }
    }
    if (gdata(20) == 33)
    {
        if (cc != gdata(259))
        {
            if (cc > 16)
            {
                if (gdata(258) != 0)
                {
                    if (cdata(0, gdata(259)) == 1)
                    {
                        cdata(29, cc) = gdata(259);
                        cdata(201, cc) = 500;
                    }
                }
            }
        }
    }
    if (gdata(183) != 0)
    {
        if (cdata(29, cc) == gdata(183))
        {
            if (rnd(3))
            {
                cdata(29, cc) = 0;
            }
        }
        if (cdata(29, cc) == 0)
        {
            if (cdata(9, cc) <= -2)
            {
                if (rnd(3) == 0)
                {
                    cdata(29, cc) = gdata(183);
                }
            }
        }
    }
    tc = cdata(29, cc);
    if (cdatan(4, cc) != ""s)
    {
        if (cbit(989, cc) == 0)
        {
            if (rnd(30) == 0)
            {
                txtmore();
                txtef(9);
                txt(""s + cdatan(4, cc));
                goto label_2688_internal;
            }
        }
    }
    if (cdata(23, cc) != 0 || cbit(989, cc))
    {
        if (cbit(965, cc) == 0)
        {
            if (cdata(26, cc) % 5 == 0)
            {
                if (rnd(4) == 0)
                {
                    if (cdata(1, 0) > cdata(1, cc) - 10
                        && cdata(1, 0) < cdata(1, cc) + 10)
                    {
                        if (cdata(2, 0) > cdata(2, cc) - 10
                            && cdata(2, 0) < cdata(2, cc) + 10)
                        {
                            if (cdata(140, 0) != 6)
                            {
                                if (cdata(201, cc) <= 0)
                                {
                                    customtalk(cc, 100);
                                }
                                if (cdata(201, cc) > 0)
                                {
                                    customtalk(cc, 101);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (cdata(9, cc) >= 0)
    {
        if (cdata(263, 0))
        {
            if (dist(cdata(1, 0), cdata(2, 0), cdata(1, cc), cdata(2, cc)) == 1)
            {
                x = cdata(1, 0);
                y = cdata(2, 0);
                label_2201();
                return;
            }
        }
    }
label_2688_internal:
    if (cdata(211, cc) != 0)
    {
        if (cdata(50, cc) < cdata(51, cc) / 4)
        {
            if (cdata(55, cc) > 0 || rnd(5) == 0)
            {
                efid = cdata(211, cc);
                if (efid >= 400 && efid < 467)
                {
                    npccostmp = 1;
                    label_2167();
                    if (stat == 1)
                    {
                        label_2742();
                        return;
                    }
                }
                else
                {
                    if (efid >= 600)
                    {
                        label_2174();
                        if (stat == 1)
                        {
                            label_2742();
                            return;
                        }
                    }
                }
            }
        }
    }
    if (cdata(12, cc) == 0)
    {
        goto label_2689_internal;
    }
    ci = cdata(12, cc);
    if (inv(0, ci) == 0)
    {
        cdata(12, cc) = 0;
        goto label_2689_internal;
    }
    a = refitem(inv(3, ci), 5);
    if (cdata(9, cc) != 0)
    {
        cdata(12, cc) = 0;
    }
    if (a == 57000)
    {
        if (cdata(9, cc) == 10 && cdata(22, cc) > 6000)
        {
        }
        else
        {
            label_2198();
            return;
        }
    }
    if (a == 52000)
    {
        label_2199();
        return;
    }
    if (a == 53000)
    {
        label_2197();
        return;
    }
    cdata(12, cc) = 0;
label_2689_internal:
    if (cdata(201, cc) > 0 || cdata(9, cc) == 10)
    {
        distance = dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc));
        if (cdata(253, cc) != 0)
        {
            if (rnd(10) > 2)
            {
                label_2690();
                return;
            }
        }
        if (cdata(254, cc) != 0)
        {
            if (rnd(10) > 3)
            {
                label_2690();
                return;
            }
        }
        if (cdata(9, cc) == 10)
        {
            if (tc == 0)
            {
                if (map(cdata(1, cc), cdata(2, cc), 4) != 0)
                {
                    cell_itemoncell(cdata(1, cc), cdata(2, cc));
                    if (stat == 1)
                    {
                        ci = rtval(1);
                        p = refitem(inv(3, ci), 5);
                        if (cdata(22, cc) <= 6000)
                        {
                            if (p == 57000)
                            {
                                if (inv(21, ci) <= 0)
                                {
                                    if (inv(17, ci) >= 0)
                                    {
                                        label_2198();
                                        return;
                                    }
                                }
                            }
                            if (p == 60001)
                            {
                                if (inv(21, ci) <= 1)
                                {
                                    if (inv(25, ci) >= -5)
                                    {
                                        if (inv(27, ci) < 20)
                                        {
                                            if (inv(3, ci) != 602)
                                            {
                                                label_2199();
                                                return;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if (p == 68000 || p == 77000)
                        {
                            if (inv(21, ci) <= 0)
                            {
                                if (ibit(5, ci) == 0)
                                {
                                    if (mdata(6) != 5)
                                    {
                                        in = inv(0, ci);
                                        if (gdata(183) != cc)
                                        {
                                            label_2192();
                                            if (stat == 1)
                                            {
                                                label_2742();
                                                return;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (cdata(80, cc) == gdata(20))
                {
                    if (cbit(969, cc) == 0)
                    {
                        label_2690();
                        return;
                    }
                }
                if (distance > 2 || rnd(3))
                {
                    retreat = 0;
                    label_2693();
                    return;
                }
                else
                {
                    label_2690();
                    return;
                }
            }
        }
        if (cdata(255, cc) != 0)
        {
            retreat = 1;
            label_2693();
            return;
        }
        else
        {
            retreat = 0;
        }
        if (cdata(253, cc) != 0)
        {
            if (rnd(3))
            {
                label_2690();
                return;
            }
        }
        if (distance != cdata(208, cc))
        {
            if (rnd(100) < cdata(207, cc))
            {
                label_2693();
                return;
            }
        }
        label_2696();
        return;
    }
    if (cdata(26, cc) % 10 == 1)
    {
        searchfov = 5;
        f = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (searchfov); cnt < cnt_end; ++cnt)
            {
                y = cdata(2, cc) - 2 + cnt;
                if (y < 0 || y >= mdata(1))
                {
                    continue;
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (searchfov); cnt < cnt_end; ++cnt)
                    {
                        x = cdata(1, cc) - 2 + cnt;
                        if (x < 0 || x >= mdata(0))
                        {
                            continue;
                        }
                        c = map(x, y, 1) - 1;
                        if (c <= 0)
                        {
                            continue;
                        }
                        if (cdata(69, cc) <= -3)
                        {
                            if (cdata(9, c) > -3)
                            {
                                if (cbit(979, c) == 0)
                                {
                                    f = 1;
                                    break;
                                }
                            }
                        }
                        else
                        {
                            if (c >= 57)
                            {
                                if (cdata(69, c) <= -3)
                                {
                                    if (cbit(979, c) == 0)
                                    {
                                        f = 1;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                if (f)
                {
                    if (cbit(979, cc) == 0)
                    {
                        cdata(29, cc) = c;
                        cdata(201, cc) = 30;
                        cdata(79, cc) = 218;
                        break;
                    }
                }
            }
        }
    }
    if (tc == 0)
    {
        r1 = tc;
        r2 = cc;
        label_1518();
        if (stat == 1)
        {
            if (cdata(9, cc) == -3)
            {
                cdata(201, cc) = 30;
            }
        }
    }
    label_2690();
    return;
}
void label_2690()
{
    if (cdata(202, cc) == 4)
    {
        tc = 0;
        distance = dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc));
        label_2693();
        return;
    }
    if (rnd(5) != 0)
    {
        label_2742();
        return;
    }
    if (cdata(257, cc) != 0)
    {
        if (synccheck(cc, -1))
        {
            if (cdatan(2, cc) == u8"cat"s)
            {
                if (cdata(257, cc) < 5)
                {
                    cdata(257, cc) += 40;
                }
            label_2691_internal:
                if (jp)
                {
                    if (rnd(3) == 0)
                    {
                        txt(u8"「米さ米種だろ♪」"s,
                            u8"「飲ま飲まイェイ！！」"s,
                            u8"「飲ま飲ま飲まイェイ！！」"s);
                        goto label_2692_internal;
                    }
                    if (rnd(4) == 0)
                    {
                        txt(u8"「字ベロ♪指♪ラマ♪ｸﾏｰ!!して♪パンチラ♪」"s,
                            u8"「アロー♪アーロン♪スゲェ♪ピカソ♪算段ビーフ♪」"s,
                            u8"「キスすごい肉♪脱線してんの♪さらに肉♪」"s);
                        goto label_2692_internal;
                    }
                    if (rnd(4) == 0)
                    {
                        txt(u8"「キープダルシム♪アゴスタディーイェイ♪並フェイスで大きい筆入れ♪」"s,
                            u8"「ハロー♪猿ー♪すげー♪うん入る♪」"s);
                        goto label_2692_internal;
                    }
                    if (rnd(4) == 0)
                    {
                        txtef(4);
                        txt(u8" *ﾋﾟﾛﾘ〜ﾋﾟﾛﾘ〜* "s);
                        goto label_2692_internal;
                    }
                    txt(u8"「マイアヒー♪」"s,
                        u8"「マイアフゥー♪」"s,
                        u8"「マイアホー♪」"s);
                    goto label_2692_internal;
                }
                else
                {
                    if (rnd(2) == 0)
                    {
                        txt(cnvtalk(u8"Vrei sa pleci dar♪"s),
                            cnvtalk(u8"Numa numa yay!!"s),
                            cnvtalk(u8"Numa numa numa yay!!"s));
                        goto label_2692_internal;
                    }
                    txt(cnvtalk(u8"Mai-Ya-Hi♪"s),
                        cnvtalk(u8"Mai-Ya-Hoo♪"s),
                        cnvtalk(u8"Mai-Ya-Ha Ma Mi A♪"s));
                    goto label_2692_internal;
                }
                goto label_2691_internal;
            }
        }
    }
label_2692_internal:
    if (cc > 16)
    {
        if (mdata(6) == 3 || mdata(6) == 2)
        {
            if (gdata(13) >= 22 || gdata(13) < 7)
            {
                if (cdata(140, cc) == 0)
                {
                    if (rnd(100) == 0)
                    {
                        dmgcon(cc, 2, 4000);
                    }
                }
            }
        }
    }
    if (cdata(12, cc) == 0)
    {
        if (cdata(9, cc) != 10)
        {
            if (gdata(20) == 13)
            {
                if (gdata(70) == 1009)
                {
                    if (rnd(30) == 0)
                    {
                        flt(20);
                        if (rnd(4) == 0)
                        {
                            flttypemajor = 57000;
                        }
                        else
                        {
                            flttypemajor = 52000;
                            if (rnd(8))
                            {
                                flttypeminor = 52002;
                            }
                        }
                        itemcreate(cc, 0, -1, -1, 0);
                        if (stat == 1)
                        {
                            cdata(12, cc) = ci;
                        }
                    }
                }
            }
            if (gdata(20) == 33 || gdata(20) == 29)
            {
                if (cdata(27, cc) == 35 || cdata(27, cc) == 211)
                {
                    if (synccheck(cc, -1))
                    {
                        if (chipm(0, map(cdata(1, cc), cdata(2, cc), 0)) == 4)
                        {
                            if (rnd(4) == 0)
                            {
                                if (cdata(0, gdata(259)) == 1)
                                {
                                    if (synccheck(gdata(259), -1))
                                    {
                                        flt();
                                        itemcreate(cc, 587, -1, -1, 0);
                                        if (stat == 1)
                                        {
                                            tlocx = cdata(1, gdata(259));
                                            tlocy = cdata(2, gdata(259));
                                            txtef(9);
                                            txt(lang(
                                                    u8"「化け物め！」"s,
                                                    cnvtalk(
                                                        u8"Filthy monster!"s)),
                                                lang(
                                                    u8"「くたばれっ」"s,
                                                    cnvtalk(u8"Go to hell!"s)),
                                                lang(
                                                    u8"「退治してやるぅ！」"s,
                                                    cnvtalk(
                                                        u8"I'll get rid of you."s)),
                                                lang(
                                                    u8"「くらえー！」"s,
                                                    cnvtalk(u8"Eat this!"s)));
                                            label_2189();
                                            return;
                                        }
                                    }
                                }
                            }
                            if (rnd(12) == 0)
                            {
                                itemlist(-1, 541);
                                f = 0;
                                {
                                    int cnt = 0;
                                    for (int cnt_end = cnt + (listmax);
                                         cnt < cnt_end;
                                         ++cnt)
                                    {
                                        ti = list(0, cnt);
                                        if (inv(5, ti) >= scx
                                            && inv(5, ti) < scx + inf_screenw
                                            && inv(6, ti) >= scy
                                            && inv(6, ti) < scy + inf_screenh)
                                        {
                                            f = 1;
                                            break;
                                        }
                                    }
                                }
                                tlocx = inv(5, ti);
                                tlocy = inv(6, ti);
                                if (f == 1)
                                {
                                    flt();
                                    itemcreate(cc, 587, -1, -1, 0);
                                    if (stat == 1)
                                    {
                                        label_2189();
                                        return;
                                    }
                                }
                            }
                            if (rnd(10) == 0)
                            {
                                if (map(cdata(1, cc), cdata(2, cc), 4) == 0)
                                {
                                    flt();
                                    itemcreate(
                                        -1, 541, cdata(1, cc), cdata(2, cc), 0);
                                    if (stat == 1)
                                    {
                                        snd(86);
                                        txt(lang(
                                            name(cc) + u8"は"s + itemname(ci)
                                                + u8"を作った！"s,
                                            name(cc) + u8" make"s + _s(cc)
                                                + u8" "s + itemname(ci)
                                                + u8"!"s));
                                        label_2742();
                                        return;
                                    }
                                }
                            }
                            if (rnd(12) == 0)
                            {
                                flt();
                                itemcreate(cc, 587, -1, -1, 0);
                                if (stat == 1)
                                {
                                    tlocx = cdata(1, 0);
                                    tlocy = cdata(2, 0);
                                    txtef(9);
                                    txt(lang(u8" *クスクス* "s, u8"*grin*"s),
                                        lang(
                                            u8"「えいっ」"s,
                                            cnvtalk(u8"Fire in the hole!"s)),
                                        lang(
                                            u8"「うりゃ」"s,
                                            cnvtalk(u8"Tee-hee-hee!"s)),
                                        lang(
                                            u8"「くらえー！」"s,
                                            cnvtalk(u8"Eat this!"s)),
                                        lang(
                                            u8"「危ないっ！」"s,
                                            cnvtalk(u8"Watch out!"s)),
                                        lang(
                                            u8"「避けてー」"s,
                                            cnvtalk(u8"Scut!"s)));
                                    txtmore();
                                    label_2189();
                                    return;
                                }
                            }
                        }
                    }
                }
            }
            if (cdata(22, cc) <= 6000)
            {
                if (cdata(6, cc) != msync || rnd(5))
                {
                    if (cbit(986, cc) == 0)
                    {
                        cdata(22, cc) += 5000;
                    }
                    else
                    {
                        cdata(22, cc) -= 3000;
                    }
                }
                else
                {
                    flt(20);
                    p(0) = rnd(4);
                    p(1) = 0;
                    if (p == 0 || cbit(986, cc))
                    {
                        flttypemajor = 57000;
                    }
                    if (p == 1)
                    {
                        flttypemajor = 52000;
                    }
                    if (p == 2 || p == 3)
                    {
                        flttypeminor = 52002;
                    }
                    itemcreate(cc, p(1), -1, -1, 0);
                    if (stat == 1)
                    {
                        if (inv(3, ci) == 577)
                        {
                            if (rnd(5) == 0)
                            {
                                inv(0, ci) = 0;
                            }
                        }
                        else
                        {
                            cdata(12, cc) = ci;
                            if (cbit(986, cc) == 0)
                            {
                                cdata(22, cc) += 5000;
                            }
                            else
                            {
                                cdata(22, cc) -= 3000;
                            }
                        }
                    }
                }
            }
        }
    }
    if (cdata(202, cc) == 5)
    {
        if (cdata(27, cc) == 326)
        {
            if (rnd(5) == 0)
            {
                efid = 183;
                label_2176();
                label_2742();
                return;
            }
        }
        if (cdata(27, cc) == 320 || cdata(27, cc) == 280)
        {
            if (synccheck(cc, -1))
            {
                tc = 0;
                distance = dist(
                    cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc));
                if (distance < 8)
                {
                    if (cdatan(2, 0) == u8"snail"s)
                    {
                        tlocx = cdata(1, 0);
                        tlocy = cdata(2, 0);
                        flt();
                        itemcreate(cc, 698, -1, -1, 0);
                        if (stat == 1)
                        {
                            if (synccheck(cc, -1))
                            {
                                txtef(9);
                                txtmore();
                                txt(lang(
                                        u8"「なめくじだ！」"s,
                                        cnvtalk(u8"Snail!"s)),
                                    lang(u8"「殺す！」"s, cnvtalk(u8"Kill!"s)));
                            }
                            label_2189();
                            return;
                        }
                    }
                }
            }
        }
        if (cdata(27, cc) == 335 || cdata(27, cc) == 352)
        {
            if (rnd(10) == 0)
            {
                {
                    int cnt = 57;
                    for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) != 1)
                        {
                            continue;
                        }
                        if (rnd(3) == 0)
                        {
                            continue;
                        }
                        if (dist(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, cnt),
                                cdata(2, cnt))
                            < 6)
                        {
                            if (fov_los(
                                    cdata(1, cc),
                                    cdata(2, cc),
                                    cdata(1, cnt),
                                    cdata(2, cnt)))
                            {
                                cdata(29, cc) = cnt;
                                tc = cnt;
                                break;
                            }
                        }
                    }
                }
            }
            distance =
                dist(cdata(1, tc), cdata(2, tc), cdata(1, cc), cdata(2, cc));
            if (tc != 0)
            {
                if (distance == 1)
                {
                    if (cdata(140, tc) == 0)
                    {
                        cdata(29, cc) = 0;
                        label_2147();
                        label_2742();
                        return;
                    }
                }
                if (distance < 6)
                {
                    label_2693();
                    return;
                }
            }
        }
        cdata(3, cc) = rnd(3) - 1 + cdata(1, cc);
        cdata(4, cc) = rnd(3) - 1 + cdata(2, cc);
        cell_check(cdata(3, cc), cdata(4, cc));
        if (cellaccess == 1)
        {
            label_2205();
            return;
        }
    }
    if (cdata(202, cc) == 1)
    {
        cdata(3, cc) = rnd(3) - 1 + cdata(1, cc);
        cdata(4, cc) = rnd(3) - 1 + cdata(2, cc);
        cell_check(cdata(3, cc), cdata(4, cc));
        if (cellaccess == 1)
        {
            label_2205();
            return;
        }
    }
    if (cdata(202, cc) == 2)
    {
        if (mdata(8) == 1
            && dist(cdata(1, cc), cdata(2, cc), cdata(171, cc), cdata(172, cc))
                > 2)
        {
            cdata(3, cc) = cdata(1, cc)
                + rnd(2)
                    * ((cdata(1, cc) > cdata(171, cc)) * -1
                       + (cdata(1, cc) < cdata(171, cc)));
            cdata(4, cc) = cdata(2, cc)
                + rnd(2)
                    * ((cdata(2, cc) > cdata(172, cc)) * -1
                       + (cdata(2, cc) < cdata(172, cc)));
        }
        else
        {
            cdata(3, cc) = rnd(3) - 1 + cdata(1, cc);
            cdata(4, cc) = rnd(3) - 1 + cdata(2, cc);
        }
        cell_check(cdata(3, cc), cdata(4, cc));
        if (cellaccess == 1)
        {
            label_2205();
            return;
        }
    }
    label_2742();
    return;
}
void label_2693()
{
    if (mdata(6) == 3)
    {
        if (cc < 16)
        {
            if (rnd(100) == 0)
            {
                inv_getheader(cc);
                sell(0) = 0;
                sell(1) = 0;
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) == 0)
                        {
                            continue;
                        }
                        a = refitem(inv(3, cnt), 5);
                        if (a == 77000)
                        {
                            p = inv(1, cnt) * inv(0, cnt);
                            sell += inv(0, cnt);
                            sell(1) += p;
                            inv(0, cnt) = 0;
                            cdata(30, cc) += p;
                        }
                    }
                }
                if (sell != 0)
                {
                    txtef(9);
                    txt(lang(
                        name(cc) + u8"は"s + sell
                            + u8"個のアイテムを売りさばき"s + sell(1)
                            + u8"goldを稼いだ。"s,
                        name(cc) + u8" sells "s + sell + u8" items and earns "s
                            + sell(1) + u8" gold pieces."s));
                }
            }
            if (rnd(100) == 0)
            {
                if (cdata(30, cc) >= cdata(38, cc) * 500)
                {
                    cdata(30, cc) -= cdata(38, cc) * 500;
                    snd(61);
                    txtef(9);
                    txt(lang(
                        cdatan(0, cc) + u8"は訓練所に通い潜在能力を伸ばした！"s,
                        cdatan(0, cc) + u8" visits a trainer and develops "s
                            + his(cc) + u8" potential!"s));
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (4); cnt < cnt_end; ++cnt)
                        {
                            {
                                int cnt = 0;
                                for (;; ++cnt)
                                {
                                    if (rnd(4) == 0)
                                    {
                                        p = rnd(8) + 10;
                                    }
                                    else
                                    {
                                        p = rnd(300) + 100;
                                    }
                                    if (sorg(p, cc) == 0)
                                    {
                                        continue;
                                    }
                                    modgrowth(cc, p, 4);
                                    break;
                                }
                            }
                        }
                    }
                    r1 = cc;
                    label_1477();
                }
            }
        }
    }
    if (tc == cc)
    {
        cdata(29, cc) = 0;
        label_2742();
        return;
    }
    if (cdata(203, cc) <= 0)
    {
        cdata(205, cc) = cdata(1, tc);
        cdata(206, cc) = cdata(2, tc);
        if (retreat || cdata(208, cc) > distance)
        {
            cdata(205, cc) = cdata(1, cc) + (cdata(1, cc) - cdata(1, tc));
            cdata(206, cc) = cdata(2, cc) + (cdata(2, cc) - cdata(2, tc));
        }
    }
    else
    {
        --cdata(203, cc);
    }
    blockedbychara = 0;
    cdata(3, cc) = (cdata(205, cc) > cdata(1, cc))
        - (cdata(205, cc) < cdata(1, cc)) + cdata(1, cc);
    cdata(4, cc) = (cdata(206, cc) > cdata(2, cc))
        - (cdata(206, cc) < cdata(2, cc)) + cdata(2, cc);
    x = cdata(3, cc);
    y = cdata(4, cc);
    cell_check(x, y);
    if (cellaccess == 1)
    {
        label_2205();
        return;
    }
    if (cellchara != -1)
    {
        tc = cellchara;
        if (relationbetween(cc, tc) == -3)
        {
            cdata(29, cc) = tc;
            cdata(201, cc) += 4;
            label_2696();
            return;
        }
        else
        {
            if (cdata(25, cc) > 3 && cdata(38, cc) > cdata(38, tc)
                || cbit(985, tc))
            {
                if (cdata(29, cc) != tc)
                {
                    cell_swap(cc, tc);
                    if (synccheck(cc, -1))
                    {
                        txt(lang(
                            name(cc) + u8"は"s + name(tc) + u8"を押しのけた。"s,
                            name(cc) + u8" displace"s + _s(cc) + u8" "s
                                + name(tc) + u8"."s));
                    }
                    if (cdata(140, tc) == 1)
                    {
                        if (cdata(141, tc) > 0)
                        {
                            if (synccheck(cc, -1))
                            {
                                txt(lang(
                                    name(tc) + u8"は"s + name(cc)
                                        + u8"を睨み付けた。"s,
                                    name(tc) + u8" glare"s + _s(tc) + u8" "s
                                        + name(cc) + u8"."s));
                            }
                            rowactend(tc);
                        }
                    }
                    label_2742();
                    return;
                }
            }
        }
    }
    if (cc > 16)
    {
        if (cdata(25, cc) > 3)
        {
            if (cdata(9, cc) <= -2)
            {
                if (x >= 0)
                {
                    if (x < mdata(0))
                    {
                        if (y >= 0)
                        {
                            if (y < mdata(1))
                            {
                                if (chipm(7, map(x, y, 0)) && 4)
                                {
                                    if (rnd(4) == 0)
                                    {
                                        map(x, y, 0) = tile_tunnel;
                                        snd(45);
                                        animeid = 14;
                                        label_1426();
                                        spillfrag(x, y, 2);
                                        if (synccheck(cc, -1))
                                        {
                                            txt(lang(
                                                name(cc)
                                                    + u8"は壁を破壊した！"s,
                                                name(cc) + u8" crush"s + _s(cc)
                                                    + u8" the wall!"s));
                                        }
                                        label_2742();
                                        return;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (abs(cdata(205, cc) - cdata(1, cc))
        >= abs(cdata(206, cc) - cdata(2, cc)))
    {
        label_2694();
        if (stat == 1)
        {
            label_2205();
            return;
        }
        label_2695();
        if (stat == 1)
        {
            label_2205();
            return;
        }
    }
    else
    {
        label_2695();
        if (stat == 1)
        {
            label_2205();
            return;
        }
        label_2694();
        if (stat == 1)
        {
            label_2205();
            return;
        }
    }
    if (cdata(203, cc) > 0)
    {
        cdata(3, cc) = rnd(3) - 1 + cdata(1, cc);
        cdata(4, cc) = rnd(3) - 1 + cdata(2, cc);
        cell_check(cdata(3, cc), cdata(4, cc));
        if (cellaccess == 1)
        {
            label_2205();
            return;
        }
    }
    else
    {
        if (blockedbychara == 1)
        {
            cdata(203, cc) = 3;
        }
        else
        {
            cdata(203, cc) = 6;
        }
        dir = dir(1 + rnd(2));
        if (dir == 1)
        {
            cdata(205, cc) = cdata(1, cc) - 6;
            cdata(206, cc) = cdata(2, tc);
        }
        if (dir == 2)
        {
            cdata(205, cc) = cdata(1, cc) + 6;
            cdata(206, cc) = cdata(2, tc);
        }
        if (dir == 3)
        {
            cdata(206, cc) = cdata(2, cc) - 6;
            cdata(205, cc) = cdata(1, tc);
        }
        if (dir == 0)
        {
            cdata(206, cc) = cdata(2, cc) + 6;
            cdata(205, cc) = cdata(1, tc);
        }
    }
    label_2742();
    return;
}
int label_2694()
{
    if (cdata(205, cc) > cdata(1, cc))
    {
        if (cdata(206, cc) > cdata(2, cc))
        {
            p = 1;
        }
        else
        {
            p = 0;
        }
        dir(0) = 2;
        dir(1) = 0;
        dir(2) = 3;
        ai_check();
        if (stat == 1)
        {
            stat = 1;
            return stat;
        }
    }
    if (cdata(205, cc) < cdata(1, cc))
    {
        if (cdata(206, cc) < cdata(2, cc))
        {
            p = 0;
        }
        else
        {
            p = 1;
        }
        dir(0) = 1;
        dir(1) = 0;
        dir(2) = 3;
        ai_check();
        if (stat == 1)
        {
            stat = 1;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
int label_2695()
{
    if (cdata(206, cc) > cdata(2, cc))
    {
        if (cdata(205, cc) > cdata(1, cc))
        {
            p = 1;
        }
        else
        {
            p = 0;
        }
        dir(0) = 0;
        dir(1) = 1;
        dir(2) = 2;
        ai_check();
        if (stat == 1)
        {
            stat = 1;
            return stat;
        }
    }
    if (cdata(206, cc) < cdata(2, cc))
    {
        if (cdata(205, cc) > cdata(1, cc))
        {
            p = 0;
        }
        else
        {
            p = 1;
        }
        dir(0) = 3;
        dir(1) = 1;
        dir(2) = 2;
        ai_check();
        if (stat == 1)
        {
            stat = 1;
            return stat;
        }
    }
    stat = 0;
    return stat;
}
void label_2696()
{
    if (tc == 0)
    {
        pcattacker = cc;
    }
    act = cdata(215 + rnd(cdata(212, cc) % 10), cc);
    if (cdata(209, cc) != 0)
    {
        if (cdata(209, cc) > rnd(100))
        {
            if (cdata(212, cc) / 10 == 0)
            {
            }
            else
            {
                act = cdata(220 + rnd(cdata(212, cc) / 10), cc);
            }
            if (act >= -10000 && act < -9995)
            {
                if (distance < 8)
                {
                    if (fov_los(
                            cdata(1, cc),
                            cdata(2, cc),
                            cdata(1, tc),
                            cdata(2, tc)))
                    {
                        tlocx = cdata(1, tc);
                        tlocy = cdata(2, tc);
                        if (act == -9999)
                        {
                            flt();
                            flttypemajor = 52000;
                            itemcreate(
                                cc,
                                isetthrowpotionminor(
                                    rnd(length(isetthrowpotionminor))),
                                -1,
                                -1,
                                0);
                        }
                        if (act == -9998)
                        {
                            flt();
                            flttypemajor = 52000;
                            itemcreate(
                                cc,
                                isetthrowpotionmajor(
                                    rnd(length(isetthrowpotionmajor))),
                                -1,
                                -1,
                                0);
                        }
                        if (act == -9997)
                        {
                            flt();
                            flttypemajor = 52000;
                            itemcreate(
                                cc,
                                isetthrowpotiongreater(
                                    rnd(length(isetthrowpotiongreater))),
                                -1,
                                -1,
                                0);
                        }
                        if (act == -9996)
                        {
                            flt();
                            itemcreate(cc, 698, -1, -1, 0);
                        }
                        if (stat == 1)
                        {
                            label_2189();
                            return;
                        }
                        label_2742();
                        return;
                    }
                }
            }
        }
    }
    if (act == -4)
    {
        cdata(3, cc) = rnd(3) - 1 + cdata(1, cc);
        cdata(4, cc) = rnd(3) - 1 + cdata(2, cc);
        cell_check(cdata(3, cc), cdata(4, cc));
        if (cellaccess == 1)
        {
            label_2205();
            return;
        }
        else
        {
            label_2742();
            return;
        }
    }
    if (act == -2)
    {
        if (distance < 6)
        {
            if (fov_los(cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc)))
            {
                label_2075();
                if (stat == 1)
                {
                    label_2217();
                    label_2742();
                    return;
                }
            }
        }
    }
    if (act >= 400)
    {
        if (act < 467)
        {
            efid = act;
            if (cdata(55, cc) < cdata(56, cc) / 7)
            {
                if (rnd(3) || cc < 16 || cdata(25, cc) >= 4 || cbit(988, cc))
                {
                    cdata(55, cc) += cdata(38, cc) / 4 + 5;
                    label_2742();
                    return;
                }
            }
            npccostmp = 1;
            label_2167();
            if (stat == 1)
            {
                label_2742();
                return;
            }
        }
    }
    if (act >= 600)
    {
        efid = act;
        label_2174();
        if (stat == 1)
        {
            label_2742();
            return;
        }
    }
    if (act == -3)
    {
        if (distance == 1)
        {
            label_2218();
        }
        if (rnd(3) == 0 || cc < 16)
        {
            if (distance < 6)
            {
                if (fov_los(
                        cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc)))
                {
                    label_2075();
                    if (stat == 1)
                    {
                        label_2217();
                        label_2742();
                        return;
                    }
                }
            }
        }
        label_2742();
        return;
    }
    if (distance == 1)
    {
        label_2218();
        label_2742();
        return;
    }
    if (distance < 6)
    {
        if (fov_los(cdata(1, cc), cdata(2, cc), cdata(1, tc), cdata(2, tc)))
        {
            label_2075();
            if (stat == 1)
            {
                label_2217();
                label_2742();
                return;
            }
        }
    }
    if (cdata(208, cc) <= distance)
    {
        if (rnd(3) == 0)
        {
            label_2742();
            return;
        }
    }
    if (rnd(5) == 0)
    {
        --cdata(201, cc);
    }
    if (rnd(100) < cdata(207, cc))
    {
        label_2693();
        return;
    }
    else
    {
        label_2742();
        return;
    }
}
void label_2697()
{
    page = quickpage;
    listmax = 0;
    snd(5);
    cs = -1;
label_2698:
    listmax = 0;
    if (page == 3)
    {
        page = 2;
    }
    if (page == -1)
    {
        page = 0;
    }
    if (page == 0)
    {
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"ヘルプ"s, u8"Help"s);
        listn(1, listmax) = key_help;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"ログ"s, u8"Log"s);
        listn(1, listmax) = key_msglog;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"シート"s, u8"Chara"s);
        listn(1, listmax) = key_charainfo;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"日誌"s, u8"Journal"s);
        listn(1, listmax) = key_journal;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
    }
    if (page == 1)
    {
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"装備"s, u8"Wear"s);
        listn(1, listmax) = key_wear;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"休息"s, u8"Rest"s);
        listn(1, listmax) = key_rest;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"魔法"s, u8"Spell"s);
        listn(1, listmax) = key_cast;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"技能"s, u8"Skill"s);
        listn(1, listmax) = key_skill;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"射撃"s, u8"Fire"s);
        listn(1, listmax) = key_fire;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"掘る"s, u8"Dig"s);
        listn(1, listmax) = key_dig;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
    }
    if (page == 2)
    {
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"祈る"s, u8"Pray"s);
        listn(1, listmax) = key_pray;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"装填"s, u8"Ammo"s);
        listn(1, listmax) = key_ammo;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"干渉"s, u8"Interact"s);
        listn(1, listmax) = key_interact;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = lang(u8"体当り"s, u8"Bash"s);
        listn(1, listmax) = key_bash;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
        list(0, listmax) = listmax;
        listn(0, listmax) = "";
        listn(1, listmax) = u8"aaa"s;
        ++listmax;
    }
    s(0) = lang(u8"情報"s, u8"Info"s);
    s(1) = lang(u8"行動"s, u8"Action"s);
    s(2) = lang(u8"特殊"s, u8"Etc"s);
    s(3) = u8"null"s;
    p = page - 1;
    if (p == -1)
    {
        p = 3;
    }
    listn(0, 0) = s(p);
    listn(0, 4) = s(page);
    p = page + 1;
    if (p == 3)
    {
        p = 3;
    }
    listn(0, 8) = s(p);
    t = 0;
label_2699_internal:
    redraw(0);
    font(lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0);
    tx = 50;
    ty = 345;
    x(0) = 25;
    x(1) = 50;
    x(2) = 50;
    x(3) = 100;
    x(4) = 100;
    x(5) = 100;
    x(6) = 150;
    x(7) = 150;
    x(8) = 175;
    y(0) = 50;
    y(1) = 15;
    y(2) = 85;
    y(3) = 0;
    y(4) = 50;
    y(5) = 100;
    y(6) = 15;
    y(7) = 85;
    y(8) = 50;
    s = u8"○コマンド"s;
    gmode(2);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
        {
            p = cnt;
            if (listn(0, p) == u8"null"s)
            {
                continue;
            }
            pos(x(cnt) + tx, y(cnt) + ty);
            if (cnt == 0 || cnt == 4 || cnt == 8)
            {
                gcopy(3, 360, 192, 48, 48);
            }
            else
            {
                gcopy(3, 360, 144, 48, 48);
            }
            gmode(
                5 - 1,
                -1,
                (t + cnt) % 10 * (t + cnt) % 10 * 12 * ((t + cnt) % 50 < 10));
            if (cs == cnt)
            {
                gmode(5 - 1, -1, 140);
            }
            pos(x(cnt) + tx, y(cnt) + ty);
            if (cnt == 0 || cnt == 4 || cnt == 8)
            {
                gcopy(3, 360, 192, 48, 48);
            }
            else
            {
                gcopy(3, 360, 144, 48, 48);
            }
            gmode(2);
            s = listn(0, p);
            pos(x(cnt) + tx + 25 - strlen_u(s) * 3, y(cnt) + ty + 19);
            color(0, 0, 0);
            bmes(s, 255, 255, 255);
        }
    }
    ++t;
    redraw(1);
    await(cfg_wait1);
    key_check(2);
    if (key == key_north)
    {
        key = listn(1, 3);
        cs = 3;
    }
    if (key == key_south)
    {
        key = listn(1, 5);
        cs = 5;
    }
    if (key == key_west)
    {
        cs = 0;
    }
    if (key == key_east)
    {
        cs = 8;
    }
    if (key == key_northwest)
    {
        key = listn(1, 1);
        cs = 1;
    }
    if (key == key_northeast)
    {
        key = listn(1, 6);
        cs = 6;
    }
    if (key == key_southwest)
    {
        key = listn(1, 2);
        cs = 2;
    }
    if (key == key_southeast)
    {
        key = listn(1, 7);
        cs = 7;
    }
    if (key == key_cancel)
    {
        cs = -1;
        snd(5);
        key = "";
        goto label_2700_internal;
        return;
    }
    if (key != ""s)
    {
        if (cs == -1)
        {
            snd(5);
            key = "";
            goto label_2700_internal;
            return;
        }
        if (key == key_enter)
        {
            key = listn(1, cs);
            goto label_2700_internal;
            return;
        }
    }
    if (key == ""s || cs == 1 || cs == 6 || cs == 2 || cs == 7)
    {
        if (cs != -1)
        {
            key = listn(1, cs);
            goto label_2700_internal;
            return;
        }
    }
    goto label_2699_internal;
label_2700_internal:
    if (cs == 0 || key == key_northeast)
    {
        cs = -1;
        snd(5);
        --page;
        screenupdate = -1;
        label_1419();
        goto label_2698;
    }
    if (cs == 8 || key == key_northwest)
    {
        cs = -1;
        snd(5);
        ++page;
        screenupdate = -1;
        label_1419();
        goto label_2698;
    }
    quickpage = page;
    cs = 0;
    label_1419();
    quickkeywait = 1;
    return;
}
void label_2701()
{
    gsel(3);
    pos(960, 96);
    picload(exedir + u8"\\graphic\\deco_help.bmp"s, 1);
    gsel(0);
    page = 0;
    notesel(buff);
    noteload(exedir + u8"data\\exhelp.txt"s);
    p = instr(buff, 0, u8"%"s + ghelp + u8","s + lang(u8"JP"s, u8"EN"s));
    if (p == -1)
    {
        dialog(
            u8"help index not found %"s + ghelp + u8","s
            + lang(u8"JP"s, u8"EN"s));
        return;
    }
    buff = strmid(buff, p, instr(buff, p, u8"%END"s));
    notedel(0);
    if (noteinfo(0) == 0)
    {
        return;
    }
    snd(53);
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            redraw(0);
            gmode(2);
            dx = 480;
            dy = 175;
            window2(
                (windoww - dx) / 2 + inf_screenx, winposy(dy), dx, dy, 4, 0);
            wx = (windoww - dx) / 2 + inf_screenx;
            wy = winposy(dy);
            window2(
                (windoww - 325) / 2 + inf_screenx,
                winposy(dy) + 6,
                325,
                32,
                0,
                1);
            pos(wx + 5, wy + 4);
            gcopy(3, 960, 96, 48, 48);
            pos(wx + dx - 55, wy + 4);
            gcopy(3, 960, 96, 48, 48);
            pos(wx + 10, wy + 42);
            gcopy(3, 960, 144, 96, 120);
            font(lang(cfg_font1, cfg_font2), 16 - en * 2, 1);
            pos(wx + 142, wy + 13);
            color(80, 60, 50);
            bmes(
                lang(
                    u8"- ノルンの冒険ガイド -"s, u8"- Norne's travel guide -"s),
                255,
                245,
                235);
            tx = wx + 120;
            ty = wy + 55;
            font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
            color(30, 30, 30);
            gmesx = tx;
            gmesy = ty;
            gmesw = 330;
            gmescol(0) = 30;
            gmescol(1) = 30;
            gmescol(2) = 30;
            gmestype = 1;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    noteget(s, page);
                    ++page;
                    if (page > noteinfo(0) || s == ""s)
                    {
                        break;
                    }
                    gmes(s);
                }
            }
            gmode(2);
            redraw(1);
            help_halt();
            if (page >= noteinfo(0))
            {
                break;
            }
        }
    }
    return;
}
void label_2702()
{
    if (jp)
    {
        return;
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (24); cnt < cnt_end; ++cnt)
        {
            if (instr(s(cnt), 0, u8"("s) == -1)
            {
                continue;
            }
            s(cnt) = cnven(strmid(
                s(cnt),
                instr(s(cnt), 0, u8"("s) + 1,
                instr(s(cnt), 0, u8")"s) - instr(s(cnt), 0, u8"("s) - 1));
        }
    }
    return;
}
void label_2703()
{
    snd(26);
    listmax = 0;
    page = 0;
    pagesize = 18;
    cs = 0;
    cc = 0;
    cs_bk = -1;
    page_bk = 0;
    cs_bk2 = 0;
    if (mode != 1)
    {
        gsel(4);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(cnt % 4 * 180, cnt / 4 * 300);
                picload(exedir + u8"graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
            }
        }
        gsel(0);
    }
    else
    {
        cs = 3;
        cs_bk2 = cs;
    }
    notesel(buff);
    noteload(
        exedir + u8"data\\"s + lang(u8"manual_JP.txt"s, u8"manual_ENG.txt"s));
    list(0, 0) = 0;
    listn(0, 0) = lang(u8"キーの一覧"s, u8"Key List"s);
    ++listmax;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(q, cnt);
            p = instr(q, 0, u8"{}"s);
            if (p != -1)
            {
                list(0, listmax) = cnt + 1;
                listn(0, listmax) = strmid(q, instr(q, 0, u8"}"s) + 2, 999);
                ++listmax;
            }
        }
    }
    windowshadow = 1;
label_2704_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
label_2705_internal:
    redraw(0);
    s(0) = u8"Elona In-Game Help"s;
    s(1) = strhint2 + strhint3b;
    if (mode == 1)
    {
        display_window(
            (windoww - 780) / 2 + inf_screenx, winposy(496, 1), 780, 496);
    }
    else
    {
        display_window(
            (windoww - 780) / 2 + inf_screenx, winposy(496) - 24, 780, 496);
    }
    display_topic(lang(u8"項目"s, u8"Topic"s), wx + 34, wy + 36);
    if (mode == 1)
    {
        p = 2;
    }
    else
    {
        p = 4;
    }
    cmbg = page % 5;
    x = ww / 5 * 2;
    y = wh - 80;
    gmode(4, 180, 300, 50);
    pos(wx + ww / 4, wy + wh / 2);
    grotate(p, cmbg % 4 * 180, cmbg / 4 % 2 * 300, 0, x, y);
    gmode(2);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            display_key(wx + 38, wy + 66 + cnt * 19 - 2, cnt);
        }
    }
    if (cs_bk2 == 0 && page_bk == 0)
    {
        x = wx + 188;
        y = wy + 6;
        display_topic(
            lang(u8"アイテムに関するキー"s, u8"Item Keys"s), x + 18, y + 30);
        display_topic(
            lang(u8"行動に関するキー"s, u8"Action Keys"s), x + 18, y + 142);
        display_topic(
            lang(u8"情報に関するキー"s, u8"Information Keys"s),
            x + 18,
            y + 256);
        display_topic(
            lang(u8"その他のキー"s, u8"Other Keys"s), x + 18, y + 328);
        color(0, 0, 0);
        s(0) = u8"アイテムを取る(get)"s;
        s(1) = key_get;
        s(2) = u8"アイテムを置く(drop)"s;
        s(3) = key_drop;
        s(4) = u8"アイテムを調べる(examine)"s;
        s(5) = key_inventory;
        s(6) = u8"装備する(wear,wield)"s;
        s(7) = key_wear;
        s(8) = u8"食べる(eat)"s;
        s(9) = key_eat;
        s(10) = u8"飲む(quaff)"s;
        s(11) = key_drink;
        s(12) = u8"読む(read)"s;
        s(13) = key_read;
        s(14) = u8"振る(zap)"s;
        s(15) = key_zap;
        s(16) = u8"道具を使う(tool)"s;
        s(17) = key_use;
        s(18) = u8"調合(blend)"s;
        s(19) = key_dip;
        s(20) = u8"投げる(throw)"s;
        s(21) = key_throw;
        s(22) = u8"装填(ammo)"s;
        s(23) = key_ammo;
        label_2702();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                pos(x + 38 + cnt / 6 * 290, y + 58 + cnt % 6 * 14);
                mes(s(cnt * 2));
                font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
                pos(x + 248 + cnt / 6 * 290, y + 57 + cnt % 6 * 14);
                mes(s(cnt * 2 + 1));
            }
        }
        s(0) = u8"周囲を調べる(search)"s;
        s(1) = key_search;
        s(2) = u8"魔法を唱える(cast)"s;
        s(3) = key_cast;
        s(4) = u8"干渉する(interact)"s;
        s(5) = key_interact;
        s(6) = u8"階段を降りる,入る(go down)"s;
        s(7) = key_godown;
        s(8) = u8"階段を昇る(go up)"s;
        s(9) = key_goup;
        s(10) = u8"その場で待機(wait)"s;
        s(11) = key_wait;
        s(12) = u8"ターゲットを指定(target)"s;
        s(13) = key_target;
        s(14) = u8"射撃する(fire)"s;
        s(15) = key_fire;
        s(16) = u8"能力を使う(apply)"s;
        s(17) = key_skill;
        s(18) = u8"体当たりする(bash)"s;
        s(19) = key_bash;
        s(20) = u8"穴を掘る(dig)"s;
        s(21) = key_dig;
        s(22) = u8"鍵を開ける(open)"s;
        s(23) = key_open;
        s(24) = "";
        s(25) = "";
        label_2702();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                pos(x + 38 + cnt / 6 * 290, y + 170 + cnt % 6 * 14);
                mes(s(cnt * 2));
                font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
                pos(x + 248 + cnt / 6 * 290, y + 169 + cnt % 6 * 14);
                mes(s(cnt * 2 + 1));
            }
        }
        s(0) = u8"能力・スキル情報(chara)"s;
        s(1) = key_charainfo;
        s(2) = u8"冒険日誌を表示(journal)"s;
        s(3) = key_journal;
        s(4) = u8"ヘルプを表示(help)"s;
        s(5) = key_help;
        s(6) = u8"メッセージログを表示(log)"s;
        s(7) = key_msglog;
        s(8) = u8"マテリアル表示(material)"s;
        s(9) = key_material;
        s(10) = u8"特徴の表示(feat)"s;
        s(11) = key_trait;
        label_2702();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                pos(x + 38 + cnt / 3 * 290, y + 284 + cnt % 3 * 14);
                mes(s(cnt * 2));
                font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
                pos(x + 248 + cnt / 3 * 290, y + 283 + cnt % 3 * 14);
                mes(s(cnt * 2 + 1));
            }
        }
        s(0) = u8"セーブして終了(save)"s;
        s(1) = key_save;
        s(2) = u8"神に祈る(pray)"s;
        s(3) = key_pray;
        s(4) = u8"神に捧げる(offer)"s;
        s(5) = key_offer;
        s(6) = u8"ドアを閉める(close)"s;
        s(7) = key_close;
        s(8) = u8"与える(give)"s;
        s(9) = key_give;
        s(10) = "";
        s(11) = "";
        s(12) = "";
        label_2702();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (6); cnt < cnt_end; ++cnt)
            {
                font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
                pos(x + 38 + cnt / 3 * 290, y + 356 + cnt % 3 * 14);
                mes(s(cnt * 2));
                font(lang(cfg_font1, cfg_font2), 15 - en * 2, 0);
                pos(x + 248 + cnt / 3 * 290, y + 355 + cnt % 3 * 14);
                mes(s(cnt * 2 + 1));
            }
        }
        font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
        pos(x + 38, y + 408);
        mes(lang(
            u8"F8 マップのエクスポート  F9 インタフェース非表示  F11 キャラ情報の出力\nF12 コンソールの表示"s,
            u8"F8 Export map  F9 Hide interface  F11 Export chara sheet\nF12 Console"s));
    }
    else
    {
        s(1) = listn(0, pagesize * page_bk + cs_bk2);
        display_topic(s(1), wx + 206, wy + 36);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        p = list(0, pagesize * page_bk + cs_bk2);
        gmesx = wx + 216;
        gmesy = wy + 60;
        gmesw = 510;
        gmescol(0) = 30;
        gmescol(1) = 30;
        gmescol(2) = 30;
        gmestype = 0;
        {
            int cnt = p;
            for (int cnt_end = cnt + (noteinfo(0) - p); cnt < cnt_end; ++cnt)
            {
                noteget(s1, cnt);
                i = instr(s1, 0, u8"{"s);
                if (i != -1)
                {
                    break;
                }
                gmes(s1);
            }
        }
    }
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            s = listn(0, p);
            cs_list(cnt, s, wx + 66, wy + 66 + cnt * 19 - 1, 19, 0);
        }
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                cs = cnt;
                break;
            }
        }
    }
    if (p != -1)
    {
        snd(20);
        page_bk = page;
        cs_bk2 = cs;
        goto label_2704_internal;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(1);
            ++page;
            goto label_2704_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(1);
            --page;
            goto label_2704_internal;
        }
    }
    if (key == key_cancel)
    {
        return;
    }
    goto label_2705_internal;
}
void label_2707()
{
    curmenu = 2;
    key_list(0) = key_enter;
    keyrange = 0;
    pagesize = 0;
    redraw(0);
    gsel(7);
    pos(0, 0);
    picload(exedir + u8"graphic\\ie_scroll.bmp"s);
    gsel(0);
    windowshadow = 1;
    snd(92);
    drawmenu(2);
    ww = limit(windoww - 90, windoww - 90, 720);
    wh = 440;
    wx = (windoww - ww) / 2 + inf_screenx;
    wy = winposy(wh);
    windowanime(wx, wy, ww, wh, 10, 4);
    s = lang(u8"何かキーを押すと閉じる"s, u8"Hit any key to close"s);
    showscroll(wx, wy, ww, wh);
    net_read();
    buff = "";
    notesel(buff);
    header = instr(netbuf, 0, u8"<!--START-->"s) + 13;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            s = "";
            tail = instr(netbuf, header, u8"%"s);
            if (tail == -1)
            {
                break;
            }
            header += tail + 1;
            tail = instr(netbuf, header, u8"%"s);
            s += strmid(netbuf, header, tail) + u8"  "s;
            header += tail + 1;
            tail = instr(netbuf, header, u8"%"s);
            s += strmid(netbuf, header + 4, tail - 4);
            header += tail + 1;
            tail = instr(netbuf, header, u8"%"s);
            header += tail + 2;
            s += u8"\n"s;
            buff += ""s + s;
        }
    }
    font(lang(cfg_font1, cfg_font2), 13 - en * 2, 0);
    color(30, 20, 10);
    i = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
        {
            if (i >= 20)
            {
                break;
            }
            noteget(s, cnt);
            if (en)
            {
                cnv_str(s, u8"&quot;"s, u8"\""s);
            }
            if (s == ""s)
            {
                if (cnt == 0)
                {
                    s = u8"No new messages received."s;
                }
                break;
            }
            talk_conv(s, (ww - 110 - en * 50) / 7);
            i += stat;
            pos(wx + 48, (19 - i) * 16 + wy + 48);
            mes(s);
            ++i;
        }
    }
    redraw(1);
label_2708_internal:
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    label_2710();
                    return;
                }
                if (curmenu == 1)
                {
                    label_1972();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2707();
                    return;
                }
            }
        }
    }
    if (key != ""s)
    {
        label_1419();
        label_2743(false);
    }
    goto label_2708_internal;
}
void label_2710()
{
    curmenu = 0;
    windowshadow = 1;
    key_list(0) = key_enter;
    keyrange = 0;
    pagesize = 0;
    redraw(0);
    wx = inf_msgx - 2;
    wy = inf_msgy - (inf_maxlog - 3) * inf_msgspace - 1;
    ww = windoww - inf_msgx + 6;
    wh(0) = (inf_maxlog - 3) * inf_msgspace;
    wh(1) = 1;
    wh(2) = -1;
    snd(93);
    showtitle(
        lang(u8"過去のメッセージ"s, u8"Log"s),
        lang(u8"何かキーを押すと閉じる"s, u8"Hit any key to close"s),
        236,
        1);
    drawmenu(2);
    windowanimecorner(wx, wy, ww, wh, 8, 4);
    if (cfg_exlog)
    {
        p = (windoww - inf_msgx) / 192;
        window2(wx, wy, ww, wh, 1, -1);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (inf_maxlog - 3); cnt < cnt_end; ++cnt)
            {
                cnt2 = cnt;
                pos(cnt);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (p + 1); cnt < cnt_end; ++cnt)
                    {
                        if (cnt == p)
                        {
                            x = (windoww - inf_msgx) % 192;
                        }
                        else
                        {
                            x = 192;
                        }
                        pos(cnt * 192 + inf_msgx,
                            inf_msgy - (cnt2 + 1) * inf_msgspace);
                        gcopy(
                            3,
                            496,
                            536 + cnt2 % 4 * inf_msgspace,
                            x,
                            inf_msgspace);
                    }
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p + 1); cnt < cnt_end; ++cnt)
            {
                if (cnt == p)
                {
                    sx = (windoww - inf_msgx) % 192;
                }
                else
                {
                    sx = 192;
                }
                pos(cnt * 192 + inf_msgx, inf_msgy);
                gcopy(3, 496, 528, sx, 6);
            }
        }
        gsel(4);
        gmode(0);
        color(0, 0, 0);
        boxf();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (inf_maxlog - 3); cnt < cnt_end; ++cnt)
            {
                p = msgline - cnt - 3;
                if (p < 0)
                {
                    p += inf_maxlog;
                }
                else
                {
                    if (p >= inf_maxlog)
                    {
                        p -= inf_maxlog;
                    }
                }
                if (p < 0)
                {
                    continue;
                }
                pos(inf_msgx, inf_msgy - cnt * inf_msgspace);
                gcopy(8, 0, p * inf_msgspace, windoww - inf_msgx, inf_msgspace);
            }
        }
        gsel(0);
        gmode(2);
        pos(0, -3);
        gcopy(4, 0, 0, windoww, inf_msgy);
    }
    else
    {
        gsel(4);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                pos(cnt % 4 * 180, cnt / 4 * 300);
                picload(exedir + u8"\\graphic\\g"s + (cnt + 1) + u8".bmp"s, 1);
            }
        }
        gsel(0);
        s(0) = lang(u8"過去のメッセージ"s, u8"Log"s);
        s(1) = lang(u8"何かキーを押すと閉じる"s, u8"Hit any key to close"s);
        x = windoww - 90;
        display_window((windoww - x) / 2 + inf_screenx, winposy(432), x, 432);
        display_topic(
            lang(u8"メッセージログの内容"s, u8"Message"s), wx + 28, wy + 30);
        ++cmbg;
        x = ww / 5 * 2;
        y = wh - 80;
        gmode(4, 180, 300, 50);
        pos(wx + ww / 4, wy + wh / 2);
        grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
        gmode(2);
        font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                p = msgline - cnt;
                if (p < 0)
                {
                    p += inf_maxlog;
                }
                else
                {
                    if (p >= inf_maxlog)
                    {
                        p -= inf_maxlog;
                    }
                }
                if (p < 0)
                {
                    continue;
                }
                pos(wx + 28, (19 - cnt) * 16 + wy + 58);
                mes(msg(p));
            }
        }
    }
    redraw(1);
label_2711_internal:
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (menucycle == 1)
    {
        if (key == key_next || key == key_prev)
        {
            p = curmenu;
            if (key == key_next)
            {
                ++curmenu;
                if (curmenu > 2)
                {
                    curmenu = 0;
                }
            }
            if (key == key_prev)
            {
                --curmenu;
                if (curmenu < 0)
                {
                    curmenu = 2;
                }
            }
            key = "";
            if (p != curmenu)
            {
                screenupdate = -1;
                label_1419();
                if (curmenu == 0)
                {
                    label_2710();
                    return;
                }
                if (curmenu == 1)
                {
                    label_1972();
                    return;
                }
                if (curmenu == 2)
                {
                    label_2707();
                    return;
                }
            }
        }
    }
    if (key != ""s)
    {
        label_1419();
        label_2743(false);
    }
    goto label_2711_internal;
}
void label_2713()
{
    notesel(note_buff);
    noteload(exedir + u8"\\config.txt"s);
    f = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (instr(s, 0, valn) == -1)
            {
                continue;
            }
            i = 1;
            p = 0;
            {
                int cnt = 0;
                for (;; ++cnt)
                {
                    p(2) = instr(s, p, u8"\""s);
                    if (p(2) == -1)
                    {
                        break;
                    }
                    p += p(2);
                    p(1) = instr(s, p + 1, u8"\""s) + p + 1;
                    if (p(1) == -1)
                    {
                        break;
                    }
                    s = strmid(s, 0, p + 1) + valn(i) + strmid(s, p(1), 999);
                    p += strlen(valn(i)) + 2;
                    ++i;
                }
            }
            noteadd(s, cnt, 1);
            f = 1;
            break;
        }
    }
    if (f == 0)
    {
        noteadd(""s + valn + u8" \""s + valn(1) + u8"\""s);
    }
    notesave(exedir + u8"\\config.txt"s);
    return;
}
void label_2714()
{
    SDIM3(jkey, 2, 12);
    return;
}
void label_2715()
{
    key_select(0) = u8"a"s;
    key_select(1) = u8"b"s;
    key_select(2) = u8"c"s;
    key_select(3) = u8"d"s;
    key_select(4) = u8"e"s;
    key_select(5) = u8"f"s;
    key_select(6) = u8"g"s;
    key_select(7) = u8"h"s;
    key_select(8) = u8"i"s;
    key_select(9) = u8"j"s;
    key_select(10) = u8"k"s;
    key_select(11) = u8"l"s;
    key_select(12) = u8"m"s;
    key_select(13) = u8"n"s;
    key_select(14) = u8"o"s;
    key_select(15) = u8"p"s;
    key_select(16) = u8"q"s;
    key_select(17) = u8"r"s;
    key_select(18) = u8"s"s;
    notesel(note_buff);
    noteload(exedir + u8"\\config.txt"s);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (instr(s, 0, u8"language."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_language = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"fullscreen."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_fullscreen = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"music."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_music = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"sound."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_sound = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"extraRace."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_extrarace = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"joypad."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_joypad = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"msg_box."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_msg_box = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"msgLine."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_msgline = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"tileSize."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_tiles = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"fontSize ."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_mesfont = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"infVerType."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_vertype = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"windowX."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                windowx = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"windowY."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                windowy = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"windowW."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                windoww = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"windowH."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                windowh = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"clockX."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_clockx = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"clockW."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_clockw = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"clockH."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                inf_clockh = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"defLoadFolder."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                defload = rtvaln;
                continue;
            }
            if (instr(s, 0, u8"charamake_wiz."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                cfg_wizard = elona_int(rtvaln);
                continue;
            }
        }
    }
    return;
}
void label_2719()
{
    notesel(note_buff);
    noteload(exedir + u8"\\user\\export.txt"s);
    usertitle = "";
    usermsg = "";
    userpassword = u8"nyaa"s;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end; ++cnt)
        {
            noteget(s, cnt);
            if (instr(s, 0, u8"room_title."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                usertitle = rtvaln;
                continue;
            }
            if (instr(s, 0, u8"welcome_msg."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                usermsg = rtvaln;
                continue;
            }
            if (instr(s, 0, u8"pet_relation."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                userrelation = elona_int(rtvaln);
                continue;
            }
            if (instr(s, 0, u8"password."s) != -1)
            {
                i = 0;
                p = 0;
                {
                    int cnt = 0;
                    for (;; ++cnt)
                    {
                        p(2) = instr(s, p, u8"\""s);
                        if (p(2) == -1)
                        {
                            break;
                        }
                        p += p(2);
                        p(1) = instr(s, p + 1, u8"\""s);
                        if (p(1) == -1)
                        {
                            break;
                        }
                        rtvaln(i) = strmid(s, p + 1, p(1));
                        p += strlen(rtvaln(i)) + 2;
                        ++i;
                    }
                }
                userpassword = rtvaln;
                continue;
            }
        }
    }
    return;
}
void label_2720()
{
    notesel(headtemp);
    noteget(s, 1);
    username = ""s + s;
    noteget(s, 5);
    usermsg = ""s + s;
    noteget(s, 6);
    userrelation = elona_int(s);
    return;
}
int cnvjkey(const std::string& prm_1092)
{
    int p_at_m198 = 0;
    p_at_m198 = -2;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (12); cnt < cnt_end; ++cnt)
        {
            if (prm_1092 == jkey(cnt))
            {
                p_at_m198 = cnt;
                break;
            }
        }
    }
    stat = p_at_m198 + 1;
    return stat;
}
void label_2727()
{
    snd(59);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\book.bmp"s, 1);
    gsel(7);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\g1.bmp"s, 0);
    gsel(0);
    listmax = 0;
    page = 0;
    pagesize = 12;
    cs = 0;
    cc = 0;
    notesel(buff);
    noteload(lang(u8"scene1.hsp"s, u8"scene2.hsp"s));
    p = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
        {
            s = u8"{"s + cnt + u8"}"s;
            p = instr(buff, 0, s);
            if (p != -1)
            {
                if (cnt <= gdata(36))
                {
                    list(0, listmax) = cnt;
                    list(1, listmax) = p;
                    ++listmax;
                }
            }
        }
    }
    redraw(0);
    txt(lang(
        u8"どのシーンを再生する？"s, u8"Which scene do you want to replay?"s));
label_2728_internal:
    redraw(0);
    cs_bk = -1;
    pagemax = (listmax - 1) / pagesize;
    if (page < 0)
    {
        page = pagemax;
    }
    else
    {
        if (page > pagemax)
        {
            page = 0;
        }
    }
    wx = (windoww - 720) / 2 + inf_screenx;
    wy = winposy(468);
label_2729_internal:
    redraw(0);
    pos(wx, wy);
    gcopy(4, 0, 0, 736, 448);
    x = 240;
    y = 320;
    gmode(4, 180, 300, 100);
    color(0, 0, 0);
    pos(wx + 190, wy + 220);
    grotate(7, 0, 0, 0, x, y);
    gmode(2);
    keyrange = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            key_list(cnt) = key_select(cnt);
            ++keyrange;
            display_key(wx + 394, wy + 91 + cnt * 22 - 2, cnt);
        }
    }
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 6);
    color(0, 0, 0);
    pos(wx + 90, wy + 50);
    mes(u8"Elona - Scene playback"s);
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 0);
    color(0, 0, 0);
    pos(wx + 390, wy + 50);
    mes(lang(
        u8"アンロックされたシーンを再生できます。\nシーンNoは連続していません。"s,
        u8"You can play the unlocked scenes."s));
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    cs_listbk();
    {
        int cnt = 0;
        for (int cnt_end = cnt + (pagesize); cnt < cnt_end; ++cnt)
        {
            p = pagesize * page + cnt;
            if (p >= listmax)
            {
                break;
            }
            i = list(0, p);
            cs_list(
                cnt,
                lang(u8"シーン No."s, u8"Scene No. "s) + i,
                wx + 424,
                wy + 91 + cnt * 22 - 1,
                19);
        }
    }
    font(lang(cfg_font1, cfg_font2), 12 - en * 2, 1);
    color(0, 0, 0);
    pos(wx + 500, wy + 375);
    mes(u8"- "s + (page + 1) + u8" -"s);
    if (page < pagemax)
    {
        pos(wx + 590, wy + 375);
        mes(u8"(more)"s);
    }
    if (keyrange != 0)
    {
        cs_bk = cs;
    }
    redraw(1);
    await(cfg_wait1);
    key_check();
    cursor_check();
    p = -1;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (keyrange); cnt < cnt_end; ++cnt)
        {
            if (key == key_select(cnt))
            {
                p = list(0, pagesize * page + cnt);
                break;
            }
        }
    }
    if (p != -1)
    {
        sceneid = p;
        label_2680();
        screenupdate = -1;
        label_1417();
        txtnew();
        txt(lang(u8"シーンの再生を終えた。"s, u8"The scene has been played."s));
        label_2727();
        return;
    }
    if (key == key_pageup)
    {
        if (pagemax != 0)
        {
            snd(71);
            ++page;
            goto label_2728_internal;
        }
    }
    if (key == key_pagedown)
    {
        if (pagemax != 0)
        {
            snd(71);
            --page;
            goto label_2728_internal;
        }
    }
    if (key == key_cancel || key == key_enter)
    {
        label_0068();
        label_1419();
        label_2743(false);
    }
    goto label_2729_internal;
}
void label_2731()
{
    gdata(10) = 517;
    gdata(11) = 8;
    gdata(12) = 12;
    gdata(13) = 16;
    gdata(14) = 10;
    quickpage = 1;
    if (dirinfo(4) == u8"medit"s)
    {
        medit = 1;
        std::exit(1);
        return;
    }
    if (defload != ""s)
    {
        exist(exedir + u8"save\\"s + defload + u8"\\header.txt"s);
        if (strsize == -1)
        {
            exist(exedir + u8"save\\sav_"s + defload + u8"\\header.txt"s);
            if (strsize != -1)
            {
                defload = u8"sav_"s + defload;
            }
            else
            {
                defload = "";
            }
        }
        if (defload == ""s)
        {
            dialog(u8"Invalid defLoadFolder. name"s);
        }
        else
        {
            playerid = defload;
            mode = 3;
            music = 0;
            label_2732();
            return;
        }
    }
    label_2115();
    return;
}
void label_2732()
{
    mtilefilecur = -1;
    firstturn = 1;
    msgtemp = u8"  Lafrontier presents Elona ver 1.22. Welcome traveler! "s;
    if (cfg_net)
    {
        label_1398();
    }
    if (mode == 4)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
            {
                gdata(120 + cnt) = 5000;
            }
        }
        gdata(96) = elona_int(elona_double(u8"1.22"s) * 1000);
        gdata(41) = 424;
        gdata(42) = 300;
        gdata(43) = 631;
        gdata(16) = 1000;
        gdata(27) = 100;
        dbgchara = 23;
        playerid = u8"sav_noa"s;
        gdata(5) = 22;
        gdata(6) = 21;
        gdata(19) = -1;
        gdata(8) = rnd(800) + 2;
        gdata(9) = rnd(200) + 2;
        gdata(20) = 4;
        gdata(22) = 0;
        gdata(26) = 7;
        mapstartx = 22;
        mapstarty = 21;
        gdata(20) = 5;
        gdata(22) = 1;
        gdata(26) = 7;
        mapstartx = 10;
        mapstarty = 23;
        initlv = 50;
        rc = 0;
        flt(100);
        characreate(0, 84, -3, 0);
        label_1536();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
            {
            }
        }
        gdata(10) = 517;
        gdata(11) = 12;
        gdata(12) = 30;
        gdata(13) = 1;
        gdata(14) = 10;
        gdata(36) = 50;
        gdata(257) = 1;
        adata(30, 7) = 4;
        gdata(850) = adata(30, gdata(20));
        gdata(93) = 2;
        gdata(811) = 1000;
        gdata(97) = 1000;
        gdata(24) = 0;
        gdata(814) = 2;
        gdata(25) = 1000;
        cdata(61, 0) = 2;
        cdata(62, 0) = 1000;
        cdata(63, 0) = 1000;
        gdata(453) = 1000;
        cdata(30, 0) += 1000000;
        cdata(31, 0) = 30;
        cdata(34, 0) = 65000;
        gdata(252) = 100;
        r1 = 0;
        label_1477();
        flt();
        itemcreate(0, 284, -1, -1, 0);
        inv(0, ci) = 20;
        inv(17, ci) = 1;
        flt();
        itemcreate(0, 127, -1, -1, 0);
        inv(0, ci) = 20;
        inv(17, ci) = 1;
        flt();
        itemcreate(0, 617, -1, -1, 0);
        inv(0, ci) = 20;
        flt();
        itemcreate(0, 671, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 749, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 748, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 601, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 342, -1, -1, 0);
        inv(0, ci) = 12;
        flt();
        itemcreate(0, 343, -1, -1, 0);
        inv(0, ci) = 50;
        flt();
        itemcreate(0, 519, -1, -1, 0);
        inv(0, ci) = 50;
        inv(22, ci) = 4;
        flt();
        itemcreate(0, 622, -1, -1, 0);
        inv(0, ci) = 50000;
        flt();
        itemcreate(0, 603, -1, -1, 0);
        inv(0, ci) = 5;
        flt();
        itemcreate(0, 620, -1, -1, 0);
        inv(0, ci) = 5;
        flt();
        itemcreate(0, 736, -1, -1, 0);
        inv(0, ci) = 5;
        flt();
        itemcreate(0, 566, -1, -1, 0);
        inv(0, ci) = 5;
        flt();
        itemcreate(0, 516, -1, -1, 0);
        inv(0, ci) = 5;
        inv(17, ci) = 1;
        flt();
        itemcreate(0, 262, -1, -1, 0);
        inv(0, ci) = 5;
        flt();
        itemcreate(0, 632, -1, -1, 0);
        inv(0, ci) = 10;
        inv(17, ci) = -1;
        flt();
        itemcreate(0, 632, -1, -1, 0);
        inv(0, ci) = 10;
        inv(17, ci) = 0;
        flt();
        itemcreate(0, 204, -1, -1, 0);
        inv(23, ci) = 330;
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 636, -1, -1, 0);
        inv(0, ci) = 3;
        inv(17, ci) = 0;
        flt();
        itemcreate(0, 342, -1, -1, 0);
        inv(9, ci) = 100;
        flt();
        itemcreate(0, 350, -1, -1, 0);
        inv(0, ci) = 20;
        flt();
        itemcreate(0, 707, -1, -1, 0);
        flt();
        itemcreate(0, 719, -1, -1, 0);
        flt();
        itemcreate(0, 666, -1, -1, 0);
        flt();
        itemcreate(0, 686, -1, -1, 0);
        flt();
        itemcreate(0, 721, -1, -1, 0);
        flt();
        itemcreate(0, 772, -1, -1, 0);
        flt();
        itemcreate(0, 773, -1, -1, 0);
        flt();
        itemcreate(0, 774, -1, -1, 0);
        flt();
        itemcreate(0, 775, -1, -1, 0);
        flt();
        itemcreate(0, 776, -1, -1, 0);
        flt();
        itemcreate(0, 777, -1, -1, 0);
        flt();
        itemcreate(0, 778, -1, -1, 0);
        flt();
        itemcreate(0, 779, -1, -1, 0);
        flt();
        itemcreate(0, 780, -1, -1, 0);
        flt();
        itemcreate(0, 781, -1, -1, 0);
        flt();
        itemcreate(0, 782, -1, -1, 0);
        flt();
        itemcreate(0, 784, -1, -1, 0);
        flt();
        itemcreate(0, 785, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 786, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 787, -1, -1, 0);
        flt();
        itemcreate(0, 788, -1, -1, 0);
        flt();
        itemcreate(0, 789, -1, -1, 0);
        flt();
        itemcreate(0, 790, -1, -1, 0);
        flt();
        itemcreate(0, 791, -1, -1, 0);
        flt();
        itemcreate(0, 792, -1, -1, 0);
        flt();
        itemcreate(0, 260, -1, -1, 0);
        inv(0, ci) = 100;
        gdata(41) = 140789;
        gdata(42) = 140790;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1200); cnt < cnt_end; ++cnt)
            {
                recipememory(cnt) = 1;
            }
        }
        flt();
        itemcreate(0, 783, -1, -1, 0);
        flt();
        itemcreate(0, 783, -1, -1, 0);
        flt();
        itemcreate(0, 783, -1, -1, 0);
        inv(23, ci) = 1187;
        flt();
        itemcreate(0, 783, -1, -1, 0);
        inv(23, ci) = 955;
        itemcreate(0, 672, -1, -1, 0);
        inv(25, ci) = 164;
        flt();
        itemcreate(0, 566, -1, -1, 0);
        inv(0, ci) = 10;
        inv(17, ci) = 1;
        flt();
        itemcreate(0, 566, -1, -1, 0);
        inv(0, ci) = 10;
        inv(17, ci) = -1;
        flt();
        itemcreate(0, 566, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 55, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 385, -1, -1, 0);
        inv(0, ci) = 10;
        flt();
        itemcreate(0, 672, -1, -1, 0);
        inv(0, ci) = 10;
        inv(25, ci) = 169;
        flt();
        itemcreate(0, 672, -1, -1, 0);
        inv(0, ci) = 10;
        inv(25, ci) = 162;
        flt();
        itemcreate(0, 771, -1, -1, 0);
        inv(0, ci) = 100;
        flt();
        itemcreate(0, 761, -1, -1, 0);
        flt();
        itemcreate(0, 769, -1, -1, 0);
        flt();
        itemcreate(0, 763, -1, -1, 0);
        flt();
        itemcreate(0, 764, -1, -1, 0);
        flt();
        itemcreate(0, 768, -1, -1, 0);
        flt();
        itemcreate(0, 766, -1, -1, 0);
        flt();
        itemcreate(0, 752, -1, -1, 0);
        if (stat != 0)
        {
            inv(27, ci) = 240;
            inv(0, ci) = 50;
        }
        flt();
        itemcreate(0, 755, -1, -1, 0);
        if (stat != 0)
        {
            inv(27, ci) = 240;
            inv(0, ci) = 50;
        }
        flt();
        itemcreate(0, 756, -1, -1, 0);
        if (stat != 0)
        {
            inv(27, ci) = 240;
            inv(0, ci) = 50;
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
            {
                flt(50, 5);
                flttypemajor = 56000;
                itemcreate(0, -1, -1, -1, 0);
                flt(50, 5);
                flttypemajor = 34000;
                itemcreate(0, -1, -1, -1, 0);
                flt(50, 5);
                flttypemajor = 32000;
                itemcreate(0, -1, -1, -1, 0);
            }
        }
        cbitmod(20, 0, 1);
        mode = 0;
        label_1521();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (55); cnt < cnt_end; ++cnt)
            {
                mat(cnt) = 200;
            }
        }
        label_2660();
        create_pcpic(0, 1);
        cdatan(1, 0) = random_title();
        cdatan(0, 0) = randomname();
        mode = 2;
    }
    if (mode == 5)
    {
        gdata(10) = 517;
        gdata(11) = 8;
        gdata(12) = 12;
        gdata(13) = 1;
        gdata(14) = 10;
        gdata(5) = 22;
        gdata(6) = 21;
        gdata(19) = -1;
        gdata(850) = 4;
        ghelp = 1;
        gdata(20) = 7;
        gdata(22) = 1;
        gdata(26) = 4;
        gdata(96) = elona_int(elona_double(u8"1.22"s) * 1000);
        gdata(17) = 3;
        gdata(18) = 6;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (20); cnt < cnt_end; ++cnt)
            {
                gdata(120 + cnt) = 10000;
            }
        }
        label_2660();
        mode = 2;
        evadd(2);
        evadd(24);
        sceneid = 0;
        label_2680();
    }
    if (mode == 2)
    {
        gdata(16) = 1000;
        gdata(27) = 100;
        label_1920();
    }
    if (mode == 3)
    {
        label_2112();
    }
    label_2124();
    label_17402();
    return;
}
void label_2733()
{
redo:

    sound = 0;
    ct = 0;
    {
        int cnt = 0;
        for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
        {
            if (mef(0, cnt) == 0)
            {
                break;
            }
            if (mef(0, cnt) == 5)
            {
                if (mdata(14) == 2)
                {
                    if (mdata(6) != 1)
                    {
                        if (gdata(17) == 3 || gdata(17) == 4)
                        {
                            delmef(cnt);
                            continue;
                        }
                        dx = mef(2, cnt);
                        dy = mef(3, cnt);
                        i = mef(6, cnt);
                        p = 0;
                        if (rnd(35) == 0)
                        {
                            p = 3;
                            if (dist(dx, dy, cdata(1, 0), cdata(2, 0)) < 6)
                            {
                                sound = 6;
                            }
                        }
                        {
                            int cnt = 0;
                            for (int cnt_end = cnt + (p); cnt < cnt_end; ++cnt)
                            {
                                x = rnd(2) + dx - rnd(2);
                                y = rnd(2) + dy - rnd(2);
                                if (x < 0 || y < 0 || x >= mdata(0)
                                    || y >= mdata(1))
                                {
                                    f = 0;
                                    continue;
                                }
                                if (chipm(7, map(x, y, 0)) && 4)
                                {
                                    map(x, y, 0) = 37;
                                    cnt = 0 - 1;
                                    continue;
                                }
                                addmef(x, y, 5, 24, rnd(15) + 20, 50, i);
                                mapitem_fire(x, y);
                            }
                        }
                    }
                }
            }
            if (mef(0, cnt) == 7)
            {
                txtef(3);
                txt(lang(u8" *"s, u8"*"s) + mef(4, cnt)
                    + lang(u8"* "s, u8"*"s));
            }
            if (mef(4, cnt) != -1)
            {
                --mef(4, cnt);
                if (mef(4, cnt) == 0)
                {
                    delmef(cnt);
                }
            }
        }
    }
    if (sound != 0)
    {
        snd(sound);
    }
    gspd = cdata(11, 0) * (100 + cdata(37, 0)) / 100;
    if (gspd < 10)
    {
        gspd = 10;
    }
    turncost = (mdata(9) - cdata(10, 0)) / gspd + 1;
    if (evnum != 0)
    {
        evproc = 1;
        label_2754();
        evproc = 0;
        --evnum;
        evlist(evnum) = 0;
        if (chatteleport == 1)
        {
            chatteleport = 0;
            label_1737();
            return;
        }
        label_2733();
        return;
    }
    if (cdata(0, 0) != 1)
    {
        label_2752();
        return;
    }
    if (mdata(6) == 1)
    {
        if (cdata(141, 0) > 2)
        {
            cdata(10, 0) = mdata(9);
            goto label_2734_internal;
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
        {
            if (cdata(0, cnt) != 1)
            {
                continue;
            }
            spd = cdata(11, cnt) * (100 + cdata(37, cnt)) / 100;
            if (spd < 10)
            {
                spd = 10;
            }
            cdata(10, cnt) += spd * turncost;
        }
    }
label_2734_internal:
    gdata(15) += turncost / 5 + 1;
    if (gdata(15) >= 60)
    {
        ++gdata(4);
        cc = 0;
        if (gdata(4) % 20 == 0)
        {
            label_1736();
        }
        if (gdata(4) % 10 == 1)
        {
            label_1580();
        }
        gdata(14) += gdata(15) / 60;
        if (gdata(84) > 0)
        {
            gdata(84) -= gdata(15) / 60;
            if (gdata(87) > gdata(84) / 10)
            {
                txtef(9);
                txt(lang(
                    u8"クエスト[残り"s + (gdata(84) + 1) + u8"分]"s,
                    ""s + (gdata(84) + 1) + u8" min left for the quest."s));
                gdata(87) = gdata(84) / 10;
            }
            if (gdata(84) <= 0)
            {
                gdata(84) = 0;
                evadd(14);
            }
        }
        gdata(15) = gdata(15) % 60;
        if (gdata(14) >= 60)
        {
            gdata(13) += gdata(14) / 60;
            gdata(14) = gdata(14) % 60;
            label_2736();
        }
    }
    try
    {
        label_2737();
    }
    catch (elona_turn_sequence&)
    {
        goto redo;
    }
    return;
}
void label_2735()
{
    if (gdata(17) == 2)
    {
        if (gdata(5) < 65 && gdata(6) > 10)
        {
            gdata(17) = 3;
            envonly = 1;
            label_0068();
            gdata(18) += 3;
            txt(lang(u8"天候が変わった。"s, u8"The weather changes."s));
        }
    }
    if (gdata(17) == 4 || gdata(17) == 3)
    {
        if (gdata(5) > 65 || gdata(6) < 10)
        {
            gdata(17) = 2;
            envonly = 1;
            label_0068();
            gdata(18) += 3;
            txt(lang(u8"天候が変わった。"s, u8"The weather changes."s));
        }
    }
    return;
}
void label_2736()
{
    if (adata(16, gdata(20)) == 101)
    {
        label_1728();
    }
    if (gdata(20) == 7)
    {
        label_1730();
    }
    if (mdata(6) == 1)
    {
        gdata(5) = cdata(1, 0);
        gdata(6) = cdata(2, 0);
    }
    --gdata(18);
    label_2735();
    if (gdata(18) < 0)
    {
        gdata(18) = rnd(22) + 2;
        p = gdata(17);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
            {
                if (gdata(11) % 3 == 0)
                {
                    if (gdata(12) >= 1 && gdata(12) <= 10)
                    {
                        if (gdata(806) != gdata(11))
                        {
                            if (rnd(15) < gdata(12) + 5)
                            {
                                gdata(17) = 1;
                                txtef(3);
                                txt(lang(
                                    u8"エーテルの風が吹き始めた。すぐに避難しなくては。"s,
                                    u8"Ether Wind starts to blow. You need to find a shelter!"s));
                                gdata(806) = gdata(11);
                                gdata(18) = rnd(24) + 24;
                                break;
                            }
                        }
                    }
                }
                if (p == 0)
                {
                    weatherbk = 0;
                    if (trait(209) != 0)
                    {
                        if (rnd(4) == 0)
                        {
                            gdata(17) = 3;
                            txt(lang(
                                u8"あなたは雨雲を引き寄せた。"s,
                                u8"You draw a rain cloud."s));
                            break;
                        }
                    }
                    if (gdata(5) > 65 || gdata(6) < 10)
                    {
                        if (rnd(2) == 0)
                        {
                            gdata(17) = 2;
                            txt(lang(
                                u8"雪が降ってきた。"s,
                                u8"It starts to snow."s));
                            break;
                        }
                    }
                    else
                    {
                        if (rnd(10) == 0)
                        {
                            gdata(17) = 3;
                            txt(lang(
                                u8"雨が降り出した。"s,
                                u8"It starts to rain."s));
                            break;
                        }
                        if (rnd(40) == 0)
                        {
                            gdata(17) = 4;
                            txt(lang(
                                u8"突然どしゃぶりになった。"s,
                                u8"Suddenly, rain begins to pour down from the sky."s));
                            break;
                        }
                        if (rnd(60) == 0)
                        {
                            gdata(17) = 2;
                            txt(lang(
                                u8"雪が降ってきた。"s,
                                u8"It starts to snow."s));
                            break;
                        }
                    }
                }
                if (p == 3)
                {
                    if (rnd(4) == 0)
                    {
                        gdata(17) = 0;
                        txt(lang(u8"雨は止んだ。"s, u8"It stops raining."s));
                        break;
                    }
                    if (rnd(15) == 0)
                    {
                        gdata(17) = 4;
                        txt(lang(
                            u8"雨が本格的に降り出した。"s,
                            u8"The rain becomes heavier."s));
                        break;
                    }
                }
                if (p == 4)
                {
                    if (rnd(3) == 0)
                    {
                        gdata(17) = 3;
                        txt(lang(
                            u8"雨は小降りになった。"s,
                            u8"The rain becomes lighter."s));
                        break;
                    }
                }
                if (p == 1)
                {
                    if (rnd(2) == 0)
                    {
                        gdata(17) = 0;
                        txt(lang(
                            u8"エーテルの風は止んだ。"s,
                            u8"The Ether Wind dissipates."s));
                        break;
                    }
                }
                if (p == 2)
                {
                    if (rnd(3) == 0)
                    {
                        gdata(17) = 0;
                        txt(lang(u8"雪は止んだ。"s, u8"It stops raining."s));
                        break;
                    }
                }
            }
        }
        if (gdata(17) == 4)
        {
            if (cfg_extrahelp)
            {
                if (gdata(211) == 0)
                {
                    if (mode == 0)
                    {
                        if (cdata(141, 0) == 0)
                        {
                            gdata(211) = 1;
                            ghelp = 11;
                            label_2701();
                        }
                    }
                }
            }
        }
        if (gdata(17) == 2)
        {
            if (cfg_extrahelp)
            {
                if (gdata(212) == 0)
                {
                    if (mode == 0)
                    {
                        if (cdata(141, 0) == 0)
                        {
                            gdata(212) = 1;
                            ghelp = 12;
                            label_2701();
                        }
                    }
                }
            }
        }
        if (gdata(17) == 1)
        {
            if (cfg_extrahelp)
            {
                if (gdata(213) == 0)
                {
                    if (mode == 0)
                    {
                        if (cdata(141, 0) == 0)
                        {
                            gdata(213) = 1;
                            ghelp = 13;
                            label_2701();
                        }
                    }
                }
            }
        }
        if (p != gdata(17))
        {
            envonly = 1;
            label_0068();
        }
    }
    label_1746();
    label_2662();
    label_1576();
    if (mdata(6) == 1)
    {
        if (rnd(3) == 0)
        {
            ++gdata(90);
        }
        if (rnd(15) == 0)
        {
            if (mode == 0)
            {
                txt(lang(u8"仮眠をとった。"s, u8"You take a nap."s));
                gdata(90) -= 3;
                if (gdata(90) < 0)
                {
                    gdata(90) = 0;
                }
            }
        }
    }
    else
    {
        if (gdata(20) != 30)
        {
            ++gdata(90);
        }
    }
    if (gdata(13) == 6)
    {
        txtef(5);
        txt(lang(u8"夜が明けた。"s, u8"Day breaks."s));
    }
    if (gdata(90) >= 15)
    {
        if (cfg_extrahelp)
        {
            if (gdata(209) == 0)
            {
                if (mode == 0)
                {
                    if (cdata(141, 0) == 0)
                    {
                        gdata(209) = 1;
                        ghelp = 9;
                        label_2701();
                    }
                }
            }
        }
    }
    if (cdata(22, 0) < 5000)
    {
        if (cfg_extrahelp)
        {
            if (gdata(210) == 0)
            {
                if (mode == 0)
                {
                    if (cdata(141, 0) == 0)
                    {
                        gdata(210) = 1;
                        ghelp = 10;
                        label_2701();
                    }
                }
            }
        }
    }
    if (gdata(13) >= 24)
    {
        if (gdata(814) < 3)
        {
            if (rnd(8 + gdata(814) * 5) == 0)
            {
                ++gdata(814);
            }
        }
        txtef(5);
        txt(lang(
            u8"一日が終わり、日付が変わった。"s,
            u8"A day passes and a new day begins."s));
        label_1724();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (9); cnt < cnt_end; ++cnt)
            {
                p = 120 + cnt;
                if (gdata(p) >= 10000)
                {
                    gdata(p) = 10000;
                    continue;
                }
                if (cnt == 3 || cnt == 4 || cnt == 5 || cnt == 8)
                {
                    continue;
                }
                --gdata(140 + cnt);
                if (gdata(140 + cnt) <= 0)
                {
                    modrank(cnt, (gdata(p) / 12 + 100) * -1);
                    gdata(140 + cnt) = ranknorma(cnt);
                }
            }
        }
        snd(74);
        evadd(10);
        gdata(7) += gdata(13) / 24;
        gdata(12) += gdata(13) / 24;
        gdata(13) = gdata(13) % 24;
        if (gdata(12) >= 31)
        {
            ++gdata(11);
            gdata(12) = gdata(12) - 30;
            if (gdata(11) % 2 == 0)
            {
                ++gdata(260);
            }
        }
        if (gdata(11) >= 13)
        {
            ++gdata(10);
            gdata(11) = 1;
            gdata(825) = 0;
            gdata(95) = limit(gdata(95) - 1, 0, 10);
            gdata(851) = limit(gdata(851) - 1, 0, 999999);
        }
        if (gdata(12) == 1 || gdata(12) == 15)
        {
            label_1901();
        }
        if (gdata(453) == 1 || gdata(453) == 3 || gdata(453) == 5
            || gdata(453) == 7 || gdata(453) == 9)
        {
            if (adata(16, gdata(20)) != 33)
            {
                if (rnd(20) == 0)
                {
                    ++gdata(453);
                    snd(44);
                    txtef(2);
                    txt(lang(
                        u8"ジャーナルが更新された。"s,
                        u8"Your journal has been updated."s));
                }
            }
        }
    }
    if (mode == 0)
    {
        if (mdata(6) == 1)
        {
            if (rnd(40) == 0)
            {
                --cdata(62, 0);
            }
            cdata(63, 0) += 4;
        }
        else
        {
            if (rnd(5) == 0)
            {
                --cdata(62, 0);
            }
            cdata(63, 0) += 32;
        }
    }
    if (cdata(62, 0) < 0)
    {
        cdata(62, 0) = 0;
    }
    if (cdata(141, 0) != 0)
    {
        if (cdata(140, 0) != 3)
        {
            label_1419();
        }
    }
    if (gdata(20) != 30)
    {
        if (gdata(20) != 41)
        {
            label_1893();
        }
    }
    return;
}
void label_2737(bool label_2738_flg)
{
    if (label_2738_flg)
    {
        if (ct >= 245)
        {
            throw elona_turn_sequence{};
            return;
        }
        if (cdata(0, ct) != 1)
        {
            ++ct;
            label_2737();
            return;
        }
        if (cdata(10, ct) >= mdata(9))
        {
            cdata(10, ct) -= mdata(9);
        }
        else
        {
            ++ct;
            label_2737();
            return;
        }
    }
label_2738:
    cc = ct;
    cdata(37, cc) = cdata(39, cc);
    ++cdata(26, cc);
    label_27412();
    if (ct == 0)
    {
        tnew = 1;
        pcnoise = 0;
        refreshspeed(0);
        p = cdata(26, 0) % 10;
        if (p == 1)
        {
            {
                int cnt = 0;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        r1 = cnt;
                        label_1464();
                    }
                }
            }
        }
        if (p == 2)
        {
            r1 = 0;
            label_1465();
        }
        if (p == 3)
        {
            r1 = 0;
            label_1468();
        }
        if (p == 4)
        {
            if (cdata(140, 0) == 0)
            {
                healsp(0, 2);
            }
        }
        if (gdata(63) != 0)
        {
            --gdata(63);
            if (mdata(6) == 7 || gdata(20) == 30 || gdata(20) == 41)
            {
                gdata(63) = 0;
                txt(lang(
                    u8"不思議な力が帰還を阻止した。"s,
                    u8"Strange power prevents you from returning."s));
                goto label_2740_internal;
            }
            if (gdata(63) <= 0 && evnum == 0)
            {
                f = 0;
                {
                    int cnt = 1;
                    for (int cnt_end = cnt + (15); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) != 1)
                        {
                            continue;
                        }
                        if (cbit(971, cnt) == 1)
                        {
                            f = 1;
                        }
                    }
                }
                if (f)
                {
                    txt(lang(
                        u8"今は帰還できない仲間を連れている。"s,
                        u8"One of your allies prevents you from returning."s));
                    goto label_2740_internal;
                }
                if (1 && cdata(45, 0) >= 4)
                {
                    txt(lang(
                        u8"どこからか声が聞こえた。「悪いが重量オーバーだ」"s,
                        u8"Someone shouts, \"Sorry, overweight.\""s));
                    goto label_2740_internal;
                }
                if (gdata(64) == gdata(850))
                {
                    if (gdata(20) == gdata(850))
                    {
                        txt(lang(u8"何もおきない… "s, u8"Nothing happens..."s));
                        goto label_2740_internal;
                    }
                }
                label_2080();
                if (stat == 1)
                {
                    txtmore();
                    txt(lang(
                        u8"あなたは法を犯した。"s, u8"You commit a crime."s));
                    modkarma(0, -10);
                }
                snd(72);
                txt(lang(
                    u8"あなたは次元の扉を開けた。"s,
                    u8"A dimensional door opens in front of you."s));
                if (gdata(64) == 41)
                {
                    txt(lang(
                        u8"気まぐれな時の管理者により次元は歪められた！"s,
                        u8"The capricious controller of time has changed your destination!"s));
                }
                msg_halt();
                label_1419();
                levelexitby = 2;
                label_1737();
                return;
            }
            goto label_2740_internal;
        }
    label_2740_internal:
        label_1754();
        if (cdata(0, 0) != 1)
        {
            label_2752();
            return;
        }
        if (gdata(17) == 1)
        {
            if (mdata(14) == 2)
            {
                if (rnd(2) == 0)
                {
                    if (gdata(29) == 0)
                    {
                        modcorrupt(5 + limit(gdata(4) / 20000, 0, 15));
                    }
                    else
                    {
                        if (rnd(10) == 0)
                        {
                            modcorrupt(5);
                        }
                    }
                }
                if (gdata(29) == 0 || rnd(4) == 0)
                {
                    if (rnd(2000) == 0)
                    {
                        efid = 454;
                        efp = 100;
                        tc = cc;
                        label_2176();
                    }
                }
            }
        }
        else
        {
            if (rnd(1500) == 0)
            {
                if (adata(16, gdata(20)) != 7 && gdata(20) != 30)
                {
                    modcorrupt(10);
                }
            }
        }
    }
    tc = cc;
    if (map(cdata(1, tc), cdata(2, tc), 8) != 0)
    {
        ef = map(cdata(1, tc), cdata(2, tc), 8) - 1;
        if (mef(0, ef) == 3)
        {
            if (cbit(5, tc) == 0 || cdata(262, tc) > 0)
            {
                if (sdata(63, tc) / 50 < 7)
                {
                    if (synccheck(tc, -1))
                    {
                        snd(46);
                        txt(lang(
                            name(tc) + u8"は酸に焼かれた。"s,
                            name(tc) + u8" melt"s + _s(tc) + u8"."s));
                    }
                    if (mef(6, ef) == 0)
                    {
                        if (tc != 0)
                        {
                            hostileaction(0, tc);
                        }
                    }
                    dmghp(
                        tc, rnd(mef(5, ef) / 25 + 5) + 1, -15, 63, mef(5, ef));
                    if (stat == 0)
                    {
                        check_kill(mef(6, ef), tc);
                    }
                }
            }
        }
        if (mef(0, ef) == 5)
        {
            if (synccheck(tc, -1))
            {
                snd(6);
                txt(lang(
                    name(tc) + u8"は燃えた。"s,
                    name(tc) + u8" "s + is(tc) + u8" burnt."s));
            }
            if (mef(6, ef) == 0)
            {
                if (tc != 0)
                {
                    hostileaction(0, tc);
                }
            }
            dmghp(tc, rnd(mef(5, ef) / 15 + 5) + 1, -9, 50, mef(5, ef));
            if (stat == 0)
            {
                check_kill(mef(6, ef), tc);
            }
        }
        if (mef(0, ef) == 6)
        {
            if (cbit(5, tc) == 0 || cdata(262, tc) > 0)
            {
                if (synccheck(tc, -1))
                {
                    snd(46);
                    txt(lang(
                        name(tc) + u8"は地面の液体を浴びた。"s,
                        name(tc) + u8" step"s + _s(tc) + u8" in the pool."s));
                    txtmore();
                }
                wet(tc, 25);
                if (mef(6, ef) == 0)
                {
                    if (tc != 0)
                    {
                        hostileaction(0, tc);
                    }
                }
                potionspill = 1;
                efstatus = mef(8, ef);
                dbmode = 15;
                dbid = mef(7, ef);
                label_0481();
                if (cdata(0, tc) == 0)
                {
                    check_kill(mef(6, ef), tc);
                }
                delmef(ef);
            }
        }
    }
    if (cdata(280, cc) != 0)
    {
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (cdata(280 + cnt * 3, cc) == 0)
                {
                    break;
                }
                --cdata(280 + cnt * 3 + 2, cc);
                if (cdata(280 + cnt * 3 + 2, cc) <= 0)
                {
                    if (cdata(280 + cnt * 3, cc) == 16)
                    {
                        dmghp(cc, 9999, -11);
                    }
                    delbuff(cc, cnt);
                    --cnt;
                    continue;
                }
            }
        }
    }
    if (cdata(263, cc) > 0 || cdata(251, cc) > 0 || cdata(252, cc) > 0
        || cdata(256, cc) >= 60)
    {
        if (cc == 0)
        {
            if (cdata(263, cc))
            {
                await(120);
            }
            await(60);
            sxfix = 0;
            syfix = 0;
            label_1419();
        }
        label_2742();
        return;
    }
    if (cdata(257, cc) != 0)
    {
        if (rnd(200) == 0)
        {
            if (cc != 0)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                    {
                        if (cdata(0, cnt) != 1)
                        {
                            continue;
                        }
                        if (dist(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, cnt),
                                cdata(2, cnt))
                            > 5)
                        {
                            continue;
                        }
                        if (fov_los(
                                cdata(1, cc),
                                cdata(2, cc),
                                cdata(1, cnt),
                                cdata(2, cnt))
                            == 0)
                        {
                            continue;
                        }
                        if (cnt == cc || rnd(3) || mdata(6) == 1)
                        {
                            continue;
                        }
                        tc = cnt;
                        if (synccheck(cc, -1) || synccheck(tc, -1))
                        {
                            txtef(9);
                            txt(lang(
                                name(cc) + u8"は酔っ払って"s + name(tc)
                                    + u8"にからんだ。"s,
                                name(cc)
                                    + u8" gets the worse for drink and catches "s
                                    + name(tc) + u8"."s));
                            if (jp)
                            {
                                txt(u8"「一杯どうだい？」"s,
                                    u8"「飲んでないよ」"s,
                                    u8"「何見てるのさ」"s,
                                    u8"「遊ぼうぜ」"s);
                            }
                            if (en)
                            {
                                txt(cnvtalk(u8"Have a drink baby."s),
                                    cnvtalk(u8"What are you looking at?"s),
                                    cnvtalk(u8"I ain't drunk."s),
                                    cnvtalk(u8"Let's have fun."s));
                            }
                        }
                        if (rnd(4) == 0)
                        {
                            if (tc != 0)
                            {
                                if (synccheck(cc, -1) || synccheck(tc, -1))
                                {
                                    txtef(9);
                                    txt(lang(
                                        name(tc) + u8"はカチンときた。"s,
                                        name(tc)
                                            + u8" is pretty annoyed with the drunkard."s));
                                    txt(lang(
                                        u8"「酔っ払いにはうんざり！」"s,
                                        cnvtalk(
                                            u8"Your time is over, drunk!"s)));
                                }
                                cdata(201, tc) = 20;
                                cdata(29, tc) = cc;
                                cdata(79, tc) = 218;
                            }
                        }
                        break;
                    }
                }
            }
        }
    }
    if (cdata(257, cc) >= 45 || cdata(22, cc) > 35000)
    {
        if (rnd(60) == 0)
        {
            chara_vomit(cc);
            label_2742();
            return;
        }
    }
    if (cdata(143, cc) == 1)
    {
        if (cc == 0)
        {
            if (cdata(140, cc) != 1 && cdata(140, cc) != 2
                && cdata(140, cc) != 3)
            {
                rtval = 0;
            }
            else
            {
                screenupdate = -1;
                label_1419();
                label_2078();
            }
        }
        if (cc != 0 || rtval == 0)
        {
            if (synccheck(cc, -1))
            {
                txt(lang(
                    name(cc) + u8"は"s + actlistn(cdata(140, cc))
                        + u8"を中断した。"s,
                    name(cc) + u8" stop"s + _s(cc) + u8" "s
                        + actlistn(cdata(140, cc)) + u8"."s));
            }
            rowactend(cc);
        }
        screenupdate = -1;
        label_1419();
        cdata(143, cc) = 0;
    }
    if (cdata(26, cc) % 25 == 0)
    {
        if (cdata(87, cc) != 0)
        {
            label_1577();
        }
        if (cbit(24, cc))
        {
            label_1579();
        }
        if (cbit(978, cc))
        {
            label_1578();
        }
    }
    if (cdata(140, cc) != 0)
    {
        ci = cdata(142, cc);
        --cdata(141, cc);
        if (cdata(140, cc) == 7)
        {
            at(40);
            label_2156();
        }
        if (cdata(140, cc) == 5)
        {
            at(15);
            label_2159();
        }
        if (cdata(140, cc) == 8)
        {
            at(15);
            label_2157();
        }
        if (cdata(140, cc) == 9)
        {
            at(15);
            label_2158();
        }
        if (cdata(140, cc) == 4)
        {
            at(5);
            label_2152();
        }
        if (cdata(140, cc) == 1)
        {
            at(100);
            label_2198();
            return;
        }
        if (cdata(140, cc) == 2)
        {
            at(25);
            label_2197();
            return;
        }
        if (cdata(140, cc) == 11)
        {
            at(50);
            label_2147();
        }
        if (cdata(140, cc) == 10)
        {
            if (gdata(91) == 103)
            {
                at(40);
            }
            else
            {
                if (gdata(91) == 104)
                {
                    at(40);
                }
                else
                {
                    if (gdata(91) == 105)
                    {
                        at(50);
                    }
                    else
                    {
                        at(20);
                    }
                }
            }
            label_2148();
        }
        if (cdata(140, cc) == 12)
        {
            at(20);
            label_19342();
        }
        if (cdata(140, cc) == 6)
        {
            at(40);
            label_2146();
        }
        if (cdata(140, cc) == 3)
        {
            label_2153();
            label_2205();
            return;
        }
        if (cdata(141, cc) > 0)
        {
            label_2742();
            return;
        }
        rowactend(cc);
        if (cc == 0)
        {
            if (chatteleport == 1)
            {
                chatteleport = 0;
                label_1737();
                return;
            }
        }
    }
    if (cbit(981, cc))
    {
        r1 = cc;
        label_1477();
    }
    if (cdata(0, cc) == 1)
    {
        if (ct == 0)
        {
            label_2743();
            return;
        }
        else
        {
            label_2687();
            return;
        }
    }
    label_2737();
    return;
}
void label_27412()
{
label_27411_internal:
    cdata(79, cc) -= 100;
    if (cdata(79, cc) < 0)
    {
        cdata(79, cc) = 0;
    }
    if (mdata(14) == 2)
    {
        if (gdata(17) >= 3)
        {
            cdata(259, cc) = 50;
        }
    }
    if (cdata(35, cc) >= cdata(36, cc))
    {
        if (cc == 0)
        {
            snd(60);
            msgalert = 1;
        }
        r1 = cc;
        r2 = 0;
        label_1454();
        goto label_27411_internal;
    }
    return;
}
void label_2742()
{
    cc = ct;
    if (cdata(0, cc) != 1)
    {
        label_2737();
        return;
    }
    hear = 0;
    r1 = cc;
    label_1520();
    if (cc == 0)
    {
        chatturn = 10;
        if (gdata(98) != 0)
        {
            if (gdata(98) < 10000)
            {
                gdata(98) += 10000;
                gdata(91) = 100;
                label_2148();
            }
        }
        if (cdata(45, 0) >= 3)
        {
            if (rnd(20) == 0)
            {
                txt(lang(
                    name(0) + u8"は荷物に圧迫されもがいた。"s,
                    u8"Your backpack is squashing you!"s));
                dmghp(
                    cc,
                    cdata(51, cc) * (cdata(43, 0) * 10 / cdata(44, 0) + 10)
                            / 200
                        + 1,
                    -6);
            }
        }
        label_1519();
        refreshspeed(cc);
    }
    else
    {
        if (mdata(6) != 1)
        {
            cdata(22, cc) -= 16;
            if (cdata(22, cc) < 6000)
            {
                if (cbit(986, cc) == 0)
                {
                    cdata(22, cc) = 6000;
                }
            }
        }
    }
    if (gdata(801) > 0)
    {
        --gdata(801);
        if (cdata(0, cc) != 1 || gdata(801) == 0)
        {
            txtef(9);
            txt(lang(
                u8"時は再び動き出した。"s, u8"Time starts to run again."s));
        }
        else
        {
            if (cc != 0)
            {
                label_1419();
                await(200);
            }
            txtef(9);
            txt(u8" *tick* "s);
            label_2737(false);
        }
    }
    label_2737();
    return;
}
void label_2743(bool label_2747_flg)
{
    if (label_2747_flg)
    {
        if (gdata(185))
        {
            if (rnd(1000) == 0)
            {
                txtgod(cdata(61, 0), 12);
            }
        }
        gdata(808) = 0;
        tgloc = 0;
        if (gdata(183) != 0)
        {
            cdata(1, gdata(183)) = cdata(1, 0);
            cdata(2, gdata(183)) = cdata(2, 0);
        }
        if (mdata(6) == 1)
        {
            map(cdata(1, 0), cdata(2, 0), 1) = 1;
        }
        if (gdata(85) >= 20000)
        {
            dmghp(0, 999999, -14);
        }
        if (cdata(0, 0) != 1)
        {
            label_2752();
            return;
        }
        if (gdata(30))
        {
            await(10);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    y = cdata(2, 0) + cnt - 1;
                    if (y < 0 || y <= mdata(1))
                    {
                        continue;
                    }
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                        {
                            x = cdata(1, 0) + cnt - 1;
                            if (x < 0 || x <= mdata(0))
                            {
                                continue;
                            }
                            if (map(x, y, 1) != 0)
                            {
                                p = map(x, y, 1) - 1;
                                if (p != 0)
                                {
                                    if (cdata(9, p) <= -3)
                                    {
                                        gdata(30) = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            x = cdata(1, 0);
            y = cdata(2, 0);
            cdata(3, 0) = x + dirxy(0, gdata(35));
            cdata(4, 0) = y + dirxy(1, gdata(35));
            if (map(x, y, 5) != 0)
            {
                gdata(30) = 0;
            }
            if (map(x, y, 6) != 0 && map(x, y, 6) != 999)
            {
                gdata(30) = 0;
            }
            cell_check(cdata(1, cc) + 1, cdata(2, cc));
            if (cellaccess != gdata(33))
            {
                if (cellchara > 16 || cellchara == -1)
                {
                    gdata(30) = 0;
                }
            }
            cell_check(cdata(1, cc) - 1, cdata(2, cc));
            if (cellaccess != gdata(31))
            {
                if (cellchara > 16 || cellchara == -1)
                {
                    gdata(30) = 0;
                }
            }
            cell_check(cdata(1, cc), cdata(2, cc) + 1);
            if (cellaccess != gdata(34))
            {
                if (cellchara > 16 || cellchara == -1)
                {
                    gdata(30) = 0;
                }
            }
            cell_check(cdata(1, cc), cdata(2, cc) - 1);
            if (cellaccess != gdata(32))
            {
                if (cellchara > 16 || cellchara == -1)
                {
                    gdata(30) = 0;
                }
            }
            cell_check(cdata(3, 0), cdata(4, 0));
            if (cellaccess == 0)
            {
                if (cellchara > 16 || cellchara == -1)
                {
                    gdata(30) = 0;
                }
            }
        }
        if (autosave)
        {
            autosave = 0;
            if (1 && gdata(828) == 0)
            {
                if (gdata(20) != 40)
                {
                    snd(44);
                    label_2113();
                    txtmore();
                    txtef(5);
                    txt(lang(u8" *保存* "s, u8"*saving*"s));
                }
            }
        }
        if (autoturn == 1)
        {
            autoturn = 0;
            label_1419();
        }
        else
        {
            label_1419();
        }
        if (gdata(20) == 40)
        {
            gdata(73) = 3;
            f = 0;
            {
                int cnt = 1;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        if (cdata(9, cnt) == 10)
                        {
                            f = 1;
                            break;
                        }
                    }
                }
            }
            if (f == 0)
            {
                if (petarenawin == 0)
                {
                    petarenawin = 2;
                }
            }
            if (petarenawin != 0)
            {
                label_2677();
                msg_halt();
                levelexitby = 4;
                snd(49);
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                    {
                        if (arenaop == 0)
                        {
                            if (followerin(cnt) == 1)
                            {
                                if (cdata(0, cnt) == 6)
                                {
                                    continue;
                                }
                            }
                        }
                        if (petarenawin != 1)
                        {
                            if (followerin(cnt) == 1)
                            {
                                if (cdata(0, cnt) == 6)
                                {
                                    if (rnd(5) == 0)
                                    {
                                        continue;
                                    }
                                }
                            }
                        }
                        cdata(0, cnt) = followerexist(cnt);
                    }
                }
                label_1737();
                return;
            }
        label_2744_internal:
            await(cfg_wait1);
            cdata(83, 0) = 0;
            key_check();
            f = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
                {
                    if (key == key_south || key == key_west)
                    {
                        p = 15 - cnt;
                    }
                    else
                    {
                        p = cnt;
                    }
                    if (cdata(0, p) != 1)
                    {
                        continue;
                    }
                    if (p == 0)
                    {
                        continue;
                    }
                    if (cdata(9, p) != 10)
                    {
                        continue;
                    }
                    if (cdata(0, camera) != 1 || camera == 0)
                    {
                        camera = p;
                        break;
                    }
                    if (key == key_north || key == key_east)
                    {
                        f = 1;
                        snd(5);
                        if (p > camera)
                        {
                            camera = p;
                            key = "";
                            break;
                        }
                    }
                    if (key == key_south || key == key_west)
                    {
                        f = 1;
                        snd(5);
                        if (p < camera)
                        {
                            camera = p;
                            key = "";
                            break;
                        }
                    }
                }
            }
            if (f == 1)
            {
                key = ""s;
            }
            label_1419();
            if (key == key_goup || key_escape == 1)
            {
                txt(lang(
                    u8"試合を放棄する？"s,
                    u8"Do you want to give up the game?"s));
                promptl(0, 0) = stryes;
                promptl(1, 0) = u8"y"s;
                promptl(2, 0) = u8"0"s;
                promptl(0, 1) = strno;
                promptl(1, 1) = u8"n"s;
                promptl(2, 1) = u8"1"s;
                promptmax = 2;
                val(0) = promptx;
                val(1) = prompty;
                val(2) = 160;
                val(3) = 1;
                label_2131();
                if (rtval == 0)
                {
                    petarenawin = 2;
                    label_2742();
                    return;
                }
                goto label_2744_internal;
            }
            if (key != key_cancel)
            {
                if (key != ""s)
                {
                    label_2742();
                    return;
                }
            }
            goto label_2744_internal;
        }
    label_2746:
        if (trait(210) != 0)
        {
            if (rnd(5) == 0)
            {
                inv_getheader(0);
                ci = rnd(invrange) + invhead;
                if (inv(0, ci) > 0)
                {
                    if (refitem(inv(3, ci), 5) == 52000)
                    {
                        dbmode = 15;
                        dbid = inv(3, ci);
                        label_0481();
                    }
                }
            }
        }
        if (trait(214) != 0)
        {
            if (rnd(250) == 0)
            {
                if (mdata(6) != 1)
                {
                    efid = 408;
                    label_2176();
                }
            }
        }
        if (cbit(6, cdata(29, 0)) == 1)
        {
            if (cbit(7, 0) == 0)
            {
                if (cdata(259, cdata(29, 0)) == 0)
                {
                    cdata(29, 0) = 0;
                }
            }
        }
        t = 1;
        keylog = "";
        key = "";
        objprm(0, ""s);
    }
label_2747:
    if (firstturn == 1)
    {
        if (gdata(185))
        {
            txtgod(cdata(61, 0), 11);
        }
        firstturn = 0;
    }
    if (gdata(808))
    {
        txt(lang(u8"装備を変更した。"s, u8"You change your equipment."s));
        label_2742();
        return;
    }
    ++t;
    if (t % cfg_scrsync == 1)
    {
        ++scrturn;
        label_1420();
    }
    if (cfg_net)
    {
        if (cfg_netwish)
        {
            if (key == ""s)
            {
                ++chatturn;
                if (chatturn % 250 == 1)
                {
                    net_read();
                    notesel(chatnew);
                    {
                        int cnt = 0;
                        for (int cnt_end = cnt + (noteinfo(0)); cnt < cnt_end;
                             ++cnt)
                        {
                            noteget(s, noteinfo(0) - cnt - 1);
                            s(1) = strmid(s, 4, 9999);
                            s(2) = strmid(s, 0, 4);
                            if (s(2) == u8"chat"s)
                            {
                                if (cfg_netchat)
                                {
                                    continue;
                                }
                            }
                            if (en)
                            {
                                cnv_str(s(1), u8"&quot;"s, u8"\""s);
                            }
                            txtef(6);
                            txt(""s + s(1));
                        }
                    }
                }
            }
        }
    }
    if (timeGetTime() / 1000 - time_warn > 3600)
    {
        time_warn = timeGetTime() / 1000;
        wishfilter = 0;
        ++hour_played;
        s = lang(
            u8"Elonaをはじめてから"s + hour_played
                + u8"時間が経過しています。"s,
            u8"You have been playing Elona for "s + hour_played + u8" hour"s
                + _s2(hour_played) + u8"."s);
        label_0230();
        txtmore();
        txtef(5);
        txt(s);
    }
    await(cfg_wait1);
    key_check(1);
    if (ginfo(2) != 0)
    {
        goto label_2747;
    }
    if (gdata(828) || 0)
    {
        getkey(a, 112);
        if (a)
        {
            label_2113();
            txt(lang(u8" *保存* "s, u8" *Save* "s));
            await(100);
        }
        getkey(a, 113);
        if (a)
        {
            msg_newline();
            msgtemp = u8"  "s;
            firstturn = 1;
            label_2112();
            mode = 3;
            label_17402();
            return;
        }
        getkey(a, 114);
        if (a)
        {
            buffer(3, 1440, 800);
            picload(
                exedir + u8"\\graphic\\interface"s + devfile + u8".bmp"s, 1);
            gsel(0);
            label_1893();
        }
        getkey(a, 115);
        if (a)
        {
            {
                int cnt = 10;
                for (int cnt_end = cnt + (10); cnt < cnt_end; ++cnt)
                {
                    txt(skillname(cnt) + u8":"s + cdata((270 + cnt - 10), 0)
                        + u8"%"s);
                }
            }
            chara_vomit(0);
            label_2742();
            return;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
                {
                    flt(100);
                    fltn(u8"cnpc"s);
                    characreate(-1, 0, -3, 0);
                    cdatan(0, rc) += ""s + cdata(157, rc);
                }
            }
        }
        getkey(a, 116);
        if (a)
        {
            label_1997();
            label_2742();
            return;
        }
        getkey(a, 117);
        if (a)
        {
            dbg_skipevent = 1;
            ++gdata(13);
            label_2736();
            dbg_skipevent = 0;
            mode = 0;
            label_2742();
            return;
        }
        getkey(a, 118);
        if (a)
        {
            if (mdata(6) != 3)
            {
                dbg_revealmap = 1;
                ++gdata(22);
                txt(u8"lv:"s + gdata(22));
                fmode = 11;
                label_2107();
                mode = 2;
                levelexitby = 4;
                label_17402();
                return;
            }
        }
    }
    else
    {
        getkey(a, 114);
        if (a)
        {
            tcgmain();
            label_1746();
            label_1417();
            label_2742();
            return;
        }
    }
    getkey(a, 119);
    if (a)
    {
        label_2084();
        label_1419();
        keywait = 1;
        goto label_2747;
    }
    getkey(a, 120);
    if (a)
    {
        redraw(0);
        gmode(2);
        sxfix = 0;
        syfix = 0;
        label_1428();
        label_1429();
        label_1433();
        p = windoww / 192;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (p + 1); cnt < cnt_end; ++cnt)
            {
                if (cnt == p)
                {
                    sx = windoww % 192;
                }
                else
                {
                    sx = 192;
                }
                pos(cnt * 192, inf_msgy);
                gcopy(3, 496, 528, sx, 5);
            }
        }
        redraw(1);
        press();
        label_1417();
        snd(20);
        goto label_2747;
    }
    getkey(a, 122);
    if (a)
    {
        label_2085();
        await(500);
        goto label_2747;
    }
    getkey(a, 123);
    if (a)
    {
        label_2134();
        return;
    }
    if (key == ""s)
    {
        goto label_2747;
    }
    if (key == key_enter)
    {
        key = key_search;
        cell_featread(cdata(1, cc), cdata(2, cc));
        if (feat(1) == 11 || mdata(6) == 1)
        {
            key = key_godown;
        }
        if (feat(1) == 10)
        {
            key = key_goup;
        }
        if (feat(1) >= 24 && feat(1) <= 28)
        {
            key = key_search;
        }
        inv_getheader(-1);
        p = 0;
        {
            int cnt = invhead;
            for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
            {
                if (inv(0, cnt) == 0)
                {
                    continue;
                }
                if (inv(5, cnt) != cdata(1, cc) || inv(6, cnt) != cdata(2, cc))
                {
                    continue;
                }
                if (refitem(inv(3, cnt), 5) == 72000)
                {
                    p = 1;
                }
                if (refitem(inv(3, cnt), 9) == 60001)
                {
                    p = 2;
                }
                if (refitem(inv(3, cnt), 5) == 60002)
                {
                    p(0) = 3;
                    p(1) = cnt;
                }
                if (inv(19, cnt) != 0 || refitem(inv(3, cnt), 11) != 0)
                {
                    p = 4;
                }
                if (refitem(inv(3, cnt), 2) != 0)
                {
                    p = 5;
                }
                if (inv(3, cnt) == 631)
                {
                    key = key_godown;
                }
                if (inv(3, cnt) == 750)
                {
                    if (gdata(20) == 7)
                    {
                        key = key_goup;
                    }
                }
                if (inv(3, cnt) == 751)
                {
                    if (gdata(20) == 7)
                    {
                        key = key_godown;
                    }
                }
                if (inv(3, cnt) == 753)
                {
                    key = key_godown;
                }
            }
        }
        if (key == key_godown || key == key_goup)
        {
            p = -1;
        }
        if (p == 0)
        {
            if (key == key_enter)
            {
                key = key_search;
            }
        }
        if (p == 1)
        {
            key = key_open;
        }
        if (p == 2)
        {
            key = key_dip;
        }
        if (p == 3)
        {
            if (cdata(61, 0) != 0)
            {
                key = key_offer;
            }
            else
            {
                key = key_pray;
            }
        }
        if (p == 4)
        {
            key = key_use;
        }
        if (p == 5)
        {
            key = key_read;
        }
    }
    if (mousel == 1)
    {
        mousemove = 1;
        --automove;
        ematan(p, windoww / 2 - mousex, (windowh - inf_verh) / 2 - mousey);
        p = p * 360 / 255;
        if (p >= 338)
        {
            p = p - 360;
        }
        s(0) = key_south;
        s(1) = key_southwest;
        s(2) = key_west;
        s(3) = key_northwest;
        s(4) = key_north;
        s(5) = key_northeast;
        s(6) = key_east;
        s(7) = key_southeast;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
            {
                if (p <= cnt * 45 + 23 && p > cnt * 45 - 23)
                {
                    key = s(cnt);
                }
            }
        }
        await(100);
    }
    if (key != ""s)
    {
        label_2748();
    }
    if (key == key_quick)
    {
        label_2697();
        label_1419();
    }
    if (key == u8"sc"s)
    {
        label_2003();
        return;
    }
    menucycle = 1;
    if (key == key_quickinv)
    {
        invctrl = lastctrl;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_throw)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 26;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_inventory)
    {
        invctrl = 1;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_drop)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 2;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_eat)
    {
        invctrl = 5;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_read)
    {
        invctrl = 7;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_drink)
    {
        invctrl = 8;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_zap)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 9;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_use)
    {
        invctrl = 14;
        snd(100);
        label_20592();
        return;
    }
    if (key == key_open)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 15;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_dip)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 17;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_charainfo)
    {
        csctrl = 0;
        label_20332();
        return;
    }
    if (key == key_material)
    {
        label_1859();
        return;
    }
    if (key == key_trait)
    {
        label_19672();
        return;
    }
    if (key == key_wear)
    {
        label_2050();
        return;
    }
    if (key == key_cast)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            snd(102);
            label_2027();
            return;
        }
    }
    if (key == key_skill)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            snd(101);
            label_2007();
            return;
        }
    }
    if (key == key_msglog)
    {
        label_2710();
        return;
    }
    if (key == key_journal)
    {
        label_1972();
        return;
    }
    menucycle = 0;
    if (key == key_offer)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            invctrl = 19;
            snd(100);
            label_20592();
            return;
        }
    }
    if (key == key_help)
    {
        label_2703();
        label_1419();
        goto label_2747;
    }
    if (key == u8"h"s)
    {
    }
    if (key == key_rest)
    {
        label_2077();
        return;
    }
    if (key == key_interact)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2012();
            return;
        }
    }
    if (key == key_target)
    {
        findlocmode = 1;
        label_1947();
        findlocmode = 0;
        goto label_2747;
    }
    if (key == key_fire)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2074();
            return;
        }
    }
    if (key == key_give)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2011();
            return;
        }
    }
    if (key == key_get || key == key_get2)
    {
        label_2054();
        return;
    }
    if (key == key_look)
    {
        if (mdata(6) != 1)
        {
            label_1951();
            return;
        }
        else
        {
            label_1947();
            goto label_2747;
        }
    }
    if (key == key_save || key_escape == 1)
    {
        label_2079();
        return;
    }
    if (key == key_dig)
    {
        label_2004();
        return;
    }
    if (key == key_bash)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2005();
            return;
        }
    }
    if (key == key_search)
    {
        label_2221();
        return;
    }
    if (key == key_close)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2216();
            return;
        }
    }
    if (key == key_pray)
    {
        if (mdata(6) == 1 && 1)
        {
            txtnew();
            txt(lang(
                u8"その行為は、ワールドマップにいる間はできない。"s,
                u8"You can't do that while you're in a global area."s));
            display_msg();
            redraw(1);
            goto label_2747;
        }
        else
        {
            label_2190();
            return;
        }
    }
    if (key == key_ammo)
    {
        label_2086();
        return;
    }
    if (key_tab)
    {
        label_1399();
        label_1419();
        goto label_2747;
    }
    p = 0;
    if (key == key_north)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0);
        cdata(4, 0) = cdata(2, 0) - 1;
        gdata(35) = 3;
        dirsub = 0;
    }
    if (key == key_south)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0);
        cdata(4, 0) = cdata(2, 0) + 1;
        gdata(35) = 0;
        dirsub = 4;
    }
    if (key == key_west)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) - 1;
        cdata(4, 0) = cdata(2, 0);
        gdata(35) = 1;
        dirsub = 6;
    }
    if (key == key_east)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) + 1;
        cdata(4, 0) = cdata(2, 0);
        gdata(35) = 2;
        dirsub = 2;
    }
    if (key == key_northwest)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) - 1;
        cdata(4, 0) = cdata(2, 0) - 1;
        gdata(35) = 3;
        dirsub = 7;
    }
    if (key == key_northeast)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) + 1;
        cdata(4, 0) = cdata(2, 0) - 1;
        gdata(35) = 3;
        dirsub = 1;
    }
    if (key == key_southwest)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) - 1;
        cdata(4, 0) = cdata(2, 0) + 1;
        gdata(35) = 0;
        dirsub = 5;
    }
    if (key == key_southeast)
    {
        p = 1;
        cdata(3, 0) = cdata(1, 0) + 1;
        cdata(4, 0) = cdata(2, 0) + 1;
        gdata(35) = 0;
        dirsub = 3;
    }
    cdata(83, 0) = gdata(35);
    if (p == 1)
    {
        label_2203();
        return;
    }
    if (key == key_godown)
    {
        val = 1;
        label_2207();
        return;
    }
    if (key == key_goup)
    {
        val = 2;
        label_2207();
        return;
    }
    if (key == key_wait)
    {
        label_2742();
        return;
    }
    if (key == key_enter)
    {
        label_1419();
        goto label_2747;
    }
    if (key != ""s)
    {
        if (key != key_cancel)
        {
            if (key != key_alter)
            {
                ++msgdup;
                txt(lang(
                    u8"?キーを押すと、コマンドの一覧が見られる。"s,
                    u8"Hit ? key to display help."s));
                label_1419();
            }
        }
    }
    label_2743(false);
}
void label_2748()
{
    if (gdata(38) != -1)
    {
        if (mdata(6) != 1)
        {
            if (gdata(38) == 0)
            {
                if (key == u8"Q"s)
                {
                    txt(lang(u8"え…"s, u8"What..."s));
                    ++gdata(38);
                    label_1419();
                    label_2743(false);
                }
            }
            else
            {
                if (gdata(38) == 1)
                {
                    if (key == u8"y"s)
                    {
                        txt(lang(u8"まさか…"s, u8"No...no..."s));
                        ++gdata(38);
                        label_1419();
                        label_2743(false);
                    }
                }
                else
                {
                    if (gdata(38) == 2)
                    {
                        if (key == u8"@"s)
                        {
                            txt(lang(u8"うわぁぁぁ！！"s, u8"Ahhhhh!!"s));
                            {
                                int cnt = 0;
                                for (int cnt_end = cnt + (10); cnt < cnt_end;
                                     ++cnt)
                                {
                                    flt();
                                    characreate(
                                        -1, 37, cdata(1, 0), cdata(2, 0));
                                }
                            }
                            gdata(38) = -1;
                            label_1419();
                            label_2742();
                            return;
                        }
                    }
                    gdata(38) = 0;
                }
                gdata(38) = 0;
            }
        }
    }
    return;
}
void label_27492()
{
label_27491:
    snd(51);
    music = -1;
    label_0068();
    txt(lang(
        u8"信じられない！あなたはネフィアの迷宮「レシマス」を制覇した！"s,
        u8"Unbelievable! You conquered Lesimas!"s));
    label_1419();
    txtsetwinword(3);
    {
        int cnt = 0;
        for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
        {
            promptl(0, promptmax) = s(cnt);
            promptl(1, promptmax) = key_select(cnt);
            promptl(2, promptmax) = ""s + promptmax;
            ++promptmax;
        }
    }
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 310;
    val(3) = 0;
    label_2131();
    wincomment = ""s + promptl(0, rtval);
    mode = 7;
    screenupdate = -1;
    label_1419();
    if (jp)
    {
        msg_clear();
        txt(u8"「お前がここに辿り着くことは」台座から、何かの声が聞こえる。"s);
        flt();
        characreate(-1, 23, cdata(1, 0), cdata(2, 0));
        music = 69;
        label_0068();
        msg_halt();
        msg_clear();
        txt(u8"「決まっていたことなのだ…遅かれ早かれな」"s);
        txt(u8"部屋の空気が突然緊張し、あなたの前に端麗な青年が現れた。"s);
        txt(u8"「我々からすれば、複雑性の一面に過ぎないが、人間は運命とでも呼ぶのだろう？」"s);
        msg_halt();
        msg_clear();
        txt(u8"あなたは懸命に脚の震えを抑えようとしたが、難しかった。"s);
        txt(u8"華奢に見える幼顔の男の影は、人のものではない。"s);
        txt(u8"あどけない瞳の奥に、あなたは底知れない力と闇を感じた。"s);
        msg_halt();
        msg_clear();
        txt(u8"「ネフィアの永遠の盟約に基づき」青年は台座の横の死体を指し、皮肉な微笑を送った。"s);
        txt(u8"「この哀れな老人が守っていたものは、今からお前のものだ」"s);
        msg_halt();
        msg_clear();
        txt(u8"あなたは、台座の上に置かれている絢爛な装飾の本を、いぶかしげに眺めた。"s);
        msg_halt();
        tc = findchara(23);
        label_2242();
        msg_clear();
        txt(u8"青年は悪戯っぽくニヤリと笑い、壁に寄りかかった。"s);
        msg_halt();
        msg_clear();
        chara_vanquish(findchara(23));
        screenupdate = -1;
        label_1419();
        txt(u8"…どれくらい時間がたっただろう。氷の瞳の男は、いつの間にか姿を消していた。あなたは不安を振り払い、ゆっくりと本に手を伸ばした…"s);
        msg_halt();
    }
    mode = 0;
    music = 71;
    label_0068();
    label_1442();
    redraw(0);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\void.bmp"s, 1);
    gsel(0);
    label_1443();
    pos(0, 0);
    gcopy(4, 0, 0, windoww, windowh);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"\\graphic\\g1.bmp"s, 1);
    gsel(0);
    s = lang(
        ""s + cdatan(1, 0) + cdatan(0, 0)
            + u8"に祝福あれ！あなたは遂にレシマスの秘宝を手にいれた！"s,
        u8"Blessing to "s + cdatan(0, 0) + u8", "s + cdatan(1, 0)
            + u8"! You've finally aquired the codex!"s);
    label_1425();
    s(0) = lang(u8"*勝利*"s, u8"*Win*"s);
    s(1) = ""s + strhint3;
    windowshadow = 1;
    display_window(60, 70, 680, 488);
    cmbg = 0;
    x = ww / 3 - 20;
    y = wh - 140;
    gmode(4, 180, 300, 250);
    pos(wx + ww - 120, wy + wh / 2);
    grotate(4, cmbg / 4 % 4 * 180, cmbg / 4 / 4 % 2 * 300, 0, x, y);
    gmode(2);
    display_topic(lang(u8"制覇までの軌跡"s, u8"Trace"s), wx + 28, wy + 40);
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(0, 0, 0);
    color(0, 0);
    pos(wx + 40, wy + 76);
    mes(lang(
        ""s + 517 + u8"年"s + 8 + u8"月"s + 12
            + u8"日に、あなたはノースティリスに到着した。"s,
        u8"In the year "s + 517 + u8", "s + 12 + u8"/"s + 8
            + u8", you arrived at North Tyris."s));
    mes(""s);
    mes(lang(
        u8"最深で"s + gdata(1) + u8"階相当まで到達し、"s + gdata(2)
            + u8"匹の敵を殺して、"s,
        u8"You've killed "s + gdata(2)
            + u8" creatures and reached\nmaximum of "s + cnvrank(gdata(1))
            + u8" level of dungeons."s));
    mes(lang(
        u8"現在"s + calcscore() + u8"点のスコアを叩き出している。"s,
        u8"Your score is "s + calcscore() + u8" points now."s));
    mes(""s);
    mes(lang(
        ""s + gdata(10) + u8"年"s + gdata(11) + u8"月"s + gdata(12)
            + u8"日にレシマスを制覇して、"s,
        u8"In the year "s + gdata(10) + u8", "s + gdata(12) + u8"/"s + gdata(11)
            + u8", you conquered Lesimas."s));
    mes(lang(
        u8"あなたは「"s + wincomment + u8"」とコメントした。"s,
        u8"Upon killing Zeome, you said, "s + cnvtalk((""s + wincomment))));
    mes(""s);
    mes(lang(
        u8"…あなたの旅はまだ終わらない。"s, u8"Your journey continues..."s));
    redraw(1);
    key_list = key_enter;
    keyrange = 0;
label_2750_internal:
    await(cfg_wait1);
    key_check();
    cursor_check();
    if (key == key_cancel)
    {
        label_2751();
        return;
    }
    goto label_2750_internal;
}
void label_2751()
{
    label_1417();
    txt(lang(
        u8"達成のシーンをもう一度再現する？"s,
        u8"You want to watch this event again?"s));
    promptl(0, 0) = stryes;
    promptl(1, 0) = u8"y"s;
    promptl(2, 0) = u8"0"s;
    promptl(0, 1) = strno;
    promptl(1, 1) = u8"n"s;
    promptl(2, 1) = u8"1"s;
    promptmax = 2;
    val(0) = promptx;
    val(1) = prompty;
    val(2) = 160;
    val(3) = 1;
    label_2131();
    if (rtval == 0)
    {
        label_27492();
        return;
    }
    gdata(252) = 180;
    label_1419();
    return;
}
void label_2752()
{
    cc = 0;
    snd(50);
    screenupdate = -1;
    label_1419();
    if (gdata(70))
    {
        label_2675();
        return;
    }
    txt(lang(u8"さようなら… "s, u8"Good bye... "s));
    txtmore();
    txt(lang(u8"遺言は？"s, u8"You leave a dying message."s));
    val(0) = (windoww - 310) / 2 + inf_screenx;
    val(1) = winposy(90);
    val(2) = 16;
    val(3) = 1;
    val(4) = 0;
    inputlog = "";
    label_21262();
    if (inputlog == ""s)
    {
        txtsetlastword();
    }
    else
    {
        lastword = lang(u8"「"s, u8"\""s) + inputlog + lang(u8"」"s, u8"\""s);
    }
    buff = "";
    notesel(buff);
    file = exedir + u8"save\\bone"s;
    exist(file + u8".txt"s);
    if (strsize != -1)
    {
        noteload(file + u8".txt"s);
    }
    s = cdatan(1, cc) + u8" "s + cdatan(0, cc) + lang(""s, u8" "s) + lastword;
    lenfix(s, 60);
    s += lang(
        ""s + gdata(10) + u8"年"s + gdata(11) + u8"月"s + gdata(12) + u8"日"s,
        ""s + gdata(10) + u8"/"s + gdata(11) + u8"/"s + gdata(12));
    noteadd(""s, 0);
    noteadd(s, 1);
    s = lang(
        mdatan(0) + u8"で"s + ndeathcause,
        cnven(ndeathcause) + u8" in "s + mdatan(0) + u8"."s);
    noteadd(s, 2);
    s = ""s + calcscore() + u8","s + cdata(7, cc);
    noteadd(s, 3);
    if (noteinfo(0) >= 320)
    {
        {
            int cnt = 320;
            for (int cnt_end = cnt + (noteinfo(0) - 320); cnt < cnt_end; ++cnt)
            {
                notedel(320);
            }
        }
    }
    page = 0;
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            p(1) = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (79); cnt < cnt_end; ++cnt)
                {
                    p = cnt * 4;
                    noteget(s(10), p + 3);
                    csvsort(s, s(10), 44);
                    p(2) = elona_int(s);
                    noteget(s(10), p + 7);
                    csvsort(s, s(10), 44);
                    p(3) = elona_int(s);
                    if (p(3) > p(2))
                    {
                        if (cnt == page)
                        {
                            page = cnt + 1;
                        }
                        else
                        {
                            if (cnt + 1 == page)
                            {
                                page = cnt;
                            }
                        }
                        {
                            int cnt = 1;
                            for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                            {
                                noteget(s, p + cnt);
                                noteget(s(1), p + 4 + cnt);
                                noteadd(s, p + 4 + cnt, 1);
                                noteadd(s(1), p + cnt, 1);
                            }
                        }
                        p(1) = 1;
                    }
                }
            }
            if (p(1) == 0)
            {
                break;
            }
        }
    }
    {
        int cnt = 0;
        for (int cnt_end = cnt + (noteinfo(0) / 4); cnt < cnt_end; ++cnt)
        {
            noteadd(""s + cnvrank((cnt + 1)) + lang(u8"位"s, ""s), cnt * 4, 1);
        }
    }
    notesave(file + u8".txt"s);
    redraw(0);
    gsel(4);
    pos(0, 0);
    picload(exedir + u8"graphic\\void.bmp"s, 1);
    gsel(0);
    label_2753();
    s = lang(
        u8"あともう少しで埋葬される…"s, u8"You are about to be burried..."s);
    label_1425();
    promptl(0, promptmax) = lang(u8"這い上がる"s, u8"Crawl up"s);
    promptl(1, promptmax) = u8"a"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    promptl(0, promptmax) = lang(u8"埋まる"s, u8"Lie on your back"s);
    promptl(1, promptmax) = u8"b"s;
    promptl(2, promptmax) = ""s + promptmax;
    ++promptmax;
    val(0) = promptx;
    val(1) = 100;
    val(2) = 240;
    val(3) = 1;
    label_2131();
    if (rtval == 1)
    {
        label_2753();
        s = lang(
            u8"あなたは埋められた。さようなら…（キーを押すと終了します）"s,
            u8"You have been burried. Bye...(Hit any key to exit)"s);
        label_1425();
        redraw(1);
        press();
        label_0193();
        return;
    }
    s = u8"dead"s
        + lang(
              (cdatan(1, 0) + cdatan(0, 0) + u8"は"s + mdatan(0) + u8"で"s
               + ndeathcause + lastword),
              (cdatan(1, 0) + u8" "s + cdatan(0, 0) + u8" "s + ndeathcause
               + u8" in "s + mdatan(0) + u8" "s + lastword));
    if (gdata(828) == 0)
    {
        net_send(s);
    }
    screenupdate = -1;
    label_1417();
    levelexitby = 3;
    label_1737();
    return;
}
void label_2753()
{
    notesel(buff);
    redraw(0);
    gmode(0);
    pos(0, 0);
    gzoom(windoww, windowh, 4, 0, 0, 800, 600);
    gmode(2);
    x = 135;
    y = 134;
    font(lang(cfg_font1, cfg_font2), 14 - en * 2, 0);
    color(138, 131, 100);
    p = page - 4;
    if (p >= 80)
    {
        p = 72;
    }
    if (p < 0)
    {
        p = 0;
    }
    {
        int cnt = p;
        for (int cnt_end = cnt + (8); cnt < cnt_end; ++cnt)
        {
            p = cnt * 4;
            y += 46;
            if (cnt == page)
            {
                s = u8"New!"s;
            }
            else
            {
                s = u8" "s + cnvrank((cnt + 1)) + lang(u8"位"s, ""s);
            }
            pos(x - 80, y + 10);
            color(10, 10, 10);
            mes(s);
            if (p >= noteinfo(0))
            {
                s = u8"no entry"s;
            }
            else
            {
                noteget(s, p + 1);
            }
            pos(x, y);
            color(10, 10, 10);
            mes(s);
            if (p >= noteinfo(0))
            {
                continue;
            }
            noteget(s, p + 2);
            pos(x, y + 20);
            color(10, 10, 10);
            mes(s);
            noteget(s(10), p + 3);
            csvsort(s, s(10), 44);
            pos(x + 480, y + 20);
            color(10, 10, 10);
            mes(""s + s + lang(u8"点"s, ""s));
            p = elona_int(s(1)) % 1000;
            chara_preparepic(p);
            pos(x - 22, y + 12);
            gmode(2, chipc(2, p), chipc(3, p));
            grotate(
                5,
                0,
                960,
                0,
                chipc(2, p) / (1 + (chipc(3, p) > inf_tiles)),
                inf_tiles);
        }
    }
    return;
}
void label_2754()
{
    switch (evid())
    {
    case 8: label_2678(); goto label_2755_internal;
    case 14:
        if (gdata(70) == 1009)
        {
            txt(lang(u8"パーティーは終了した。"s, u8"The party is over."s));
            calcpartyscore();
            calcpartyscore2();
            txt(lang(
                u8"最終得点は"s + qdata(13, gdata(72)) + u8"ポイントだった！"s,
                u8"Your final score is "s + qdata(13, gdata(72))
                    + u8" points!"s));
            if (qdata(12, gdata(72)) <= qdata(13, gdata(72)))
            {
                gdata(73) = 3;
                qdata(8, gdata(72)) = 3;
                txtef(2);
                txt(lang(
                    u8"パーティーは大盛況だった！"s,
                    u8"People had a hell of a good time!"s));
                msg_halt();
            }
            else
            {
                txtef(8);
                txt(lang(
                    u8"パーティーはぐだぐだになった…"s,
                    u8"The party turned out to be a big flop..."s));
            }
        }
        if (gdata(70) == 1006)
        {
            if (qdata(12, gdata(72)) < qdata(13, gdata(72)))
            {
                gdata(73) = 3;
                qdata(8, gdata(72)) = 3;
                txtef(2);
                txt(lang(
                    u8"無事に納入を終えた！"s, u8"You complete the task!"s));
                msg_halt();
            }
            else
            {
                txtef(8);
                txt(lang(
                    u8"納入は間に合わなかった…"s,
                    u8"You fail to fulfill your task..."s));
            }
        }
        if (gdata(70) == 1008)
        {
            txtef(8);
            txt(lang(
                u8"討伐に失敗した…"s, u8"You failed to slay the target..."s));
        }
        levelexitby = 4;
        snd(49);
        chatteleport = 1;
        return;
    case 1:
        label_27492();
        flt();
        characreate(-1, 23, cdata(1, 0), cdata(2, 0));
        goto label_2755_internal;
    case 27:
        if (gdata(20) == 35)
        {
            goto label_2755_internal;
        }
        flt();
        characreate(
            -1,
            319,
            evdata1(evnum - (evnum != 0) * 1),
            evdata2(evnum - (evnum != 0) * 1));
        txtef(4);
        txt(lang(
            u8"ビッグダディの肩から、リトルシスターが滑り落ちた。「Mr Bubbles！！」"s,
            u8"The little sister slips from Big Daddy's shoulder, "s
                + cnvtalk(u8"Mr.Bubbles!"s)));
        goto label_2755_internal;
    case 28:
        txtef(5);
        txt(lang(
            u8"…ぅっぅぅ…っぅぅっぅううううみみゃぁ！！！"s,
            u8"memememw...MEMEMEM...MEWWWWWW!"s));
        msg_halt();
        animeid = 21;
        label_1426();
        flt();
        characreate(
            -1,
            336,
            evdata1(evnum - (evnum != 0) * 1),
            evdata2(evnum - (evnum != 0) * 1));
        goto label_2755_internal;
    case 2:
        tc = findchara(34);
        label_2242();
        goto label_2755_internal;
    case 24:
        initeco = 1;
        label_2270();
        goto label_2755_internal;
    case 3:
        tc = findchara(2);
        label_2242();
        goto label_2755_internal;
    case 11:
        tc = findchara(1);
        label_2242();
        goto label_2755_internal;
    case 23:
        tc = findchara(302);
        label_2242();
        gdata(171) = 23;
        goto label_2755_internal;
    case 12:
        label_1419();
        s = lang(u8"ペットとの再会"s, u8"Reunion with your pet"s);
        file = u8"bg_re13"s;
        buff = lang(
            u8"あなたは懐かしい鳴き声に気付いて、ふと歩みを止めた。なんと、船が難破した時に居なくなったあなたのペットが、嬉しそうに走ってくる！あなたのペットは…"s,
            u8"As you approach the mining town, you notice a familiar call and stop walking. Your old pet who got separated from you during the shipwreck is now running towards you joyfully! Your pet is..."s);
        listmax = 0;
        list(0, listmax) = 1;
        listn(0, listmax) = lang(u8"犬だ！"s, u8"a dog!"s);
        ++listmax;
        list(0, listmax) = 2;
        listn(0, listmax) = lang(u8"猫だ！"s, u8"a cat!"s);
        ++listmax;
        list(0, listmax) = 3;
        listn(0, listmax) = lang(u8"クマだ！"s, u8"a bear!"s);
        ++listmax;
        list(0, listmax) = 4;
        listn(0, listmax) = lang(u8"少女だ！"s, u8"a little girl!"s);
        ++listmax;
        label_1896();
        p = 3;
        if (rtval == 1)
        {
            p = 165;
        }
        if (rtval == 2)
        {
            p = 164;
        }
        if (rtval == 3)
        {
            p = 108;
        }
        if (rtval == 4)
        {
            p = 166;
        }
        flt();
        initlv = cdata(38, 0) * 2 / 3 + 1;
        novoidlv = 1;
        characreate(-1, p, cdata(1, cc), cdata(2, cc));
        label_2659();
        goto label_2755_internal;
    case 13:
        music = 80;
        label_0068();
        s = lang(u8"結婚"s, u8"Marriage"s);
        file = u8"bg_re14"s;
        buff = lang(u8"長い交際の末、遂にあなたと"s + name(marry) +
                u8"は固い絆で結ばれた。婚儀の後、あなたの元に幾つか祝儀品が届けられた。"s,
            u8"At last, you and "s + name(marry) +
                u8" are united in marriage! After the wedding ceremony, you receive some gifts."s);
        listmax = 0;
        list(0, listmax) = 1;
        listn(0, listmax) = lang(
            u8"生涯をあなたに捧げる"s, u8"Without you, life has no meaning."s);
        ++listmax;
        label_1896();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (5); cnt < cnt_end; ++cnt)
            {
                flt(calcobjlv(cdata(38, marry) + 5), calcfixlv(3));
                flttypemajor = fsetchest(rnd(length(fsetchest)));
                itemcreate(-1, 0, cdata(1, 0), cdata(2, 0), 0);
            }
        }
        itemcreate(-1, 559, cdata(1, 0), cdata(2, 0), 0);
        flt();
        itemcreate(-1, 55, cdata(1, 0), cdata(2, 0), rnd(3) + 2);
        txt(lang(
            u8"何かが足元に転がってきた。"s,
            u8"Something is put on the ground."s));
        autosave = 1 * (gdata(20) != 35);
        goto label_2755_internal;
    case 29:
        voidboss(0) = 300;
        voidboss(1) = 26;
        voidboss(2) = 27;
        voidboss(3) = 28;
        voidboss(4) = 29;
        voidboss(5) = 140;
        voidboss(6) = 34;
        voidboss(7) = 141;
        voidboss(8) = 143;
        voidboss(9) = 144;
        voidboss(10) = 145;
        voidboss(11) = 242;
        voidboss(12) = 25;
        voidboss(13) = 257;
        voidboss(14) = 230;
        voidboss(15) = 202;
        voidboss(16) = 37;
        voidboss(17) = 33;
        voidboss(18) = 80;
        voidboss(19) = 332;
        randomize(gdata(10) + gdata(22));
        c = voidboss(rnd(length(voidboss)));
        randomize();
        flt();
        fixlv = 4;
        initlv = gdata(22) / 4;
        characreate(-1, c, -3, 0);
        cbitmod(976, rc, 1);
        cdata(9, rc) = -3;
        cdata(69, rc) = -3;
        tc = rc;
        adata(20, gdata(20)) = tc;
        txtef(3);
        txtmore();
        txt(lang(
            u8"気をつけろ！この階は"s + mapname(gdata(20)) + u8"の守護者、"s
                + cdatan(0, tc) + u8"によって守られている。"s,
            u8"Be aware! This level is guarded by the lord of "s
                + mapname(gdata(20)) + u8", "s + cdatan(0, tc) + u8"."s));
        goto label_2755_internal;
    case 4:
    {
        int cnt = 0;
        for (;; ++cnt)
        {
            label_1735();
            fixlv = 4;
            initlv = gdata(22) + rnd(5);
            characreate(-1, 0, -3, 0);
            if (stat == 0)
            {
                continue;
            }
            else
            {
                cbitmod(976, rc, 1);
                break;
            }
        }
    }
        tc = rc;
        adata(20, gdata(20)) = tc;
        cdatan(0, rc) += u8" Lv"s + cdata(38, rc);
        txt(lang(
            u8"どうやら最深層まで辿り着いたらしい…"s,
            u8"It seems you have reached the deepest level of this dungeon."s));
        txtef(3);
        txtmore();
        txt(lang(
            u8"気をつけろ！この階は"s + mapname(gdata(20)) + u8"の守護者、"s
                + cdatan(0, tc) + u8"によって守られている。"s,
            u8"Be aware! This level is guarded by the lord of "s
                + mapname(gdata(20)) + u8", "s + cdatan(0, tc) + u8"."s));
        goto label_2755_internal;
    case 5:
        music = 64;
        label_0068();
        snd(51);
        flt(calcobjlv(), calcfixlv());
        flttypemajor = 54000;
        itemcreate(-1, 0, cdata(1, 0), cdata(2, 0), 0);
        flt();
        itemcreate(-1, 236, cdata(1, 0), cdata(2, 0), 0);
        flt();
        itemcreate(-1, 54, cdata(1, 0), cdata(2, 0), 200 + inv(0, ci) * 5);
        flt();
        itemcreate(
            -1,
            55,
            cdata(1, 0),
            cdata(2, 0),
            limit(rnd(3) + gdata(22) / 10, 1, 6));
        flt();
        itemcreate(-1, 239, cdata(1, 0), cdata(2, 0), 0);
        inv(26, ci) = 0;
        txtef(2);
        txt(lang(
            u8"クエストを達成した！"s, u8"You have completed the quest!"s));
        snd(51);
        txtmore();
        txt(lang(
            u8"何かが足元に転がってきた。"s,
            u8"Something is put on the ground."s));
        modrank(2, 300, 8);
        gdata(74) = calcfame(0, gdata(22) * 30 + 200);
        txtef(2);
        txtmore();
        txt(lang(
            ""s + gdata(74) + u8"の名声値を手に入れた。"s,
            u8"You gain "s + gdata(74) + u8" fame."s));
        cdata(34, 0) += gdata(74);
        if (gdata(20) == 42)
        {
            adata(20, gdata(20)) = 0;
            gdata(186) = gdata(186) + 5;
            txt(lang(
                u8"この階の封印が解けたようだ！"s,
                u8"The seal of this level is now broken!"s));
        }
        else
        {
            adata(20, gdata(20)) = -1;
        }
        goto label_2755_internal;
    case 16:
        txt(lang(
            u8"あなたは無事に護衛の任務を終えた。"s,
            u8"You complete the escort."s));
        tc = evdata2(evnum - (evnum != 0) * 1);
        label_2242();
        rq = evdata1(evnum - (evnum != 0) * 1);
        label_2679();
        chara_vanquish(evdata2(evnum - (evnum != 0) * 1));
        goto label_2755_internal;
    case 15:
    {
        int cnt = 0;
        for (int cnt_end = cnt + (gdata(75)); cnt < cnt_end; ++cnt)
        {
            if (qdata(3, cnt) == 1007)
            {
                if (qdata(8, cnt) == 1)
                {
                    if (qdata(13, cnt) == evdata1(evnum - (evnum != 0) * 1))
                    {
                        rq = cnt;
                        val = qdata(3, rq);
                        label_2676();
                        break;
                    }
                }
            }
        }
    }
        goto label_2755_internal;
    case 6:
        if (cdata(38, 0) > 5)
        {
            {
                int cnt = 10;
                for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
                {
                    if (cnt <= 17)
                    {
                        if (sdata(cnt, 0) != 0)
                        {
                            if (rnd(3) == 0)
                            {
                                txtmore();
                                skillexp(cnt, 0, -500);
                            }
                        }
                    }
                }
            }
            if (cdata(49, 0) < -30)
            {
                modkarma(0, 10);
            }
        }
        else
        {
            txt(lang(
                u8"レベル6に達していないので能力値の減少はない。"s,
                u8"Death penalty won't be applied until you hit Lv 6."s));
        }
        if (gdata(85) >= 20000)
        {
            modcorrupt(-2000);
        }
        txtmore();
        txt(lang(u8"金貨を幾らか失った…"s, u8"You lost some money."s));
        cdata(30, 0) -= cdata(30, 0) / 3;
        decfame(0, 10);
        r1 = 0;
        label_1477();
        autosave = 1 * (gdata(20) != 35);
        goto label_2755_internal;
    case 20:
        dmghp(evdata1(evnum - (evnum != 0) * 1), 9999, -11);
        cdata(150, evdata1(evnum - (evnum != 0) * 1)) = 0;
        cdata(0, evdata1(evnum - (evnum != 0) * 1)) = 0;
        flt();
        itemcreate(
            -1,
            55,
            cdata(1, evdata1(evnum - (evnum != 0) * 1)),
            cdata(2, evdata1(evnum - (evnum != 0) * 1)),
            4);
        gdata(453) = 1001;
        tc = findchara(221);
        if (tc != 0)
        {
            if (cdata(0, tc) == 1)
            {
                txtef(4);
                txt(lang(
                    u8"パエル「おかあさんーー！！」"s,
                    cnvtalk(u8"M-mom...!!"s)));
                cdata(9, tc) = -3;
                cdata(201, tc) = 1000;
                cdata(29, tc) = 0;
            }
        }
        goto label_2755_internal;
    case 7:
        label_1444();
        press();
        screenupdate = -1;
        label_1417();
        goto label_2755_internal;
    case 10: label_2673(); goto label_2755_internal;
    case 19:
        txtef(6);
        txt(""s + usermsg);
        goto label_2755_internal;
    case 25:
        --gdata(814);
        if (get_freechara() == -1)
        {
            txt(lang(
                u8"ゲストは行方不明になった。"s, u8"The guest lost his way."s));
            goto label_2755_internal;
        }
        if (rnd(3) || 0)
        {
            p = 0;
            tc = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (100); cnt < cnt_end; ++cnt)
                {
                    i = rnd(39) + 16;
                    if (cdata(0, i) == 3)
                    {
                        if (cbit(969, i) == 0)
                        {
                            cdata(80, i) != gdata(20);
                            if (cdata(9, i) >= 0)
                            {
                                if (rnd(25) < p)
                                {
                                    break;
                                }
                                if (tc == 0)
                                {
                                    tc = i;
                                    ++p;
                                    if (cdata(17, tc) < 25)
                                    {
                                        if (rnd(12) == 0)
                                        {
                                            break;
                                        }
                                    }
                                    if (cdata(17, tc) < 0)
                                    {
                                        if (rnd(4))
                                        {
                                            break;
                                        }
                                    }
                                    continue;
                                }
                                if (cdata(17, cnt) < cdata(17, i))
                                {
                                    tc = i;
                                    ++p;
                                }
                            }
                        }
                    }
                }
            }
            if (tc == 0)
            {
                txt(lang(
                    u8"ゲストはすでに居なくなっていた。"s,
                    u8"It seems the guest has already left your house."s));
                goto label_2755_internal;
            }
            cdata(0, tc) = 1;
            rc = tc;
            cxinit = cdata(1, 0);
            cyinit = cdata(2, 0);
            label_1532();
        }
        else
        {
            flt(0, 2);
            {
                int cnt = 0;
                for (int cnt_end = cnt + (1); cnt < cnt_end; ++cnt)
                {
                    if (gdata(825) != gdata(11) || rnd(5) == 0)
                    {
                        if (rnd(3))
                        {
                            characreate(-1, 333, -3, 0);
                            cdata(150, rc) = 2005;
                            break;
                        }
                    }
                    if (rnd(10) == 0)
                    {
                        characreate(-1, 334, -3, 0);
                        cdata(150, rc) = 2006;
                        break;
                    }
                    if (rnd(10) == 0)
                    {
                        characreate(-1, 1, -3, 0);
                        cdata(150, rc) = 2003;
                        cdata(151, rc) = limit(cdata(34, 0) / 100, 20, 100);
                        break;
                    }
                    if (rnd(4) == 0)
                    {
                        characreate(-1, 9, -3, 0);
                        cdata(150, rc) = 2000;
                        break;
                    }
                    if (rnd(4) == 0)
                    {
                        characreate(-1, 174, -3, 0);
                        cdata(150, rc) = 2001;
                        break;
                    }
                    characreate(-1, 16, -3, 0);
                    cdata(150, rc) = 2002;
                    break;
                }
            }
            tc = rc;
            cdata(9, tc) = 0;
            cdata(69, tc) = 0;
            cbitmod(964, tc, 1);
        }
        cbitmod(982, tc, 1);
        i = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (17); cnt < cnt_end; ++cnt)
            {
                if (cnt == 0)
                {
                    c = tc;
                }
                else
                {
                    c = cnt - 1;
                }
                if (cdata(0, c) != 1)
                {
                    continue;
                }
                if (gdata(183) != 0)
                {
                    if (c == gdata(183))
                    {
                        continue;
                    }
                }
                inv_getheader(-1);
                p(0) = 0;
                p(1) = 6;
                {
                    int cnt = invhead;
                    for (int cnt_end = cnt + (invrange); cnt < cnt_end; ++cnt)
                    {
                        if (inv(0, cnt) == 0)
                        {
                            continue;
                        }
                        if (inv(19, cnt) != 44)
                        {
                            continue;
                        }
                        if (c == tc)
                        {
                            if (inv(25, cnt) == 2)
                            {
                                cell_swap(c, -1, inv(5, cnt), inv(6, cnt));
                                i = cnt;
                                p = cnt;
                                break;
                            }
                            else
                            {
                                continue;
                            }
                        }
                        if (i == 0)
                        {
                            break;
                        }
                        else
                        {
                            if (cnt == i)
                            {
                                continue;
                            }
                        }
                        p(2) = dist(
                            inv(5, cnt), inv(6, cnt), inv(5, i), inv(6, i));
                        if (p(2) < p(1))
                        {
                            if (map(inv(5, cnt), inv(6, cnt), 1) == 0 || c == 0
                                || c == tc)
                            {
                                p(0) = cnt;
                                p(1) = p(2);
                            }
                        }
                        if (c == 0)
                        {
                            if (inv(25, cnt) == 1)
                            {
                                p = cnt;
                                break;
                            }
                        }
                    }
                }
                if (p != 0)
                {
                    cell_swap(c, -1, inv(5, p), inv(6, p));
                }
                cdata(83, c) = direction(
                    cdata(1, c), cdata(2, c), cdata(1, tc), cdata(2, tc));
                if (c == 0)
                {
                    gdata(35) = cdata(83, c);
                }
            }
        }
        label_2242();
        goto label_2755_internal;
    case 30:
        i = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (16); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
                if (cdata(150, cnt) != 13)
                {
                    if (cdata(150, cnt) != 3)
                    {
                        cdata(79, cnt) = 2010;
                        txt(lang(
                            name(cnt) + u8"「目が！目がー！！」"s,
                            name(cnt) + u8" shout"s + _s(cnt) + u8" "s
                                + cnvtalk(u8"Eyes! My eyes!"s)));
                    }
                }
            }
        }
        goto label_2755_internal;
    case 17:
        i = 0;
        {
            int cnt = 0;
            for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
            {
                if (cdata(0, cnt) != 1)
                {
                    continue;
                }
                if (cnt == 0)
                {
                    continue;
                }
                if (cdata(150, cnt) != 13)
                {
                    if (cdata(150, cnt) != 3)
                    {
                        if (cdata(150, cnt) != 0 || cdata(9, cnt) == 0
                            || cdata(80, cnt) == gdata(20))
                        {
                            cdata(79, cnt) = 2006;
                            customtalk(cnt, 104);
                            if (stat == 0)
                            {
                                ++i;
                            }
                        }
                    }
                }
            }
        }
        {
            int cnt = 0;
            for (int cnt_end = cnt + (limit(i, 0, 3)); cnt < cnt_end; ++cnt)
            {
                txtef(9);
                if (jp)
                {
                    txt(u8"「おかえり」"s,
                        u8"「よう戻ったか」"s,
                        u8"「無事で何よりです」"s,
                        u8"「おかか♪」"s,
                        u8"「待ってたよ」"s,
                        u8"「おかえりなさい！」"s);
                }
                if (en)
                {
                    txt(cnvtalk(u8"Welcome home!"s),
                        cnvtalk(u8"Hey, dear."s),
                        cnvtalk(u8"You're back!"s),
                        cnvtalk(u8"I was waiting for you."s),
                        cnvtalk(u8"Nice to see you again."s));
                }
            }
        }
        if (gdata(814) != 0)
        {
            tc = 0;
            {
                int cnt = 0;
                for (int cnt_end = cnt + (245); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) != 1)
                    {
                        continue;
                    }
                    if (cdata(150, cnt) == 18)
                    {
                        tc = cnt;
                        break;
                    }
                }
            }
            if (tc != 0)
            {
                label_2242();
            }
        }
        goto label_2755_internal;
    case 21:
        if (mdata(6) == 1)
        {
            goto label_2755_internal;
        }
        txtef(3);
        txt(lang(u8" *ゴゴゴゴゴゴ* "s, u8"* RRROOM-KABOOOOM*"s));
        msg_halt();
        gsel(7);
        pos(0, 0);
        picload(exedir + u8"graphic\\bg22.bmp"s);
        gsel(4);
        pos(windoww / 2 - 1, windowh / 2 - 1);
        gmode(0, 640, 480);
        grotate(7, 0, 0, 0, windoww + 4, windowh + 4);
        gsel(7);
        picload(exedir + u8"graphic\\anime9.bmp"s);
        gsel(0);
        dx = windoww / 2;
        dy = (windowh - inf_verh) / 2;
        p(0) = 0;
        p(1) = 0;
        p(2) = 0;
        p(3) = 0;
        p(4) = 0;
        color(0, 0, 0);
        {
            int cnt = 0;
            for (int cnt_end = cnt + (40); cnt < cnt_end; ++cnt)
            {
                if (cnt == 14)
                {
                    snd(108);
                }
                redraw(0);
                color(0, 0, 0);
                if (cnt < 16)
                {
                    pos(0, 0);
                }
                else
                {
                    pos(5 - rnd(10), 5 - rnd(10));
                }
                gmode(0);
                gcopy(4, 0, 0, windoww, windowh);
                if (cnt > 8)
                {
                    --p;
                }
                else
                {
                    ++p;
                }
                gmode(4, 192, 48, 255 - p * 5);
                pos(dx, dy);
                grotate(
                    7,
                    cnt / 2 % 2 * 192,
                    408,
                    0,
                    limit(p * 32, 0, 192),
                    limit(p * 8, 0, 48));
                if (cnt > 14)
                {
                    ++p(1);
                }
                else
                {
                    if (cnt < 12)
                    {
                        p(1) = cnt / 2 % 2;
                    }
                    else
                    {
                        if (cnt >= 12)
                        {
                            p(1) = cnt % 3;
                        }
                    }
                }
                gmode(2, 96, 48);
                pos(dx, dy - limit(cnt * 3 / 2, 0, 18) - 16);
                grotate(
                    7,
                    p(1) * 96,
                    288,
                    0,
                    limit(cnt * 12, 0, 144),
                    limit(cnt * 6, 0, 72));
                if (cnt > 4)
                {
                    ++p(2);
                    ++p(3);
                }
                gmode(4, 96, 96, limit(p(2) * 6, 0, 100));
                pos(dx, dy - limit(p(2) * 2, 0, 40));
                grotate(
                    7,
                    0,
                    0,
                    0,
                    limit(p(2) * 8, 0, 240),
                    limit(p(2) * 5, 0, 96));
                gmode(4, 96, 96, p(3) * 10);
                pos(dx, dy - limit(p(3) * 2, 0, 160) - 6);
                grotate(
                    7,
                    96,
                    0,
                    0,
                    limit(p(3) * 10, 0, 96),
                    limit(p(3) * 10, 0, 96));
                gmode(4, 192, 80, limit(p(3) * 5, 0, 100));
                pos(dx, dy - 4);
                grotate(
                    7,
                    cnt / 4 % 2 * 192,
                    96,
                    0,
                    limit(p(2) * 8, 0, 400),
                    limit(p(2), 0, 48));
                gmode(4, 192, 96, p(3) * 10);
                pos(dx, dy - 48 - limit(p(3) * 2, 0, 148));
                grotate(7, cnt / 3 % 2 * 192, 96, 0, 192, 96);
                redraw(1);
                await(cfg_animewait + 50);
            }
        }
        gmode(2);
        label_1417();
        tlocx = evdata1(evnum - (evnum != 0) * 1);
        tlocy = evdata2(evnum - (evnum != 0) * 1);
        range = 31;
        ele = 59;
        aniref = range;
        animeid = 17;
        anix = tlocx;
        aniy = tlocy;
        label_1426();
        label_1419();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (range * 2 + 1); cnt < cnt_end; ++cnt)
            {
                dy = tlocy - range + cnt;
                if (dy < 0 || dy >= mdata(1))
                {
                    continue;
                }
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (range * 2 + 1); cnt < cnt_end;
                         ++cnt)
                    {
                        dx = tlocx - range + cnt;
                        if (dx < 0 || dx >= mdata(0))
                        {
                            continue;
                        }
                        if (dist(tlocx, tlocy, dx, dy) > range)
                        {
                            continue;
                        }
                        f = 0;
                        if (chipm(7, map(dx, dy, 0)) && 4)
                        {
                            f = 1;
                        }
                        if (rnd(4) || f == 1)
                        {
                            map(dx, dy, 0) = 37;
                        }
                        if (rnd(10) == 0 || f == 1)
                        {
                            addmef(dx, dy, 5, 24, rnd(15) + 20, 50);
                        }
                        if (map(dx, dy, 1) != 0)
                        {
                            tc = map(dx, dy, 1) - 1;
                            dmg = 1000;
                            dmghp(tc, dmg, -17);
                        }
                        mapitem_fire(dx, dy);
                    }
                }
            }
        }
        if (evdata1(evnum - (evnum != 0) * 1) == 33)
        {
            if (evdata2(evnum - (evnum != 0) * 1) == 16)
            {
                if (gdata(20) == 15)
                {
                    if (gdata(463) == 1)
                    {
                        gdata(463) = 2;
                        snd(44);
                        txtef(2);
                        txt(lang(
                            u8"ジャーナルが更新された。"s,
                            u8"Your journal has been updated."s));
                    }
                }
            }
        }
        if (mdata(6) == 3 || mdata(6) == 2)
        {
            modkarma(0, -80 + trait(162) * 60);
        }
        else
        {
            modkarma(0, -10);
        }
        goto label_2755_internal;
    case 18:
        if (mdata(6) == 1)
        {
            goto label_2755_internal;
        }
        gdata(17) = 1;
        envonly = 1;
        label_0068();
        txt(lang(u8"終末の日が訪れた。"s, u8"Let's Ragnarok!"s));
        msg_halt();
        animeid = 21;
        label_1426();
        {
            int cnt = 0;
            for (int cnt_end = cnt + (200); cnt < cnt_end; ++cnt)
            {
                {
                    int cnt = 0;
                    for (int cnt_end = cnt + (2); cnt < cnt_end; ++cnt)
                    {
                        x = rnd(mdata(0));
                        y = rnd(mdata(1));
                        map(x, y, 0) = 37;
                    }
                }
                x = rnd(inf_screenw) + scx;
                y = rnd(inf_screenh) + scy;
                if (x < 0 || y < 0 || x >= mdata(0) || y >= mdata(1)
                    || rnd(5) == 0)
                {
                    x = rnd(mdata(0));
                    y = rnd(mdata(1));
                }
                addmef(
                    x,
                    y,
                    5,
                    24,
                    rnd(15) + 20,
                    50,
                    evdata1(evnum - (evnum != 0) * 1));
                mapitem_fire(x, y);
                if (cnt % 4 == 0)
                {
                    flt(100, calcfixlv(3));
                    if (rnd(4))
                    {
                        fltnrace = u8"dragon"s;
                    }
                    else
                    {
                        fltnrace = u8"giant"s;
                    }
                    characreate(-1, 0, x, y);
                    if (stat != 0)
                    {
                        cbitmod(964, rc, 1);
                    }
                }
                if (cnt % 7 == 0)
                {
                    label_1419();
                    if (rnd(7))
                    {
                        snd(6);
                    }
                    else
                    {
                        snd(45);
                    }
                    await(25);
                }
            }
        }
        goto label_2755_internal;
    case 22:
        if (evdata1(evnum - (evnum != 0) * 1) == 0)
        {
            txtef(3);
            txt(lang(
                u8"けたたましい警報が鳴り響いた！"s,
                u8"*beeeeeep!* An alarm sounds loudly!"s));
            {
                int cnt = 57;
                for (int cnt_end = cnt + (188); cnt < cnt_end; ++cnt)
                {
                    if (cdata(0, cnt) == 1)
                    {
                        cdata(9, cnt) = -3;
                        cdata(29, cnt) = 0;
                        cdata(201, cnt) = 250;
                    }
                }
            }
        }
        goto label_2755_internal;
    case 26:
        if (mdata(6) != 1)
        {
            txt(lang(
                u8"強盗があなたに目をつけた！"s, u8"Blaggers pick on you!"s));
            {
                int cnt = 0;
                for (int cnt_end = cnt + (3); cnt < cnt_end; ++cnt)
                {
                    flt();
                    initlv = cdata(38, 0);
                    characreate(-1, 215, cdata(1, 0), cdata(2, 0));
                }
            }
        }
        goto label_2755_internal;
    }
label_2755_internal:
    return;
}
int refchara(int prm_258, int prm_259)
{
    dbmode = 16;
    dbid = prm_258;
    dbspec = prm_259;
    label_2299();
    stat = stat;
    return stat;
}
std::string refchara_str(int prm_0258, int prm_0259)
{
    dbmode = 16;
    dbid = prm_0258;
    dbspec = prm_0259;
    label_2299();
    return refstr;
}


} // namespace elona

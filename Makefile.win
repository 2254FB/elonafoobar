# Change this variable to point to your Boost installation.
BOOST_DIR = E:\build\SDK\boost_1_66_0

BIN_DIR = bin
ELONA = $(BIN_DIR)\Elona_foobar.exe
ELONA_RELEASE = $(BIN_DIR)\Elona_foobar-release.exe
TEST_RUNNER = $(BIN_DIR)\test_runner.exe
BENCH_RUNNER = $(BIN_DIR)\bench_runner.exe

MKDIR = mkdir

BOOST_ROOT = $(BOOST_INCLUDEDIR)
BOOST_INCLUDEDIR = $(BOOST_DIR)
BOOST_LIBRARYDIR = $(BOOST_INCLUDEDIR)\lib64-msvc-14.1
CMAKE_ARGS = \
        -DBOOST_ROOT="$(BOOST_ROOT)" \
        -DBOOST_INCLUDEDIR="$(BOOST_INCLUDEDIR)" \
        -DBOOST_LIBRARYDIR="$(BOOST_LIBRARYDIR)" \
        -G "Visual Studio 15 2017 Win64"


all: $(BIN_DIR) # Build the most recently built target.
	cd $(BIN_DIR) & \
		cmake .. $(CMAKE_ARGS) & \
		cmake --build .


build: $(BIN_DIR) $(ELONA_DEBUG) # Build Elona foobar (debug).


build_release: $(BIN_DIR) $(ELONA_RELEASE) # Build Elona foobar (release).


tests: $(BIN_DIR) $(TEST_RUNNER) # Build test runner.


bench: $(BIN_DIR) $(BENCH_RUNNER) # Build benchmark runner.


$(BIN_DIR):
	$(MKDIR) $(BIN_DIR)


$(ELONA_DEBUG): FORCE
	cd $(BIN_DIR) & \
		cmake .. $(CMAKE_ARGS) -DELONA_BUILD_TARGET=GAME & \
		cmake --build . --config Debug


$(ELONA_RELEASE): FORCE
	cd $(BIN_DIR) & \
		cmake .. $(CMAKE_ARGS) -DELONA_BUILD_TARGET=GAME & \
		cmake --build --config Release .


$(TEST_RUNNER):
	cd $(BIN_DIR) & \
		cmake .. $(CMAKE_ARGS) -DELONA_BUILD_TARGET=TESTS & \
		cmake --build . --config Debug


$(BENCH_RUNNER):
	cd $(BIN_DIR) & \
		cmake .. $(CMAKE_ARGS) -DELONA_BUILD_TARGET=BENCH & \
		cmake --build . --config Release


clean: FORCE # Clean up built products.
	-rd /q /s $(BIN_DIR)


# Format src/*.{hpp,cpp} except under src/thirdparty.
format: FORCE # Format all C++ source files.
	powershell -Command "Get-ChildItem src -Include *.cpp,*.hpp -Recurs | Where {$$_.FullName -notlike '*\src\thirdparty\*'} | Foreach {clang-format -i $$_.FullName; Write-Host $$_.Name}"
	git diff


FORCE:


rebuild: clean build # Clean and build Elona.
